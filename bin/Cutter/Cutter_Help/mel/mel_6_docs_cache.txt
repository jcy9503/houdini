version 6
name "about"
	desc "This command displays version information about the application if it is executed without flags. If one of the above flags is specified then the specified version information is returned."
	fcount "19"
	fnames "application a"
		fdesc "Return the application name string "
	fnames "batch b"
		fdesc "Returns true if application is in batch mode. "
	fnames "buildDirectory bd"
		fdesc "Return the build directory string "
	fnames "currentDate cd"
		fdesc "Returns the current date in the format yyyy/mm/dd, e.g. 2003/05/04. "
	fnames "currentTime ct"
		fdesc "Returns the current time in the format hh:mm:ss, e.g. 14:27:53. "
	fnames "cutIdentifier c"
		fdesc "Return the cut string "
	fnames "date d"
		fdesc "Return the build date string "
	fnames "environmentFile env"
		fdesc "Return the location of the application defaults file. "
	fnames "evalVersion ev"
		fdesc "Returns true if this is an eval version of the application. "
	fnames "file f"
		fdesc "Return the file version string "
	fnames "irix ir"
		fdesc "Returns true if the operating system is Irix. "
	fnames "linux li"
		fdesc "Returns true if the operating system is Linux. "
	fnames "macOS mac"
		fdesc "Returns true if the operating system is Macintosh. "
	fnames "ntOS nt"
		fdesc "Returns true if the operating system is NT. "
	fnames "operatingSystem os"
		fdesc "Returns the operating system type. Valid return types are "nt", "mac", "irix" or "linux" "
	fnames "operatingSystemVersion osv"
		fdesc "Returns the operating system version. on Irix this returns the equivalent of uname -srvm "
	fnames "product p"
		fdesc "Return the license product name "
	fnames "version v"
		fdesc "Return the version string "
	fnames "windows win"
		fdesc "Returns true if the operating system is Windows based. "
	rcount "1"
		rname "fileInfo"
name "abs"
	desc "Returns the absolute value of its argument. In the case of a vector argument, it returns a vector composed of the absolute value of of its components."
	fcount "0"
	rcount "0"
name "addAttr"
	desc "AddAttr is undoable , queryable , and editable . This command is used to add a dynamic attribute to a node or nodes. Either the longName or the shortName or both must be specified. If neither a dataType nor an attributeType is specified, a double attribute will be added. The dataType flag can be specified more than once indicating that any of the supplied types will be accepted (logical-or). To add a non-double attribute the following criteria can be used to determine whether the dataType or the attributeType flag is appropriate. Some types, such as double3 can use either. In.... Refer to full documentation"
	fcount "27"
	fnames "attributeType at"
		fdesc "Specifies the attribute type, see above table for more details. Note that the attribute types "float", "matrix" and "string" are also MEL keywords and must be enclosed in quotes. "
	fnames "binaryTag bt"
		fdesc "Specifies the tag used to store the attribute in the binary Maya scene file. These tags are currently ignored but may be used in the future.  The tags should be unique within each node but the attribute will only be rejected if the tag you try to give it is a reserved one. "
	fnames "cachedInternally ci"
		fdesc "Whether or not attribute data is cached internally in the node. This flag is currently not supported (it will always be set to a default value of true). "
	fnames "dataType dt"
		fdesc "Specifies the data type.  See "setAttr" for more information on data type names. "
	fnames "defaultValue dv"
		fdesc "Specifies the default value for the attribute (can only be used for numeric attributes). "
	fnames "enumName en"
		fdesc "Flag used to specify the ui names corresponding to the enum values. The specified string should contain a colon-separated list of the names, with optional values. If values are not specified, they will treated as sequential integers starting with 0. For example: -enumName "A:B:C" would produce options: A,B,C with values of 0,1,2; -enumName "zero:one:two:thousand=1000" would produce four options with values 0,1,2,1000; and -enumName "solo=1:triplet=3:quintet=5" would produce three options with values 1,3,5.  (Note that there is a current limitation of the Channel Box that will sometimes incorrectly display an enumerated attribute's pull-down menu.  Extra menu items can appear that represent the numbers inbetween non-sequential option values.  To avoid this limitation, specify sequential values for the options of any enumerated attributes that will appear in the Channel Box.  For example: "solo=1:triplet=2:quintet=3".) "
	fnames "hasMaxValue hxv"
		fdesc "Flag indicating whether an attribute has a maximum value. (can only be used for numeric attributes). "
	fnames "hasMinValue hnv"
		fdesc "Flag indicating whether an attribute has a minimum value. (can only be used for numeric attributes). "
	fnames "hasSoftMaxValue hsx"
		fdesc "Flag indicating whether a numeric attribute has a soft maximum. "
	fnames "hasSoftMinValue hsn"
		fdesc "Flag indicating whether a numeric attribute has a soft minimum. "
	fnames "hidden h"
		fdesc "Will this attribute be hidden from the UI? "
	fnames "indexMatters im"
		fdesc "Sets whether an index must be used when connecting to this multi-attribute. Setting indexMatters to false forces the attribute to non-readable. "
	fnames "internalSet is"
		fdesc "Whether or not the internal cached value is set when this attribute value is changed.  This is an internal flag used for updating UI elements. "
	fnames "keyable k"
		fdesc "Is the attribute keyable by default? "
	fnames "longName ln"
		fdesc "Sets the long name of the attribute. "
	fnames "maxValue max"
		fdesc "Specifies the maximum value for the attribute (can only be used for numeric attributes). "
	fnames "minValue min"
		fdesc "Specifies the minimum value for the attribute (can only be used for numeric attributes). "
	fnames "multi m"
		fdesc "Makes the new attribute a multi-attribute. "
	fnames "numberOfChildren nc"
		fdesc "How many children will the new attribute have? "
	fnames "parent p"
		fdesc "Attribute that is to be the new attribute's parent. "
	fnames "readable r"
		fdesc "Can outgoing connections be made from this attribute? "
	fnames "shortName sn"
		fdesc "Sets the short name of the attribute. "
	fnames "softMaxValue smx"
		fdesc "Soft maximum, valid for numeric attributes only.  Specifies the upper default limit used in sliders for this attribute. "
	fnames "softMinValue smn"
		fdesc "Soft minimum, valid for numeric attributes only.  Specifies the upper default limit used in sliders for this attribute. "
	fnames "storable s"
		fdesc "Can the attribute be stored out to a file? "
	fnames "usedAsColor uac"
		fdesc "Is the attribute to be used as a color definition? Must have 3 DOUBLE or 3 FLOAT children to use this flag.  The attribute type "-at" should be "double3" or "float3" as appropriate.  It can also be used to less effect with data types "-dt" as "double3" or "float3" as well but some parts of the code do not support this alternative.  The special attribute types/data "spectrum" and "reflectance" also support the color flag and on them it is set by default. "
	fnames "writable w"
		fdesc "Can incoming connections be made to this attribute? "
	rcount "12"
		rname "aliasAttr"
		rname "attributeInfo"
		rname "connectAttr"
		rname "deleteAttr"
		rname "disconnectAttr"
		rname "getAttr"
		rname "getClassification"
		rname "nodeType"
		rname "objExists"
		rname "objectType"
		rname "renameAttr"
		rname "setAttr"
name "addAttributeEditorNodeHelp"
	desc "The Attribute Editor's Help menu creates menu items for node types that it is currently displaying. For custom node types use this procedure to specify a help command to be invoked when the custom node type menu item is selected."
	fcount "0"
	rcount "0"
name "addDynamic"
	desc "Makes a specified "owner object" the source of an existing field or emitter. In practical terms, what this means is that a field will emanate its force from its owner object, and an emitter will emit from its owner object. addDynamic makes the specified field or emitter a child of the owner's transform (adding it to the model if it was not already there), and makes the necessary attribute connections. If either of the arguments is omitted, addDynamic searches the selection list for objects to use instead. If more than one possible owner or field/emitter is selected, addDynamic will do.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "addNewShelfTab"
	desc "Adds a new shelf layout and tab, and creates new preferences so that it will be loaded again."
	fcount "0"
	rcount "0"
name "addPP"
	desc "Adds per-point (per-cv, per-vertex, or per-particle) attribute capability for an attribute of an emitter or field. The -atr flag identifies the attribute. If no attribute is named, addPP returns a warning and does nothing. The command adds any other necessary attributes wherever they are needed, and makes all necessary connections. If any of the attributes already exist, the command simply connects to them. The command also toggles any relevant attributes in the emitter or field to indicate that per-point capability is being used. The command adds a separate per-point attribute to the owning object for each emitter/field. For example, for.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "advanceToNextDrivenKey"
	desc "Script for going to the next, previous, first or last driven keyframe. Driven keyframes are set using Set Driven Key."
	fcount "0"
	rcount "0"
name "affectedNet"
	desc "This command gets the list of attributes on a node or node type and creates nodes of type TdnAffect, one for each attribute, that are connected iff the source node's attribute affects the destination node's attribute."
	fcount "1"
	fnames "type t"
		fdesc "get information from the static node type instead of one node "
	rcount "2"
		rname "affects"
		rname "listConnections"
name "affects"
	desc "Affects is undoable , NOT queryable , and NOT editable . This command gets the list of attributes on a node or node type that are affected by the named attribute."
	fcount "1"
	fnames "by "
		fdesc "Show attributes affecting given one instead of ones it affects "
	rcount "2"
		rname "affectedNet"
		rname "listConnections"
name "aimConstraint"
	desc "Constrain an object's orientation to point at a target object or at the average position of a number of targets. An aimConstraint takes as input one or more "target" DAG transform nodes at which to aim the single "constraint object" DAG transform node. The aimConstraint orients the constrained object such that the aimVector (in the object's local coordinate system) points to the in weighted average of the world space position target objects. The upVector (again the the object's local coordinate system) is aligned in world space with the worldUpVector."
	fcount "3"
	fnames "maintainOffset mo"
		fdesc "The offset necessary to preserve the constrained object's initial rotation will be calculated and used as the offset. "
	fnames "offset o"
		fdesc "Sets or queries the value of the offset. Default is 0,0,0. "
	fnames "skip sk"
		fdesc "Specify the axis to be skipped. Valid values are "x", "y", "z" and "none". During creation, "none" is the default. This flag is multi-use. "
	rcount "8"
		rname "geometryConstraint"
		rname "normalConstraint"
		rname "orientConstraint"
		rname "parentConstraint"
		rname "pointConstraint"
		rname "poleVectorConstraint"
		rname "scaleConstraint"
		rname "tangentConstraint"
name "air"
	desc "The air field simulates the effects of moving air. The affected objects will be accelerated or decelerated so that their velocities match that of the air. With the '-vco true' flag thrown, only accelerations are applied. By parenting an air field to a moving part of an object (ie. a foot of a character) and using '-i 1 -m 0 -s .5 -vco true' flags, one can simulate the movement of air around the foot as it moves, since the TOTAL velocity vector of the field would be only based on the movement of the foot. This can be done.... Refer to full documentation"
	fcount "18"
	fnames "attenuation att"
		fdesc "Attentuation rate of field  The air field attenuates so as to taper the field's magnitude to zero when the maximum distance is reached. Thus, attenuation has no effect unless useMaxDistance is true and a positive maximum distance has been set. "
	fnames "directionX dx"
		fdesc "No Description"
	fnames "directionY dy"
		fdesc "No Description"
	fnames "directionZ dz"
		fdesc "Direction that the air will try to match the affected particles' velocity to. NOTE: This is not the velocity; this is only the direction. Use the -s flag to set the speed. "
	fnames "enableSpread es"
		fdesc "This tells the system whether or not to use the spread angle given by '-sp'. If this is 'false' then all connected objectswithin the maximum distance will be affected. Also, if this is set to 'false', all affected objects are forced to match their velocities along the direction vector. If this is set to 'true' and spread is used, then the direction of the force is along the direction from the field to the object.  "
	fnames "fanSetup fs"
		fdesc "Similar to 'windSetup' except that the effects of a fan or a person blowing air are approximated. The user can pass the same flags on the command line to adjust them from the defaults. These are the values that get set to approximate a 'fan':  inheritVelocity 1.0  inheritRotation true  componentOnly false  enableSpread true  spread .5 (45 degrees from center )  "
	fnames "inheritRotation iro"
		fdesc "If this is set to 'true', then the direction vector described with -dx, -dy, and -dz will be considered local to the owning object. Therefore, if the owning object's transform undergoes any rotation (by itself or one of its parents), the direction vector of the air field will undergo that same rotation.  "
	fnames "inheritVelocity iv"
		fdesc "Amount (from 0 to 1) of the field-owner's velocity added to the vector determined by the direction and speed flags. The combination  of these two vectors makes up the TOTAL velocity vector for the air field. This allows the air  to be determined directly by the motion of the owning object.  "
	fnames "magnitude m"
		fdesc "The speed along the direction vector that the air is moving. Use this in conjunction with the -dx -dy -dz flags.  "
	fnames "maxDistance mxd"
		fdesc "Maximum distance at which field is exerted.  -1 indicates that the field has no maximum distance.  "
	fnames "name n"
		fdesc "name of field  "
	fnames "perVertex pv"
		fdesc "Per-vertex application. If this flag is set true, then each  individual point (CV, particle, vertex,etc.) of the chosen object  exerts an identical copy of the force field. If this flag is set to  false, then the force is exerted only from the geometric center of the set of points.  "
	fnames "position pos"
		fdesc "Position in space where you want to place a field. The field then emanates from this position in space rather  than from an object. Note that you can both use -pos  (creating a field at a position) and also provide object names.  "
	fnames "speed s"
		fdesc "How fast the affected objects' speed reaches the speed (based on the -mag, -dx, -dy, -dz flags) of the air field. This value gets clamped internally to be between 0.0 and 1.0.  A value of 0.0 will make the air field have no effect. A value of 1.0 will try to match the air field's speed much quicker, but not necessarily immediately. "
	fnames "spread sp"
		fdesc "This represents the angle from the direction vector within which objects will be affected. The values are in the range of 0 to 1. A value of 0 will result in an effect only  exactly in front of the air field along the direction vector. A  value of 1 will result in any object in front of the owning object, 90 degrees in all direction from the direction vector.  "
	fnames "velocityComponentOnly vco"
		fdesc "If this is 'false', the air will accelerate or decelerate the affected objects so that their velocities will eventually match  the TOTAL velocity vector of the air field. If this is 'true', only ACCELERTION is applied to the affected objects so that their velocity component along the TOTAL velocity vector matches or is  greater in magnitude than the TOTAL velocity vector. This will not slow objects down to match velocities, only speed them up to match components. This is most useful when using the -iv flag with a value >0.  "
	fnames "wakeSetup wks"
		fdesc "Like the 'windSetup' and 'fanSetup', 'wakeSetup' sets certain values in the field to approximate the movement of air  near a moving object, such as  a character's foot or hand.  The values that are set are:  inheritVelocity 1.0  inheritRotation false  componentOnly true  enableSpread false  speed 0.0  "
	fnames "windSetup wns"
		fdesc "This will set some of the values above in a way that approximates the effects of a basic wind. This allows the user to then change certain values as he/she wishes on the same command line. First the preset values get set, and then any other flags that were passed get taken into account. These are the values that get set to approximate 'wind':  inheritVelocity 0.0  inheritRotation true  componentOnly false  enableSpread false  "
	rcount "3"
		rname "particle"
		rname "connectDynamic"
		rname "addDynamic"
name "alias"
	desc "MEL aliases don't work exactly like csh aliases. When MEL sees the use of an alias, it doesn't replace the alias name with the text of what it is aliased with and rescan that. It can't do that. It isn't a command line interpreter like csh is. When MEL sees an alias command, it enters the name into the same procedure table with the regular user written MEL procedures and it keeps a pointer to the argument list passed to it (in the case of the first syntax). When someone uses name in a script, it is processed just like.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "aliasAttr"
	desc "AliasAttr is undoable , queryable , and editable . Allows aliases (alternate names) to be defined for any attribute of a specified node. When an attribute is aliased, the alias will be used by the system to display information about the attribute. The user may, however, freely use either the alias or the original name of the attribute. Only a single alias can be specified for an attribute so setting an alias on an already-aliased attribute destroys the old alias."
	fcount "1"
	fnames "remove rm"
		fdesc "Specifies that aliases listed should be removed (otherwise new aliases are added). "
	rcount "12"
		rname "addAttr"
		rname "attributeInfo"
		rname "connectAttr"
		rname "deleteAttr"
		rname "disconnectAttr"
		rname "getAttr"
		rname "getClassification"
		rname "nodeType"
		rname "objExists"
		rname "objectType"
		rname "renameAttr"
		rname "setAttr"
name "align"
	desc "Align is undoable , NOT queryable , and NOT editable . Align or spread objects along X Y and Z axis."
	fcount "5"
	fnames "alignToLead atl"
		fdesc "When set, the min, center or max values are computed from the lead object. Otherwise, the values are averaged for all objects. Default is false "
	fnames "coordinateSystem cs"
		fdesc "Defines the X, Y, and Z coordinates. Default is the world coordinates "
	fnames "xAxis x"
		fdesc "Any of none, min, mid, max, dist, stack. This defines the kind of alignment to perfom, default is none. "
	fnames "yAxis y"
		fdesc "Any of none, min, mid, max, dist, stack. This defines the kind of alignment to perfom, default is none. "
	fnames "zAxis z"
		fdesc "Any of none, min, mid, max, dist, stack. This defines the kind of alignement to perfom, default is none. "
	rcount "1"
		rname "move"
name "alignCtx"
	desc "The alignCtx command creates a tool for aligning and distributing objects."
	fcount "12"
	fnames "align a"
		fdesc "Align objects "
	fnames "anchorFirstObject afo"
		fdesc "Anchor first or last selected object. Default false. Only applicable when aligning objects. "
	fnames "distribute d"
		fdesc "Distribute objects "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "showAlignTouch sat"
		fdesc "Show or hide align touching handles. Default true. Only applicable when aligning objects. "
	rcount "0"
name "alignCurve"
	desc "The curve align command is used to align curves in maya. The main alignment options are positional, tangent and curvature continuity. Curvature continuity implies tangent continuity. Positional continuity means the curves (move) or the ends of the curves (modify) are changed. Tangent continuity means one of the curves is modified to be tangent at the points where they meet. Curvature continuity means one of the curves is modified to be curvature continuous as well as tangent. The default behaviour, when no curves or flags are passed, is to only do positional and tangent continuity on the active list with the.... Refer to full documentation"
	fcount "22"
	fnames "attach at"
		fdesc "If true, join the aligned curves together. Otherwise, two curve results are output from the node. NOTE: setting this attribute to random values will cause unpredictable results and is not supported. Default:  false "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curvatureContinuity cc"
		fdesc "Curvature continuity is on if true and off otherwise. Default:  false "
	fnames "curvatureScale1 cs1"
		fdesc "Curvature scale applied to curvature of first curve for curvature continuity. Default:  0.0 "
	fnames "curvatureScale2 cs2"
		fdesc "Curvature scale applied to curvature of second curve for curvature continuity. Default:  0.0 "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "joinParameter jnp"
		fdesc "Parameter on reference curve where modified curve is to be aligned to. Default:  123456.0 "
	fnames "keepMultipleKnots kmk"
		fdesc "If false, remove the multiple knots from the attached curve. Otherwise, the multiple knots are kept. NOTE: setting this attribute to random values will cause unpredictable results and is not supported. Default:  true "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "positionalContinuity pc"
		fdesc "Positional continuity is on if true and off otherwise. Default:  true "
	fnames "positionalContinuityType pct"
		fdesc "Positional continuity type legal values: 1 - move first curve, 2 - move second curve, 3 - move both curves, 4 - modify first curve, 5 - modify second curve, 6 - modify both curves Default:  1 "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "reverse1 rv1"
		fdesc "If true, reverse the first input curve before doing align. Otherwise, do nothing to the first input curve before aligning. NOTE: setting this attribute to random values will cause unpredictable results and is not supported. Default:  false "
	fnames "reverse2 rv2"
		fdesc "If true, reverse the second input curve before doing align. Otherwise, do nothing to the second input curve before aligning. NOTE: setting this attribute to random values will cause unpredictable results and is not supported. Default:  false "
	fnames "tangentContinuity tc"
		fdesc "Tangent continuity is on if true and off otherwise. Default:  true "
	fnames "tangentContinuityType tct"
		fdesc "Tangent continuity type legal values: 1 - do tangent continuity on first curve, 2 - do tangent continuity on second curve Default:  1 "
	fnames "tangentScale1 ts1"
		fdesc "Tangent scale applied to tangent of first curve for tangent continuity. Default:  1.0 "
	fnames "tangentScale2 ts2"
		fdesc "Tangent scale applied to tangent of second curve for tangent continuity. Default:  1.0 "
	rcount "1"
		rname "attachCurve"
name "alignSurface"
	desc "The surface align command is used to align surfaces in maya. The main alignment options are positional, tangent and curvature continuity. Curvature continuity implies tangent continuity. NOTE: this tool is based on Studio's align tool. Positional continuity means the surfaces (move) or the ends of the surfaces (modify) are changed. Tangent continuity means one of the surfaces is modified to be tangent at the points where they meet. Curvature continuity means one of the surfaces is modified to be curvature continuous as well as tangent. The default behaviour, when no surfaces or flags are passed, is to only do positional.... Refer to full documentation"
	fcount "26"
	fnames "attach at"
		fdesc "If true, join the aligned surfaces together. Otherwise, two surface results are output from the node. NOTE: setting this attribute to random values will cause unpredictable results and is not supported. Default:  false "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curvatureContinuity cc"
		fdesc "Curvature continuity is on if true and off otherwise. Default:  false "
	fnames "curvatureScale1 cs1"
		fdesc "Curvature scale applied to curvature of first surface for curvature continuity. Default:  0.0 "
	fnames "curvatureScale2 cs2"
		fdesc "Curvature scale applied to curvature of second surface for curvature continuity. Default:  0.0 "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "directionU du"
		fdesc "If true use U direction of surface and V direction otherwise. Default:  true "
	fnames "joinParameter jnp"
		fdesc "Parameter on reference surface where modified surface is to be aligned to. Default:  123456.0 "
	fnames "keepMultipleKnots kmk"
		fdesc "If false, remove the multiple knots from the attached surface. Otherwise, the multiple knots are kept. NOTE: setting this attribute to random values will cause unpredictable results and is not supported. Default:  true "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "positionalContinuity pc"
		fdesc "Positional continuity is on if true and off otherwise. Default:  true "
	fnames "positionalContinuityType pct"
		fdesc "Positional continuity type legal values: 1 - move first surface, 2 - move second surface, 3 - move both surfaces, 4 - modify first surface, 5 - modify second surface, 6 - modify both surfaces Default:  1 "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "reverse1 rv1"
		fdesc "If true, reverse the direction (specified by directionU) of the first input surface before doing align. Otherwise, do nothing to the first input surface before aligning. NOTE: setting this attribute to random values will cause unpredictable results and is not supported. Default:  false "
	fnames "reverse2 rv2"
		fdesc "If true, reverse the direction (specified by directionU) of the second input surface before doing align. Otherwise, do nothing to the second input surface before aligning. NOTE: setting this attribute to random values will cause unpredictable results and is not supported. Default:  false "
	fnames "swap1 sw1"
		fdesc "If true, swap the UV directions of the first input surface before doing align. Otherwise, do nothing to the first input surface before aligning. NOTE: setting this attribute to random values will cause unpredictable results and is not supported. Default:  false "
	fnames "swap2 sw2"
		fdesc "If true, swap the UV directions of the second input surface before doing align. Otherwise, do nothing to the second input surface before aligning. NOTE: setting this attribute to random values will cause unpredictable results and is not supported. Default:  false "
	fnames "tangentContinuity tc"
		fdesc "Tangent continuity is on if true and off otherwise. Default:  true "
	fnames "tangentContinuityType tct"
		fdesc "Tangent continuity type legal values: 1 - do tangent continuity on first surface, 2 - do tangent continuity on second surface Default:  1 "
	fnames "tangentScale1 ts1"
		fdesc "Tangent scale applied to tangent of first surface for tangent continuity. Default:  1.0 "
	fnames "tangentScale2 ts2"
		fdesc "Tangent scale applied to tangent of second surface for tangent continuity. Default:  1.0 "
	fnames "twist tw"
		fdesc "If true, reverse the second surface in the opposite direction (specified by directionU) before doing align. This will avoid twists in the aligned surfaces. Otherwise, do nothing to the second input surface before aligning. NOTE: setting this attribute to random values will cause unpredictable results and is not supported. Default:  false "
	rcount "0"
name "allViewFit"
	desc "Apply the viewFit command to all model panels."
	fcount "0"
	rcount "0"
name "ambientLight"
	desc "The ambientLight command is used to edit the parameters of existing ambientLights, or to create new ones. The default behaviour is to create a new ambientlight."
	fcount "10"
	fnames "ambientShade as"
		fdesc "ambientShade  "
	fnames "discRadius drs"
		fdesc "radius of the disc around the light  "
	fnames "edit e"
		fdesc "edit the parameters of an existing light  "
	fnames "intensity i"
		fdesc "intensity of the light (expressed as a percentage)  "
	fnames "rgb rgb"
		fdesc "color of the light (0-1)  "
	fnames "shadowColor sc"
		fdesc "the shadow color  "
	fnames "shadowDither sd"
		fdesc "dither the shadow  "
	fnames "shadowSamples sh"
		fdesc "number of shadow samples.  "
	fnames "softShadow ss"
		fdesc "soft shadow  "
	fnames "useRayTraceShadows rs"
		fdesc "ray trace shadows  "
	rcount "9"
		rname "lightListEditor"
		rname "directionalLight"
		rname "lightListPanel"
		rname "spotLight"
		rname "exclusiveLightCheckBox"
		rname "lightlink"
		rname "spotLightPreviewPort"
		rname "pointLight"
		rname "lightList"
name "angle"
	desc "This command returns the angle (in radians) between two vectors."
	fcount "0"
	rcount "0"
name "angleBetween"
	desc "Returns the axis and angle required to rotate one vector onto another. If the construction history (-ch) flag is ON, then the name of the new dependency node is returned."
	fcount "1"
	fnames "constructionHistory ch"
		fdesc "Turn construction history on or off.  If true, a dependency node will be created and its name is returned. Default:  false "
	rcount "0"
name "animCone"
	desc "Creates a cone with animation keys. Useful for creating a simple animation test case."
	fcount "0"
	rcount "0"
name "animCurveEditor"
	desc "Edit a characteristic of a graph editor."
	fcount "36"
	fnames "autoFit af"
		fdesc "on | off | tgl auto fit-to-view "
	fnames "clipTime ct"
		fdesc "on | off display the clips with their offset and scale applied to the anim curves in the clip. "
	fnames "control ctl"
		fdesc "Query only. Returns the top level control for this editor. Usually used for getting a parent to attach popup menus. CAUTION: editors may not have controls at times.  This flag can return "NONE" if no control is present. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "displayActiveKeyTangents dat"
		fdesc "on | off | tgl display tangents in the editor "
	fnames "displayActiveKeys dak"
		fdesc "on | off | tgl display tangents in the editor "
	fnames "displayInfinities di"
		fdesc "on | off | tgl display infinities in the editor "
	fnames "displayKeys dk"
		fdesc "on | off | tgl display keyframes in the editor "
	fnames "displayTangents dtn"
		fdesc "on | off | tgl display tangents in the editor "
	fnames "docTag dtg"
		fdesc "Attaches a tag to the maya editor. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "filter f"
		fdesc "Specifies the name of a filter to be placed on this editor. This filters the information coming onto the main list of the editor. "
	fnames "forceMainConnection fmc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. This is a variant of the -mainListConnection flag in that it will force a change even when the connection is locked. This flag is used to reduce the overhead when using the -unlockMainConnection , -mainListConnection, -lockMainConnection flags in immediate  succession. "
	fnames "highlightConnection hlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its highlight list.  Not all editors have a highlight list.  For those who do, it is sort of a secondary selection list. "
	fnames "lockMainConnection lck"
		fdesc "Locks the current list of objects within the mainConnection, so that only those objects are displayed within the editor. Further changes to the original mainConnection are ignored. "
	fnames "lookAt la"
		fdesc "all | selected | currentTime fitView helpers "
	fnames "mainListConnection mlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. "
	fnames "menu m"
		fdesc "specify the name of a script to be run when the editor is created "
	fnames "panel pnl"
		fdesc "Specifies the panel that the editor belongs to.  By default if an editor is created in the create callback of a scripted panel it will belong to that panel.  If an editor doesn't belong to a panel it will be deleted when the window that it is in is deleted. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this editor. This flag will only have an effect if the editor is currently un-parented. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "resultSamples rs"
		fdesc "specify the sampling for result curves (Note: the smaller this number is, the longer it will take to update the display) "
	fnames "resultScreenSamples rss"
		fdesc "specify the screen base result sampling for result curves (if 0, then results are sampled in time) "
	fnames "resultUpdate ru"
		fdesc "controls how changes to animCurves are reflected in the result curves (if results are being shown).  If resultUpdate is "interactive", then as interactive changes are being made to the animCurve, the result curves will be updated.  If modelUpdate is delayed (which is the default setting), then result curves are updated once the final change to an animCurve has been made "
	fnames "selectionConnection slc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its own selection list.  As the user selects things in this editor, they will be selected in the selectionConnection object.  If someone else changes the object, the editor will update to show the change. "
	fnames "showBufferCurves sb"
		fdesc "on | off | tgl display buffer curves "
	fnames "showResults sr"
		fdesc "on | off | tgl display result curves from expression or other non-keyed  action. "
	fnames "smoothness s"
		fdesc "coarse | rough | medium | fine specify the display smoothness of animation curves "
	fnames "snapTime st"
		fdesc "none | integer | keyframe keyframe move snap in time "
	fnames "snapValue sv"
		fdesc "none | integer | keyframe keyframe move snap in values "
	fnames "stateString sts"
		fdesc "Query only flag.  Returns the MEL command that will edit an editor to match the current editor state. The returned command string uses the string variable $editorName in place of a specific name. "
	fnames "unParent up"
		fdesc "Specifies that the editor should be removed from its layout. This cannot be used with query. "
	fnames "unlockMainConnection ulk"
		fdesc "Unlocks the mainConnection, effectively restoring the original mainConnection (if it is still available), and dynamic updates. "
	fnames "updateMainConnection upd"
		fdesc "Causes a locked mainConnection to be updated from the orginal mainConnection, but preserves the lock state. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "animDisplay"
	desc "This command changes certain display options used by animation windows."
	fcount "3"
	fnames "modelUpdate upd"
		fdesc "Controls how changes to animCurves are propagated through the dependency graph.  If modelUpdate is "none" then changing an animCurve will not cause the model to be updated (change currentTime in order to update the model).  If modelUpdate is "interactive" (which is the default setting), then as interactive changes are being made to the animCurve, the model will be updated.  If modelUpdate is delayed, then the model is updated once the final change to an animCurve has been made.  With modelUpdate set to either "interactive" or "delayed", changes to animCurves made via commands will also cause the model to be updated. "
	fnames "timeCode tc"
		fdesc "Controls whether the animation windows (time slider, graph editor and dope sheet) use time codes in their displays.  "
	fnames "timeCodeOffset tco"
		fdesc "Amount of time by which to offset the time code display in the UI.  An offset of one second would display a time code of "00:00:01:00" at frame 0. Query returns string in time code format. "
	rcount "0"
name "animView"
	desc "This command allows you to specify the current view range within an animation editor."
	fcount "4"
	fnames "endTime et"
		fdesc "End time to display within the editor "
	fnames "maxValue max"
		fdesc "Upper value to display within the editor "
	fnames "minValue min"
		fdesc "Lower value to display within the editor "
	fnames "startTime st"
		fdesc "Start time to display within the editor "
	rcount "0"
name "annotate"
	desc "This command is used to create an annotation to be attached to the specified objects at the specified point."
	fcount "2"
	fnames "point p"
		fdesc "Specifies the point about which the annotation text is to be centered "
	fnames "text tx"
		fdesc "Specifies the annotation text. "
	rcount "0"
name "appendStringArray"
	desc "Appends the given number of values from one string array to the end of another."
	fcount "0"
	rcount "0"
name "applicationName"
	desc "Returns the name of the application. The name is capitalized and does not include the version number."
	fcount "0"
	rcount "0"
name "applyAttrPreset"
	desc "Applies the specified preset to the node using the blend amount."
	fcount "0"
	rcount "0"
name "applyTake"
	desc "This command takes data in a device (refered to as a take) and converts it into a form that may be played back and reviewed. The take can either be imported through the readTake action, or recorded by the recordDevice action. The take is either converted into animation curves or if the -preview flag is used, into blendDevice nodes. The command looks for animation curves attached to the target attributes of a device attachment. If animation curves exist, the take is pasted over the existing curves. If the curves do not exist, new animation curves are created. If devices are.... Refer to full documentation"
	fcount "8"
	fnames "channel c"
		fdesc "This flag overrides the set channel enable value. If a channel is specified, it will be enabled.  C: The default is all applyTake enabled channels for the device(s). "
	fnames "device d"
		fdesc "Specifies which device contains the take.  C: The default is all applyTake enabled devices.  "
	fnames "filter f"
		fdesc "This flag specifies the filters to use during the  applyTake. If this flag is used multiple times, the ordering of the filters is from left to right.  C: The default is no filters. "
	fnames "preview p"
		fdesc "Applies the take to blendDevice nodes attached to the target attributes connected to the device attachments. Animation curves attached to the attributes will not be altered, but for the time that preview data is defined, the preview data will be the data used during playback.  C: The default is to not preview. "
	fnames "recurseChannel rc"
		fdesc "When this flag is used, the children of the channel(s)  specified by -c/channel are also applied. C: The default is all of the enabled channels. "
	fnames "reset r"
		fdesc "Resets the blendDevice nodes affected by -preview. The preview data is removed and if animation curves exist, they are used during  playback. "
	fnames "specifyChannel sc"
		fdesc "This flag is used with -c/channel flag. When used, applyTake will only work on the channels listed with the -c/channel flag.  C: The default is all of the enabled channels. "
	fnames "startTime st"
		fdesc "The default start time for a take is determined at record time. The startTime option sets the starting time of the take in the current animation units.  C: The default is the first time stamp of the take. If a time stamp does not exist for the take, 0 is used. "
	rcount "9"
		rname "filter"
		rname "recordDevice"
		rname "defineDataServer"
		rname "movIn"
		rname "writeTake"
		rname "defineVirtualDevice"
		rname "movOut"
		rname "enableDevice"
		rname "readTake"
name "arcLenDimContext"
	desc "Command used to register the arcLenDimCtx tool."
	fcount "0"
	rcount "0"
name "arcLengthDimension"
	desc "This command is used to create an arcLength dimension to display the arcLength of a curve/surface at a specified point on the curve/surface."
	fcount "0"
	rcount "0"
name "arclen"
	desc "This command returns the arclength of a curve if the history flag is not set (the default). If the history flag is set, a node is created that can produce the arclength, and is connected and its name returned. Having the construction history option on makes this command useful for expressions."
	fcount "1"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable) "
	rcount "0"
name "arrayMapper"
	desc "Create an arrayMapper node and connect it to a target object. If the -type flag is used, then this command also creates an external node used for computing the output values. If the input attribute does not already exist, it will be created. The output attribute must exists. If a flag is omitted, the selection list will be used to supply the needed objects. If none are found, that action is omitted."
	fcount "6"
	fnames "destAttr da"
		fdesc "Specifies the attribute which will be the downstream connection for the output data from the mapper node. The attribute type will be used to determine which output attribute to use: float array gets outValuePP, vector array gets outColorPP. If the flag is omitted, no output connection is made. "
	fnames "inputU iu"
		fdesc "Specifies the upstream attribute to connect to the mapper's uCoordPP attribute. If the flag is omitted, no input connection is made. "
	fnames "inputV iv"
		fdesc "Specifies the upstream attribute to connect to the mapper's vCoordPP attribute. If the flag is omitted, no input connection is made. "
	fnames "mapTo mt"
		fdesc "Specifies an existing node to be used to compute the output values. This node must be of the appropriate type. Currently, only ramp nodes may be used. "
	fnames "target t"
		fdesc "Specifies the target object to be connected to. "
	fnames "type ty"
		fdesc "Specifies the node type to create which will be used to compute the output values. Currently, only ramp is valid. If the flag is omitted, no connection is made and the external node is not created. "
	rcount "0"
name "art3dPaintCtx"
	desc "This is a tool context command for 3d Paint tool."
	fcount "59"
	fnames "alphablendmode abm"
		fdesc "Specifies the blend mode used while painting RGB channel. Currently, we support the following blend modes:  "Default" "Lighten" "Darken" "Difference" "Exclusion"  "Hard Light" "Soft Light" "Multiply" "Screen" "Overlay"  C: Default is "Default".  Q: When queried, it returns a string. "
	fnames "assigntxt ast"
		fdesc "Sends a request to the tool to allocate and assign  file textures to the specified attibute on the selected shaders. "
	fnames "blurintensity bi"
		fdesc "Specifies the intensity of the blur brush. C: Default is 50. Q: When queried, it returns a int. "
	fnames "brushalignment bra"
		fdesc "Specifies the path brush alignemnt. If true,  the brush will align to stroke path, otherwise it will  align to up vector. C: Default is true. Q: When queried, it returns a boolean. "
	fnames "brushfeedback bf"
		fdesc "Specifies if the brush additional feedback should  be drawn. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "brushquality bq"
		fdesc "Specifies the number of samples per stamp. The valid numbers are 1, 4, 8, 16.  C: Default is 1. Q: When queried, it returns an integer. "
	fnames "clear clr"
		fdesc "Floods all cvs/vertices to the current value. "
	fnames "commonattr cat"
		fdesc "Returns a string with the names of all common to  all the shaders paintable attributes and supported by the  Paint Texture Tool.  Q: When queried, it returns a string.  "
	fnames "dragSlider dsl"
		fdesc "Sets the current brush drag state for resizing or  offsetting the brush (like the 'b' and 'm' default hotkeys).  The string argument is one of: "radius", "lowradius",  "opacity", "value" or "none".  C: Default is "none".  "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "expandfilename eef"
		fdesc "If true, it will expand the name of the export file and concatenate it with the surface name. Otherwise it will take the name as it is. C: Default is true.  "
	fnames "exportfilemode efm"
		fdesc "Specifies the export channel.The valid  entries here are: "alpha", "luminance", "rgb", "rgba". C: Default is "luminance/rgb".  Q: When queried, it returns a string. "
	fnames "exportfilesave esf"
		fdesc "Exports the attribute map and saves to a specified file. "
	fnames "exportfilesizex fsx"
		fdesc "Specifies the width of the attribute map to export. C: Default width is 256. Q: When queried, it returns an integer. "
	fnames "exportfilesizey fsy"
		fdesc "Specifies the width of the attribute map to export. C: Default width is 256. Q: When queried, it returns an integer. "
	fnames "exportfiletype eft"
		fdesc "Specifies the image file format. It can be one of the following: "iff", "tiff", "jpeg", "alias", "rgb", "fit" "postScriptEPS", "softimage", "wavefrontRLA", "wavefrontEXP". C: default is tiff. Q: When queried, it returns a string. "
	fnames "extendFillColor efc"
		fdesc "States if the painted textures will be automatically postprocessed on each stroke to fill in the background color.  C: Default is true. Q: When queried, it returns a boolean. "
	fnames "filetxtaspectratio far"
		fdesc "Specifies the aspect ration of the texture  width and height. C: Default is 1. Q: When queried, it returns a double. "
	fnames "filetxtsizex ftx"
		fdesc "Specifies the width of the texture. C: Default is 256. Q: When queried, it returns an integer. "
	fnames "filetxtsizey fty"
		fdesc "Specifies the height of the texture. C: Default is 256. Q: When queried, it returns an integer. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "importfileload ifl"
		fdesc "Load the attribute map a specified file. "
	fnames "importfilemode ifm"
		fdesc "Specifies the channel to import. The valid  entries here are: "alpha", "luminance", "red", "green",  "blue", and "rgb" C: Default is "alpha". Q: When queried, it returns a string. "
	fnames "importreassign irm"
		fdesc "Specifies if the multiply atrribute maps are to be reassigned while importing. Only maps previously exported from  within Artisan can be reassigned. C: Default is FALSE. Q: When queried, it returns a  boolean. "
	fnames "keepaspectratio kar"
		fdesc "States if the aspect ratio of the file texture sizes should remain constant.  C: Default is true. Q: When queried, it returns a boolean. "
	fnames "lowerradius lr"
		fdesc "Sets the lower size of the brush (only apply on tablet). "
	fnames "mappressure mp"
		fdesc "Sets the tablet pressure mapping when the table  is used. There are four options: "none" - the pressure has no  effect, "opacity" - the pressure is mapped to the opacity,  "radius" - the is mapped to modify the radius of the brush,  "both" - the pressure modifies both the opacity and the radius. C: Default is "none". Q: When queried, it returns a string. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "opacity op"
		fdesc "Sets the brush opacity. C: Default is 1.0. Q: When queried, it returns a float. "
	fnames "outline o"
		fdesc "Specifies if the brush outline should be drawn. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "outwhilepaint owp"
		fdesc "Specifies if the brush outline should be drawn  while painting.  C: Default is FALSE. Q: When queried, it returns a boolean. "
	fnames "paintattrnames pan"
		fdesc "Returns a string with the names of all paintable attributes supported by the Paint Texture Tool.  Q: When queried, it returns a string.  "
	fnames "paintmode pm"
		fdesc "Specifies the paint mode. There are two  possibilities: "screen" and "tangent". C: Default is "screen". Q: When queried, it returns a string. "
	fnames "paintoperationtype pot"
		fdesc "Specifies the operation type used by the  Paint Tool.  Currently, we support the following paint modes: "Paint", "Smear", "Blur", "Erase" and "Clone". C: Default is "Paint". Q: When queried, it returns a string. "
	fnames "painttxtattr pta"
		fdesc "Specifies the attribute on the shader which the user wants to paint. Currently, we support the following  attributes: "Color", "Transparency", "Ambient", "Incandescence", "BumpMap", "Diffuse", "Translucence" "Eccentricity" "SpecularColor", "Reflectivity", "ReflectedColor". C: Default is "Color". Q: When queried, it returns a string. "
	fnames "pfxScale psc"
		fdesc "Specifies the scale for Paint Effect brushes.  Q: When queried, it returns a double. "
	fnames "pfxWidth pwd"
		fdesc "Specifies the width for Paint Effect brushes.  Q: When queried, it returns a double. "
	fnames "profileShapeFile psf"
		fdesc "Passes a name of the image file for the stamp shape profile. "
	fnames "projective prm"
		fdesc "Specifies the projective paint mode. C: Default is 'false'. Q: When queried, it returns a boolean. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "radius r"
		fdesc "Sets the size of the brush. C: Default is 1.0 cm. Q: When queried, it returns a float. "
	fnames "reflection rn"
		fdesc "Specifies the reflection mode. C: Default is 'false'. Q: When queried, it returns a boolean. "
	fnames "reflectionAxis ra"
		fdesc "Specifies the reflection axis. There are three  possibilities: "x", "y" and "z". C: Default is "x". Q: When queried, it returns a string. "
	fnames "reloadtexfile rtf"
		fdesc "Sends a request to the tool to reload the texture  from the disc.  "
	fnames "resizeratio rr"
		fdesc "Specifies the scale by which to resize the  current textures. Q: When queried, it returns a double. "
	fnames "resizetxt rft"
		fdesc "Sends a request to the tool to resize all the  currently in use textures.  "
	fnames "saveTextureOnStroke sts"
		fdesc "States if the original texture will be automatically saved on each stroke. C: Default is false. Q: When queried, it returns a boolean. "
	fnames "savestroke sos"
		fdesc "States if the temporary texture will be automatically saved on each stroke. C: Default is false. Q: When queried, it returns a boolean. "
	fnames "savetexture stx"
		fdesc "Sends a request to the tool to save the texture  to the disc.  "
	fnames "shadernames shn"
		fdesc "Returns a string with the names of all shaders assigned  to selected surfaces. Q: When queried, it returns a string.  "
	fnames "shapenames ssn"
		fdesc "Returns a string with the names of all surfaces which are being painted on. Q: When queried, it returns a string.  "
	fnames "showactive sa"
		fdesc "Sets on/off the display of the surface isoparms. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "stampProfile stP"
		fdesc "Sets the brush profile of the current stamp.  Currently, the following profiles are supported: "gaussian", "soft", "solid" and "square". C: Default is gaussian. Q: When queried, it returns a string. "
	fnames "stampspacing ssp"
		fdesc "Specifies the stamp spacing. C: Default is 1.0. Q: When queried, it returns a double. "
	fnames "usepressure up"
		fdesc "Sets the tablet pressure on/off. C: Default is false. Q: When queried, it returns a boolean. "
	rcount "0"
name "artAttrCtx"
	desc "This is a context command to set the flags on the Attribute Paint Tool context."
	fcount "53"
	fnames "attrSelected asl"
		fdesc "Returns a name of the currently selected attribute. Q: When queried, it returns a string. "
	fnames "brushalignment bra"
		fdesc "Specifies the path brush alignemnt. If true,  the brush will align to stroke path, otherwise it will  align to up vector. C: Default is true. Q: When queried, it returns a boolean. "
	fnames "brushfeedback bf"
		fdesc "Specifies if the brush additional feedback should  be drawn. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "clamp cl"
		fdesc "Specifies if the weight value should be clamped to  the lower and upper bounds. There are four options here:  "none" - no clamping is performed, "lower" - clamps only to  the lower bound, "upper" - clamps only to the upper bounds,  "both" - clamps to the lower and upper bounds. C: Default is "none".  Q: When queried, it returns a string. "
	fnames "clamplower cll"
		fdesc "Specifies the lower bound for the values. C: Default is 0.0.  Q: When queried, it returns a float. "
	fnames "clampupper clu"
		fdesc "Specifies the upper bound for the values. C: Default is 1.0.  Q: When queried, it returns a float. "
	fnames "clear clr"
		fdesc "Floods all cvs/vertices to the current value. "
	fnames "colorfeedback cf"
		fdesc "Sets on/off the color feedback display. C: Default is FALSE.  Q: When queried, it returns a boolean. "
	fnames "colorrangelower crl"
		fdesc "Specifies the value which maps to black when color feedback mode is on C: Default is 0.0.  Q: When queried, it returns a float. "
	fnames "colorrangeupper cru"
		fdesc "Specifies the value which maps to the maximum color when color feedback mode is on C: Default is 1.0.  Q: When queried, it returns a float. "
	fnames "dataTypeIndex dti"
		fdesc "When the selected paintable attribute is a vectorArray,  it specifies which field to paint on. "
	fnames "disablelighting dl"
		fdesc "If color feedback is on, this flag determines whether lighting is disabled or not for the surfaces that are affected C: Default is FALSE.  Q: When queried, it returns a boolean. "
	fnames "dragSlider dsl"
		fdesc "Sets the current brush drag state for resizing or  offsetting the brush (like the 'b' and 'm' default hotkeys).  The string argument is one of: "radius", "lowradius",  "opacity", "value" or "none".  C: Default is "none".  "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "expandfilename eef"
		fdesc "If true, it will expand the name of the export file and concatenate it with the surface name. Otherwise it will take the name as it is. C: Default is true.  "
	fnames "exportfilemode efm"
		fdesc "Specifies the export channel.The valid  entries here are: "alpha", "luminance", "rgb", "rgba". C: Default is "luminance/rgb".  Q: When queried, it returns a string. "
	fnames "exportfilesave esf"
		fdesc "Exports the attribute map and saves to a specified file. "
	fnames "exportfilesizex fsx"
		fdesc "Specifies the width of the attribute map to export. C: Default width is 256. Q: When queried, it returns an integer. "
	fnames "exportfilesizey fsy"
		fdesc "Specifies the width of the attribute map to export. C: Default width is 256. Q: When queried, it returns an integer. "
	fnames "exportfiletype eft"
		fdesc "Specifies the image file format. It can be one of the following: "iff", "tiff", "jpeg", "alias", "rgb", "fit" "postScriptEPS", "softimage", "wavefrontRLA", "wavefrontEXP". C: default is tiff. Q: When queried, it returns a string. "
	fnames "filterNodes fon"
		fdesc "Sets the node filter.  "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "importfileload ifl"
		fdesc "Load the attribute map a specified file. "
	fnames "importfilemode ifm"
		fdesc "Specifies the channel to import. The valid  entries here are: "alpha", "luminance", "red", "green",  "blue", and "rgb" C: Default is "alpha". Q: When queried, it returns a string. "
	fnames "importreassign irm"
		fdesc "Specifies if the multiply atrribute maps are to be reassigned while importing. Only maps previously exported from  within Artisan can be reassigned. C: Default is FALSE. Q: When queried, it returns a  boolean. "
	fnames "interactiveUpdate iu"
		fdesc "Specifies how often to transfer the painted values into the attribute. TRUE: transfer them "continuously" (many times per stroke) FALSE: transfer them only at the end of a stroke (on mouse  button release) C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "lowerradius lr"
		fdesc "Sets the lower size of the brush (only apply on tablet). "
	fnames "mappressure mp"
		fdesc "Sets the tablet pressure mapping when the table  is used. There are four options: "none" - the pressure has no  effect, "opacity" - the pressure is mapped to the opacity,  "radius" - the is mapped to modify the radius of the brush,  "both" - the pressure modifies both the opacity and the radius. C: Default is "none". Q: When queried, it returns a string. "
	fnames "maxvalue mxv"
		fdesc "Specifies the minimum value for each attribute. C: Default is 1.0.  Q: When queried, it returns a float. "
	fnames "minvalue miv"
		fdesc "Specifies the minimum value for each attribute. C: Default is 0.0.  Q: When queried, it returns a float. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "objattrArray oaa"
		fdesc "An array of all paintable attributes. Each element of  the array is a string with the following information: NodeType.NodeName.AttributeName.MenuType *MenuType: type(level) of the item in the Menu (UI). Q: When queried, it returns a string. "
	fnames "opacity op"
		fdesc "Sets the brush opacity. C: Default is 1.0. Q: When queried, it returns a float. "
	fnames "outline o"
		fdesc "Specifies if the brush outline should be drawn. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "outwhilepaint owp"
		fdesc "Specifies if the brush outline should be drawn  while painting.  C: Default is FALSE. Q: When queried, it returns a boolean. "
	fnames "paintNodeArray pna"
		fdesc "An array of paintable nodes.  Q: When queried, it returns a string. "
	fnames "paintattrselected pas"
		fdesc "An array of selected paintable attributes. Each element of the array is a string with the  following information:  NodeType.NodeName.AttributeName. "
	fnames "paintmode pm"
		fdesc "Specifies the paint mode. There are two  possibilities: "screen" and "tangent". C: Default is "screen". Q: When queried, it returns a string. "
	fnames "profileShapeFile psf"
		fdesc "Passes a name of the image file for the stamp shape profile. "
	fnames "projective prm"
		fdesc "Specifies the projective paint mode. C: Default is 'false'. Q: When queried, it returns a boolean. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "radius r"
		fdesc "Sets the size of the brush. C: Default is 1.0 cm. Q: When queried, it returns a float. "
	fnames "reflection rn"
		fdesc "Specifies the reflection mode. C: Default is 'false'. Q: When queried, it returns a boolean. "
	fnames "reflectionAxis ra"
		fdesc "Specifies the reflection axis. There are three  possibilities: "x", "y" and "z". C: Default is "x". Q: When queried, it returns a string. "
	fnames "selectedattroper sao"
		fdesc "Sets the edit weight operation. Four edit weights  operations are provided : "absolute" - the value of the weight  is replaced by the current one, "additive" - the value of the  weight is added to the current one, "scale" - the value of the  weight is multiplied by the current one, "smooth" - the value  of the weight is divided by the current one. C: Default is "absolute".  Q: When queried, it returns a string. "
	fnames "showactive sa"
		fdesc "Sets on/off the display of the surface isoparms. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "stampProfile stP"
		fdesc "Sets the brush profile of the current stamp.  Currently, the following profiles are supported: "gaussian", "soft", "solid" and "square". C: Default is gaussian. Q: When queried, it returns a string. "
	fnames "usepressure up"
		fdesc "Sets the tablet pressure on/off. C: Default is false. Q: When queried, it returns a boolean. "
	fnames "value val"
		fdesc "Specifies the value for each attribute. C: Default is 0.0.  Q: When queried, it returns a float. "
	rcount "0"
name "artAttrPaintVertexCtx"
	desc "This is a context command to set the flags on the Paint color on vertex Tool context."
	fcount "55"
	fnames "attrSelected asl"
		fdesc "Returns a name of the currently selected attribute. Q: When queried, it returns a string. "
	fnames "brushalignment bra"
		fdesc "Specifies the path brush alignemnt. If true,  the brush will align to stroke path, otherwise it will  align to up vector. C: Default is true. Q: When queried, it returns a boolean. "
	fnames "brushfeedback bf"
		fdesc "Specifies if the brush additional feedback should  be drawn. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "clamp cl"
		fdesc "Specifies if the weight value should be clamped to  the lower and upper bounds. There are four options here:  "none" - no clamping is performed, "lower" - clamps only to  the lower bound, "upper" - clamps only to the upper bounds,  "both" - clamps to the lower and upper bounds. C: Default is "none".  Q: When queried, it returns a string. "
	fnames "clamplower cll"
		fdesc "Specifies the lower bound for the values. C: Default is 0.0.  Q: When queried, it returns a float. "
	fnames "clampupper clu"
		fdesc "Specifies the upper bound for the values. C: Default is 1.0.  Q: When queried, it returns a float. "
	fnames "clear clr"
		fdesc "Floods all cvs/vertices to the current value. "
	fnames "colorfeedback cf"
		fdesc "Sets on/off the color feedback display. C: Default is FALSE.  Q: When queried, it returns a boolean. "
	fnames "colorrangelower crl"
		fdesc "Specifies the value which maps to black when color feedback mode is on C: Default is 0.0.  Q: When queried, it returns a float. "
	fnames "colorrangeupper cru"
		fdesc "Specifies the value which maps to the maximum color when color feedback mode is on C: Default is 1.0.  Q: When queried, it returns a float. "
	fnames "dataTypeIndex dti"
		fdesc "When the selected paintable attribute is a vectorArray,  it specifies which field to paint on. "
	fnames "disablelighting dl"
		fdesc "If color feedback is on, this flag determines whether lighting is disabled or not for the surfaces that are affected C: Default is FALSE.  Q: When queried, it returns a boolean. "
	fnames "dragSlider dsl"
		fdesc "Sets the current brush drag state for resizing or  offsetting the brush (like the 'b' and 'm' default hotkeys).  The string argument is one of: "radius", "lowradius",  "opacity", "value" or "none".  C: Default is "none".  "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "expandfilename eef"
		fdesc "If true, it will expand the name of the export file and concatenate it with the surface name. Otherwise it will take the name as it is. C: Default is true.  "
	fnames "exportfilemode efm"
		fdesc "Specifies the export channel.The valid  entries here are: "alpha", "luminance", "rgb", "rgba". C: Default is "luminance/rgb".  Q: When queried, it returns a string. "
	fnames "exportfilesave esf"
		fdesc "Exports the attribute map and saves to a specified file. "
	fnames "exportfilesizex fsx"
		fdesc "Specifies the width of the attribute map to export. C: Default width is 256. Q: When queried, it returns an integer. "
	fnames "exportfilesizey fsy"
		fdesc "Specifies the width of the attribute map to export. C: Default width is 256. Q: When queried, it returns an integer. "
	fnames "exportfiletype eft"
		fdesc "Specifies the image file format. It can be one of the following: "iff", "tiff", "jpeg", "alias", "rgb", "fit" "postScriptEPS", "softimage", "wavefrontRLA", "wavefrontEXP". C: default is tiff. Q: When queried, it returns a string. "
	fnames "filterNodes fon"
		fdesc "Sets the node filter.  "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "importfileload ifl"
		fdesc "Load the attribute map a specified file. "
	fnames "importfilemode ifm"
		fdesc "Specifies the channel to import. The valid  entries here are: "alpha", "luminance", "red", "green",  "blue", and "rgb" C: Default is "alpha". Q: When queried, it returns a string. "
	fnames "importreassign irm"
		fdesc "Specifies if the multiply atrribute maps are to be reassigned while importing. Only maps previously exported from  within Artisan can be reassigned. C: Default is FALSE. Q: When queried, it returns a  boolean. "
	fnames "interactiveUpdate iu"
		fdesc "Specifies how often to transfer the painted values into the attribute. TRUE: transfer them "continuously" (many times per stroke) FALSE: transfer them only at the end of a stroke (on mouse  button release) C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "lowerradius lr"
		fdesc "Sets the lower size of the brush (only apply on tablet). "
	fnames "mappressure mp"
		fdesc "Sets the tablet pressure mapping when the table  is used. There are four options: "none" - the pressure has no  effect, "opacity" - the pressure is mapped to the opacity,  "radius" - the is mapped to modify the radius of the brush,  "both" - the pressure modifies both the opacity and the radius. C: Default is "none". Q: When queried, it returns a string. "
	fnames "maxvalue mxv"
		fdesc "Specifies the minimum value for each attribute. C: Default is 1.0.  Q: When queried, it returns a float. "
	fnames "minvalue miv"
		fdesc "Specifies the minimum value for each attribute. C: Default is 0.0.  Q: When queried, it returns a float. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "objattrArray oaa"
		fdesc "An array of all paintable attributes. Each element of  the array is a string with the following information: NodeType.NodeName.AttributeName.MenuType *MenuType: type(level) of the item in the Menu (UI). Q: When queried, it returns a string. "
	fnames "opacity op"
		fdesc "Sets the brush opacity. C: Default is 1.0. Q: When queried, it returns a float. "
	fnames "outline o"
		fdesc "Specifies if the brush outline should be drawn. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "outwhilepaint owp"
		fdesc "Specifies if the brush outline should be drawn  while painting.  C: Default is FALSE. Q: When queried, it returns a boolean. "
	fnames "paintNodeArray pna"
		fdesc "An array of paintable nodes.  Q: When queried, it returns a string. "
	fnames "paintRGBA pc4"
		fdesc "Specifies whether RGB or RGBA channels are being painted. TRUE: RGBA channels.  FALSE: RGB channels. Alpha channel remains unaffected. C: Default is FALSE (Painting RGB channels).   Q: When queried, it returns a int. "
	fnames "paintVertexFace pvf"
		fdesc "Specifies whether vertex face is being painted. TRUE: Vertex face being painted. (Allows each face connected to the vertex to be painted) FALSE: Vertex being painted.(affects all connected faces) C: Default is FALSE.  Q: When queried, it returns a int. "
	fnames "paintattrselected pas"
		fdesc "An array of selected paintable attributes. Each element of the array is a string with the  following information:  NodeType.NodeName.AttributeName. "
	fnames "paintmode pm"
		fdesc "Specifies the paint mode. There are two  possibilities: "screen" and "tangent". C: Default is "screen". Q: When queried, it returns a string. "
	fnames "profileShapeFile psf"
		fdesc "Passes a name of the image file for the stamp shape profile. "
	fnames "projective prm"
		fdesc "Specifies the projective paint mode. C: Default is 'false'. Q: When queried, it returns a boolean. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "radius r"
		fdesc "Sets the size of the brush. C: Default is 1.0 cm. Q: When queried, it returns a float. "
	fnames "reflection rn"
		fdesc "Specifies the reflection mode. C: Default is 'false'. Q: When queried, it returns a boolean. "
	fnames "reflectionAxis ra"
		fdesc "Specifies the reflection axis. There are three  possibilities: "x", "y" and "z". C: Default is "x". Q: When queried, it returns a string. "
	fnames "selectedattroper sao"
		fdesc "Sets the edit weight operation. Four edit weights  operations are provided : "absolute" - the value of the weight  is replaced by the current one, "additive" - the value of the  weight is added to the current one, "scale" - the value of the  weight is multiplied by the current one, "smooth" - the value  of the weight is divided by the current one. C: Default is "absolute".  Q: When queried, it returns a string. "
	fnames "showactive sa"
		fdesc "Sets on/off the display of the surface isoparms. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "stampProfile stP"
		fdesc "Sets the brush profile of the current stamp.  Currently, the following profiles are supported: "gaussian", "soft", "solid" and "square". C: Default is gaussian. Q: When queried, it returns a string. "
	fnames "usepressure up"
		fdesc "Sets the tablet pressure on/off. C: Default is false. Q: When queried, it returns a boolean. "
	fnames "value val"
		fdesc "Specifies the value for each attribute. C: Default is 0.0.  Q: When queried, it returns a float. "
	rcount "0"
name "artBuildPaintMenu"
	desc "ArtBuildPaintMenu is NOT undoable , NOT queryable , and NOT editable . ??."
	fcount "0"
	rcount "0"
name "artFluidAttrCtx"
	desc "This command is used to paint properties (such as density) of selected fluid volumes."
	fcount "45"
	fnames "autoSave as"
		fdesc "A MEL command to save the fluid state.  Called before an event which could overwrite unsaved values of  painted fluid properties.  Such events include: changing current time, changing the current paintable property, and exiting the paint tool.  (To turn auto-save off, pass in an empty-valued string argument: e.g., "".) "
	fnames "brushalignment bra"
		fdesc "Specifies the path brush alignemnt. If true,  the brush will align to stroke path, otherwise it will  align to up vector. C: Default is true. Q: When queried, it returns a boolean. "
	fnames "brushfeedback bf"
		fdesc "Specifies if the brush additional feedback should  be drawn. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "clear clr"
		fdesc "Floods all cvs/vertices to the current value. "
	fnames "currentPaintableFluid cpf"
		fdesc "Query the name of the fluid on which this context is currently painting.  Returns string. "
	fnames "delaySelectionChanged dsl"
		fdesc "Internal use only.  Under normal conditions, the tool responds to changes to the selection list so it can update its list of paintable geometry.  When  -dsl true is used, the tool will not update its paintable list until a corresponding -dsl false is called. "
	fnames "displayAsRender dar"
		fdesc "When true, sets the "Shaded Display" attribute of the fluid to "AsRender": all fluid properties displayed as hardware rendered.  When false, displays only the  currently selected paintable attribute of the fluid. "
	fnames "displayVelocity dv"
		fdesc "Turns on/off velocity display, independently of the above "dar/displayAsRender" setting.  Use this flag to enable velocity display while only displaying density, for example. "
	fnames "doAutoSave das"
		fdesc "Execute the -autoSave command if there are  unsaved painted fluid properties. "
	fnames "dragSlider dsl"
		fdesc "Sets the current brush drag state for resizing or  offsetting the brush (like the 'b' and 'm' default hotkeys).  The string argument is one of: "radius", "lowradius",  "opacity", "value" or "none".  C: Default is "none".  "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "expandfilename eef"
		fdesc "If true, it will expand the name of the export file and concatenate it with the surface name. Otherwise it will take the name as it is. C: Default is true.  "
	fnames "exportfilemode efm"
		fdesc "Specifies the export channel.The valid  entries here are: "alpha", "luminance", "rgb", "rgba". C: Default is "luminance/rgb".  Q: When queried, it returns a string. "
	fnames "exportfilesave esf"
		fdesc "Exports the attribute map and saves to a specified file. "
	fnames "exportfilesizex fsx"
		fdesc "Specifies the width of the attribute map to export. C: Default width is 256. Q: When queried, it returns an integer. "
	fnames "exportfilesizey fsy"
		fdesc "Specifies the width of the attribute map to export. C: Default width is 256. Q: When queried, it returns an integer. "
	fnames "exportfiletype eft"
		fdesc "Specifies the image file format. It can be one of the following: "iff", "tiff", "jpeg", "alias", "rgb", "fit" "postScriptEPS", "softimage", "wavefrontRLA", "wavefrontEXP". C: default is tiff. Q: When queried, it returns a string. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "importfileload ifl"
		fdesc "Load the attribute map a specified file. "
	fnames "importfilemode ifm"
		fdesc "Specifies the channel to import. The valid  entries here are: "alpha", "luminance", "red", "green",  "blue", and "rgb" C: Default is "alpha". Q: When queried, it returns a string. "
	fnames "importreassign irm"
		fdesc "Specifies if the multiply atrribute maps are to be reassigned while importing. Only maps previously exported from  within Artisan can be reassigned. C: Default is FALSE. Q: When queried, it returns a  boolean. "
	fnames "lowerradius lr"
		fdesc "Sets the lower size of the brush (only apply on tablet). "
	fnames "mappressure mp"
		fdesc "Sets the tablet pressure mapping when the table  is used. There are four options: "none" - the pressure has no  effect, "opacity" - the pressure is mapped to the opacity,  "radius" - the is mapped to modify the radius of the brush,  "both" - the pressure modifies both the opacity and the radius. C: Default is "none". Q: When queried, it returns a string. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "opacity op"
		fdesc "Sets the brush opacity. C: Default is 1.0. Q: When queried, it returns a float. "
	fnames "outline o"
		fdesc "Specifies if the brush outline should be drawn. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "outwhilepaint owp"
		fdesc "Specifies if the brush outline should be drawn  while painting.  C: Default is FALSE. Q: When queried, it returns a boolean. "
	fnames "paintmode pm"
		fdesc "Specifies the paint mode. There are two  possibilities: "screen" and "tangent". C: Default is "screen". Q: When queried, it returns a string. "
	fnames "profileShapeFile psf"
		fdesc "Passes a name of the image file for the stamp shape profile. "
	fnames "projective prm"
		fdesc "Specifies the projective paint mode. C: Default is 'false'. Q: When queried, it returns a boolean. "
	fnames "property p"
		fdesc "Specifies a property to paint on the fluid. Valid values are "color", "density", "densityAndColor,"  "densityAndFuel," "temperature," "fuel", "velocity". "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "radius r"
		fdesc "Sets the size of the brush. C: Default is 1.0 cm. Q: When queried, it returns a float. "
	fnames "reflection rn"
		fdesc "Specifies the reflection mode. C: Default is 'false'. Q: When queried, it returns a boolean. "
	fnames "reflectionAxis ra"
		fdesc "Specifies the reflection axis. There are three  possibilities: "x", "y" and "z". C: Default is "x". Q: When queried, it returns a string. "
	fnames "rgbValue rgb"
		fdesc "Specifies the values of the red, green, and  blue components of the color to  use when painting the property "color."   "
	fnames "showactive sa"
		fdesc "Sets on/off the display of the surface isoparms. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "stampProfile stP"
		fdesc "Sets the brush profile of the current stamp.  Currently, the following profiles are supported: "gaussian", "soft", "solid" and "square". C: Default is gaussian. Q: When queried, it returns a string. "
	fnames "useStrokeDirection usd"
		fdesc "Applicable only during "velocity" painting.  Specifies whether the value of the  painted velocity should come from the direction  of the brush stroke, overriding the value specified by the -v/-velocity flag. "
	fnames "usepressure up"
		fdesc "Sets the tablet pressure on/off. C: Default is false. Q: When queried, it returns a boolean. "
	fnames "velocity v"
		fdesc "Specifies the values of the x, y, and z  components of the velocity to use when painting the property "velocity". "
	rcount "0"
name "artPuttyCtx"
	desc "This command is used to modify NURBS surfaces using a brush based interface (Maya Artisan). This is accomplished by moving the control vertices (cvs) under the brush in the specified direction."
	fcount "69"
	fnames "attrSelected asl"
		fdesc "Returns a name of the currently selected attribute. Q: When queried, it returns a string. "
	fnames "autosmooth asm"
		fdesc "Sets up the auto smoothing option. When the brush  is in the smooth mode, adjusting the strength will adjust how  fast the surfaces is smoothed out. C: Default is FALSE.  Q: When queried, it returns a boolean. "
	fnames "brushalignment bra"
		fdesc "Specifies the path brush alignemnt. If true,  the brush will align to stroke path, otherwise it will  align to up vector. C: Default is true. Q: When queried, it returns a boolean. "
	fnames "brushfeedback bf"
		fdesc "Specifies if the brush additional feedback should  be drawn. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "clamp cl"
		fdesc "Specifies if the weight value should be clamped to  the lower and upper bounds. There are four options here:  "none" - no clamping is performed, "lower" - clamps only to  the lower bound, "upper" - clamps only to the upper bounds,  "both" - clamps to the lower and upper bounds. C: Default is "none".  Q: When queried, it returns a string. "
	fnames "clamplower cll"
		fdesc "Specifies the lower bound for the values. C: Default is 0.0.  Q: When queried, it returns a float. "
	fnames "clampupper clu"
		fdesc "Specifies the upper bound for the values. C: Default is 1.0.  Q: When queried, it returns a float. "
	fnames "clear clr"
		fdesc "Floods all cvs/vertices to the current value. "
	fnames "collapsecvtol clc"
		fdesc "Specifies the tolerance for the collapse cv detection. C: Default is 0.005 cm.  Q: When queried, it returns a float. "
	fnames "colorfeedback cf"
		fdesc "Sets on/off the color feedback display. C: Default is FALSE.  Q: When queried, it returns a boolean. "
	fnames "colorrangelower crl"
		fdesc "Specifies the value which maps to black when color feedback mode is on C: Default is 0.0.  Q: When queried, it returns a float. "
	fnames "colorrangeupper cru"
		fdesc "Specifies the value which maps to the maximum color when color feedback mode is on C: Default is 1.0.  Q: When queried, it returns a float. "
	fnames "dataTypeIndex dti"
		fdesc "When the selected paintable attribute is a vectorArray,  it specifies which field to paint on. "
	fnames "disablelighting dl"
		fdesc "If color feedback is on, this flag determines whether lighting is disabled or not for the surfaces that are affected C: Default is FALSE.  Q: When queried, it returns a boolean. "
	fnames "dispdecr dde"
		fdesc "Decreases a maximum displacement by 10%. "
	fnames "dispincr din"
		fdesc "Increases a maximum displacement by 10%. "
	fnames "dragSlider dsl"
		fdesc "Sets the current brush drag state for resizing or  offsetting the brush (like the 'b' and 'm' default hotkeys).  The string argument is one of: "radius", "lowradius",  "opacity", "value" or "none".  C: Default is "none".  "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "expandfilename eef"
		fdesc "If true, it will expand the name of the export file and concatenate it with the surface name. Otherwise it will take the name as it is. C: Default is true.  "
	fnames "exportfilemode efm"
		fdesc "Specifies the export channel.The valid  entries here are: "alpha", "luminance", "rgb", "rgba". C: Default is "luminance/rgb".  Q: When queried, it returns a string. "
	fnames "exportfilesave esf"
		fdesc "Exports the attribute map and saves to a specified file. "
	fnames "exportfilesizex fsx"
		fdesc "Specifies the width of the attribute map to export. C: Default width is 256. Q: When queried, it returns an integer. "
	fnames "exportfilesizey fsy"
		fdesc "Specifies the width of the attribute map to export. C: Default width is 256. Q: When queried, it returns an integer. "
	fnames "exportfiletype eft"
		fdesc "Specifies the image file format. It can be one of the following: "iff", "tiff", "jpeg", "alias", "rgb", "fit" "postScriptEPS", "softimage", "wavefrontRLA", "wavefrontEXP". C: default is tiff. Q: When queried, it returns a string. "
	fnames "filterNodes fon"
		fdesc "Sets the node filter.  "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "importfileload ifl"
		fdesc "Load the attribute map a specified file. "
	fnames "importfilemode ifm"
		fdesc "Specifies the channel to import. The valid  entries here are: "alpha", "luminance", "red", "green",  "blue", and "rgb" C: Default is "alpha". Q: When queried, it returns a string. "
	fnames "importreassign irm"
		fdesc "Specifies if the multiply atrribute maps are to be reassigned while importing. Only maps previously exported from  within Artisan can be reassigned. C: Default is FALSE. Q: When queried, it returns a  boolean. "
	fnames "interactiveUpdate iu"
		fdesc "Specifies how often to transfer the painted values into the attribute. TRUE: transfer them "continuously" (many times per stroke) FALSE: transfer them only at the end of a stroke (on mouse  button release) C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "invertrefvector irv"
		fdesc "Sets the invert of the reference vector option when the reflection is ON. If it is true, the reference vector  for the reflected stroke is negated with respect to the original  one. C: Default is FASLE. Q: When queried, it returns a boolean. "
	fnames "lowerradius lr"
		fdesc "Sets the lower size of the brush (only apply on tablet). "
	fnames "mappressure mp"
		fdesc "Sets the tablet pressure mapping when the table  is used. There are four options: "none" - the pressure has no  effect, "opacity" - the pressure is mapped to the opacity,  "radius" - the is mapped to modify the radius of the brush,  "both" - the pressure modifies both the opacity and the radius. C: Default is "none". Q: When queried, it returns a string. "
	fnames "maxdisp md"
		fdesc "Defines a maximum displacement  ( maxDisp in [0.0..5.0] ). C: Default is 1.0.  Q: When queried, it returns a float. "
	fnames "maxvalue mxv"
		fdesc "Specifies the minimum value for each attribute. C: Default is 1.0.  Q: When queried, it returns a float. "
	fnames "minvalue miv"
		fdesc "Specifies the minimum value for each attribute. C: Default is 0.0.  Q: When queried, it returns a float. "
	fnames "mouldtypemouse mtm"
		fdesc "Specifies the putty operations/mode ("push" - pushes cvs along the given direction (see refvector flag), "pull" - pulls cvs along the specified direction, "smooth" - smooths the sculpt, "erase" - erases the paint). C: Default is "push".  Q: When queried, it returns a string. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "objattrArray oaa"
		fdesc "An array of all paintable attributes. Each element of  the array is a string with the following information: NodeType.NodeName.AttributeName.MenuType *MenuType: type(level) of the item in the Menu (UI). Q: When queried, it returns a string. "
	fnames "opacity op"
		fdesc "Sets the brush opacity. C: Default is 1.0. Q: When queried, it returns a float. "
	fnames "outline o"
		fdesc "Specifies if the brush outline should be drawn. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "outwhilepaint owp"
		fdesc "Specifies if the brush outline should be drawn  while painting.  C: Default is FALSE. Q: When queried, it returns a boolean. "
	fnames "paintNodeArray pna"
		fdesc "An array of paintable nodes.  Q: When queried, it returns a string. "
	fnames "paintattrselected pas"
		fdesc "An array of selected paintable attributes. Each element of the array is a string with the  following information:  NodeType.NodeName.AttributeName. "
	fnames "paintmode pm"
		fdesc "Specifies the paint mode. There are two  possibilities: "screen" and "tangent". C: Default is "screen". Q: When queried, it returns a string. "
	fnames "polecv pcv"
		fdesc "Pull all the pole cvs to the same position "
	fnames "profileShapeFile psf"
		fdesc "Passes a name of the image file for the stamp shape profile. "
	fnames "projective prm"
		fdesc "Specifies the projective paint mode. C: Default is 'false'. Q: When queried, it returns a boolean. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "radius r"
		fdesc "Sets the size of the brush. C: Default is 1.0 cm. Q: When queried, it returns a float. "
	fnames "reflection rn"
		fdesc "Specifies the reflection mode. C: Default is 'false'. Q: When queried, it returns a boolean. "
	fnames "reflectionAxis ra"
		fdesc "Specifies the reflection axis. There are three  possibilities: "x", "y" and "z". C: Default is "x". Q: When queried, it returns a string. "
	fnames "refsurface rs"
		fdesc "Sets on/off the update of the reference surface.  If it is true the reference surface is automatically updated  on the per stroke bases. If it is false, the user has to update  the reference surface explicitly by pressing the update button  (see updaterefsrf). C: Default is TRUE.  Q: When queried, it returns a boolean. "
	fnames "refvector rv"
		fdesc "Specifies the direction of the push/pull operation ("normal" - sculpt along normals, "firstnormal" - sculpt along the first normal of the stroke, "view" - sculpt along the view direction, "xaxis", "yaxis", "zaxis" - sculpt along a given axis directions, "uisoparm", "visoparm" - sculpt along U or V isoparametric lines). C: Default is "normal".  Q: When queried, it returns a string. "
	fnames "selectedattroper sao"
		fdesc "Sets the edit weight operation. Four edit weights  operations are provided : "absolute" - the value of the weight  is replaced by the current one, "additive" - the value of the  weight is added to the current one, "scale" - the value of the  weight is multiplied by the current one, "smooth" - the value  of the weight is divided by the current one. C: Default is "absolute".  Q: When queried, it returns a string. "
	fnames "showactive sa"
		fdesc "Sets on/off the display of the surface isoparms. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "smoothiters si"
		fdesc "Sets the quality of the smoothing operation (number of iterations). C: Default is 3.  Q: When queried, it returns an int. "
	fnames "stampProfile stP"
		fdesc "Sets the brush profile of the current stamp.  Currently, the following profiles are supported: "gaussian", "soft", "solid" and "square". C: Default is gaussian. Q: When queried, it returns a string. "
	fnames "stitchcorner stc"
		fdesc "Sets on/off the stitching corner mode C: Default is "off".  Q: When queried, it returns a boolean. "
	fnames "stitchedgeflood sef"
		fdesc "Triggers postprocessing stitching edge procedure.  "
	fnames "stitchtype stt"
		fdesc "Sets on/off the stitching mode ( "off" - stitching  is turned off, "position" - position stitching is done without  taking care about the tangent continuity C0, "tan" - C1  continuity is preserved). C: Default is "position".  Q: When queried, it returns a string. "
	fnames "updateerasesrf ues"
		fdesc "Updates the erase surface. "
	fnames "updaterefsrf urs"
		fdesc "Updates the reference surface. "
	fnames "usepressure up"
		fdesc "Sets the tablet pressure on/off. C: Default is false. Q: When queried, it returns a boolean. "
	fnames "value val"
		fdesc "Specifies the value for each attribute. C: Default is 0.0.  Q: When queried, it returns a float. "
	rcount "0"
name "artSelectCtx"
	desc "This command is used to select/deselect/toggle components on selected surfaces using a brush interface (Maya Artisan). Since, it selects components of the surface, it only works in the component mode."
	fcount "43"
	fnames "addselection ads"
		fdesc "If true, each new stroke adds cvs to the active list. If false, each stroke replaces the previous selection. C: Default is true. Q: When queried, it returns a boole "
	fnames "afterStrokeCmd asc"
		fdesc "The passed string is executed as a MEL command  immediately after the end of a stroke. C: Default is no command. Q: When queried, it returns  the current command "
	fnames "beforeStrokeCmd bsc"
		fdesc "The passed string is executed as a MEL command  immediately before the start of a stroke. C: Default is no command. Q: When queried, it returns the  current command "
	fnames "brushalignment bra"
		fdesc "Specifies the path brush alignemnt. If true,  the brush will align to stroke path, otherwise it will  align to up vector. C: Default is true. Q: When queried, it returns a boolean. "
	fnames "brushfeedback bf"
		fdesc "Specifies if the brush additional feedback should  be drawn. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "clear clr"
		fdesc "Floods all cvs/vertices to the current value. "
	fnames "dragSlider dsl"
		fdesc "Sets the current brush drag state for resizing or  offsetting the brush (like the 'b' and 'm' default hotkeys).  The string argument is one of: "radius", "lowradius",  "opacity", "value" or "none".  C: Default is "none".  "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "expandfilename eef"
		fdesc "If true, it will expand the name of the export file and concatenate it with the surface name. Otherwise it will take the name as it is. C: Default is true.  "
	fnames "exportfilemode efm"
		fdesc "Specifies the export channel.The valid  entries here are: "alpha", "luminance", "rgb", "rgba". C: Default is "luminance/rgb".  Q: When queried, it returns a string. "
	fnames "exportfilesave esf"
		fdesc "Exports the attribute map and saves to a specified file. "
	fnames "exportfilesizex fsx"
		fdesc "Specifies the width of the attribute map to export. C: Default width is 256. Q: When queried, it returns an integer. "
	fnames "exportfilesizey fsy"
		fdesc "Specifies the width of the attribute map to export. C: Default width is 256. Q: When queried, it returns an integer. "
	fnames "exportfiletype eft"
		fdesc "Specifies the image file format. It can be one of the following: "iff", "tiff", "jpeg", "alias", "rgb", "fit" "postScriptEPS", "softimage", "wavefrontRLA", "wavefrontEXP". C: default is tiff. Q: When queried, it returns a string. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "importfileload ifl"
		fdesc "Load the attribute map a specified file. "
	fnames "importfilemode ifm"
		fdesc "Specifies the channel to import. The valid  entries here are: "alpha", "luminance", "red", "green",  "blue", and "rgb" C: Default is "alpha". Q: When queried, it returns a string. "
	fnames "importreassign irm"
		fdesc "Specifies if the multiply atrribute maps are to be reassigned while importing. Only maps previously exported from  within Artisan can be reassigned. C: Default is FALSE. Q: When queried, it returns a  boolean. "
	fnames "importthreshold ift"
		fdesc "Specifies the threshold for the import of  the attribute maps. C: Default is 0.5.  Q: When queried, it returns a float. "
	fnames "lowerradius lr"
		fdesc "Sets the lower size of the brush (only apply on tablet). "
	fnames "mappressure mp"
		fdesc "Sets the tablet pressure mapping when the table  is used. There are four options: "none" - the pressure has no  effect, "opacity" - the pressure is mapped to the opacity,  "radius" - the is mapped to modify the radius of the brush,  "both" - the pressure modifies both the opacity and the radius. C: Default is "none". Q: When queried, it returns a string. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "opacity op"
		fdesc "Sets the brush opacity. C: Default is 1.0. Q: When queried, it returns a float. "
	fnames "outline o"
		fdesc "Specifies if the brush outline should be drawn. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "outwhilepaint owp"
		fdesc "Specifies if the brush outline should be drawn  while painting.  C: Default is FALSE. Q: When queried, it returns a boolean. "
	fnames "paintmode pm"
		fdesc "Specifies the paint mode. There are two  possibilities: "screen" and "tangent". C: Default is "screen". Q: When queried, it returns a string. "
	fnames "profileShapeFile psf"
		fdesc "Passes a name of the image file for the stamp shape profile. "
	fnames "projective prm"
		fdesc "Specifies the projective paint mode. C: Default is 'false'. Q: When queried, it returns a boolean. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "radius r"
		fdesc "Sets the size of the brush. C: Default is 1.0 cm. Q: When queried, it returns a float. "
	fnames "reflection rn"
		fdesc "Specifies the reflection mode. C: Default is 'false'. Q: When queried, it returns a boolean. "
	fnames "reflectionAxis ra"
		fdesc "Specifies the reflection axis. There are three  possibilities: "x", "y" and "z". C: Default is "x". Q: When queried, it returns a string. "
	fnames "selectall sal"
		fdesc "Selects all vertices/egdes/faces/uvs. "
	fnames "selectop st"
		fdesc "Specifies the selection operation  ("select", "unselect", "toggle"). C: Default is "select". Q: When queried, it returns a string. "
	fnames "showactive sa"
		fdesc "Sets on/off the display of the surface isoparms. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "stampProfile stP"
		fdesc "Sets the brush profile of the current stamp.  Currently, the following profiles are supported: "gaussian", "soft", "solid" and "square". C: Default is gaussian. Q: When queried, it returns a string. "
	fnames "toggleall tal"
		fdesc "Toggle all vertices/egdes/faces/uvs.  "
	fnames "unselectall ual"
		fdesc "Unselects all vertices/egdes/faces/uvs. "
	fnames "usepressure up"
		fdesc "Sets the tablet pressure on/off. C: Default is false. Q: When queried, it returns a boolean. "
	rcount "0"
name "artSetPaintCtx"
	desc "This tool allows the user to modify the set membership (add, transfer, remove cvs) on nurbs surfaces using Maya Artisan's interface."
	fcount "39"
	fnames "brushalignment bra"
		fdesc "Specifies the path brush alignemnt. If true,  the brush will align to stroke path, otherwise it will  align to up vector. C: Default is true. Q: When queried, it returns a boolean. "
	fnames "brushfeedback bf"
		fdesc "Specifies if the brush additional feedback should  be drawn. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "clear clr"
		fdesc "Floods all cvs/vertices to the current value. "
	fnames "dragSlider dsl"
		fdesc "Sets the current brush drag state for resizing or  offsetting the brush (like the 'b' and 'm' default hotkeys).  The string argument is one of: "radius", "lowradius",  "opacity", "value" or "none".  C: Default is "none".  "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "expandfilename eef"
		fdesc "If true, it will expand the name of the export file and concatenate it with the surface name. Otherwise it will take the name as it is. C: Default is true.  "
	fnames "exportfilemode efm"
		fdesc "Specifies the export channel.The valid  entries here are: "alpha", "luminance", "rgb", "rgba". C: Default is "luminance/rgb".  Q: When queried, it returns a string. "
	fnames "exportfilesave esf"
		fdesc "Exports the attribute map and saves to a specified file. "
	fnames "exportfilesizex fsx"
		fdesc "Specifies the width of the attribute map to export. C: Default width is 256. Q: When queried, it returns an integer. "
	fnames "exportfilesizey fsy"
		fdesc "Specifies the width of the attribute map to export. C: Default width is 256. Q: When queried, it returns an integer. "
	fnames "exportfiletype eft"
		fdesc "Specifies the image file format. It can be one of the following: "iff", "tiff", "jpeg", "alias", "rgb", "fit" "postScriptEPS", "softimage", "wavefrontRLA", "wavefrontEXP". C: default is tiff. Q: When queried, it returns a string. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "importfileload ifl"
		fdesc "Load the attribute map a specified file. "
	fnames "importfilemode ifm"
		fdesc "Specifies the channel to import. The valid  entries here are: "alpha", "luminance", "red", "green",  "blue", and "rgb" C: Default is "alpha". Q: When queried, it returns a string. "
	fnames "importreassign irm"
		fdesc "Specifies if the multiply atrribute maps are to be reassigned while importing. Only maps previously exported from  within Artisan can be reassigned. C: Default is FALSE. Q: When queried, it returns a  boolean. "
	fnames "lowerradius lr"
		fdesc "Sets the lower size of the brush (only apply on tablet). "
	fnames "mappressure mp"
		fdesc "Sets the tablet pressure mapping when the table  is used. There are four options: "none" - the pressure has no  effect, "opacity" - the pressure is mapped to the opacity,  "radius" - the is mapped to modify the radius of the brush,  "both" - the pressure modifies both the opacity and the radius. C: Default is "none". Q: When queried, it returns a string. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "opacity op"
		fdesc "Sets the brush opacity. C: Default is 1.0. Q: When queried, it returns a float. "
	fnames "outline o"
		fdesc "Specifies if the brush outline should be drawn. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "outwhilepaint owp"
		fdesc "Specifies if the brush outline should be drawn  while painting.  C: Default is FALSE. Q: When queried, it returns a boolean. "
	fnames "paintmode pm"
		fdesc "Specifies the paint mode. There are two  possibilities: "screen" and "tangent". C: Default is "screen". Q: When queried, it returns a string. "
	fnames "profileShapeFile psf"
		fdesc "Passes a name of the image file for the stamp shape profile. "
	fnames "projective prm"
		fdesc "Specifies the projective paint mode. C: Default is 'false'. Q: When queried, it returns a boolean. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "radius r"
		fdesc "Sets the size of the brush. C: Default is 1.0 cm. Q: When queried, it returns a float. "
	fnames "reflection rn"
		fdesc "Specifies the reflection mode. C: Default is 'false'. Q: When queried, it returns a boolean. "
	fnames "reflectionAxis ra"
		fdesc "Specifies the reflection axis. There are three  possibilities: "x", "y" and "z". C: Default is "x". Q: When queried, it returns a string. "
	fnames "setcolorfeedback scf"
		fdesc "Specifies if the color feedback is on or off. C: Default is ON.  Q: When queried, it returns a boolean. "
	fnames "setdisplaycvs dcv"
		fdesc "Specifies if the active cvs are displayed. C: Default is ON. Q: When queried, it returns a boolean. "
	fnames "setopertype sot"
		fdesc "Specifies the setEdit operation  ("add", "transfer", "remove").   C: Default is "add". Q: When queried, it returns a string. "
	fnames "settomodify stm"
		fdesc "Specifies the name of the set to modify. Q: When queried, it returns a string. "
	fnames "showactive sa"
		fdesc "Sets on/off the display of the surface isoparms. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "stampProfile stP"
		fdesc "Sets the brush profile of the current stamp.  Currently, the following profiles are supported: "gaussian", "soft", "solid" and "square". C: Default is gaussian. Q: When queried, it returns a string. "
	fnames "usepressure up"
		fdesc "Sets the tablet pressure on/off. C: Default is false. Q: When queried, it returns a boolean. "
	rcount "0"
name "artUserPaintCtx"
	desc "This command executes a scriptable paint (Maya Artisan). It allows the user to apply mel commands/scripts to modify cvs' attributes for all cvs under the paint brush."
	fcount "62"
	fnames "attrSelected asl"
		fdesc "Returns a name of the currently selected attribute. Q: When queried, it returns a string. "
	fnames "brushalignment bra"
		fdesc "Specifies the path brush alignemnt. If true,  the brush will align to stroke path, otherwise it will  align to up vector. C: Default is true. Q: When queried, it returns a boolean. "
	fnames "brushfeedback bf"
		fdesc "Specifies if the brush additional feedback should  be drawn. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "clamp cl"
		fdesc "Specifies if the weight value should be clamped to  the lower and upper bounds. There are four options here:  "none" - no clamping is performed, "lower" - clamps only to  the lower bound, "upper" - clamps only to the upper bounds,  "both" - clamps to the lower and upper bounds. C: Default is "none".  Q: When queried, it returns a string. "
	fnames "clamplower cll"
		fdesc "Specifies the lower bound for the values. C: Default is 0.0.  Q: When queried, it returns a float. "
	fnames "clampupper clu"
		fdesc "Specifies the upper bound for the values. C: Default is 1.0.  Q: When queried, it returns a float. "
	fnames "clear clr"
		fdesc "Floods all cvs/vertices to the current value. "
	fnames "colorfeedback cf"
		fdesc "Sets on/off the color feedback display. C: Default is FALSE.  Q: When queried, it returns a boolean. "
	fnames "colorrangelower crl"
		fdesc "Specifies the value which maps to black when color feedback mode is on C: Default is 0.0.  Q: When queried, it returns a float. "
	fnames "colorrangeupper cru"
		fdesc "Specifies the value which maps to the maximum color when color feedback mode is on C: Default is 1.0.  Q: When queried, it returns a float. "
	fnames "dataTypeIndex dti"
		fdesc "When the selected paintable attribute is a vectorArray,  it specifies which field to paint on. "
	fnames "disablelighting dl"
		fdesc "If color feedback is on, this flag determines whether lighting is disabled or not for the surfaces that are affected C: Default is FALSE.  Q: When queried, it returns a boolean. "
	fnames "dragSlider dsl"
		fdesc "Sets the current brush drag state for resizing or  offsetting the brush (like the 'b' and 'm' default hotkeys).  The string argument is one of: "radius", "lowradius",  "opacity", "value" or "none".  C: Default is "none".  "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "expandfilename eef"
		fdesc "If true, it will expand the name of the export file and concatenate it with the surface name. Otherwise it will take the name as it is. C: Default is true.  "
	fnames "exportfilemode efm"
		fdesc "Specifies the export channel.The valid  entries here are: "alpha", "luminance", "rgb", "rgba". C: Default is "luminance/rgb".  Q: When queried, it returns a string. "
	fnames "exportfilesave esf"
		fdesc "Exports the attribute map and saves to a specified file. "
	fnames "exportfilesizex fsx"
		fdesc "Specifies the width of the attribute map to export. C: Default width is 256. Q: When queried, it returns an integer. "
	fnames "exportfilesizey fsy"
		fdesc "Specifies the width of the attribute map to export. C: Default width is 256. Q: When queried, it returns an integer. "
	fnames "exportfiletype eft"
		fdesc "Specifies the image file format. It can be one of the following: "iff", "tiff", "jpeg", "alias", "rgb", "fit" "postScriptEPS", "softimage", "wavefrontRLA", "wavefrontEXP". C: default is tiff. Q: When queried, it returns a string. "
	fnames "filterNodes fon"
		fdesc "Sets the node filter.  "
	fnames "finalizeCmd fc"
		fdesc "Specifies the name of the mel script/procedure  which is called at the end of each stroke. Q: When queried, it returns a string. "
	fnames "fullpaths fp"
		fdesc "Specifies whether full path names should be used when surface names are passed to scripts. If false, just the surface name is passed. C: Default is false  Q: When queried, it returns a boolean. "
	fnames "getArrayAttrCommand gac"
		fdesc "Specifies the name of the mel script/procedure which is called once for every surface that is selected for painting.  This procedure returns a string, which is interpreted as a list of names referring to double array attributes on some dependency node. Q: When queried, it returns a string. "
	fnames "getSurfaceCommand gsc"
		fdesc "Specifies the name of the mel script/procedure which is called once for every dependency node on the selection list, whenever Artisan processes the selection list. It returns the name of the surface to paint on. Q: When queried, it returns a string. "
	fnames "getValueCommand gvc"
		fdesc "Specifies the name of the mel script/procedure  which is called every time a value on the surface is needed  by the scriptable paint tool. Q: When queried, it returns a string. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "importfileload ifl"
		fdesc "Load the attribute map a specified file. "
	fnames "importfilemode ifm"
		fdesc "Specifies the channel to import. The valid  entries here are: "alpha", "luminance", "red", "green",  "blue", and "rgb" C: Default is "alpha". Q: When queried, it returns a string. "
	fnames "importreassign irm"
		fdesc "Specifies if the multiply atrribute maps are to be reassigned while importing. Only maps previously exported from  within Artisan can be reassigned. C: Default is FALSE. Q: When queried, it returns a  boolean. "
	fnames "initializeCmd ic"
		fdesc "Specifies the name of the mel script/procedure  which is called in the beginning of each stroke. Q: When queried, it returns a string. "
	fnames "interactiveUpdate iu"
		fdesc "Specifies how often to transfer the painted values into the attribute. TRUE: transfer them "continuously" (many times per stroke) FALSE: transfer them only at the end of a stroke (on mouse  button release) C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "lowerradius lr"
		fdesc "Sets the lower size of the brush (only apply on tablet). "
	fnames "mappressure mp"
		fdesc "Sets the tablet pressure mapping when the table  is used. There are four options: "none" - the pressure has no  effect, "opacity" - the pressure is mapped to the opacity,  "radius" - the is mapped to modify the radius of the brush,  "both" - the pressure modifies both the opacity and the radius. C: Default is "none". Q: When queried, it returns a string. "
	fnames "maxvalue mxv"
		fdesc "Specifies the minimum value for each attribute. C: Default is 1.0.  Q: When queried, it returns a float. "
	fnames "minvalue miv"
		fdesc "Specifies the minimum value for each attribute. C: Default is 0.0.  Q: When queried, it returns a float. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "objattrArray oaa"
		fdesc "An array of all paintable attributes. Each element of  the array is a string with the following information: NodeType.NodeName.AttributeName.MenuType *MenuType: type(level) of the item in the Menu (UI). Q: When queried, it returns a string. "
	fnames "opacity op"
		fdesc "Sets the brush opacity. C: Default is 1.0. Q: When queried, it returns a float. "
	fnames "outline o"
		fdesc "Specifies if the brush outline should be drawn. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "outwhilepaint owp"
		fdesc "Specifies if the brush outline should be drawn  while painting.  C: Default is FALSE. Q: When queried, it returns a boolean. "
	fnames "paintNodeArray pna"
		fdesc "An array of paintable nodes.  Q: When queried, it returns a string. "
	fnames "paintattrselected pas"
		fdesc "An array of selected paintable attributes. Each element of the array is a string with the  following information:  NodeType.NodeName.AttributeName. "
	fnames "paintmode pm"
		fdesc "Specifies the paint mode. There are two  possibilities: "screen" and "tangent". C: Default is "screen". Q: When queried, it returns a string. "
	fnames "profileShapeFile psf"
		fdesc "Passes a name of the image file for the stamp shape profile. "
	fnames "projective prm"
		fdesc "Specifies the projective paint mode. C: Default is 'false'. Q: When queried, it returns a boolean. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "radius r"
		fdesc "Sets the size of the brush. C: Default is 1.0 cm. Q: When queried, it returns a float. "
	fnames "reflection rn"
		fdesc "Specifies the reflection mode. C: Default is 'false'. Q: When queried, it returns a boolean. "
	fnames "reflectionAxis ra"
		fdesc "Specifies the reflection axis. There are three  possibilities: "x", "y" and "z". C: Default is "x". Q: When queried, it returns a string. "
	fnames "selectedattroper sao"
		fdesc "Sets the edit weight operation. Four edit weights  operations are provided : "absolute" - the value of the weight  is replaced by the current one, "additive" - the value of the  weight is added to the current one, "scale" - the value of the  weight is multiplied by the current one, "smooth" - the value  of the weight is divided by the current one. C: Default is "absolute".  Q: When queried, it returns a string. "
	fnames "setValueCommand svc"
		fdesc "Specifies the name of the mel script/procedure  which is called every time a value on the surface is changed. Q: When queried, it returns a string. "
	fnames "showactive sa"
		fdesc "Sets on/off the display of the surface isoparms. C: Default is TRUE. Q: When queried, it returns a boolean. "
	fnames "stampProfile stP"
		fdesc "Sets the brush profile of the current stamp.  Currently, the following profiles are supported: "gaussian", "soft", "solid" and "square". C: Default is gaussian. Q: When queried, it returns a string. "
	fnames "toolCleanupCmd tcc"
		fdesc "Specifies the name of the mel script/procedure  which is called when this tool is exited. Q: When queried, it returns a string. "
	fnames "toolSetupCmd tsc"
		fdesc "Specifies the name of the mel script/procedure  which is called once for every selected surface when an  initial click is received on that surface. Q: When queried, it returns a string. "
	fnames "usepressure up"
		fdesc "Sets the tablet pressure on/off. C: Default is false. Q: When queried, it returns a boolean. "
	fnames "value val"
		fdesc "Specifies the value for each attribute. C: Default is 0.0.  Q: When queried, it returns a float. "
	rcount "0"
name "assignCommand"
	desc "This command allows the user to assign hotkeys and manipulate the internal array of named command objects. Each object in the array has an 1-based index which is used for referencing. Under expected usage you should not need to use this command directly as the Hotkey Editor may be used to assign hotkeys."
	fcount "21"
	fnames "addDivider ad"
		fdesc "Appends an "annotated divider" item to the end of the list of  commands. "
	fnames "altModifier alt"
		fdesc "This flag specifies if an alt modifier is used for the key. "
	fnames "annotation ann"
		fdesc "The string is the english name describing the command. "
	fnames "command c"
		fdesc "This is the command that is executed when this object is  mapped to a key or menuItem. "
	fnames "commandModifier cmd"
		fdesc "This flag specifies if a command modifier is used for the key. This is only available on systems which support a separate command key. "
	fnames "ctrlModifier ctl"
		fdesc "This flag specifies if a ctrl modifier is used for the key. "
	fnames "data1 da1"
		fdesc "No Description"
	fnames "data2 da2"
		fdesc "No Description"
	fnames "data3 da3"
		fdesc "These optional, user-defined data strings may be attached to  the nameCommand objects. "
	fnames "delete d"
		fdesc "This tells the Manager to delete the object at position index. "
	fnames "dividerString ds"
		fdesc "If the passed index corresponds to a "divider" item, then the  divider's annotation is returned.  Otherwise, a null string is  returned. "
	fnames "factorySettings fs"
		fdesc "This flag sets the manager back to factory settings. "
	fnames "index i"
		fdesc "The index of the object to operate on. The index value  ranges from 1 to the number of name command objects. "
	fnames "keyString k"
		fdesc "This specifies a key to assign a command to in edit mode.  In query mode this flag returns the key string, modifiers and  indicates if the command is mapped to keyUp or keyDown. "
	fnames "keyUp kup"
		fdesc "This flag specifies if the command is executed on keyUp  or keyDown. "
	fnames "name n"
		fdesc "The name of the command object. "
	fnames "numDividersPreceding ndp"
		fdesc "If the index of a namedCommand object  C  is passed in, then this flag returns the number of "divider" items preceding C  when the namedCommands are sorted by category. "
	fnames "numElements num"
		fdesc "This command returns the number of namedCommands in the system. This flag doesn't require the index to be specified. "
	fnames "optionModifier opt"
		fdesc "This flag specifies if an option modifier is used for the key. "
	fnames "sortByKey sbk"
		fdesc "This key tells the manager to sort by key or by order of  creation. "
	fnames "sourceUserCommands suc"
		fdesc "This command sources the user named command file. "
	rcount "0"
name "assignInputDevice"
	desc "This command associates a command string (i.e. a mel script) with the input device. When the device moves or a button on the device is pressed, the command string is executed as if you typed it into the window. If the command string contains the names of buttons or axes of the device, the current value of these buttons/axes are substituted in. Buttons are reported as booleans and axes as doubles. This command is most useful for associating buttons on a device with commands. For using a device to capture continous movements it is much more efficient to attach the.... Refer to full documentation"
	fcount "5"
	fnames "clutch c"
		fdesc "specify a clutch button.  This button must be down for the command string to be executed. If no clutch is specified the command string is executed everytime the device state changes "
	fnames "continuous ct"
		fdesc "if this flag is set the command string is continously (once for everytime the device changes state).  By default if a clutch button is specified the command string is only executed once when the button is pressed. "
	fnames "device d"
		fdesc "specify which device to assign the command string. "
	fnames "immediate im"
		fdesc "Immediately executes the command, without using the queue. "
	fnames "multiple m"
		fdesc "if this flag is set the other command strings associated with this device are not deleted. By default, when a new command string is attached to the device, all other command strings are deleted. "
	rcount "13"
		rname "getModifiers"
		rname "recordAttr"
		rname "attachDeviceAttr"
		rname "listDeviceAttachments"
		rname "setAttrMapping"
		rname "detachDeviceAttr"
		rname "listInputDeviceAxes"
		rname "setInputDeviceMapping"
		rname "devicePanel"
		rname "listInputDeviceButtons"
		rname "unassignInputDevice"
		rname "getInputDeviceRange"
		rname "listInputDevices"
name "attachCurve"
	desc "This attach command is used to attach curves. Once the curves are attached, there will be multiple knots at the joined point(s). These can be kept or removed if the user wishes. The end of the first curve is attached to the start of the second curve. Note: if the command is done with Keep Original off there will be an extra curve in the model (the second curve). The command does not delete it. The first curve is replaced by the attached curve."
	fcount "15"
	fnames "blendBias bb"
		fdesc "Skew the result toward the first or the second curve depending on the blend factory being smaller or larger than 0.5. Default:  0.5 "
	fnames "blendKnotInsertion bki"
		fdesc "If set to true, insert a knot in one of the original curves (relative position given by the parameter attribute below) in order to produce a slightly different effect. Default:  false "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "keepMultipleKnots kmk"
		fdesc "If true, keep multiple knots at the join parameter. Otherwise remove them. Default:  true "
	fnames "method m"
		fdesc "Attach method (connect-0, blend-1) Default:  0 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "parameter p"
		fdesc "The parameter value for the positioning of the newly inserted knot. Default:  0.1 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "reverse1 rv1"
		fdesc "If true, reverse the first input curve before doing attach. Otherwise, do nothing to the first input curve before attaching. NOTE: setting this attribute to random values will cause unpredictable results and is not supported. Default:  false "
	fnames "reverse2 rv2"
		fdesc "If true, reverse the second input curve before doing attach. Otherwise, do nothing to the second input curve before attaching. NOTE: setting this attribute to random values will cause unpredictable results and is not supported. Default:  false "
	rcount "1"
		rname "alignCurve"
name "attachDeviceAttr"
	desc "This command associates a device/axis pair with a node/attribute pair. When the device axis moves, the value of the attribute is set to the value of the axis. This value can be scaled and offset using the setAttrScale command."
	fcount "8"
	fnames "attribute at"
		fdesc "specify the attribute to attach to "
	fnames "axis ax"
		fdesc "specify the axis to attach from. "
	fnames "camera cam"
		fdesc "This flag attaches the device/axis to the current camera. The mapping between device axes and camera controls is uses a heuristic based on the device descripton. The interaction is a copy of the mouse camera navigation controls. "
	fnames "cameraRotate cr"
		fdesc "This flag attaches the device/axis to the current cameras rotation controls. "
	fnames "cameraTranslate ct"
		fdesc "This flag attaches the device/axis to the current cameras translate controls. "
	fnames "clutch c"
		fdesc "specify a clutch button.  This button must be down for the command string to be executed. If no clutch is specified the command string is executed everytime the device state changes "
	fnames "device d"
		fdesc "specify which device to assign the command string. "
	fnames "selection sl"
		fdesc "This flag attaches to the nodes in the selection list. This is different from the default arguments of the command since changing the selection will change the attachments. "
	rcount "13"
		rname "assignInputDevice"
		rname "getModifiers"
		rname "recordAttr"
		rname "listDeviceAttachments"
		rname "setAttrMapping"
		rname "detachDeviceAttr"
		rname "listInputDeviceAxes"
		rname "setInputDeviceMapping"
		rname "devicePanel"
		rname "listInputDeviceButtons"
		rname "unassignInputDevice"
		rname "getInputDeviceRange"
		rname "listInputDevices"
name "attachSurface"
	desc "This attach command is used to attach surfaces. Once the surfaces are attached, there will be multiple knots at the joined point(s). These can be kept or removed if the user wishes. The end of the first surface is attached to the start of the second surface in the specified direction. Note: if the command is done with Keep Original off there will be an extra surface in the model (the second surface). The command does not delete it. The first surface is replaced by the attached surface."
	fcount "19"
	fnames "blendBias bb"
		fdesc "Skew the result toward the first or the second curve depending on the blend factory being smaller or larger than 0.5. Default:  0.5 "
	fnames "blendKnotInsertion bki"
		fdesc "If set to true, insert a knot in one of the original curves (relative position given by the parameter attribute below) in order to produce a slightly different effect. Default:  false "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "directionU du"
		fdesc "If true attach in U direction of surface and V direction otherwise. Default:  true "
	fnames "keepMultipleKnots kmk"
		fdesc "If true, keep multiple knots at the join parameter. Otherwise remove them. Default:  true "
	fnames "method m"
		fdesc "Attach method (connect-0, blend-1) Default:  0 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "parameter p"
		fdesc "The parameter value for the positioning of the newly inserted knot. Default:  0.1 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "reverse1 rv1"
		fdesc "If true, reverse the direction (specified by directionU) of the first input surface before doing attach. Otherwise, do nothing to the first input surface before attaching. NOTE: setting this attribute to random values will cause unpredictable results and is not supported. Default:  false "
	fnames "reverse2 rv2"
		fdesc "If true, reverse the direction (specified by directionU) of the second input surface before doing attach. Otherwise, do nothing to the second input surface before attaching. NOTE: setting this attribute to random values will cause unpredictable results and is not supported. Default:  false "
	fnames "swap1 sw1"
		fdesc "If true, swap the UV directions of the first input surface before doing attach. Otherwise, do nothing to the first input surface before attaching. NOTE: setting this attribute to random values will cause unpredictable results and is not supported. Default:  false "
	fnames "swap2 sw2"
		fdesc "If true, swap the UV directions of the second input surface before doing attach. Otherwise, do nothing to the second input surface before attaching. NOTE: setting this attribute to random values will cause unpredictable results and is not supported. Default:  false "
	fnames "twist tw"
		fdesc "If true, reverse the second surface in the opposite direction (specified by directionU) before doing attach. This will avoid twists in the attached surfaces. Otherwise, do nothing to the second input surface before attaching. NOTE: setting this attribute to random values will cause unpredictable results and is not supported. Default:  false "
	rcount "0"
name "attrColorSliderGrp"
	desc "All of the group commands position their individual controls in columns starting at column 1. The layout of each control (ie. column) can be customized using the -cw/columnWidth , -co/columnOffset , -cat/columnAttach , -cal/columnAlign , and -adj/adjustableColumn flags. By default, columns are left aligned with no offset and are 100 pixels wide. Only one column in any group can be adjustable. Create a color slider group consisting of a label, a color canvas, a slider and a button. Clicking on the canvas will bring up the color editor. If the button is visible, it will allow you to map a.... Refer to full documentation"
	fcount "56"
	fnames "adjustableColumn adj"
		fdesc "Specifies which column has an adjustable size that changes with the sizing of the layout.  The column value is a 1-based index.  You may also specify 0 to turn off the previous adjustable column. "
	fnames "adjustableColumn2 ad2"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly two columns.  "
	fnames "adjustableColumn3 ad3"
		fdesc "Specifies that the column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly three columns.  "
	fnames "adjustableColumn4 ad4"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly four columns.  "
	fnames "adjustableColumn5 ad5"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly five columns.  "
	fnames "adjustableColumn6 ad6"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly six columns.  "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "attrNavDecision and"
		fdesc "The first argument is the name of an attribute.   The button will be attached to the attribute so the button  can be kept in synch with the attribute.  The second argument is the navigatorDecisionString that can guide the  behaviour that the navigator implements. "
	fnames "attribute at"
		fdesc "The name of a unique attribute of type 3double.  This newly created field will be attached to the attribute, so that modifications to one will change the other. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "columnAlign cal"
		fdesc "Arguments are : column number, alignment type. Possible alignments are: left | right | center.  Specifies alignment type for the specified column. "
	fnames "columnAlign2 cl2"
		fdesc "Sets the text alignment of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign3 cl3"
		fdesc "Sets the text alignment for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign4 cl4"
		fdesc "Sets the text alignment for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign5 cl5"
		fdesc "Sets the text alignment for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign6 cl6"
		fdesc "Sets the text alignment for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "center". "
	fnames "columnAttach cat"
		fdesc "Arguments are : column number, attachment type, and offset. Possible attachments are: left | right | both.  Specifies column attachment types and offets. "
	fnames "columnAttach2 ct2"
		fdesc "Sets the attachment type of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach3 ct3"
		fdesc "Sets the attachment type for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach4 ct4"
		fdesc "Sets the attachment type for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach5 ct5"
		fdesc "Sets the attachment type for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach6 ct6"
		fdesc "Sets the attachment type for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "both". "
	fnames "columnOffset2 co2"
		fdesc "This flag is used in conjunction with the -columnAttach2 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the two columns.  The offsets applied are based on the attachments  specified with the -columnAttach2 flag.  Ignored if there is not exactly two columns.  "
	fnames "columnOffset3 co3"
		fdesc "This flag is used in conjunction with the -columnAttach3 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the three columns.  The offsets applied are based on the attachments  specified with the -columnAttach3 flag.  Ignored if there is not exactly three columns.  "
	fnames "columnOffset4 co4"
		fdesc "This flag is used in conjunction with the -columnAttach4 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the four columns.  The offsets applied are based on the attachments  specified with the -columnAttach4 flag.  Ignored if there is not exactly four columns.  "
	fnames "columnOffset5 co5"
		fdesc "This flag is used in conjunction with the -columnAttach5 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the five columns.  The offsets applied are based on the attachments  specified with the -columnAttach5 flag.  Ignored if there is not exactly five columns.  "
	fnames "columnOffset6 co6"
		fdesc "This flag is used in conjunction with the -columnAttach6 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the six columns.  The offsets applied are based on the attachments  specified with the -columnAttach6 flag.  Ignored if there is not exactly six columns.  "
	fnames "columnWidth cw"
		fdesc "Arguments are : column number, column width. Sets the width of the specified column where the first parameter specifies the column (1 based index) and the second parameter specifies the width. "
	fnames "columnWidth1 cw1"
		fdesc "Sets the width of the first column.  Ignored if there is not  exactly one column. "
	fnames "columnWidth2 cw2"
		fdesc "Sets the column widths of both columns.  Ignored if there is not exactly two columns. "
	fnames "columnWidth3 cw3"
		fdesc "Sets the column widths for all 3 columns.  Ignored if there is not exactly 3 columns. "
	fnames "columnWidth4 cw4"
		fdesc "Sets the column widths for all 4 columns.  Ignored if there is not exactly 4 columns. "
	fnames "columnWidth5 cw5"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "columnWidth6 cw6"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "hsvValue hsv"
		fdesc "Specifies the color in hsv style. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "By default, the label of this field will be the name of the attribute.  This flag can be used to override that name with whatever the user wants. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rgbValue rgb"
		fdesc "Specifies the color in rgb style. "
	fnames "rowAttach rat"
		fdesc "Arguments are : attachment type, offset. Possible attachments are: top | bottom | both.  Specifies attachment types  and offsets for the entire row.   "
	fnames "showButton sb"
		fdesc "Control the display of the texture link button. True by default (show it). "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "attrCompatibility"
	desc "This command is used to handle compatibility issues between file format versions by providing a mechanism to describe differences between two versions. Only plugin writers should have the potential need to use this command. The first optional command argument argument is a node name and the second optional command argument is an attribute name. Warning: Only use this command to describe changes in names or attributes of nodes that you have written as plugins. Do not use this command to change information about builtin dependency graph nodes."
	fcount "9"
	fnames "addAttr a"
		fdesc "Add the given attribute to the named node. "
	fnames "clear clr"
		fdesc "Clear out the compatibility table. This is only used internally for debugging purposes. "
	fnames "dumpTable dmp"
		fdesc "Dump the current contents of the compatibility table. This is only used internally for debugging purposes. "
	fnames "enable e"
		fdesc "Enable or disable the compatibility table. This is only used internally for debugging purposes. "
	fnames "nodeRename nr"
		fdesc "Replace all uses of the node type 'nodeName' with given string. "
	fnames "removeAttr rm"
		fdesc "Remove the given attribute from the named node. "
	fnames "renameAttr r"
		fdesc "Rename the given attribute name of the given node with the given string. "
	fnames "type typ"
		fdesc "Change the type of the given attribute to the given type. "
	fnames "version v"
		fdesc "Set the version target for subsequent commands to the given string.  "
	rcount "0"
name "attrControlGrp"
	desc "AttrControlGrp is NOT undoable , queryable , and editable . This command creates a control of the type most appropriate for the specified attribute, and associates the control with the attribute. Any change to the control will cause a change in the attribute value, and any change to the attribute value will be reflected in the control. Not all attribute types are supported."
	fcount "5"
	fnames "attribute a"
		fdesc "Sets or queries the attribute the control represents. The name of the attribute must be fully specified, including the name of the node. Some types of attributes are not supported, but most commonly used attribute types are. "
	fnames "changeCommand cc"
		fdesc "Sets or queries the change command of the control group. The change command will be executed when the control is used to change the value of the attribute. "
	fnames "enable en"
		fdesc "Sets or queries the enable state of the control group. The control is dimmed if the enable state is set to false. "
	fnames "hideMapButton hmb"
		fdesc "Force the map button to remain hidden for this control. "
	fnames "label l"
		fdesc "Sets or queries the label of the control group. "
	rcount "0"
name "attrEnumOptionMenu"
	desc "This command creates an enumerated attribute control. It is usually an option menu."
	fcount "23"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "attribute at"
		fdesc "Attribute that the menu controls. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "The command string is executed when the value of the  option menu changes. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "enumeratedItem ei"
		fdesc "Enumerated item and the corresponding string.  If this flag is  not supplied when the control is created, then the command will try to read the values from the attribute. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "The label text. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "attrEnumOptionMenuGrp"
	desc "All of the group commands position their individual controls in columns starting at column 1. The layout of each control (ie. column) can be customized using the -cw/columnWidth , -co/columnOffset , -cat/columnAttach , -cal/columnAlign , and -adj/adjustableColumn flags. By default, columns are left aligned with no offset and are 100 pixels wide. Only one column in any group can be adjustable. This command creates a pre-packaged collection of label and option menu button associated with an attribute of a node. The attribute should be an integer, and this control allows a UI association of strings to the integers of the.... Refer to full documentation"
	fcount "53"
	fnames "adjustableColumn adj"
		fdesc "Specifies which column has an adjustable size that changes with the sizing of the layout.  The column value is a 1-based index.  You may also specify 0 to turn off the previous adjustable column. "
	fnames "adjustableColumn2 ad2"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly two columns.  "
	fnames "adjustableColumn3 ad3"
		fdesc "Specifies that the column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly three columns.  "
	fnames "adjustableColumn4 ad4"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly four columns.  "
	fnames "adjustableColumn5 ad5"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly five columns.  "
	fnames "adjustableColumn6 ad6"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly six columns.  "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "attribute at"
		fdesc "The name of an attribute.  The button will be attached to the attribute so the button can be kept in synch with the attribute.   "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "columnAlign cal"
		fdesc "Arguments are : column number, alignment type. Possible alignments are: left | right | center.  Specifies alignment type for the specified column. "
	fnames "columnAlign2 cl2"
		fdesc "Sets the text alignment of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign3 cl3"
		fdesc "Sets the text alignment for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign4 cl4"
		fdesc "Sets the text alignment for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign5 cl5"
		fdesc "Sets the text alignment for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign6 cl6"
		fdesc "Sets the text alignment for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "center". "
	fnames "columnAttach cat"
		fdesc "Arguments are : column number, attachment type, and offset. Possible attachments are: left | right | both.  Specifies column attachment types and offets. "
	fnames "columnAttach2 ct2"
		fdesc "Sets the attachment type of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach3 ct3"
		fdesc "Sets the attachment type for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach4 ct4"
		fdesc "Sets the attachment type for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach5 ct5"
		fdesc "Sets the attachment type for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach6 ct6"
		fdesc "Sets the attachment type for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "both". "
	fnames "columnOffset2 co2"
		fdesc "This flag is used in conjunction with the -columnAttach2 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the two columns.  The offsets applied are based on the attachments  specified with the -columnAttach2 flag.  Ignored if there is not exactly two columns.  "
	fnames "columnOffset3 co3"
		fdesc "This flag is used in conjunction with the -columnAttach3 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the three columns.  The offsets applied are based on the attachments  specified with the -columnAttach3 flag.  Ignored if there is not exactly three columns.  "
	fnames "columnOffset4 co4"
		fdesc "This flag is used in conjunction with the -columnAttach4 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the four columns.  The offsets applied are based on the attachments  specified with the -columnAttach4 flag.  Ignored if there is not exactly four columns.  "
	fnames "columnOffset5 co5"
		fdesc "This flag is used in conjunction with the -columnAttach5 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the five columns.  The offsets applied are based on the attachments  specified with the -columnAttach5 flag.  Ignored if there is not exactly five columns.  "
	fnames "columnOffset6 co6"
		fdesc "This flag is used in conjunction with the -columnAttach6 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the six columns.  The offsets applied are based on the attachments  specified with the -columnAttach6 flag.  Ignored if there is not exactly six columns.  "
	fnames "columnWidth cw"
		fdesc "Arguments are : column number, column width. Sets the width of the specified column where the first parameter specifies the column (1 based index) and the second parameter specifies the width. "
	fnames "columnWidth1 cw1"
		fdesc "Sets the width of the first column.  Ignored if there is not  exactly one column. "
	fnames "columnWidth2 cw2"
		fdesc "Sets the column widths of both columns.  Ignored if there is not exactly two columns. "
	fnames "columnWidth3 cw3"
		fdesc "Sets the column widths for all 3 columns.  Ignored if there is not exactly 3 columns. "
	fnames "columnWidth4 cw4"
		fdesc "Sets the column widths for all 4 columns.  Ignored if there is not exactly 4 columns. "
	fnames "columnWidth5 cw5"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "columnWidth6 cw6"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "enumeratedItem ei"
		fdesc "Enumerated item and the corresponding string. If this flag is  not supplied when the control is created, then the command will try to read the values from the attribute. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "Text for the control. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rowAttach rat"
		fdesc "Arguments are : attachment type, offset. Possible attachments are: top | bottom | both.  Specifies attachment types  and offsets for the entire row.   "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "attrFieldGrp"
	desc "All of the group commands position their individual controls in columns starting at column 1. The layout of each control (ie. column) can be customized using the -cw/columnWidth , -co/columnOffset , -cat/columnAttach , -cal/columnAlign , and -adj/adjustableColumn flags. By default, columns are left aligned with no offset and are 100 pixels wide. Only one column in any group can be adjustable. This command creates a pre-packaged collection of label text, plus two or three float fields. These fields will be attached to the specified vector attribute, so that changes in either will be reflected in the other. The fields created.... Refer to full documentation"
	fcount "59"
	fnames "adjustableColumn adj"
		fdesc "Specifies which column has an adjustable size that changes with the sizing of the layout.  The column value is a 1-based index.  You may also specify 0 to turn off the previous adjustable column. "
	fnames "adjustableColumn2 ad2"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly two columns.  "
	fnames "adjustableColumn3 ad3"
		fdesc "Specifies that the column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly three columns.  "
	fnames "adjustableColumn4 ad4"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly four columns.  "
	fnames "adjustableColumn5 ad5"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly five columns.  "
	fnames "adjustableColumn6 ad6"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly six columns.  "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "attribute at"
		fdesc "The name of a unique attribute of type vector.  This newly created field will be attached to the attribute, so that modifications to one will change the other.  A "vector" attribute is any compound attribute whose children consist of two or three double-valued attributes. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "The command string is executed when the value of any of the floatFields change. "
	fnames "columnAlign cal"
		fdesc "Arguments are : column number, alignment type. Possible alignments are: left | right | center.  Specifies alignment type for the specified column. "
	fnames "columnAlign2 cl2"
		fdesc "Sets the text alignment of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign3 cl3"
		fdesc "Sets the text alignment for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign4 cl4"
		fdesc "Sets the text alignment for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign5 cl5"
		fdesc "Sets the text alignment for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign6 cl6"
		fdesc "Sets the text alignment for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "center". "
	fnames "columnAttach cat"
		fdesc "Arguments are : column number, attachment type, and offset. Possible attachments are: left | right | both.  Specifies column attachment types and offets. "
	fnames "columnAttach2 ct2"
		fdesc "Sets the attachment type of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach3 ct3"
		fdesc "Sets the attachment type for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach4 ct4"
		fdesc "Sets the attachment type for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach5 ct5"
		fdesc "Sets the attachment type for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach6 ct6"
		fdesc "Sets the attachment type for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "both". "
	fnames "columnOffset2 co2"
		fdesc "This flag is used in conjunction with the -columnAttach2 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the two columns.  The offsets applied are based on the attachments  specified with the -columnAttach2 flag.  Ignored if there is not exactly two columns.  "
	fnames "columnOffset3 co3"
		fdesc "This flag is used in conjunction with the -columnAttach3 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the three columns.  The offsets applied are based on the attachments  specified with the -columnAttach3 flag.  Ignored if there is not exactly three columns.  "
	fnames "columnOffset4 co4"
		fdesc "This flag is used in conjunction with the -columnAttach4 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the four columns.  The offsets applied are based on the attachments  specified with the -columnAttach4 flag.  Ignored if there is not exactly four columns.  "
	fnames "columnOffset5 co5"
		fdesc "This flag is used in conjunction with the -columnAttach5 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the five columns.  The offsets applied are based on the attachments  specified with the -columnAttach5 flag.  Ignored if there is not exactly five columns.  "
	fnames "columnOffset6 co6"
		fdesc "This flag is used in conjunction with the -columnAttach6 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the six columns.  The offsets applied are based on the attachments  specified with the -columnAttach6 flag.  Ignored if there is not exactly six columns.  "
	fnames "columnWidth cw"
		fdesc "Arguments are : column number, column width. Sets the width of the specified column where the first parameter specifies the column (1 based index) and the second parameter specifies the width. "
	fnames "columnWidth1 cw1"
		fdesc "Sets the width of the first column.  Ignored if there is not  exactly one column. "
	fnames "columnWidth2 cw2"
		fdesc "Sets the column widths of both columns.  Ignored if there is not exactly two columns. "
	fnames "columnWidth3 cw3"
		fdesc "Sets the column widths for all 3 columns.  Ignored if there is not exactly 3 columns. "
	fnames "columnWidth4 cw4"
		fdesc "Sets the column widths for all 4 columns.  Ignored if there is not exactly 4 columns. "
	fnames "columnWidth5 cw5"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "columnWidth6 cw6"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "extraLabel el"
		fdesc "set an optional string that will be positioned to the right of all the fields. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "By default, the label of this field will be the name of the attribute.  This flag can be used to override that name with whatever the user wants. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "maxValue max"
		fdesc "Sets the maximum value for all fields. "
	fnames "minValue min"
		fdesc "Sets the minimum value for all fields. "
	fnames "numberOfFields nf"
		fdesc "sets the number of fields.  Only allowed values are 2 or 3.  If not specified, defaults to 3.  NOTE: if the -at flag is used when this widget is created, the number of children in the attribute will determine the number of fields.  Also note:  after creation, the number of fields cannot be changed with the -e flag. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "precision pre"
		fdesc "Sets the precision for all fields "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rowAttach rat"
		fdesc "Arguments are : attachment type, offset. Possible attachments are: top | bottom | both.  Specifies attachment types  and offsets for the entire row.   "
	fnames "step s"
		fdesc "Sets the increment for all fields "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "attrFieldSliderGrp"
	desc "All of the group commands position their individual controls in columns starting at column 1. The layout of each control (ie. column) can be customized using the -cw/columnWidth , -co/columnOffset , -cat/columnAttach , -cal/columnAlign , and -adj/adjustableColumn flags. By default, columns are left aligned with no offset and are 100 pixels wide. Only one column in any group can be adjustable. This command creates a pre-packaged collection of label text, float field and float slider (for values with a min or max specified) The group also supports the notion of a larger secondary range of possible field values. If an.... Refer to full documentation"
	fcount "64"
	fnames "adjustableColumn adj"
		fdesc "Specifies which column has an adjustable size that changes with the sizing of the layout.  The column value is a 1-based index.  You may also specify 0 to turn off the previous adjustable column. "
	fnames "adjustableColumn2 ad2"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly two columns.  "
	fnames "adjustableColumn3 ad3"
		fdesc "Specifies that the column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly three columns.  "
	fnames "adjustableColumn4 ad4"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly four columns.  "
	fnames "adjustableColumn5 ad5"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly five columns.  "
	fnames "adjustableColumn6 ad6"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly six columns.  "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "attribute at"
		fdesc "The name of a unique attribute of type double or int. This newly created field will be attached to the attribute, so that modifications to one will change the other. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "The command string is executed when the value of the slider or floatField changes.  It will be executed only once after a drag of the slider. "
	fnames "columnAlign cal"
		fdesc "Arguments are : column number, alignment type. Possible alignments are: left | right | center.  Specifies alignment type for the specified column. "
	fnames "columnAlign2 cl2"
		fdesc "Sets the text alignment of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign3 cl3"
		fdesc "Sets the text alignment for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign4 cl4"
		fdesc "Sets the text alignment for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign5 cl5"
		fdesc "Sets the text alignment for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign6 cl6"
		fdesc "Sets the text alignment for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "center". "
	fnames "columnAttach cat"
		fdesc "Arguments are : column number, attachment type, and offset. Possible attachments are: left | right | both.  Specifies column attachment types and offets. "
	fnames "columnAttach2 ct2"
		fdesc "Sets the attachment type of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach3 ct3"
		fdesc "Sets the attachment type for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach4 ct4"
		fdesc "Sets the attachment type for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach5 ct5"
		fdesc "Sets the attachment type for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach6 ct6"
		fdesc "Sets the attachment type for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "both". "
	fnames "columnOffset2 co2"
		fdesc "This flag is used in conjunction with the -columnAttach2 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the two columns.  The offsets applied are based on the attachments  specified with the -columnAttach2 flag.  Ignored if there is not exactly two columns.  "
	fnames "columnOffset3 co3"
		fdesc "This flag is used in conjunction with the -columnAttach3 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the three columns.  The offsets applied are based on the attachments  specified with the -columnAttach3 flag.  Ignored if there is not exactly three columns.  "
	fnames "columnOffset4 co4"
		fdesc "This flag is used in conjunction with the -columnAttach4 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the four columns.  The offsets applied are based on the attachments  specified with the -columnAttach4 flag.  Ignored if there is not exactly four columns.  "
	fnames "columnOffset5 co5"
		fdesc "This flag is used in conjunction with the -columnAttach5 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the five columns.  The offsets applied are based on the attachments  specified with the -columnAttach5 flag.  Ignored if there is not exactly five columns.  "
	fnames "columnOffset6 co6"
		fdesc "This flag is used in conjunction with the -columnAttach6 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the six columns.  The offsets applied are based on the attachments  specified with the -columnAttach6 flag.  Ignored if there is not exactly six columns.  "
	fnames "columnWidth cw"
		fdesc "Arguments are : column number, column width. Sets the width of the specified column where the first parameter specifies the column (1 based index) and the second parameter specifies the width. "
	fnames "columnWidth1 cw1"
		fdesc "Sets the width of the first column.  Ignored if there is not  exactly one column. "
	fnames "columnWidth2 cw2"
		fdesc "Sets the column widths of both columns.  Ignored if there is not exactly two columns. "
	fnames "columnWidth3 cw3"
		fdesc "Sets the column widths for all 3 columns.  Ignored if there is not exactly 3 columns. "
	fnames "columnWidth4 cw4"
		fdesc "Sets the column widths for all 4 columns.  Ignored if there is not exactly 4 columns. "
	fnames "columnWidth5 cw5"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "columnWidth6 cw6"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "fieldMaxValue fmx"
		fdesc "Set the maximum value for the field.  This flag allows you to specify a maximum bound for the field higher than that of the slider.   (See note above about max and min values.) "
	fnames "fieldMinValue fmn"
		fdesc "Set the minimum value for the field.  This flag allows you to specify a minimum bound for the field lower than that of the slider.  (See note above about max and min values.) "
	fnames "fieldStep fs"
		fdesc "Sets the increment for the float field. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "hideMapButton hmb"
		fdesc "Force the map button to remain hidden for this control. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "By default, the label of this field will be the name of the attribute.  This flag can be used to override that name with whatever string you want. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "maxValue max"
		fdesc "Sets the maximum value for both the slider and the field. (See note above about min and max values) "
	fnames "minValue min"
		fdesc "Sets the minimum value for both the slider and the field. (by default max and min are set according to what is in the attribute, if anything.  If no max and min are specified, or if only one of the two are specified, then no slider is created.) "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "precision pre"
		fdesc "Sets the number of digits to the right of the decimal. (If attached to an int attribute, this is automatically set to 0 and cannot be overridden.) "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rowAttach rat"
		fdesc "Arguments are : attachment type, offset. Possible attachments are: top | bottom | both.  Specifies attachment types  and offsets for the entire row.   "
	fnames "sliderMaxValue smx"
		fdesc "Set the maximum value for the slider.  The slider max will be clipped to the field max. "
	fnames "sliderMinValue smn"
		fdesc "Set the minimum value for the slider.  The slider min will be clipped to the field min. "
	fnames "sliderStep ss"
		fdesc "On Irix and Linux the slider step value represents the  amount the value will increase or decrease when you click either side of the slider. "
	fnames "step s"
		fdesc "Sets the increment for both the slider and float field. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "attrNavigationControlGrp"
	desc "All of the group commands position their individual controls in columns starting at column 1. The layout of each control (ie. column) can be customized using the -cw/columnWidth , -co/columnOffset , -cat/columnAttach , -cal/columnAlign , and -adj/adjustableColumn flags. By default, columns are left aligned with no offset and are 100 pixels wide. Only one column in any group can be adjustable. This command creates a pre-packaged label navigation button. The group is used to help the user manage connections to a particular attribute. When creating the control you have the opportunity to attach scripts to the control that are executed.... Refer to full documentation"
	fcount "64"
	fnames "adjustableColumn adj"
		fdesc "Specifies which column has an adjustable size that changes with the sizing of the layout.  The column value is a 1-based index.  You may also specify 0 to turn off the previous adjustable column. "
	fnames "adjustableColumn2 ad2"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly two columns.  "
	fnames "adjustableColumn3 ad3"
		fdesc "Specifies that the column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly three columns.  "
	fnames "adjustableColumn4 ad4"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly four columns.  "
	fnames "adjustableColumn5 ad5"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly five columns.  "
	fnames "adjustableColumn6 ad6"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly six columns.  "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "attrNavDecision and"
		fdesc "The first argument is the name of an attribute.   The button will be attached to the attribute so the button  can be kept in synch with the attribute.  The second argument is the navigatorDecisionString that can guide the  behaviour that the navigator implements. "
	fnames "attribute at"
		fdesc "The name of an attribute.  The button will be attached to the attribute so the button can be kept in synch with the attribute.   "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "columnAlign cal"
		fdesc "Arguments are : column number, alignment type. Possible alignments are: left | right | center.  Specifies alignment type for the specified column. "
	fnames "columnAlign2 cl2"
		fdesc "Sets the text alignment of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign3 cl3"
		fdesc "Sets the text alignment for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign4 cl4"
		fdesc "Sets the text alignment for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign5 cl5"
		fdesc "Sets the text alignment for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign6 cl6"
		fdesc "Sets the text alignment for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "center". "
	fnames "columnAttach cat"
		fdesc "Arguments are : column number, attachment type, and offset. Possible attachments are: left | right | both.  Specifies column attachment types and offets. "
	fnames "columnAttach2 ct2"
		fdesc "Sets the attachment type of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach3 ct3"
		fdesc "Sets the attachment type for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach4 ct4"
		fdesc "Sets the attachment type for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach5 ct5"
		fdesc "Sets the attachment type for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach6 ct6"
		fdesc "Sets the attachment type for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "both". "
	fnames "columnOffset2 co2"
		fdesc "This flag is used in conjunction with the -columnAttach2 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the two columns.  The offsets applied are based on the attachments  specified with the -columnAttach2 flag.  Ignored if there is not exactly two columns.  "
	fnames "columnOffset3 co3"
		fdesc "This flag is used in conjunction with the -columnAttach3 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the three columns.  The offsets applied are based on the attachments  specified with the -columnAttach3 flag.  Ignored if there is not exactly three columns.  "
	fnames "columnOffset4 co4"
		fdesc "This flag is used in conjunction with the -columnAttach4 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the four columns.  The offsets applied are based on the attachments  specified with the -columnAttach4 flag.  Ignored if there is not exactly four columns.  "
	fnames "columnOffset5 co5"
		fdesc "This flag is used in conjunction with the -columnAttach5 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the five columns.  The offsets applied are based on the attachments  specified with the -columnAttach5 flag.  Ignored if there is not exactly five columns.  "
	fnames "columnOffset6 co6"
		fdesc "This flag is used in conjunction with the -columnAttach6 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the six columns.  The offsets applied are based on the attachments  specified with the -columnAttach6 flag.  Ignored if there is not exactly six columns.  "
	fnames "columnWidth cw"
		fdesc "Arguments are : column number, column width. Sets the width of the specified column where the first parameter specifies the column (1 based index) and the second parameter specifies the width. "
	fnames "columnWidth1 cw1"
		fdesc "Sets the width of the first column.  Ignored if there is not  exactly one column. "
	fnames "columnWidth2 cw2"
		fdesc "Sets the column widths of both columns.  Ignored if there is not exactly two columns. "
	fnames "columnWidth3 cw3"
		fdesc "Sets the column widths for all 3 columns.  Ignored if there is not exactly 3 columns. "
	fnames "columnWidth4 cw4"
		fdesc "Sets the column widths for all 4 columns.  Ignored if there is not exactly 4 columns. "
	fnames "columnWidth5 cw5"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "columnWidth6 cw6"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "connectAttrToDropped cda"
		fdesc "The script to execute when a node is dragged and dropped onto an attribute (multilister dnd attribute editor).   Your script should take in two arguments: the source node  and destination attribute respectively. "
	fnames "connectNodeToDropped cdn"
		fdesc "The script to execute when a node is dragged and dropped onto a node (the multilister issues this).  Your script should take in two arguments: the source node and  destination node respectively. "
	fnames "connectToExisting ce"
		fdesc "The script to execute when a connection should be  made to an existing node. "
	fnames "createNew cn"
		fdesc "The script to execute when a new "connection" is requested. "
	fnames "defaultTraversal dtv"
		fdesc "The script to execute to find out the name of the default traversal node.  The script you attach should be able to  take in one argument (the attribute) and return the name of the node that is the default traversal node. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "delete del"
		fdesc "The script to execute when the connection (and the node connected to) should be deleted. "
	fnames "disconnect d"
		fdesc "The script to execute when a "disconnection" is requested. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "ignore i"
		fdesc "The script to execute when the connection should be ignored. "
	fnames "ignoreNotSupported ins"
		fdesc "Obsolete flag; has no effect. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "Text for the control. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "relatedNodes ren"
		fdesc "The script to execute to find out what the related  nodes are.  The script you attach should be able to  take in one argument (the attribute) and return a list of strings that are the name of the nodes that are  related. "
	fnames "rowAttach rat"
		fdesc "Arguments are : attachment type, offset. Possible attachments are: top | bottom | both.  Specifies attachment types  and offsets for the entire row.   "
	fnames "unignore u"
		fdesc "The script to execute when the connection should be unignored. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "attrPresetEditWin"
	desc "Opens the attribute preset editor window. This allows one to delete presets for a given node type. The initial node type to display must be specified."
	fcount "0"
	rcount "0"
name "attributeExists"
	desc "Check to see if the named attribute exists in the given node."
	fcount "0"
	rcount "0"
name "attributeInfo"
	desc "AttributeInfo is undoable , NOT queryable , and NOT editable . This command lists all of the attributes that are marked with certain flags. Combinations of flags may be specified and all will be considered. (The method of combination depends on the state of the -and and -n flags.)."
	fcount "10"
	fnames "and "
		fdesc "The default is to take the logical 'or' of the above conditions. Specifying this flag switches to the logical 'and' instead. "
	fnames "bool b"
		fdesc "Show the attributes that are of type boolean. Use the 'on' state to get only boolean attributes; the 'off' state to ignore boolean attributes. "
	fnames "enumerated e"
		fdesc "Show the attributes that are of type enumerated. Use the 'on' state to get only enumerated attributes; the 'off' state to ignore enumerated attributes. "
	fnames "hidden h"
		fdesc "Show the attributes that are marked as hidden. Use the 'on' state to get hidden attributes; the 'off' state to get non-hidden attributes. "
	fnames "internal i"
		fdesc "Show the attributes that are marked as internal to the node. Use the 'on' state to get internal attributes; the 'off' state to get non-internal attributes. "
	fnames "leaf l"
		fdesc "Show the attributes that are complex leaves (ie. that have parent attributes and have no children themselves). Use the 'on' state to get leaf attributes; the 'off' state to get non-leaf attributes. "
	fnames "multi m"
		fdesc "Show the attributes that are multis. Use the 'on' state to get multi attributes; the 'off' state to get non-multi attributes. "
	fnames "short s"
		fdesc "Show the short attribute names instead of the long names. "
	fnames "userInterface ui"
		fdesc "Show the UI-friendly attribute names instead of the Maya ASCII names. Takes precedence over the -s/-short flag if both are specified. "
	fnames "writable w"
		fdesc "Show the attributes that are writable (ie. can have input connections). Use the 'on' state to get writable attributes; the 'off' state to get non-writable attributes. "
	rcount "10"
		rname "addAttr"
		rname "affectedNet"
		rname "affects"
		rname "aliasAttr"
		rname "deleteAttr"
		rname "getClassification"
		rname "nodeType"
		rname "objExists"
		rname "objectType"
		rname "renameAttr"
name "attributeMenu"
	desc "AttributeMenu is NOT undoable , NOT queryable , and NOT editable . Action to generate popup connection menus for Hypershade. This command is used internally by the Hypershade panel."
	fcount "7"
	fnames "beginMenu beg"
		fdesc "If true the menu will be used to start a connection edit so it will list all available attributes for either inputs or outputs.  If false the menu will be used to complete a connection so it will list only the attributes compatible with the attribute at the other end of the connection.  A plug must be supplied in this case. "
	fnames "finishMenu fsh"
		fdesc "finishes the menu "
	fnames "inputs inp"
		fdesc "If true only attributes which can be used as inputs will be listed.  If false only attributes which can be used as outputs will be listed "
	fnames "plug p"
		fdesc "If inputs is false then we are completing a connection and the name of the plug at the other end of the connection must be supplied. "
	fnames "editor edt"
		fdesc "Name of the Hypergraph, Hypershade or Visor editor for which this menu is being built.  This argument is mandatory. "
	fnames "regPulldownMenuCommand rpm"
		fdesc "This flag will register a callback that allows the user to define their own popup menu for a specific node type for use in the Hypershade and Hypergraph editor. The command signature should look like this: global proc int  (string $editorName, string $nodeName, string $plug, string $mode, string $menuType) The method should return 0 if it does not recognize the node type and the default attributeMenu popup menu will be displayed. If the callback returns one then the menu is considered built and no other menuItems will be added to the popup. The return value from this flag will be the ID to use for the -unregPulldownMenuCommand flag. "
	fnames "unregPulldownMenuCommand upm"
		fdesc "This flag will unregister a callback procedure that was registered with the -regPulldownMenuCommand flag. The argument should be the integer identifier returned from the -regPulldownMenuCommand flag. "
	rcount "0"
name "attributeQuery"
	desc "AttributeQuery is NOT undoable , NOT queryable , and NOT editable . This command returns information about the configuration of an attribute. Specifying more than one boolean flag means to return the logical "and" of all the flags. You may not specify any two flags when both do not provide a boolean return type. (eg. "-i -h" is okay but "-range -h" and "-range -softRange" are not)."
	fcount "15"
	fnames "exists ex"
		fdesc "Return true if the attribute exists "
	fnames "hidden h"
		fdesc "Return the hidden status of the attribute "
	fnames "internal i"
		fdesc "Return true if the attribute is either internalSet or internalGet "
	fnames "internalGet ig"
		fdesc "Return true if the attribute come from getCachedValue "
	fnames "internalSet is"
		fdesc "Return true if the attribute must be set through setCachedValue "
	fnames "listChildren lc"
		fdesc "Return the list of children attributes of the given attribute. "
	fnames "listDefault ld"
		fdesc "Return the default values of numeric and compound numeric attributes. "
	fnames "listParent lp"
		fdesc "Return the parent of the given attribute. "
	fnames "listSiblings ls"
		fdesc "Return the list of sibling attributes of the given attribute. "
	fnames "multi m"
		fdesc "Return true if the attribute is a multi-attribute "
	fnames "node n"
		fdesc "Use all attributes from node named NAME "
	fnames "range r"
		fdesc "Return the hard range of the attribute's value "
	fnames "rangeExists re"
		fdesc "Return true if the attribute has a hard range "
	fnames "softRange s"
		fdesc "Return the soft range (slider range) of the attribute's value "
	fnames "type typ"
		fdesc "Use static attributes from nodes of type TYPE "
	rcount "6"
		rname "isConnected"
		rname "isDirty"
		rname "objExists"
		rname "nodeType"
		rname "objectType"
		rname "getClassification"
name "autoKeyframe"
	desc "With no flags, this command will set keyframes on all attributes that have been modified since an "autoKeyframe -state on" command was issued. To stop keeping track of modified attributes, use "autoKeyframe -state off" autoKeyframe does not create new animation curves. An attribute must have already been keyframed (with the setKeyframe command) for autoKeyframe to add new keyframes for modified attributes. You can also query the current state of autoKeyframing with "autoKeyframe -query -state"."
	fcount "2"
	fnames "characterOption co"
		fdesc "Valid options are: "standard", "all". Dictates whether when auto-keying characters the auto-key works as usual or whether it keys all of the character attributes. Default is "standard". "
	fnames "state st"
		fdesc "turns on/off remembering of modified attributes "
	rcount "4"
		rname "setKeyframe"
		rname "setDrivenKeyframe"
		rname "findKeyframe"
		rname "setKeyPath"
name "autoPlace"
	desc "This command takes a point in the centre of the current modeling pane and projects it onto the live surface. This produces a point in 3 space which is returned. If the -um/useMouse flag is set the current mouse position is used rather than the centre of the modeling pane."
	fcount "1"
	fnames "useMouse um"
		fdesc "Use the current mouse position rather than the centre of the  active view. "
	rcount "0"
name "bakeClip"
	desc "BakeClip is undoable , NOT queryable , and NOT editable . This command is used to bake clips and blends into a single clip."
	fcount "4"
	fnames "blend b"
		fdesc "Specify the indicies of the clips being blended. "
	fnames "clipIndex ci"
		fdesc "Specify the index of the clip to bake. "
	fnames "keepOriginals k"
		fdesc "Keep original clips in the trax editor and place the merged clip into the visor. The default is to schedule the merged clip, and to keep the original clips in the visor. "
	fnames "name n"
		fdesc "Specify the name of the new clip to create. "
	rcount "2"
		rname "clip"
		rname "clipSchedule"
name "bakeResults"
	desc "This command operates on a keyset. A keyset is defined as a group of keys within a specified time range on one or more animation curves. The animation curves comprising a keyset depend on the value of the "-animation" flag: keysOrObjects : 1) any active keys, when no target objects or -attribute flags appear on the command line, or 2) all animation curves connected to all keyframable attributes of objects specified as the command line's targetList, when there are no active keys. keys : Only act on active keys or tangents. If there are no active keys or tangents, don't.... Refer to full documentation"
	fcount "14"
	fnames "animation an"
		fdesc "Where this command should get the animation to act on.  Valid values are "objects," "keys," and "keysOrObjects" Default: "keysOrObjects."  (See Description for details.) "
	fnames "attribute at"
		fdesc "List of attributes to select "
	fnames "controlPoints cp"
		fdesc "This flag explicitly specifies whether or not to include the control points of a shape (see "-s" flag) in the list of attributes. Default: false.   (Not valid for "pasteKey" cmd.) "
	fnames "disableImplicitControl dic"
		fdesc "Whether to disable implicit control after the anim curves are obtained as the result of this command. An implicit control to an attribute is some function that affects the attribute without using an explicit dependency graph connection. The control of IK, via ik handles, is an example. "
	fnames "float f"
		fdesc "value uniquely representing a non-time-based key (or key range) on a time-based animCurve.  Valid floatRange include single values (-f 10) or a string with a lower and upper bound, separated by a colon (-f "10:20") "
	fnames "hierarchy hi"
		fdesc "Hierarchy expansion options.  Valid values are "above," "below," "both," and "none."  (Not valid for "pasteKey" cmd.) "
	fnames "includeUpperBound iub"
		fdesc "When the -t/time or -f/float flags represent a range of keys, this flag determines whether the keys at the  upper bound of the range are included in the keyset. Default value: true.  This flag is only valid when the argument to the -t/time flag is a time range with a lower and upper bound.  (When used with the "pasteKey"  command, this flag refers only to the time range of the target curve that is replaced, when using options such as "replace," "fitReplace," or "scaleReplace."  This  flag has no effect on the curve pasted from the clipboard.) "
	fnames "index in"
		fdesc "index of a key on an animCurve "
	fnames "preserveOutsideKeys pok"
		fdesc "Whether to preserve keys that are outside the bake range  when there are directly connected animation curves.  The default  (false) is to remove frames outside the bake range.  If the channel that you are baking is not controlled by a single animation curve, then a new animation curve will be created with keys only in the  bake range. "
	fnames "sampleBy sb"
		fdesc "Amount to sample by. Default is 1.0 in current timeUnit "
	fnames "shape s"
		fdesc "Consider attributes of shapes below transforms as well, except "controlPoints".  Default: true.   (Not valid for "pasteKey" cmd.) "
	fnames "simulation sm"
		fdesc "Using this flag instructs the command to preform a simulation instead of just evaluating each attribute separately over the range of time.   The simulation flag is required to bake animation that that depends on the whole scene being evaluated at each time step such as dynamics. The default is false. "
	fnames "sparseAnimCurveBake sac"
		fdesc "When this is true and anim curves are being baked, do not insert  any keys into areas of the curve where animation is defined.  And, use  as few keys as possible to bake the pre and post infinity behavior.   When this is false, one key will be inserted at each time step.  The default is false. "
	fnames "time t"
		fdesc "time uniquely representing a key (or key range) on a time-based animCurve.  Valid timeRanges include single values (-t 10) or a string with a lower and upper bound, separated by a colon (-t "10:20") "
	rcount "2"
		rname "bakeClip"
		rname "bakeSimulation"
name "bakeSimulation"
	desc "This command operates on a keyset. A keyset is defined as a group of keys within a specified time range on one or more animation curves. The animation curves comprising a keyset depend on the value of the "-animation" flag: keysOrObjects : 1) any active keys, when no target objects or -attribute flags appear on the command line, or 2) all animation curves connected to all keyframable attributes of objects specified as the command line's targetList, when there are no active keys. keys : Only act on active keys or tangents. If there are no active keys or tangents, don't.... Refer to full documentation"
	fcount "14"
	fnames "animation an"
		fdesc "Where this command should get the animation to act on.  Valid values are "objects," "keys," and "keysOrObjects" Default: "keysOrObjects."  (See Description for details.) "
	fnames "attribute at"
		fdesc "List of attributes to select "
	fnames "controlPoints cp"
		fdesc "This flag explicitly specifies whether or not to include the control points of a shape (see "-s" flag) in the list of attributes. Default: false.   (Not valid for "pasteKey" cmd.) "
	fnames "disableImplicitControl dic"
		fdesc "Whether to disable implicit control after the anim curves are obtained as the result of this command. An implicit control to an attribute is some function that affects the attribute without using an explicit dependency graph connection. The control of IK, via ik handles, is an example. "
	fnames "float f"
		fdesc "value uniquely representing a non-time-based key (or key range) on a time-based animCurve.  Valid floatRange include single values (-f 10) or a string with a lower and upper bound, separated by a colon (-f "10:20") "
	fnames "hierarchy hi"
		fdesc "Hierarchy expansion options.  Valid values are "above," "below," "both," and "none."  (Not valid for "pasteKey" cmd.) "
	fnames "includeUpperBound iub"
		fdesc "When the -t/time or -f/float flags represent a range of keys, this flag determines whether the keys at the  upper bound of the range are included in the keyset. Default value: true.  This flag is only valid when the argument to the -t/time flag is a time range with a lower and upper bound.  (When used with the "pasteKey"  command, this flag refers only to the time range of the target curve that is replaced, when using options such as "replace," "fitReplace," or "scaleReplace."  This  flag has no effect on the curve pasted from the clipboard.) "
	fnames "index in"
		fdesc "index of a key on an animCurve "
	fnames "preserveOutsideKeys pok"
		fdesc "Whether to preserve keys that are outside the bake range  when there are directly connected animation curves.  The default  (false) is to remove frames outside the bake range.  If the channel that you are baking is not controlled by a single animation curve, then a new animation curve will be created with keys only in the  bake range. "
	fnames "sampleBy sb"
		fdesc "Amount to sample by. Default is 1.0 in current timeUnit "
	fnames "shape s"
		fdesc "Consider attributes of shapes below transforms as well, except "controlPoints".  Default: true.   (Not valid for "pasteKey" cmd.) "
	fnames "simulation sm"
		fdesc "Using this flag instructs the command to preform a simulation instead of just evaluating each attribute separately over the range of time.   The simulation flag is required to bake animation that that depends on the whole scene being evaluated at each time step such as dynamics. The default is true. "
	fnames "sparseAnimCurveBake sac"
		fdesc "When baking anim curves, do not insert any keys into areas  of the curve where animation is defined.  And, use as few keys as possible to bake the pre and post infinity behaviors.  When this is false, one key will be inserted at each time step.  The default is false. "
	fnames "time t"
		fdesc "time uniquely representing a key (or key range) on a time-based animCurve.  Valid timeRanges include single values (-t 10) or a string with a lower and upper bound, separated by a colon (-t "10:20") "
	rcount "2"
		rname "bakeClip"
		rname "bakeResults"
name "basename"
	desc "Strips from $path any prefix ending in '/'. If $path ends in a '/' it is first stripped. If $suffix is not empty, $suffix will also be stripped if it exists at the end of $path. On NT, the input $path is first processed to convert all backslashes ('\', input as "\\") to '/'s."
	fcount "0"
	rcount "0"
name "basenameEx"
	desc "An extension of basename(), this convenience procedure returns the base name of $path, without the directory or the file extension. See also basename() and fileExtension()."
	fcount "0"
	rcount "0"
name "batchRender"
	desc "The batchRender command is used to spawn off a separate rendering session of the current maya file. If no mayaFile is specified, it'll ask you whether you want the current job killed. The batchRender will spawn a separate maya process in which commands will be communicated to it through a commandPort. If Maya is unable to find an available port an error will be produced. Maya will attempt to use ports 7835 through 7844."
	fcount "5"
	fnames "filename f"
		fdesc "filename to be rendered; if empty, a temporary filename will be created "
	fnames "numProcs n"
		fdesc "number of processors to use (0 means use all available processors) "
	fnames "remoteRenderMachine rm"
		fdesc "name of remote render machine "
	fnames "showImage si"
		fdesc "show progress of the current rendering job "
	fnames "useRemoteRender um"
		fdesc "if remote rendering is desired "
	rcount "0"
name "bessel"
	desc "These commands are implemented using the builtin system functions. besselj0 and besselj1 return Bessel functions of the input argument of the first kind of orders zero and one, respectively. besseljn returns the Bessel function of the first argument of the first kind of order of the second argument. bessely0 and bessely1 return Bessel functions of the input argument of the second kind of orders zero and one, respectively. besselyn returns the Bessel function of the first argument of the second kind of order of the second argument. The first argument must be positive."
	fcount "0"
	rcount "0"
name "bevel"
	desc "The bevel command creates a new bevel surface for the specified curve. The curve can be any nurbs curves."
	fcount "16"
	fnames "bevelShapeType bst"
		fdesc "Shape type: 1 - straight cut, 2 - curve out, 3 - curve in Default:  1 "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "cornerType ct"
		fdesc "Corner type: 1 - linear, 2 - circular Default:  2 "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "depth d"
		fdesc "The depth for bevel Default:  0.5 "
	fnames "extrudeDepth ed"
		fdesc "The extrude depth for bevel Default:  1.0 "
	fnames "joinSurfaces js"
		fdesc "If true, join all the bevel surfaces into one or leave separate if false Default:  true "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "numberOfSides ns"
		fdesc "Number of sides to bevel: 1 - no bevel just extrude, 2 - bevel start and extrude, 3 - bevel end and extrude, 4 - bevel end and start and extrude Default:  4 "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "tolerance tol"
		fdesc "The tolerance for bevel offsets Default:  0.01 "
	fnames "width w"
		fdesc "The width for bevel Default:  0.5 "
	rcount "0"
name "bevelPlus"
	desc "The bevelPlus command creates a new bevel surface for the specified curves using a given style curve. The first curve should be the "outside" curve, and the (optional) rest of them should be inside of the first one. For predictable results, the curves should be planar and all in the same plane."
	fcount "22"
	fnames "capSides cap"
		fdesc "How to cap the bevel. 1 - no caps 2 - cap at start only 3 - cap at end only 4 - cap at start and end Default: 4 "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off "
	fnames "depth d"
		fdesc "The depth for the bevel. Default: 0.5 "
	fnames "extrudeDepth ed"
		fdesc "The extrude distance (depth) for bevel. Default: 1.0 "
	fnames "innerStyle is"
		fdesc "Similar to outerStyle, this style is applied to all but the first (outer) curve specified. "
	fnames "joinSurfaces js"
		fdesc "Attach bevelled surfaces into one surface for each input curve. Default: true "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "numberOfSides ns"
		fdesc "How to apply the bevel.   1 - no bevels 2 - bevel at start only 3 - bevel at end only 4 - bevel at start and end Default:  4 "
	fnames "outerStyle os"
		fdesc "Choose a style to use for the bevel of the first (outer) curve.  There are 15 predefined styles (values 0 to 14 can be used to select them). For those experienced with MEL, you can, after the fact, specify a custom curve and use it for the style curve. See the documentation for styleCurve node to see what requirements a style curve must satisfy. "
	fnames "polyOutChordHeight cht"
		fdesc "Chord height is the absolute distance in object space which the center of a polygon edge can deviate from the actual center of the surface span. Only used if Method is Sampling and if polyOutseChordHeight is true. Default: 0.1 "
	fnames "polyOutChordHeightRatio chr"
		fdesc "Chord height ratio is the ratio of the chord length of a surface span to the chord height.  (This is a length to height ratio). 0 is a very loose fit. 1 is a very tight fit.  This applies to the polygonal output type only. (See also description of chord height.) Used if Method is Sampling and polyOutUseChordHeightRatio is true. Default: 0.1 "
	fnames "polyOutCount poc"
		fdesc "The number of polygons to produce when the polygon is requested.  Only used if Method is face count (0). Default: 200 "
	fnames "polyOutCurveSamples pcs"
		fdesc "Initial number of samples in the curve direction. Only used if Method is Sampling. Default: 6 "
	fnames "polyOutCurveType pct"
		fdesc "Initial tessellation criteria along the curve.  Only used if Method is Sampling.  2 - Complete Curve.  This type places a specific number of sample points along the curve, equally spaced in parameter space.  3 - Curve Span.  This type places a specific number of sample points across each curve span, equally spaced in parameter space. Default: 3 "
	fnames "polyOutExtrusionSamples pes"
		fdesc "Initial number of samples along the extrusion. Only used if Method is Sampling. Default: 2 "
	fnames "polyOutExtrusionType pet"
		fdesc "Initial type tessellation criteria along the extrude direction.  Used only if Method is Sampling.  2 - Complete Extrusion.  This type places a specific number of lines across the surface, equally spaced in parameter space.  3 - Extrusion Section.  This type places a specific number of lines across each surface span, equally spaced in parameter space. Default: 3 "
	fnames "polyOutMethod pom"
		fdesc "Method for the polygonal output: 0 - Face Count, 2 - Sampling Default: 2 "
	fnames "polyOutUseChordHeight uch"
		fdesc "True means use chord height.  This is a secondary criteria that refines the tessellation produced using the sampling value.  Only used if Method is Sampling. Default: false "
	fnames "polyOutUseChordHeightRatio ucr"
		fdesc "True means use chord height ratio.  This is a secondary criteria that refines the tessellation produced using the sampling value.  Only used if Method is Sampling. Default: true "
	fnames "polygon po"
		fdesc "Create a polyset (1) instead of nurbs surface (0) "
	fnames "tolerance tol"
		fdesc "The tolerance for creating NURBS caps. Default: 0.01 "
	fnames "width w"
		fdesc "The width for the bevel. Default: 0.5 "
	rcount "0"
name "binMembership"
	desc "BinMembership is undoable , queryable , and NOT editable . Command to assign nodes to bins."
	fcount "7"
	fnames "addToBin add"
		fdesc "Add the nodes in a node list to a bin. "
	fnames "removeFromBin rm"
		fdesc "Remove the nodes in a node list from a bin. "
	fnames "exists ex"
		fdesc "Query if a node exists in a bin.  The exists flag can take only one node. "
	fnames "listBins lb"
		fdesc "Query and return a list of bins a list of nodes belong to. If a bin contains any of the nodes in the selection list, then it should be included in the returned bin list. "
	fnames "makeExclusive mke"
		fdesc "Make the specified nodes belong exclusively in the specified bin. "
	fnames "inheritBinsFromNodes ibn"
		fdesc "Let the node in the flag's argument inherit bins from nodes in the specified node list.  The node list is specified as the object of the command. "
	fnames "notifyChanged nfc"
		fdesc "This flag is used to notify that binMembership has been changed. "
	rcount "0"
name "bindPose"
	desc "This command is obsolete. It exists only for compatibility with pre-existing scripts. Please replace any uses of this command with the dagPose command since the bindPose command will eventually be phased out."
	fcount "2"
	fnames "atBindPose abp"
		fdesc "Returns 1 if we are at the bindPose, else 0. "
	fnames "selectedBones sb"
		fdesc "Move the selected bones to bindPose. Leave other joints at current position. "
	rcount "10"
		rname "bindSkin"
		rname "blendShape"
		rname "boneLattice"
		rname "copyFlexor"
		rname "copySkinWeights"
		rname "flexor"
		rname "skinCluster"
		rname "skinPercent"
		rname "wire"
		rname "wrinkle"
name "bindSkin"
	desc "This command binds the currently selected objects to the currently selected skeletons. Shapes which can be bound are: meshes, nurbs curves, nurbs surfaces, lattices, subdivision surfaces, and API shapes. Multiple shapes and multiple skeletons can be bound at once by selecting them or specifying them on the command line. Selection order is not important. The skin is bound using the so-called "rigid" bind, in which the components are rigidly attached to the closest bone in the skeleton. Flexors can later be added to the skeleton to smooth out the skinning around joints. The skin(s) can be bound either to the.... Refer to full documentation"
	fcount "13"
	fnames "byClosestPoint bcp"
		fdesc "bind each point in the object to the segment closest to the point. The byClosestPoint and byPartition flags are mutually exclusive.  The byClosestPoint flag is the default. "
	fnames "byPartition bp"
		fdesc "bind each group in the partition to the segment closest to the group's centroid. A partition must be specified with the -p/-partition flag "
	fnames "colorJoints cj"
		fdesc "In bind mode, this flag assigns colors to the joints based on the colors assigned to the joint's skin set. In delete and unlock mode, this flag removes the colors from joints that are no longer bound as skin. In disable and unbindKeepHistory mode, this flag does nothing. "
	fnames "delete d"
		fdesc "Detach the skin on the selected skeletons and remove all bind- related construction history. "
	fnames "doNotDescend dnd"
		fdesc "Do not descend to shapes that are parented below the selected object(s). Bind only the selected objects. "
	fnames "enable en"
		fdesc "Enable or disable a bind that has been disabled on the selected skeletons. To enable the bind on selected bones only, select the bones and use the -tsb flag with the -en flag. This flag is used when you want to temporarily disable the bind without losing the set information or the weight information of the skinning, for example  if you want to modify the bindPose. "
	fnames "partition p"
		fdesc "Specify a partition to bind by. This is only valid when used with the -bp/-byPartition flag. "
	fnames "toAll ta"
		fdesc "objects will be bound to the entire selected skeletons. Even bones with zero influence will be bound, whereas the toSkeleton will only bind non-zero influences. "
	fnames "toSelectedBones tsb"
		fdesc "objects will be bound to the selected bones only. "
	fnames "toSkeleton ts"
		fdesc "objects will be bound to the selected skeletons. The toSkeleton, toAll and toSelectedBones flags are mutually exclusive. The toSkeleton flag is the default. "
	fnames "unbind ub"
		fdesc "unbind the selected objects. They will no longer move with the skeleton. Any bindSkin history that is no longer used will be deleted. "
	fnames "unbindKeepHistory ubk"
		fdesc "unbind the selected objects. They will no longer move with the skeleton. However, existing weights on the skin will be kept for use the next time the skin is bound. This option is appropriate if you want to modify the skeleton without losing the weighting information on the skin. "
	fnames "unlock ul"
		fdesc "unlock the selected objects. Since bindSkin will no longer give normal results if bound objects are moved away from the skeleton, bindSkin locks translate, rotate and scale. This command unlocks the selected objects translate, rotate and scale. "
	rcount "10"
		rname "bindPose"
		rname "blendShape"
		rname "boneLattice"
		rname "copyFlexor"
		rname "copySkinWeights"
		rname "flexor"
		rname "skinCluster"
		rname "skinPercent"
		rname "wire"
		rname "wrinkle"
name "blend2"
	desc "This command creates a surface by blending between given curves. This is an enhancement (more user control) compared to blend which is now obsolete."
	fcount "23"
	fnames "autoAnchor aa"
		fdesc "If true and both paths are closed, automatically determine the value on the right rail so that they match Default:  true "
	fnames "autoNormal an"
		fdesc "If true, the direction of each starting tangent is computed based on given geometry. Default:  true "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "flipLeftNormal fln"
		fdesc "If true, flip the starting tangent off the left boundary. Default:  false "
	fnames "flipRightNormal frn"
		fdesc "If true, flip the starting tangent off the right boundary. Default:  false "
	fnames "leftAnchor la"
		fdesc "The reference parameter on the left boundary where the blend surface starts in the case of the closed rail. Default:  0.0 "
	fnames "leftEnd le"
		fdesc "The reference parameter on the left boundary where the blend surface ends. Default:  1.0 "
	fnames "leftStart ls"
		fdesc "The reference parameter on the left boundary where the blend surface starts. Default:  0.0 "
	fnames "multipleKnots mk"
		fdesc "If true, use the new blend which produces fully multiple interior knots Default:  true "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "positionTolerance pt"
		fdesc "The positional C(0) tolerance of the blend surface to the adjacent surfaces. Default:  0.1 "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "reverseLeft rvl"
		fdesc "If true, reverse the direction off the left boundary.  autoDirection must be false for this value to be considered. Default:  false "
	fnames "reverseRight rvr"
		fdesc "If true, reverse the direction of the right boundary.  autoDirection must be false for this value to be considered. Default:  false "
	fnames "rightAnchor ra"
		fdesc "The reference parameter on the right boundary where the blend surface starts in the case of the closed rail. Default:  0.0 "
	fnames "rightEnd re"
		fdesc "The reference parameter on the right boundary where the blend surface ends. Default:  1.0 "
	fnames "rightStart rs"
		fdesc "The reference parameter on the right boundary where the blend surface starts. Default:  0.0 "
	fnames "tangentTolerance tt"
		fdesc "The tangent G(1) continuity tolerance of the blend surface to the adjacent surfaces. Default:  0.1 "
	rcount "0"
name "blendShape"
	desc "This command creates a blendShape deformer, which blends in specified amounts of each target shape to the initial base shape. Each base shape is deformed by its own set of target shapes. Every target shape has an index that associates it with one of the shape weight values. In the create mode the first item on the selection list is treated as the base and the remaining inputs as targets. If the first item on the list has multiple shapes grouped beneath it, the targets must have an identical shape hierarchy. Additional base shapes can be added in edit mode.... Refer to full documentation"
	fcount "18"
	fnames "after af"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node after the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "before bf"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node before the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "deformerTool dt"
		fdesc "Returns the name of the deformer tool objects (if any) as string string ... "
	fnames "envelope en"
		fdesc "Set the envelope value for the deformer, controlling how much of the total deformation gets applied. Default is 1.0. "
	fnames "exclusive ex"
		fdesc "Puts the deformation set in a deform partition. "
	fnames "frontOfChain foc"
		fdesc "This command is used to specify that the new deformer  node should be placed ahead (upstream) of existing deformer and skin nodes in the shape's history (but not ahead of existing tweak nodes). The input to the deformer will be the upstream shape rather than the visible downstream shape, so the behavior of this flag is the most intuitive if the downstream deformers are in their reset (hasNoEffect) position when the new deformer is added. "
	fnames "geometry g"
		fdesc "The specified object will be added to the list of objects being deformed by this deformer object, unless the -rm flag is also specified. When queried, this flag returns string string string ... "
	fnames "ignoreSelected is"
		fdesc "Tells the command to not deform objects on the current selection list "
	fnames "inBetween ib"
		fdesc "Indicate that the specified target should serve as an inbetween. An inbetween target is one that serves as an intermediate target between the base shape and another target. "
	fnames "name n"
		fdesc "Used to specify the name of the node being created "
	fnames "origin o"
		fdesc "blendShape will be performed with respect to the world by default. The local flag will cause the blend shape to be performed with respect to the shape's local origin.  "
	fnames "prune pr"
		fdesc "Removes any points not being deformed by the deformer in  its current configuration from the deformer set. "
	fnames "remove rm"
		fdesc "Specifies that objects listed after the -g flag should be removed from this deformer. "
	fnames "split sp"
		fdesc "Branches off a new chain in the dependency graph instead of inserting/appending the deformer into/onto an existing chain. "
	fnames "target t"
		fdesc "double (targetValue) Set target object as the index target shape for the  base shape base object. The full influence of target shape takes effect when its shape weight is targetValue . "
	fnames "topologyCheck tc"
		fdesc "Set the state of checking for a topology match between the  shapes being blended. Default is on. "
	fnames "weight w"
		fdesc "Set the weight value at index. "
	fnames "weightCount wc"
		fdesc "Set the number of shape weight values. "
	rcount "10"
		rname "bindPose"
		rname "bindSkin"
		rname "boneLattice"
		rname "copyFlexor"
		rname "copySkinWeights"
		rname "flexor"
		rname "skinCluster"
		rname "skinPercent"
		rname "wire"
		rname "wrinkle"
name "blendShapeEditor"
	desc "This command creates an editor that derives from the base editor class that has controls for blendShape, control nodes."
	fcount "22"
	fnames "control ctl"
		fdesc "Query only. Returns the top level control for this editor. Usually used for getting a parent to attach popup menus. CAUTION: editors may not have controls at times.  This flag can return "NONE" if no control is present. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dtg"
		fdesc "Attaches a tag to the maya editor. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "filter f"
		fdesc "Specifies the name of a filter to be placed on this editor. This filters the information coming onto the main list of the editor. "
	fnames "forceMainConnection fmc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. This is a variant of the -mainListConnection flag in that it will force a change even when the connection is locked. This flag is used to reduce the overhead when using the -unlockMainConnection , -mainListConnection, -lockMainConnection flags in immediate  succession. "
	fnames "highlightConnection hlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its highlight list.  Not all editors have a highlight list.  For those who do, it is sort of a secondary selection list. "
	fnames "lockMainConnection lck"
		fdesc "Locks the current list of objects within the mainConnection, so that only those objects are displayed within the editor. Further changes to the original mainConnection are ignored. "
	fnames "mainListConnection mlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. "
	fnames "panel pnl"
		fdesc "Specifies the panel that the editor belongs to.  By default if an editor is created in the create callback of a scripted panel it will belong to that panel.  If an editor doesn't belong to a panel it will be deleted when the window that it is in is deleted. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this editor. This flag will only have an effect if the editor is currently un-parented. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "selectionConnection slc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its own selection list.  As the user selects things in this editor, they will be selected in the selectionConnection object.  If someone else changes the object, the editor will update to show the change. "
	fnames "stateString sts"
		fdesc "Query only flag.  Returns the MEL command that will edit an editor to match the current editor state. The returned command string uses the string variable $editorName in place of a specific name. "
	fnames "targetControlList tcl"
		fdesc ". "
	fnames "targetList tl"
		fdesc ". "
	fnames "unParent up"
		fdesc "Specifies that the editor should be removed from its layout. This cannot be used with query. "
	fnames "unlockMainConnection ulk"
		fdesc "Unlocks the mainConnection, effectively restoring the original mainConnection (if it is still available), and dynamic updates. "
	fnames "updateMainConnection upd"
		fdesc "Causes a locked mainConnection to be updated from the orginal mainConnection, but preserves the lock state. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "verticalSliders vs"
		fdesc "No Description"
	rcount "0"
name "blendShapePanel"
	desc "This command creates a panel that derives from the base panel class that houses a blendShapeEditor."
	fcount "1"
	fnames "blendShapeEditor be"
		fdesc "The name of an editor to be associated with the panel. Query only "
	rcount "0"
name "blendTwoAttr"
	desc "A blendTwoAttr nodes takes two inputs, and blends the values of the inputs from one to the other, into an output value. The blending of the two inputs uses a blending function, and the following formula: (1 - blendFunction) * input[0] + blendFunction * input[1] The blendTwoAttr command can be used to blend the animation of an object to transition smoothly between the animation of two other objects. When the blendTwoAttr command is issued, it creates a blendTwoAttr node on the specified attributes, and reconnects whatever was previously connected to the attributes to the new blend nodes. You may also.... Refer to full documentation"
	fcount "9"
	fnames "attribute at"
		fdesc "A list of attributes for the selected nodes for which a blendTwoAttr node will be created. "
	fnames "attribute0 at0"
		fdesc "The attribute that should be connected to the first input of the new blendTwoAttr node. When queried, it returns a string. "
	fnames "attribute1 at1"
		fdesc "The attribute that should be connected to the second input of the new blendTwoAttr node. When queried, it returns a string. "
	fnames "blender bl"
		fdesc "The blender attribute. This is the attribute that will be connected to the newly created blendTwoAttr node(s) blender attribute. This attribute controls how much of each of the two attributes to use in the blend. If this flag is not specified, a new animation curve is created whose value goes from 1 to 0 throughout the time range specified by the -t flag. If -t is not specified, an abrupt change from the value of the first to the value of the second attribute will occur at the current time when this command is issued. "
	fnames "controlPoints cp"
		fdesc "Explicitly specify whether or not to include the control points of a shape (see "-s" flag) in the list of attributes. Default: false. "
	fnames "driver d"
		fdesc "The index of the driver attribute for this blend node (0 or 1) When queried, it returns an integer. "
	fnames "name n"
		fdesc "name for the new blend node(s) "
	fnames "shape s"
		fdesc "Consider all attributes of shapes below transforms as well, except "controlPoints". Default: true "
	fnames "time t"
		fdesc "The time range between which the blending between the 2 attributes should occur. If a single time is specified, then the blend will cause an abrupt change from the first to the second attribute at that time.  If a range is specified, a smooth blending will occur over that time range. The default is to make a sudden transition at the current time. "
	rcount "0"
name "blindDataType"
	desc "BlindDataType is undoable , NOT queryable , and NOT editable . This command creates a blind data type, which is represented by a blindDataTemplate node in the DG. A blind data type can have one or more attributes. On the command line, the attributes should be ordered by type for best memory utilization, largest first: string, binary, double, float, int, and finally boolean. Once a blind data type is created, blind data of that type may be assigned using the polyBlindData command. Note that as well as polygon components, blind data may be assigned to objects and to NURBS patches.... Refer to full documentation"
	fcount "8"
	fnames "dataType dt"
		fdesc "Specifies the dataTypes that are part of BlindData node being created. Allowable strings are "int", "float", "double", "string", "boolean" and "binary". Must be used togeter with the -ldn and -sdn flags to specify each attribute. "
	fnames "longDataName ldn"
		fdesc "Specifies the long names of the datas that are part of BlindData node being created. Must be used togeter with the -dt and -sdn flags to specify each attribute. "
	fnames "longNames ln"
		fdesc "Specifies that for a query command the long attributes names be listed. "
	fnames "query q"
		fdesc "Specifies that this is a special query type command. "
	fnames "shortDataName sdn"
		fdesc "Specifies the short names of the data that are part of BlindData node being created. Must be used togeter with the -dt and -ldn flags to specify each attribute. "
	fnames "shortNames sn"
		fdesc "Specifies that for a query command the short attribute names be listed. "
	fnames "typeId id"
		fdesc "Specifies the typeId of the BlindData type being created. "
	fnames "typeNames tn"
		fdesc "Specifies that for a query command the data types be listed. "
	rcount "2"
		rname "polyQueryBlindData"
		rname "polyBlindData"
name "boneLattice"
	desc "This command creates/edits/queries a boneLattice deformer. The name of the created/edited object is returned. Usually you would make use of this functionality through the higher level flexor command."
	fcount "19"
	fnames "after af"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node after the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "before bf"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node before the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "bicep bi"
		fdesc "Affects the bulging of lattice points on the inside of the bend. Positive/negative values cause the points to bulge outwards/inwards. Default value is 0.0. When queried, this flag returns a float. "
	fnames "deformerTool dt"
		fdesc "Returns the name of the deformer tool objects (if any) as string string ... "
	fnames "exclusive ex"
		fdesc "Puts the deformation set in a deform partition. "
	fnames "frontOfChain foc"
		fdesc "This command is used to specify that the new deformer  node should be placed ahead (upstream) of existing deformer and skin nodes in the shape's history (but not ahead of existing tweak nodes). The input to the deformer will be the upstream shape rather than the visible downstream shape, so the behavior of this flag is the most intuitive if the downstream deformers are in their reset (hasNoEffect) position when the new deformer is added. "
	fnames "geometry g"
		fdesc "The specified object will be added to the list of objects being deformed by this deformer object, unless the -rm flag is also specified. When queried, this flag returns string string string ... "
	fnames "ignoreSelected is"
		fdesc "Tells the command to not deform objects on the current selection list "
	fnames "joint j"
		fdesc "Specifies which joint will be used to drive the bulging behaviors. "
	fnames "lengthIn li"
		fdesc "Affects the location of lattice points along the upper half of the bone. Positive/negative values cause the points to move away/towards the center of the bone.  Changing this parameter also modifies the regions affected by the creasing, rounding and width parameters. Default value is 0.0. When queried, this flag returns a float. "
	fnames "lengthOut lo"
		fdesc "Affects the location of lattice points along the lower half of the bone. Positive/negative values cause the points to move away/towards the center of the bone.  Changing this parameter also modifies the regions affected by the creasing, rounding and width parameters. Default value is 0.0. When queried, this flag returns a float. "
	fnames "name n"
		fdesc "Used to specify the name of the node being created "
	fnames "prune pr"
		fdesc "Removes any points not being deformed by the deformer in  its current configuration from the deformer set. "
	fnames "remove rm"
		fdesc "Specifies that objects listed after the -g flag should be removed from this deformer. "
	fnames "split sp"
		fdesc "Branches off a new chain in the dependency graph instead of inserting/appending the deformer into/onto an existing chain. "
	fnames "transform t"
		fdesc "Specifies which dag node is being used to rigidly transform the lattice which this node is going to deform.  If this flag is not specified an identity matrix will be assumed. "
	fnames "tricep tr"
		fdesc "Affects the bulging of lattice points on the outside of the bend. Positive/negative values cause the points to bulge outwards/inwards. Default value is 0.0. When queried, this flag returns a float. "
	fnames "widthLeft wl"
		fdesc "Affects the bulging of lattice points on the left side of the bend. Positive/negative values cause the points to bulge outwards/inwards. Default value is 0.0. When queried, this flag returns a float. "
	fnames "widthRight wr"
		fdesc "Affects the bulging of lattice points on the right side of the bend. Positive/negative values cause the points to bulge outwards/inwards. Default value is 0.0. When queried, this flag returns a float. "
	rcount "10"
		rname "bindPose"
		rname "bindSkin"
		rname "blendShape"
		rname "copyFlexor"
		rname "copySkinWeights"
		rname "flexor"
		rname "skinCluster"
		rname "skinPercent"
		rname "wire"
		rname "wrinkle"
name "boundary"
	desc "This command produces a boundary surface given 3 or 4 curves. This resulting boundary surface passes through two of the given curves in one direction, while in the other direction the shape is defined by the remaining curve(s). If the "endPoint" option is on, then the curve endpoints must touch before a surface will be created. This is the usual situation where a boundary surface is useful. Note that there is no tangent continuity option with this command. Unless all the curve end points are touching, the resulting surface will not pass through all curves. Instead, use the birail command."
	fcount "11"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "endPoint ep"
		fdesc "True means the curve ends must touch before a surface will be created. Default:  false "
	fnames "endPointTolerance ept"
		fdesc "Tolerance for end points, only used if endPoint attribute is true. Default:  0.1 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "order or"
		fdesc "True if the curve order is important. Default:  true "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	rcount "3"
		rname "squareSurface"
		rname "doubleProfileBirailSurface"
		rname "loft"
name "boxDollyCtx"
	desc "This command can be used to create, edit, or query a dolly context."
	fcount "1"
	fnames "alternateContext ac"
		fdesc "Set the ALT+CRL+LMB to refer to this context. "
	rcount "0"
name "boxZoomCtx"
	desc "This command can be used to create, edit, or query a box zoom context. If this context is used on a perspective camera, the field of view and view direction are changed. If the camera is orthographic, the orthographic width and eye point are changed. The left and middle mouse interactively zoom the view. The control key can be used to enable box zoom. A box starting from left to right will zoom in, and a box starting from right to left will zoom out."
	fcount "1"
	fnames "zoomScale zs"
		fdesc "Scale the zoom. "
	rcount "0"
name "bufferCurve"
	desc "This command operates on a keyset. A keyset is defined as a group of keys within a specified time range on one or more animation curves. The animation curves comprising a keyset depend on the value of the "-animation" flag: keysOrObjects : 1) any active keys, when no target objects or -attribute flags appear on the command line, or 2) all animation curves connected to all keyframable attributes of objects specified as the command line's targetList, when there are no active keys. keys : Only act on active keys or tangents. If there are no active keys or tangents, don't.... Refer to full documentation"
	fcount "11"
	fnames "animation an"
		fdesc "Where this command should get the animation to act on.  Valid values are "objects," "keys," and "keysOrObjects" Default: "keysOrObjects."  (See Description for details.) "
	fnames "attribute at"
		fdesc "List of attributes to select "
	fnames "controlPoints cp"
		fdesc "This flag explicitly specifies whether or not to include the control points of a shape (see "-s" flag) in the list of attributes. Default: false.   (Not valid for "pasteKey" cmd.) "
	fnames "float f"
		fdesc "value uniquely representing a non-time-based key (or key range) on a time-based animCurve.  Valid floatRange include single values (-f 10) or a string with a lower and upper bound, separated by a colon (-f "10:20") "
	fnames "hierarchy hi"
		fdesc "Hierarchy expansion options.  Valid values are "above," "below," "both," and "none."  (Not valid for "pasteKey" cmd.) "
	fnames "includeUpperBound iub"
		fdesc "When the -t/time or -f/float flags represent a range of keys, this flag determines whether the keys at the  upper bound of the range are included in the keyset. Default value: true.  This flag is only valid when the argument to the -t/time flag is a time range with a lower and upper bound.  (When used with the "pasteKey"  command, this flag refers only to the time range of the target curve that is replaced, when using options such as "replace," "fitReplace," or "scaleReplace."  This  flag has no effect on the curve pasted from the clipboard.) "
	fnames "index in"
		fdesc "index of a key on an animCurve "
	fnames "overwrite ov"
		fdesc "Create a buffer curve.  "true" means create a buffer curve whether or not one already existed.  "false" means if a buffer curve exists already then leave it alone.  If no flag is specified, then the command defaults to -overwrite false "
	fnames "shape s"
		fdesc "Consider attributes of shapes below transforms as well, except "controlPoints".  Default: true.   (Not valid for "pasteKey" cmd.) "
	fnames "swap sw"
		fdesc "for animated attributes which have buffer curves, swap the buffer curve with the current animation curve "
	fnames "time t"
		fdesc "time uniquely representing a key (or key range) on a time-based animCurve.  Valid timeRanges include single values (-t 10) or a string with a lower and upper bound, separated by a colon (-t "10:20") "
	rcount "0"
name "buildBookmarkMenu"
	desc "This command handles building the "dynamic" Bookmark menu, to show all bookmarks ("sets") of a specified type ("sets -text") menuName is the string returned by the "menu" command."
	fcount "2"
	fnames "editor ed"
		fdesc "Name of the editor which this menu belongs to "
	fnames "type typ"
		fdesc "Type of bookmark (sets -text) to display "
	rcount "0"
name "buildKeyframeMenu"
	desc "This command handles building the "dynamic" Keyframe menu, to show attributes of currently selected objects, filtered by the current manipulator. menuName is the string returned by the "menu" command. The target menu will entries appended to it (and deleted from it) to always show what's currently keyframable."
	fcount "0"
	rcount "0"
name "button"
	desc "Create a button control capable of displaying a textual label and executing a command when selected by the user."
	fcount "25"
	fnames "actOnPress aop"
		fdesc "If true then the command specified by the command flag will be executed when a mouse button is pressed.  If false then that command will be executed after the mouse button is released.  The default value is false. "
	fnames "actionIsSubstitute ais"
		fdesc "If true then we allow the command associated to this control to substitute the modifiers its parameter such as  key press, #1, #2, etc. "
	fnames "align al"
		fdesc "The label alignment.  Alignment values are "left", "right", and "center".  Note that the alignment will only be noticable if the control is wider than the label length. By default, the label is aligned "center". "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "command c"
		fdesc "Command executed when the control is pressed. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "The label text.  The default label is the name of the control. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "recomputeSize rs"
		fdesc "If true then the control will recompute it's size to just fit the size of the label.  If false then the control size will remain fixed as you change the size of the label.  The default value of this flag is true. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "buttonManip"
	desc "This creates a button manipulator. This manipulator has position in space and a triad manip for positioning. When you click on the top part of the manip, the command is executed. The command is associated with the manipulator when it is created. If you include a dag object on the command line the manip will be parented to the object. This means moving the object will move the manip. You can move the manip independently of the object using its triad. Note that a buttonManip may not be parented to more than one object."
	fcount "1"
	fnames "icon i"
		fdesc "Specify an icon to represent the manipulator. "
	rcount "0"
name "CBG"
	desc "Generate a string for control callbacks in the form: callbackProc "parent" "whichCallback"."
	fcount "0"
	rcount "0"
name "camera"
	desc "Create, edit, or query a camera with the specified properties. The resulting camera can be repositioned using the viewPlace command. Many of the camera settings only affect the resulting rendered image. E.g. the F/Stop, shutter speed, the film related options, etc. Scaling the camera icon does not change any camera properties."
	fcount "49"
	fnames "aspectRatio ar"
		fdesc "The ratio of the film back width to the film back height. "
	fnames "cameraScale cs"
		fdesc "Scale the camera. "
	fnames "centerOfInterest coi"
		fdesc "Set the linear distance from the camera's eye point to the center of interest. "
	fnames "clippingPlanes cp"
		fdesc "Activate manual clipping planes. "
	fnames "depthOfField dof"
		fdesc "Determines whether a depth of field calculation is performed to give varying focus depending on the distance of the objects. "
	fnames "displayFieldChart dfc"
		fdesc "Activate display of the video field chart when looking through the camera. "
	fnames "displayFilmGate dfg"
		fdesc "Activate display of the film gate icons when looking through the camera. "
	fnames "displayFilmOrigin dfo"
		fdesc "Activate the display of the film origin guide when  looking through the camera.  "
	fnames "displayFilmPivot dfp"
		fdesc "Activate display of the film pivot guide when looking  through the camera.  "
	fnames "displayResolution dr"
		fdesc "Activate display of the current rendering resolution (as defined in the render globals) when looking through the camera. "
	fnames "displaySafeAction dsa"
		fdesc "Activate display of the video Safe Action guide when looking through the camera. "
	fnames "displaySafeTitle dsa"
		fdesc "Activate display of the video Safe Title guide when looking through the camera. "
	fnames "fStop fs"
		fdesc "A real lens normally contains a diaphragm or other stop which blocks some of the light that would otherwise pass through it. This stop is usually approximately round, and its diameter as seen from the front of the lens is called the lens diameter. The lens diameter is often described by its relation to the focal length of the lens. A lens whose diameter is one-eighth its local length is said to have an F-stop of 8. This is an optical property of the lens. "
	fnames "farClipPlane fcp"
		fdesc "Specify the distance to the far clipping plane. "
	fnames "farFocusDistance ffd"
		fdesc "Linear distance to the far focus plane. "
	fnames "filmFit ff"
		fdesc "This describes how the digital image (in pixels) relates to the film back. Since the film back is defined in terms of real numbers with some arbitrary film aspect, and the digital image is defined in integer pixels with an equally arbitrary (and different) resolution, relating the two can get complicated. There are 4 choices:   horizontal  In this case the digital image is made to fit the film back exactly in the horizontal direction. This then gives each pixel a horizontal size = (film back width) / (horizontal resolution). The pixel height is then = (pixel width) / (pixel aspect ratio). Now that the pixel has a size, resolution gives us a complete image. That image will match the film back exactly in width. It will almost never match in height, either being too tall or too short. By playing with the numbers you can get it pretty close though.  vertical  This is the same idea as horizontal fit, only applied vertically. Thus the digital image will match the film back exactly in height, but miss in width.  fill  This is a convenience item. The system calculates both horizontal and vertical fits and then applies the one that makes the digital image larger than the film back.  overscan  Overscanning the film gate in the camera view allows us to choreograph action outside of the frustum from within the camera view without having to resort to a dolly or zoom. This feature is also essential for animating image planes. "
	fnames "filmFitOffset ffo"
		fdesc "Since we know from the above that the digital image may not match the film back exactly, we now have the question of how to position one relative to the other. Thus fit offset. Normally the centers are aligned. Fit offset lets you move the smaller image within the larger one. Specify the distance for film offset (inches). "
	fnames "filmRollOrder fro"
		fdesc "Specifies how the roll is applied with respect to the  pivot value.      Rotate-Translate  The film back is first rotated then translated by the  pivot point value.   Translate-Rotate  The film back is first translated then rotated by the  film roll value.     "
	fnames "filmRollValue frv"
		fdesc "This specifies that amount of rotation around the film back. The roll value is specified in degrees. The rotation occurs around  the specified pivot point. This value is used to compute a film  roll matrix, which is a component of the post-projection matrix. "
	fnames "filmTranslateH fth"
		fdesc "The horizontal film translation. Values are normalized to the viewing area.  "
	fnames "filmTranslateV ftv"
		fdesc "The vertical film translation. Values are normalized to the viewing area.  "
	fnames "focalLength fl"
		fdesc "This is the distance along the lens axis between the lens and the film plane when "focal distance" is infinitely large. This is an optical property of the lens. This double precision parameter is always specified in millimeters. "
	fnames "focusDistance fd"
		fdesc "Set the focus at a certain distance in front of the camera. "
	fnames "homeCommand hc"
		fdesc "Specify the command to execute when "viewSet -home" is applied to this camera. All occurances of "%camera" will be replaced with the cameras name before viewSet runs the command. "
	fnames "horizontalFieldOfView hfv"
		fdesc "This is the film back width as seen by the lens when focused at infinity (ie., focal length away) measured as an angle. Note that it has nothing to do with pixels or the digital image or any aspects. Angle of view is a derived field, that is, it is not used internally by Alias and can be completely determined from other information. It is included as a convenience for the user. Its derivation is aov = 2 * atan( fbw / (2 * f) ) where "aov" is the angle of view, "fbw" is the film back width and "f" is the focal length. "
	fnames "horizontalFilmAperture hfa"
		fdesc "The horizontal width of the camera's film plane. The camera's film is located on the film plane. The extent of the film which will be exposed to an image of the scene in front of the lens is limited to a rectangular area described by the film back. This double precision parameter is always specified in inches. "
	fnames "horizontalFilmOffset hfo"
		fdesc "Horizontal offset from the center of the film back. Normally the film back will be centered on the lens axis. However, this need not be so. Film offset is the displacement of the center of the film back from the lens axis, also measured in inches. Note that offsetting the film back will distort the image, but will not alter the focus. This double precision parameter is always specified in inches. "
	fnames "horizontalRollPivot hrp"
		fdesc "The horizontal pivot point from the center of the film back. The pivot point is used during rotation of the film back.  The pivot is the point where the rotation occurs around. This double precision parameter corresponds to the normalized viewport. This value is a  part of the post projection matrix.  "
	fnames "journalCommand jc"
		fdesc "Journal interactive camera commands. Commands can be undone when a camera is journaled. "
	fnames "lensSqueezeRatio lsr"
		fdesc "This is presently just an information field in the camera editor is meant to convey the horizontal distortion of the anamorphic lens normally used with some film formats. If it were used, it would do something like pixel aspect. Remember however that lens distortion (intentional or not) is slightly different than the output hardware's quantization. The fact that a "net" distortion parameter could be used for both may or may not confuse the issue. "
	fnames "motionBlur mb"
		fdesc "Determines whether the camera's image is motion blured (as opposed to an object's image). For example, if you want to blur the camera movement when you are performing a flyby. "
	fnames "nearClipPlane ncp"
		fdesc "Specify the distance to the NEAR clipping plane. "
	fnames "nearFocusDistance nfd"
		fdesc "Linear distance to the near focus plane. "
	fnames "orthographic o"
		fdesc "Activate the orthographic camera. "
	fnames "orthographicWidth ow"
		fdesc "Set the orthographic projection width. "
	fnames "overscan ovr"
		fdesc "Set the percent of overscan. "
	fnames "position p"
		fdesc "Three linear values can be specified to translate the camera. "
	fnames "postScale pts"
		fdesc "The post-scale value.  This value multiplied against the computed projection matrix. It is applied after the  the film roll.  "
	fnames "preScale prs"
		fdesc "The pre-scale value. The value is multiplied against  the computed projection matrix. It is applied before the film roll.  "
	fnames "rotation rot"
		fdesc "Three angular values can be specified to rotate the camera. "
	fnames "shutterAngle sa"
		fdesc "Specify the shutter angle (degrees). "
	fnames "startupCamera sc"
		fdesc "A startup camera is marked undeletable and implicit. This flag can be used to set or query the startup state of a camera. There must always be at least one startup camera. "
	fnames "verticalFieldOfView vfv"
		fdesc "Set the vertical field of view. "
	fnames "verticalFilmAperture vfa"
		fdesc "The vertical height of the camera's film plane. This double precision parameter is always specified in inches. "
	fnames "verticalFilmOffset vfo"
		fdesc "Vertical offset from the center of the film back. This double precision parameter is always specified in inches. "
	fnames "verticalLock vl"
		fdesc "Lock the size of the vertical film aperture. "
	fnames "verticalRollPivot vrp"
		fdesc "Vertical pivot point used for rotating the film back. This  double precision parameter corresponds to the normalized viewport. This value is used to compute the film roll matrix, which is a  component of the post projection matrix.  "
	fnames "worldCenterOfInterest wci"
		fdesc "Camera world center of interest point. "
	fnames "worldUp wup"
		fdesc "Camera world up vector. "
	rcount "15"
		rname "cameraView"
		rname "dolly"
		rname "listCameras"
		rname "lookThru"
		rname "orbit"
		rname "roll"
		rname "track"
		rname "tumble"
		rname "viewCamera"
		rname "viewClipPlane"
		rname "viewFit"
		rname "viewHeadOn"
		rname "viewLookAt"
		rname "viewPlace"
		rname "viewSet"
name "cameraView"
	desc "This command creates a preset view for a camera which is then independent of the camera. The view stores a camera's eye point, center of interest point, up vector, tumble pivot, horizontal aperture, vertical aperature, focal length, orthographic width, and whether the camera is orthographic or perspective. These settings can be applied to any other camera through the set camera flag. This command can be used for creation or edit of camera view objects. This command can only be executed with one of the add bookmark, or remove bookmark and one of set camera, or the set view flags set."
	fcount "6"
	fnames "addBookmark ab"
		fdesc "Associate this view with the camera specified or the camera in the active model panel. This flag can be used for creation or edit. "
	fnames "camera c"
		fdesc "Specify the camera to use. This flag should be used in conjunction with the add bookmark, remove bookmark, set camera, or set view flags. If this flag is not specified the camera in the active model panel will be used. "
	fnames "name n"
		fdesc "Set the name of the view. This flag can only be used for creation. "
	fnames "removeBookmark rb"
		fdesc "Remove the association of this view with the camera specified or the camera in the active model panel. This can only be used with edit. "
	fnames "setCamera sc"
		fdesc "Set this view into a camera specified by the camera flag or the camera in the active model panel. This flag can only be used with edit. "
	fnames "setView sv"
		fdesc "Set the camera view to match a camera specified or the active model panel. This flag can only be used with edit. "
	rcount "15"
		rname "camera"
		rname "dolly"
		rname "listCameras"
		rname "lookThru"
		rname "orbit"
		rname "roll"
		rname "track"
		rname "tumble"
		rname "viewCamera"
		rname "viewClipPlane"
		rname "viewFit"
		rname "viewHeadOn"
		rname "viewLookAt"
		rname "viewPlace"
		rname "viewSet"
name "canCreateManip"
	desc "This command returns true if there can be a manipulator made for the specified selection, false otherwise."
	fcount "0"
	rcount "0"
name "canvas"
	desc "Creates a control capable of displaying a color swatch. This control can also accept a command to be called when the colour swatch is pressed by the user. Note: The -dgc/dragCallback and -dpc/dropCallback are not available for this control."
	fcount "22"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "hsvValue hsv"
		fdesc "Three float values corresponding to the hue, saturation, and  value color components, where the hue value ranges from 0.0 to 360.0  and the saturation and value components range from 0.0 to 1.0. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "pressCommand pc"
		fdesc "Command to be executed when there is a mouse press. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rgbValue rgb"
		fdesc "Three float values corresponding to the red, green, and blue  color components, all of which range from 0.0 to 1.0. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "capitalizeString"
	desc "Capitalize a string. Take the first character of a string and convert it to uppercase."
	fcount "0"
	rcount "0"
name "catch"
	desc "Catch will return 1 if the expression in parenthesis produces an error at runtime and 0 otherwise. This expression is designed to allow users to check for runtime failure and recover, if desired. The use of catch stops a runtime error from being propagated back up through the execution path of the script. Normally, a runtime error results in the termination of the execution of a script or procedure. Note: catch is not a command. It is a keyword in the Mel language. Its usage in Mel scripts looks more like that of procedure calls than of command invocations."
	fcount "0"
	rcount "0"
name "catchQuiet"
	desc "CatchQuiet will return 1 if the expression in parenthesis produces an error at runtime and 0 otherwise. This expression is designed to allow users to check for runtime failure and recover, if desired. The use of catchQuiet stops a runtime error from being propagated back up through the execution path of the script. Normally, a runtime error results in the termination of the execution of a script or procedure. Note: catchQuiet is not a command. It is a keyword in the Mel language. Its usage in Mel scripts looks more like that of procedure calls than of command invocations. The.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "ceil"
	desc "Returns the smallest integer value that is not less than the argument."
	fcount "0"
	rcount "0"
name "changeSubdivComponentDisplayLevel"
	desc "ChangeSubdivComponentDisplayLevel is undoable , queryable , and NOT editable . Explicitly forces the subdivision surface to display components at a particular level of refinement."
	fcount "2"
	fnames "level l"
		fdesc "Specifies the display level of components. "
	fnames "relative r"
		fdesc "If set, level refers to the relative display level "
	rcount "12"
		rname "querySubdiv"
		rname "subdiv"
		rname "changeSubdivRegion"
		rname "refineSubdivSelectionList"
		rname "subdivCrease"
		rname "createSubdivRegion"
		rname "subdCollapse"
		rname "subdivDisplaySmoothness"
		rname "nurbsToSubdiv"
		rname "subdToBlind"
		rname "polyToSubdiv"
		rname "subdToPoly"
name "changeSubdivRegion"
	desc "ChangeSubdivRegion is undoable , NOT queryable , and NOT editable . Changes a subdivision surface region based on the command parameters. The command operates on the selected subdivision surfaces."
	fcount "2"
	fnames "action a"
		fdesc "Specifies the action to the selection region 1 = delete selection region 2 = enlarge selection region "
	fnames "level l"
		fdesc "Specify the level of the subdivision surface to perform the operation "
	rcount "12"
		rname "changeSubdivComponentDisplayLevel"
		rname "querySubdiv"
		rname "subdiv"
		rname "refineSubdivSelectionList"
		rname "subdivCrease"
		rname "createSubdivRegion"
		rname "subdCollapse"
		rname "subdivDisplaySmoothness"
		rname "nurbsToSubdiv"
		rname "subdToBlind"
		rname "polyToSubdiv"
		rname "subdToPoly"
name "channelBox"
	desc "This command creates a channel box, which is sensitive to the active list. It displays certain attributes (channels) of the last node on the active list, and provides a two-way connection to keep the widget up to date."
	fcount "44"
	fnames "OutputObjectList ool"
		fdesc "Returns a list of strings, the names of every OUTPUT node associated an object on the main object list that is of the same type as the node displayed in the OUTPUT section of the channel box. "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "attributeEditorMode aem"
		fdesc "Modifies what appears in the channel box for use in the attribute editor. Default is false. Queried, returns a boolean. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "enableLabelSelection els"
		fdesc "Enables the selection of attributes in the channelBox when used in conjunction with -attributeEditorMode. Default is false.  Queried, returns a boolean. "
	fnames "execute exe"
		fdesc "Immediately executes the command string once for every cell (or every selected cell, if the boolean argument is TRUE) in the channel box, for every matching selected object (ie, for every object would be affected if you changed a cell value.)  Before the command is executed, "#A" is substituted with the name of the attribute, and "#N" with the name of the node, and "#P" with the full path name of the node. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "fieldWidth fw"
		fdesc "An optional flag which is used to modify the width assigned to fields appearing in the channelBox. "
	fnames "fixedAttrList fal"
		fdesc "Forces the channel box to only display attributes with the specified names, in the order they are specified.  If an empty list is specified, then the channel box will revert to its default behaviour of listing all keyable attributes. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "historyObjectList hol"
		fdesc "Returns a list of strings, the names of every INPUT node associated with an object on the main object list that is of the same type as the node displayed in the INPUT section of the channel box. "
	fnames "hyperbolic hyp"
		fdesc "Determines whether or not the distance that the mouse has been dragged should be interpreted as a linear or hyperbolic function.  The default is set to hyperbolic being false. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "labelWidth lw"
		fdesc "An optional flag which is used to modify the width assigned to labels appearing in the channelBox. "
	fnames "longNames ln"
		fdesc "Controls whether long or short attribute names will be used in the interface.  Note that this flag is ignored if the -niceNames flag is set.  Default is short names. Queried, returns a boolean. "
	fnames "mainListConnection mlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The channel box will only display the (last) item contained in the selectionConnection object. If a NULL string ("") is specified, then the channel box will revert to its default behaviour of working on the active list. "
	fnames "mainObjectList mol"
		fdesc "Returns a list of strings, the names of every object on the active list that is the same type as the object displayed in the top (main) section of the channel box. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "maxHeight mh"
		fdesc "An optional flag which is used to limit the height of the channelBox. "
	fnames "maxWidth mw"
		fdesc "An optional flag which is used to limit the width of the channelBox. "
	fnames "niceNames nn"
		fdesc "Controls whether the attribute names will be displayed in a more user-friendly, readable way.  When this is on, the longNames flag is ignored.  When this is off, attribute names will be displayed either long or short, according to the longNames flag. Default is on. Queried, returns a boolean. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "precision pre"
		fdesc "Controls the number of digits to the right of the decimal point that will be displayed for float-valued channels. Default is 3.  Queried, returns an int. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "selectedHistoryAttributes sha"
		fdesc "Returns a list of strings, the names of all the selected attributes in the INPUT section of the channel box. "
	fnames "selectedMainAttributes sma"
		fdesc "Returns a list of strings, the names of all the selected attributes in the top section of the channel box. "
	fnames "selectedOutputAttributes soa"
		fdesc "Returns a list of strings, the names of all the selected attributes in the OUTPUT section of the channel box. "
	fnames "selectedShapeAttributes ssa"
		fdesc "Returns a list of strings, the names of all the selected attributes in the middle (shape) section of the channel box. "
	fnames "shapeObjectList sol"
		fdesc "Returns a list of strings, the names of every shape associated with an object on the main object list that is of the same type as the object displayed in the middle (shape) section of the channel box. "
	fnames "showTransforms st"
		fdesc "Controls whether this control will display transform attributes only, or all other attributes. False by default. Queried, returns a boolean. "
	fnames "speed spd"
		fdesc "Controls the speed at which the attributes are changed based on the distance the mouse has been dragged.  Common settings for slow/medium/fast are 0.1/1.0/10.0 respectively.  The default is 1.0. "
	fnames "takeFocus tf"
		fdesc "causes the channel box to take over the keyboard focus, if it can. "
	fnames "useManips mnp"
		fdesc "When you click on a field or label in the channel box, the tool switches to a manipulator that can change that value if you drag in the 3d view.  This flag controls the kind of manips.  Allowed values are "none" (self-explanatory), "invisible" (you won't see anything, but dragging in the window will adjust any of the selected attributes), and "standard" (the same as invisible, except for scale, rotate, and translate, which will be represented by their usual manips.) "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "character"
	desc "This command is used to manage the membership of a character. Characters are a type of set that gathers together the attributes of a node or nodes that a user wishes to animate as a single entity."
	fcount "29"
	fnames "addElement add"
		fdesc "Adds the list of items to the given character.  If some of the items cannot be added to the character because they are in another character, the command will fail.  When another character is passed to to -addElement, is is added as a sub character.  When a node is  passed in, it is expanded into its keyable attributes, which are then added to the character.          "
	fnames "characterOffset cof"
		fdesc "Returns the name of the characterOffset node used to add offsets to the root of the character. "
	fnames "characterPlug cp"
		fdesc "Returns the plug on the character that corresponds to the specified character member. "
	fnames "clear cl"
		fdesc "An operation which removes all items from the given character.  "
	fnames "empty em"
		fdesc "Indicates that the character to be created should be empty. (i.e. it ignores any arguments identifying objects to be added to the character. "
	fnames "excludeDynamic ed"
		fdesc "When creating the character, exclude dynamic attributes. "
	fnames "excludeRotate er"
		fdesc "When creating the character, exclude rotate attributes from transform-type nodes. "
	fnames "excludeScale es"
		fdesc "When creating the character, exclude scale attributes from transform-type nodes. "
	fnames "excludeTranslate et"
		fdesc "When creating the character, exclude translate attributes from transform-type nodes. For example, if your character contains joints only, perhaps you only want to include rotations in the character. "
	fnames "excludeVisibility ev"
		fdesc "When creating the character, exclude visibility attribute from transform-type nodes. "
	fnames "flatten fl"
		fdesc "An operation that flattens the structure of the given character. That is, any characters contained by the given character will be replaced by its members so that the character no longer contains other characters but contains the other characters' members. "
	fnames "forceElement fe"
		fdesc "For use in edit mode only. Forces addition of the items to the character. If the items are in another character which is in the character partition, the items will be removed from the other character in order to keep the characters in the  character partition mutually exclusive with respect to membership. "
	fnames "include in"
		fdesc "Adds the list of items to the given character.  If some of the items cannot be added to the character, a warning will be issued. This is a less strict version of the -add/addElement operation. "
	fnames "intersection int"
		fdesc "An operation that returns a list of items which are members of all the character in the list.  In general, characters should be  mutually exclusive. "
	fnames "isIntersecting ii"
		fdesc "An operation which tests whether or not the characters in the list have common members.  In general, characters should be mutually exclusive, so this should always return false. "
	fnames "isMember im"
		fdesc "An operation which tests whether or not all the given items are members of the given character. "
	fnames "library lib"
		fdesc "Returns the clip library associated with this character, if there is one. A clip library will only exist if you have created clips on your character. "
	fnames "memberIndex mi"
		fdesc "Returns the memberIndex of the specified character member if used after the query flag. Or if used before the query flag, returns the member that corresponds to the specified index. "
	fnames "name n"
		fdesc "Assigns string as the name for a new character. Valid for operations that create a new character. "
	fnames "noWarnings nw"
		fdesc "Indicates that warning messages should not be reported such as when trying to add an invalid item to a character. (used by UI) "
	fnames "nodesOnly no"
		fdesc "This flag modifies the results of character membership queries.   When listing the attributes (e.g. sphere1.tx) contained in the  character, list only the nodes.  Each node will only be listed  once, even if more than one attribute or component of the node  exists in the character. "
	fnames "query q"
		fdesc "Lists all members of the given character "
	fnames "remove rm"
		fdesc "Removes the list of items from the given character. "
	fnames "root rt"
		fdesc "Specifies the transform node which will act as the root of the character being created.  This creates a characterOffset node in addition to the character node, which can be used to add offsets to the character to change the direction of the character's animtion without inserting additional nodes in its hierarchy. "
	fnames "scheduler sc"
		fdesc "Returns the scheduler associated with this character, if there is one. A scheduler will only exist if you have created clips on your character. "
	fnames "subtract sub"
		fdesc "An operation between two characters which returns the members of the first character that are not in the second character.  In general,  characters should be mutually exclusive. "
	fnames "text t"
		fdesc "Defines an annotation string to be stored with the character. "
	fnames "union un"
		fdesc "An operation that returns a list of all the members of all characters listed. "
	fnames "userAlias ua"
		fdesc "Returns the user defined alias for the given attribute on the character or and empty string if there is not one.  Characters  automatically alias the attributes where character animation data  is stored.  A user alias will exist when the automatic aliases are overridden using the aliasAttr command.   "
	rcount "6"
		rname "bakeClip"
		rname "clip"
		rname "clipEditor"
		rname "clipSchedule"
		rname "characterMap"
		rname "characterOutlineEditor"
name "characterMap"
	desc "CharacterMap is undoable , queryable , and editable . This command is used to create a correlation between the attributes of 2 or more characters."
	fcount "7"
	fnames "mapAttr ma"
		fdesc "In query mode, this flag can be used to query the mapping stored by the specified map node. It returns an array of strings. In non-query mode, this flag can be used to create a mapping between the specified character members. Any previous mapping on the attributes is removed in favor of the newly specified mapping. "
	fnames "mapMethod mm"
		fdesc "This is is valid in create mode only. It specifies how the mapping should be done. Valid options are: "byNodeName", "byAttrName", and "byAttrOrder". "byAttrOrder" is the default. The flags mean the following: "byAttrOrder" maps using the order that the character stores the attributes internally, "byAttrName" uses the attribute name to find a correspondence, "byNodeName" uses the node name *and* the attribute name to find a correspondence. "
	fnames "mapNode mn"
		fdesc "This flag can be used to map all the attributes on the source node to their matching attributes on the destination node. "
	fnames "mapping m"
		fdesc "This flag is valid in query mode only. It must be used before the query flag with a string argument. It is used for querying the mapping for a particular attribute.  A string array is returned. "
	fnames "proposedMapping pm"
		fdesc "This flag is valid in query mode only. It is used to get an array of the mapping that the character map would prvide if called with the specified characters and the (optional) specified mappingMethod. If a character map exists on the characters, the map is not affected by the query operation.  A string array is returned. "
	fnames "unmapAttr ua"
		fdesc "This flag can be used to unmap the mapping stored by the specified map node. "
	fnames "unmapNode umn"
		fdesc "This flag can be used to unmap all the attributes on the source node to their matching attributes on the destination node. Note that mapped attributes which do not have matching names, will not be unmapped. "
	rcount "6"
		rname "bakeClip"
		rname "character"
		rname "characterOutlineEditor"
		rname "clip"
		rname "clipEditor"
		rname "clipSchedule"
name "characterOutlineEditor"
	desc "No Description."
	fcount "19"
	fnames "control ctl"
		fdesc "Query only. Returns the top level control for this editor. Usually used for getting a parent to attach popup menus. CAUTION: editors may not have controls at times.  This flag can return "NONE" if no control is present. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dtg"
		fdesc "Attaches a tag to the maya editor. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "filter f"
		fdesc "Specifies the name of a filter to be placed on this editor. This filters the information coming onto the main list of the editor. "
	fnames "forceMainConnection fmc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. This is a variant of the -mainListConnection flag in that it will force a change even when the connection is locked. This flag is used to reduce the overhead when using the -unlockMainConnection , -mainListConnection, -lockMainConnection flags in immediate  succession. "
	fnames "highlightConnection hlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its highlight list.  Not all editors have a highlight list.  For those who do, it is sort of a secondary selection list. "
	fnames "lockMainConnection lck"
		fdesc "Locks the current list of objects within the mainConnection, so that only those objects are displayed within the editor. Further changes to the original mainConnection are ignored. "
	fnames "mainListConnection mlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. "
	fnames "panel pnl"
		fdesc "Specifies the panel that the editor belongs to.  By default if an editor is created in the create callback of a scripted panel it will belong to that panel.  If an editor doesn't belong to a panel it will be deleted when the window that it is in is deleted. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this editor. This flag will only have an effect if the editor is currently un-parented. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "selectionConnection slc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its own selection list.  As the user selects things in this editor, they will be selected in the selectionConnection object.  If someone else changes the object, the editor will update to show the change. "
	fnames "stateString sts"
		fdesc "Query only flag.  Returns the MEL command that will edit an editor to match the current editor state. The returned command string uses the string variable $editorName in place of a specific name. "
	fnames "unParent up"
		fdesc "Specifies that the editor should be removed from its layout. This cannot be used with query. "
	fnames "unlockMainConnection ulk"
		fdesc "Unlocks the mainConnection, effectively restoring the original mainConnection (if it is still available), and dynamic updates. "
	fnames "updateMainConnection upd"
		fdesc "Causes a locked mainConnection to be updated from the orginal mainConnection, but preserves the lock state. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "6"
		rname "bakeClip"
		rname "clip"
		rname "clipEditor"
		rname "clipSchedule"
		rname "character"
		rname "characterMap"
name "chdir"
	desc "Causes the directory represented by the string argument to be the current working directory. An integer value of 0 is returned if the command was successful, and -1 otherwise. See also the unix function "chdir"."
	fcount "0"
	rcount "0"
name "checkBox"
	desc "This command creates a check box. A check box is a simple control containing a text label and a state of either on or off. Commands can be attached to any or all of the following events: when the check box is turned on, turned off, or simply when it's state is changed."
	fcount "27"
	fnames "align al"
		fdesc "The label alignment.  Alignment values are "left", "right", and "center".  Note that the alignment will only be noticable if the control is wider than the label length. By default, the label is aligned "center". "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed when the check box's state is changed. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "editable ed"
		fdesc "The edit state of the check box.  By default, this flag is set to true and the check box value may be changed by clicking on it.  If false then the check box is 'read only' and can not be clicked on. The value of the check box can always be changed with the  -v/value  flag regardless of the state of the  -ed/editable  flag. "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "The label text.  The default label is the name of the control. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "offCommand ofc"
		fdesc "Command executed when the check box is turned off. "
	fnames "onCommand onc"
		fdesc "Command executed when the check box is turned on. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "recomputeSize rs"
		fdesc "If true then the control will recompute it's size to just fit the size of the label.  If false then the control size will remain fixed as you change the size of the label.  The default value of this flag is true. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "value v"
		fdesc "State of the check box. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "checkBoxGrp"
	desc "This command creates from one to four check boxes in a single row. They can have an optional text label. All of the group commands position their individual controls in columns starting at column 1. The layout of each control (ie. column) can be customized using the -cw/columnWidth , -co/columnOffset , -cat/columnAttach , -cal/columnAlign , and -adj/adjustableColumn flags. By default, columns are left aligned with no offset and are 100 pixels wide. Only one column in any group can be adjustable."
	fcount "86"
	fnames "adjustableColumn adj"
		fdesc "Specifies which column has an adjustable size that changes with the sizing of the layout.  The column value is a 1-based index.  You may also specify 0 to turn off the previous adjustable column. "
	fnames "adjustableColumn2 ad2"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly two columns.  "
	fnames "adjustableColumn3 ad3"
		fdesc "Specifies that the column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly three columns.  "
	fnames "adjustableColumn4 ad4"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly four columns.  "
	fnames "adjustableColumn5 ad5"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly five columns.  "
	fnames "adjustableColumn6 ad6"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly six columns.  "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed whenever the group changes state. "
	fnames "changeCommand1 cc1"
		fdesc "No Description"
	fnames "changeCommand2 cc2"
		fdesc "No Description"
	fnames "changeCommand3 cc3"
		fdesc "No Description"
	fnames "changeCommand4 cc4"
		fdesc "Specify a changed state command for each respective check box. "
	fnames "columnAlign cal"
		fdesc "Arguments are : column number, alignment type. Possible alignments are: left | right | center.  Specifies alignment type for the specified column. "
	fnames "columnAlign2 cl2"
		fdesc "Sets the text alignment of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign3 cl3"
		fdesc "Sets the text alignment for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign4 cl4"
		fdesc "Sets the text alignment for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign5 cl5"
		fdesc "Sets the text alignment for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign6 cl6"
		fdesc "Sets the text alignment for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "center". "
	fnames "columnAttach cat"
		fdesc "Arguments are : column number, attachment type, and offset. Possible attachments are: left | right | both.  Specifies column attachment types and offets. "
	fnames "columnAttach2 ct2"
		fdesc "Sets the attachment type of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach3 ct3"
		fdesc "Sets the attachment type for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach4 ct4"
		fdesc "Sets the attachment type for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach5 ct5"
		fdesc "Sets the attachment type for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach6 ct6"
		fdesc "Sets the attachment type for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "both". "
	fnames "columnOffset2 co2"
		fdesc "This flag is used in conjunction with the -columnAttach2 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the two columns.  The offsets applied are based on the attachments  specified with the -columnAttach2 flag.  Ignored if there is not exactly two columns.  "
	fnames "columnOffset3 co3"
		fdesc "This flag is used in conjunction with the -columnAttach3 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the three columns.  The offsets applied are based on the attachments  specified with the -columnAttach3 flag.  Ignored if there is not exactly three columns.  "
	fnames "columnOffset4 co4"
		fdesc "This flag is used in conjunction with the -columnAttach4 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the four columns.  The offsets applied are based on the attachments  specified with the -columnAttach4 flag.  Ignored if there is not exactly four columns.  "
	fnames "columnOffset5 co5"
		fdesc "This flag is used in conjunction with the -columnAttach5 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the five columns.  The offsets applied are based on the attachments  specified with the -columnAttach5 flag.  Ignored if there is not exactly five columns.  "
	fnames "columnOffset6 co6"
		fdesc "This flag is used in conjunction with the -columnAttach6 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the six columns.  The offsets applied are based on the attachments  specified with the -columnAttach6 flag.  Ignored if there is not exactly six columns.  "
	fnames "columnWidth cw"
		fdesc "Arguments are : column number, column width. Sets the width of the specified column where the first parameter specifies the column (1 based index) and the second parameter specifies the width. "
	fnames "columnWidth1 cw1"
		fdesc "Sets the width of the first column.  Ignored if there is not  exactly one column. "
	fnames "columnWidth2 cw2"
		fdesc "Sets the column widths of both columns.  Ignored if there is not exactly two columns. "
	fnames "columnWidth3 cw3"
		fdesc "Sets the column widths for all 3 columns.  Ignored if there is not exactly 3 columns. "
	fnames "columnWidth4 cw4"
		fdesc "Sets the column widths for all 4 columns.  Ignored if there is not exactly 4 columns. "
	fnames "columnWidth5 cw5"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "columnWidth6 cw6"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "editable ed"
		fdesc "The edit state of the group.  By default, this flag is set to true and the check box values may be changed by clicking on them.  If false then the check boxes are 'read only' and can not be clicked on. The value of the check boxes can always be changed with the  -v/value  flags regardless of the state of the  -ed/editable  flag. "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "enable1 en1"
		fdesc "No Description"
	fnames "enable2 en2"
		fdesc "No Description"
	fnames "enable3 en3"
		fdesc "No Description"
	fnames "enable4 en4"
		fdesc "Enable state of the individual check boxes. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "When present on creation an optional text label will be built with the group.  The string specifes the label text. "
	fnames "label1 l1"
		fdesc "No Description"
	fnames "label2 l2"
		fdesc "No Description"
	fnames "label3 l3"
		fdesc "No Description"
	fnames "label4 l4"
		fdesc "Specify label strings for the respective check boxes in the group. "
	fnames "labelArray2 la2"
		fdesc "No Description"
	fnames "labelArray3 la3"
		fdesc "No Description"
	fnames "labelArray4 la4"
		fdesc "Specify multiple labels in a single flag.  These flags are ignored if the number of radio buttons doesn't match. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfCheckBoxes ncb"
		fdesc "Number of check boxes in the group (1 - 4). "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "offCommand ofc"
		fdesc "Command executed when any check box turns off. "
	fnames "offCommand1 of1"
		fdesc "No Description"
	fnames "offCommand2 of2"
		fdesc "No Description"
	fnames "offCommand3 of3"
		fdesc "No Description"
	fnames "offCommand4 of4"
		fdesc "Off command for each respective check box. "
	fnames "onCommand onc"
		fdesc "Command executed when any check box turns on. "
	fnames "onCommand1 on1"
		fdesc "No Description"
	fnames "onCommand2 on2"
		fdesc "No Description"
	fnames "onCommand3 on3"
		fdesc "No Description"
	fnames "onCommand4 on4"
		fdesc "On command for each respective check box. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rowAttach rat"
		fdesc "Arguments are : attachment type, offset. Possible attachments are: top | bottom | both.  Specifies attachment types  and offsets for the entire row.   "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "value1 v1"
		fdesc "No Description"
	fnames "value2 v2"
		fdesc "No Description"
	fnames "value3 v3"
		fdesc "No Description"
	fnames "value4 v4"
		fdesc "Values for the respective check boxes in the group.  "
	fnames "valueArray2 va2"
		fdesc "No Description"
	fnames "valueArray3 va3"
		fdesc "No Description"
	fnames "valueArray4 va4"
		fdesc "Specifies multiple values in a single flag.  These flags are ignored if the number of check boxes doesn't match. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "checkDefaultRenderGlobals"
	desc "CheckDefaultRenderGlobals is NOT undoable , queryable , and editable . Command to check or set the "changed" mode for the defaultRenderGlobals node."
	fcount "1"
	fnames "changed ch"
		fdesc "Check or set the "changed" mode of the defaultRenderGlobals node. "
	rcount "0"
name "choice"
	desc "The choice command provides a mechanism for changing the inputs to an attribute based on some (usually time-based) criteria. For example, an object could be animated from frames 1 to 30 by a motion path, then from frames 30 to 50 it follows keyframe animation, and after frame 50 it returns to the motion path. Or, a revolve surface could change its input curve depending on some transform's rotation value. The choice command creates a choice node (if one does not already exist) on all specified attributes of the selected objects. If the attribute was already connected to something, that.... Refer to full documentation"
	fcount "8"
	fnames "attribute at"
		fdesc "specifies the attributes onto which choice node(s) should be created. The default is all keyable attributes of the given objects. Note that although this flag is not queryable, it can be used to qualify which attributes of the given objects to query. "
	fnames "controlPoints cp"
		fdesc "Explicitly specify whether or not to include the control points of a shape (see "-s" flag) in the list of attributes. Default: false. "
	fnames "index in"
		fdesc "specifies the multi-input index of the choice node to connect the source attribute to. When queried, returns a list of integers one per specified -t/time that indicates the multi-index of the choice node to use at that time. "
	fnames "name n"
		fdesc "the name to give to any newly created choice node(s). When queried, returns a list of strings. "
	fnames "selector sl"
		fdesc "specifies the attribute to be used as the choice node's selector . The value of the selector at a given time determines which of the choice node's multi-indices should be used as the output of the choice node at that time. This flag is only editable (it cannot be specified at creation time). When queried, returns a list of strings. "
	fnames "shape s"
		fdesc "Consider all attributes of shapes below transforms as well, except "controlPoints". Default: true "
	fnames "sourceAttribute sa"
		fdesc "specifies the attribute to connect to the choice node that will be selected at the given time(s) specified by -t/time. "
	fnames "time t"
		fdesc "specifies the time at which the choice should use the given source attribute, or the currently connected attribute if source attribute is not specified. The default is the curren time. Note that although this flag is not queryable, it can be used to qualify the times at which to query the other attributes. "
	rcount "0"
name "circle"
	desc "The circle command creates a circle or partial circle (arc)."
	fcount "27"
	fnames "center c"
		fdesc "The center point of the circle. "
	fnames "centerX cx"
		fdesc "X of the center point. Default:  0 "
	fnames "centerY cy"
		fdesc "Y of the center point. Default:  0 "
	fnames "centerZ cz"
		fdesc "Z of the center point. Default:  0 "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "degree d"
		fdesc "The degree of the resulting circle: 1 - linear, 3 - cubic Default:  3 "
	fnames "first fp"
		fdesc "The start point of the circle if fixCenter is false. Determines the orientation of the circle if fixCenter is true. "
	fnames "firstPointX fpx"
		fdesc "X of the first point. Default:  1 "
	fnames "firstPointY fpy"
		fdesc "Y of the first point. Default:  0 "
	fnames "firstPointZ fpz"
		fdesc "Z of the first point. Default:  0 "
	fnames "fixCenter fc"
		fdesc "Fix the center of the circle to the specified center point. Otherwise the circle will start at the specified first point. Default:  true "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "normal nr"
		fdesc "The normal of the plane in which the circle will lie. "
	fnames "normalX nrx"
		fdesc "X of the normal direction. Default:  0 "
	fnames "normalY nry"
		fdesc "Y of the normal direction. Default:  0 "
	fnames "normalZ nrz"
		fdesc "Z of the normal direction. Default:  1 "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "radius r"
		fdesc "The radius of the circle. Default:  1.0 "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "sections s"
		fdesc "The number of sections determines the resolution of the circle. Used only if useTolerance is false. Default:  8 "
	fnames "sweep sw"
		fdesc "The sweep angle determines the completeness of the circle. A full circle is 2Pi radians, or 360 degrees. Default:  6.2831853 "
	fnames "tolerance tol"
		fdesc "The tolerance with which to build a circle. Used only if useTolerance is true Default:  0.01 "
	fnames "useTolerance ut"
		fdesc "Use the specified tolerance to determine resolution. Otherwise number of sections will be used. Default:  false "
	rcount "0"
name "circularFillet"
	desc "The cmd is used to compute the rolling ball surface fillet ( circular fillet ) between two given NURBS surfaces. To generate trim curves on the surfaces, use -cos true."
	fcount "12"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "positionTolerance pt"
		fdesc "C(0) Tolerance For Fillet Surface Default:  0.01 "
	fnames "primaryRadius pr"
		fdesc "primary Radius Default:  1.0 "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "secondaryRadius sr"
		fdesc "secondary Radius Default:  1.0 "
	fnames "tangentTolerance tt"
		fdesc "G(1) Tolerance For Fillet Surface Default:  0.01 "
	rcount "1"
		rname "freeFormFillet"
name "clamp"
	desc "The first two arguments are min and max values respectively. The third argument is the value which this command clamps to the min-max range. If number is outside the range, the return value is clamped to min or max, otherwise, it is the same as the passed in number."
	fcount "0"
	rcount "0"
name "clear"
	desc "Frees the memory being used by an array after it is no longer needed. After an array is cleared, its size will be zero."
	fcount "0"
	rcount "0"
name "clearCache"
	desc "ClearCache is NOT undoable , NOT queryable , and NOT editable . Even though dependency graph values are computed or dirty they may still occupy space temporarily within the nodes. This command goes in to all of the data that can be regenerated if required and removes it from the caches, thus clearing up space in memory."
	fcount "3"
	fnames "allNodes all"
		fdesc "If toggled then all nodes in the graph are cleared.  Otherwise only those nodes that are selected are cleared. "
	fnames "computed c"
		fdesc "If toggled then remove all data that is computable.  (Warning: If the data is requested for redraw then the recompute will immediately fill the data back in.) "
	fnames "dirty d"
		fdesc "If toggled then remove all heavy data that is dirty. "
	rcount "0"
name "clip"
	desc "Clip is undoable , queryable , and editable . This command is used to create, edit and query character clips."
	fcount "28"
	fnames "absolute abs"
		fdesc "This flag controls whether the clip follows its keyframe values or whether they are offset by a value to maintain a smooth path. Default is true. "
	fnames "absoluteRotations abr"
		fdesc "If true, this overrides the -absolute flag so that rotation channels are always calculated with absolute offsets. This allows you to have absolute offsets on rotations and relative offsets on all other channels. "
	fnames "active a"
		fdesc "Query or edit the active clip. This flag is not valid in create mode. Making a clip active causes its animCurves to be hooked directly to the character attributes in addition to being attached to the clip library node. This makes it easier to access the animCurves if you want to edit, delete or add additional animCruves to the clip. "
	fnames "addTrack at"
		fdesc "This flag is now obsolete, use `clipSchedule -insertTrack` instead. "
	fnames "allClips ac"
		fdesc "This flag is used to query all the clips in the scene. Nodes of type "animClip" that are storing poses, are not returned by this command. "
	fnames "allSourceClips asc"
		fdesc "This flag is used to query all the source clips in the scene. Nodes of type "animClip" that are storing poses or clip instances, are not returned by this command. "
	fnames "animCurveRange acr"
		fdesc "This flag can be used at the time you create the clip instead of the startTime and endTime flags. It specifies that you want the range of the clip to span the range of keys in the clips associated animCurves. "
	fnames "character ch"
		fdesc "This is a query only flag which operates on the specified clip. It returns the names of any characters that a clip is associated with. "
	fnames "constraint cn"
		fdesc "This creates a clip out of any constraints on the character. The constraint will be moved off of the character and into the clip, so that it is only active for the duration of the clip, and its value can be scaled/offset/cycled according to the clip attributes. "
	fnames "copy c"
		fdesc "This flag is used to copy a clip or clips to the clipboard. It should be used in conjunction with the name flag to copy the named clips on the specified character and its subcharacters. In query mode, this flag allows you to query what, if anything, has been copied into the clip clipboard. "
	fnames "duplicate d"
		fdesc "Duplicate the clip specified by the name flag. The start time of the new clip should be specified with the startTime flag. "
	fnames "endTime end"
		fdesc "Specify the clip end "
	fnames "expression ex"
		fdesc "This creates a clip out of any expressions on the character. The expression will be moved off of the character and into the clip, so that it is only active for the duration of the clip, and its value can be scaled/offset/cycled according to the clip attributes. "
	fnames "ignoreSubcharacters is"
		fdesc "During clip creation, duplication and isolation, subcharacters are included by default. If you want to create a clip on the top level character only, or you want to duplicate the clip on the top level character without including subCharacters, use the ignoreSubcharacters flag. "
	fnames "isolate i"
		fdesc "This flag should be used in conjunction with the name flag to specify that a clip or clips should be copied to a new clip library. The most common use of this flag is for export, when you want to only export certain clips from the character, without exporting all of the clips. "
	fnames "leaveOriginal lo"
		fdesc "This flag is used when creating a clip to specify that the animation curves should be copied to the clip library, and left on the character. "
	fnames "mapMethod mm"
		fdesc "This is is valid with the paste and pasteInstance flags only. It specifies how the mapping should be done. Valid options are: "byNodeName", "byAttrName", "byCharacterMap", "byAttrOrder", "byMapOrAttrName" and "byMapOrNodeName". "byAttrName" is the default. The flags mean the following: "byAttrOrder" maps using the order that the character stores the attributes internally, "byAttrName" uses the attribute name to find a correspondence, "byNodeName" uses the node name *and* the attribute name to find a correspondence, "byCharacterMap" uses the existing characterMap node to do the mapping. "byMapOrAttrName" uses a character map if one exists, otherwise uses the attribute name. "byMapOrNodeName" uses a character map if one exists, otherwise uses the attribute name. "
	fnames "name n"
		fdesc "In create mode, specify the clip name. In query mode, return a list of all the clips. In duplicate mode, specify the clip to be duplicated. In copy mode, specify the clip to be copied. This flag is multi-use, but multiple use is only supported with the copy flag. For use during create and with all other flags, only the first instance of the name flag will be utilized. "
	fnames "newName nn"
		fdesc "Rename a clip. Must be used in conjunction with the clip name flag, which is used to specify the clip to be renamed. "
	fnames "paste p"
		fdesc "This flag is used to paste a clip or clips from the clipboard to a character. Clips are added to the clipboard using the clip -copy command. "
	fnames "pasteInstance pi"
		fdesc "This flag is used to paste an instance of a clip or clips from the clipboard to a character. Unlike the -p/-paste flag, which duplicates the animCurves from the original source clip, the -pi/-pasteInstance flag shares the animCurves from the source clip. "
	fnames "remove rm"
		fdesc "Remove the clip specified by the name flag. The clip will be permanently removed from the library and deleted from any times where it has been scheduled. "
	fnames "removeTrack rt"
		fdesc "This flag is now obsolete, use `clipSchedule -removeTrack` instead. "
	fnames "scheduleClip sc"
		fdesc "This flag is used when creating a clip to specify whether or not the clip should immediately be scheduled at the current time. If the clip is not scheduled, the clip will be placed in the library for future use, but will not be placed on the timeline. This flag is for use only when creating a new clip or duplicating an existing. The default is true. "
	fnames "sourceClipName scn"
		fdesc "This flag is for query only. It returns the name of the source clip that controls an instanced clip. "
	fnames "split sp"
		fdesc "Split an existing clip into two clips. The split occurs around the specified time. "
	fnames "startTime s"
		fdesc "Specify the clip start "
	fnames "useChannel uc"
		fdesc "Specify which channels should be acted on. This flag is valid only in conjunction with clip creation, and the isolate flag. The specified channels must be members of the character. "
	rcount "7"
		rname "bakeClip"
		rname "character"
		rname "characterMap"
		rname "characterOutlineEditor"
		rname "clipEditor"
		rname "clipSchedule"
		rname "pose"
name "clipEditor"
	desc "Create a clip editor with the given name."
	fcount "42"
	fnames "allTrackHeights th"
		fdesc "Set/return the height of a track in all editors.  The value is specified in number of rows.  Default is 1. Valid values are 1 or 2. "
	fnames "autoFit af"
		fdesc "on | off | tgl auto fit-to-view "
	fnames "characterOutline co"
		fdesc "Sets/returns the character outline to use with the clip editor "
	fnames "clipDropCmd cd"
		fdesc "Command executed when clip node is dropped on the TraX editor "
	fnames "control ctl"
		fdesc "Query only. Returns the top level control for this editor. Usually used for getting a parent to attach popup menus. CAUTION: editors may not have controls at times.  This flag can return "NONE" if no control is present. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "deleteCmd dc"
		fdesc "Command executed when   key is pressed "
	fnames "deselectAll da"
		fdesc "Deselect all clips and blends in the editor. "
	fnames "displayActiveKeyTangents dat"
		fdesc "on | off | tgl display tangents in the editor "
	fnames "displayActiveKeys dak"
		fdesc "on | off | tgl display tangents in the editor "
	fnames "displayInfinities di"
		fdesc "on | off | tgl display infinities in the editor "
	fnames "displayKeys dk"
		fdesc "on | off | tgl display keyframes in the editor "
	fnames "displayTangents dtn"
		fdesc "on | off | tgl display tangents in the editor "
	fnames "docTag dtg"
		fdesc "Attaches a tag to the maya editor. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "filter f"
		fdesc "Specifies the name of a filter to be placed on this editor. This filters the information coming onto the main list of the editor. "
	fnames "forceMainConnection fmc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. This is a variant of the -mainListConnection flag in that it will force a change even when the connection is locked. This flag is used to reduce the overhead when using the -unlockMainConnection , -mainListConnection, -lockMainConnection flags in immediate  succession. "
	fnames "frameAll fa"
		fdesc "Frame view around all clips in the editor. "
	fnames "frameRange fr"
		fdesc "Frame view around start/end of range "
	fnames "highlightConnection hlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its highlight list.  Not all editors have a highlight list.  For those who do, it is sort of a secondary selection list. "
	fnames "highlightedBlend hb"
		fdesc "Returns the highlighted blend, listed as scheduler and index "
	fnames "highlightedClip hc"
		fdesc "Returns the highlighted clip, listed as scheduler and index "
	fnames "listAllCharacters lac"
		fdesc "List all characters in the editor and outliner. "
	fnames "listCurrentCharacters lc"
		fdesc "List only the characters in the editor and outliner. "
	fnames "lockMainConnection lck"
		fdesc "Locks the current list of objects within the mainConnection, so that only those objects are displayed within the editor. Further changes to the original mainConnection are ignored. "
	fnames "lookAt la"
		fdesc "all | selected | currentTime fitView helpers "
	fnames "mainListConnection mlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. "
	fnames "menuContext mc"
		fdesc "Returns a string array denoting the type of data object the cursor is over.  Returned values are: {"timeSlider"} {"nothing"} {"track", "track index", "character node name", "group name"} {"clip", "clip node name"} "
	fnames "panel pnl"
		fdesc "Specifies the panel that the editor belongs to.  By default if an editor is created in the create callback of a scripted panel it will belong to that panel.  If an editor doesn't belong to a panel it will be deleted when the window that it is in is deleted. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this editor. This flag will only have an effect if the editor is currently un-parented. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "selectBlend sb"
		fdesc "Select the blends specified by the scheduler name and the indicies of the two clips used in the blend. When queried, a string containing the scheduler name and the two clip indicies for all of the selected blends is returned. "
	fnames "selectClip sc"
		fdesc "Selects the clip specified by the scheduler name and the clip index. When queried, a string containing the scheduler and clip index of all of the selected clips is returned. "
	fnames "selectionConnection slc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its own selection list.  As the user selects things in this editor, they will be selected in the selectionConnection object.  If someone else changes the object, the editor will update to show the change. "
	fnames "snapTime st"
		fdesc "none | integer | keyframe keyframe move snap in time "
	fnames "snapValue sv"
		fdesc "none | integer | keyframe keyframe move snap in values "
	fnames "stateString sts"
		fdesc "Query only flag.  Returns the MEL command that will edit an editor to match the current editor state. The returned command string uses the string variable $editorName in place of a specific name. "
	fnames "unParent up"
		fdesc "Specifies that the editor should be removed from its layout. This cannot be used with query. "
	fnames "unlockMainConnection ulk"
		fdesc "Unlocks the mainConnection, effectively restoring the original mainConnection (if it is still available), and dynamic updates. "
	fnames "updateMainConnection upd"
		fdesc "Causes a locked mainConnection to be updated from the orginal mainConnection, but preserves the lock state. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "clipEditorCurrentTimeCtx"
	desc "This command creates a context which may be used to change current time within the track area of a clip editor."
	fcount "8"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "clipSchedule"
	desc "ClipSchedule is undoable , queryable , and editable . This command is used to create, edit and query clips and blends in the Trax editor. It operates on the clipScheduler node attached to the character. In query mode, if no flags are specified, returns an array of strings in this form: (clipName,clipIndex,clipStart,clipSourceStart,clipSourceEnd,clipScale,clipPreCycle,clipPostCycle,clipHold)."
	fcount "34"
	fnames "absolute abs"
		fdesc "This flag controls whether the clip follows its keyframe values or whether they are offset by a value to maintain a smooth path. "
	fnames "absoluteRotations abr"
		fdesc "If true, this overrides the -absolute flag so that rotation channels are always calculated with absolute offsets. This allows you to have absolute offsets on rotations and relative offsets on all other channels. "
	fnames "blend b"
		fdesc "This flag is used to blend two clips, whose indices are provided as flag arguments. "
	fnames "blendNode bn"
		fdesc "This query only flag list all of the blend nodes associated with the blend defined by the two clip indices. This flag returns a string array. "
	fnames "blendUsingNode bun"
		fdesc "This flag is used if you want to blend using an existing blend node. It is used in conjunction with the -blend flag. The -blend flag specifies the clip indices for the blend. The name of an existing animBlend node should be supplied supplied as an argument for the -blendUsingNode flag. "
	fnames "character ch"
		fdesc "This flag is used to query which characters this scheduler controls. It returns an array of strings. "
	fnames "clipIndex ci"
		fdesc "Specify the index of the clip to schedule. In query mode, returns an array of strings in this form: (clipName,index,start,sourceStart,sourceEnd,scale,preCycle,postCycle) "
	fnames "cycle c"
		fdesc "This flag is now obsolete, use the -postCycle flag instead. "
	fnames "enable en"
		fdesc "This flag is used to enable or disable a clip. It must be used in conjunction with the -clipIndex/-ci flag. The specified clip will be enabled or disabled. "
	fnames "group grp"
		fdesc "This flag is used to add (true) or remove (false) a list of clips (specified with groupIndex) into a group. "
	fnames "groupIndex gri"
		fdesc "This flag specifies a multiple number of clips to be added or removed from a group. "
	fnames "groupName gn"
		fdesc "This flag is used to specify the group that should be added to.  If no group by that name exists and new group is created with that name.  By default if this is not specified a new group will be created. "
	fnames "hold ph"
		fdesc "Specify how long to hold the last value of the clip after its normal or cycled end. "
	fnames "insertTrack it"
		fdesc "This flag is used to insert a new empty track at the track index specified. "
	fnames "instance in"
		fdesc "Create an instanced copy of the named clip. An instanced clip is one that is linked to an original clip. Thus, changes to the animation curve of the original curve will also modify all instanced clips. The name of the instanced clip is returned as a string. "
	fnames "listCurves lc"
		fdesc "This flag is used to list the animation curves associated with a clip. It should be used in conjunction with the clipIndex flag, which specifies the clip of interest. "
	fnames "listPairs lp"
		fdesc "This query only flag returns a string array containing the channels in a character that are used by a clip and the names of the animation curves that drive the channels. Each string in the string array consists of the name of a channel, a space, and the name of the animation curve animating that channel. This flag must be used with the -ci/clipIndex flag. "
	fnames "name n"
		fdesc "This flag is used to query the name of the clip node associated with the specified clip index, or to specify the name of the instanced clip during instancing. "
	fnames "postCycle poc"
		fdesc "Specify the number of times to repeat the clip after its normal end. "
	fnames "preCycle prc"
		fdesc "Specify the number of times to repeat the clip before its normal start. "
	fnames "remove rm"
		fdesc "This flag is used to remove a clip from the timeline. It must be used in conjunction with the -clipIndex/-ci flag. The specified clip will be removed from the timeline, but will still exist in the library and any instanced clips will remain in the timeline. To permanently remove a clip from the scene, the clip command should be used instead. "
	fnames "removeBlend rb"
		fdesc "This flag is used to remove an existing blend between two clips, whose indices are provided as flag arguments. "
	fnames "removeEmptyTracks ret"
		fdesc "This flag is used to remove all tracks that have no clips. "
	fnames "removeTrack rt"
		fdesc "This flag is used to remove the track with the specified index.  The track must have no clips on it before it can be removed. "
	fnames "scale sc"
		fdesc "Specify the amount to scale the clip. Values must be greater than 0. "
	fnames "shift sh"
		fdesc "This flag allows multiple clips to be shifted by a certain number of tracks and works in conjunction with the shiftIndex flag.  The flag specifies the number of tracks to shift the associated clips.  Positive values shift the clips down an negative values shift the clips up. "
	fnames "shiftIndex shi"
		fdesc "This flag allows multiple clips to be shifted by a certain number of tracks and works in conjunction with the shiftAmount flag.  The flag specifies the index of the clip to shift.  This flag can be used multiple times on the command line to specify a number of clips to shift. "
	fnames "sourceClipName scn"
		fdesc "This flag is used to query the name of the source clip node associated with the specified clip index. "
	fnames "sourceEnd se"
		fdesc "Specify where to end in the source clip's animation curves "
	fnames "sourceStart ss"
		fdesc "Specify where to start in the source clip's animation curves "
	fnames "start s"
		fdesc "Specify the placement of the start of the clip "
	fnames "track t"
		fdesc "Specify the track the clip should be place on.  In query mode, returns the track number of the clip, where track 1 is the first track of the character. "
	fnames "weight w"
		fdesc "This flag is used in to set or query the weight of the clip associated with the specified clip index. "
	fnames "weightStyle ws"
		fdesc "This flag is used to set or query the weightStyle attribute of the clip associated with the specified clip index. "
	rcount "6"
		rname "bakeClip"
		rname "character"
		rname "characterMap"
		rname "characterOutlineEditor"
		rname "clip"
		rname "clipEditor"
name "clipSchedulerOutliner"
	desc "This command creates/edits/queries a clip scheduler outliner control."
	fcount "20"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "clipScheduler cs"
		fdesc "Name of the clip scheduler for which to display information. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "10"
		rname "copyKey"
		rname "cutKey"
		rname "pasteKey"
		rname "snapKey"
		rname "keyframe"
		rname "keyframeStats"
		rname "scaleKey"
		rname "setInfinity"
		rname "keyTangent"
		rname "findKeyframe"
name "clipTrimBefore"
	desc "Script for trimming the part of a clip that is before the current time."
	fcount "0"
	rcount "0"
name "closeCurve"
	desc "The closeCurve command closes a curve, making it periodic. The pathname to the newly closed curve and the name of the resulting dependency node are returned. If a curve is not specified in the command, then the first active curve will be used."
	fcount "12"
	fnames "blendBias bb"
		fdesc "Skew the result toward the first or the second curve depending on the blend value being smaller or larger than 0.5. Default:  0.5 "
	fnames "blendKnotInsertion bki"
		fdesc "If set to true, insert a knot in one of the original curves (relative position given by the parameter attribute below) in order to produce a slightly different effect. Default:  false "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "parameter p"
		fdesc "The parameter value for the positioning of the newly inserted knot. Default:  0.1 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "preserveShape ps"
		fdesc "0 - without preserving the shape 1 - preserve shape 2 - blend Default:  1 "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	rcount "0"
name "closeSurface"
	desc "The closeSurface command closes a surface in the U, V, or both directions, making it periodic. The close direction is controlled by the direction flag. If a surface is not specified in the command, then the first selected surface will be used. The pathname to the newly closed surface and the name of the resulting dependency node are returned. This command also handles selected surface isoparms. For example, if an isoparm is specified, surface1.u[0.33], then the surface will be closed in V, regardless of the direction flag."
	fcount "13"
	fnames "blendBias bb"
		fdesc "Skew the result toward the first or the second surface depending on the blend value being smaller or larger than 0.5. Default:  0.5 "
	fnames "blendKnotInsertion bki"
		fdesc "If set to true, insert a knot in one of the original surfaces (relative position given by the parameter attribute below) in order to produce a slightly different effect. Default:  false "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "direction d"
		fdesc "The direction in which to close: 0 - U, 1 - V, 2 - Both U and V Default:  0 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "parameter p"
		fdesc "The parameter value for the positioning of the newly inserted knot. Default:  0.1 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "preserveShape ps"
		fdesc "0 - without preserving the shape 1 - preserve shape 2 - blend Default:  1 "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	rcount "0"
name "cluster"
	desc "The cluster command creates a cluster or edits the membership of an existing cluster. The command returns the name of the cluster node upon creation of a new cluster. After creating a cluster, the cluster's weights can be modified using the percent command or the set editor window."
	fcount "16"
	fnames "after af"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node after the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "before bf"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node before the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "bindState bs"
		fdesc "Specifying this flag adds in a compensation to ensure  the clustered objects preserve their spatial position when clustered. This is required to prevent the geometry from jumping at the time the cluster is created in situations when the cluster transforms at cluster time are not identity. "
	fnames "deformerTool dt"
		fdesc "Returns the name of the deformer tool objects (if any) as string string ... "
	fnames "envelope en"
		fdesc "Set the envelope value for the deformer. Default is 1.0 "
	fnames "exclusive ex"
		fdesc "Puts the deformation set in a deform partition. "
	fnames "frontOfChain foc"
		fdesc "This command is used to specify that the new deformer  node should be placed ahead (upstream) of existing deformer and skin nodes in the shape's history (but not ahead of existing tweak nodes). The input to the deformer will be the upstream shape rather than the visible downstream shape, so the behavior of this flag is the most intuitive if the downstream deformers are in their reset (hasNoEffect) position when the new deformer is added. "
	fnames "geometry g"
		fdesc "The specified object will be added to the list of objects being deformed by this deformer object, unless the -rm flag is also specified. When queried, this flag returns string string string ... "
	fnames "ignoreSelected is"
		fdesc "Tells the command to not deform objects on the current selection list "
	fnames "name n"
		fdesc "Used to specify the name of the node being created "
	fnames "prune pr"
		fdesc "Removes any points not being deformed by the deformer in  its current configuration from the deformer set. "
	fnames "relative rel"
		fdesc "Enable relative mode for the cluster. In relative mode, Only the transformations directly above the cluster are used by the cluster. Default is off. "
	fnames "remove rm"
		fdesc "Specifies that objects listed after the -g flag should be removed from this deformer. "
	fnames "resetGeometry rg"
		fdesc "Reset the geometry matrices for the objects being deformed by the cluster. This flag is used to get rid of undesirable effects that happen if you scale an object that is deformed by a cluster. "
	fnames "split sp"
		fdesc "Branches off a new chain in the dependency graph instead of inserting/appending the deformer into/onto an existing chain. "
	fnames "weightedNode wn"
		fdesc "Transform node in the DAG above the cluster to which all percents are applied. fromNode specifies the descendent of  nodeName from where the transformation matrix is evaluated. Default is the cluster handle. "
	rcount "7"
		rname "lattice"
		rname "sculpt"
		rname "deformer"
		rname "flexor"
		rname "wire"
		rname "wrinkle"
		rname "percent"
name "cmdFileOutput"
	desc "This command will open a text file to which will be dumped all of the commands and results that normally get printed to the script window or console. The file will stay open until an explicit -close with the correct file descriptor or a -closeAll, so care should be taken not to leave a file open."
	fcount "4"
	fnames "close c"
		fdesc "Closes the file corresponding to the given descriptor. If -3 is returned, the file did not exists. -1 is returned  on error, 0 is returned on successful close. "
	fnames "closeAll ca"
		fdesc "Closes all open files. "
	fnames "open o"
		fdesc "Opens the given file for writing (will overwrite if it exists and is writable). If successful, a value is returned to enable  status queries and file close. -1 is returned if the file cannot be opened for writing. "
	fnames "status s"
		fdesc "Queries the status of the given descriptor. -3 is returned if no such file exists, -2 indicates the file is not open, -1 indicates an error condition, 0 indicates file is ready  for writing. "
	rcount "0"
name "cmdShell"
	desc "This command creates a scrolling field that behaves similar to a unix shell for entering user input. You may specify the number of lines that will be remembered by the field with the -nsl/numberOfSavedLines flag. The default number of lines saved is 100. The shellField also maintains a command history buffer. You can specify the number of input lines that will be saved with the -hlc/historyLineCount flag. The default size of this buffer is 10."
	fcount "23"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "clear cl"
		fdesc "Erases all visible text, and also deletes any text that had scrolled of the top of the field.  After clearing the field it will be blank, and you will not be able to scroll up to see previous lines.  This flag does not affect the command history buffer, however. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfHistoryLines nhl"
		fdesc "The number of input lines to be saved in the command history buffer.  You can cycle through this buffer by pressing the up and down arrow keys.  Valid values are 0 through 32767.  Any value less than 0 will be handled as if 0 was specified.  Similarly, any value greater than 32767 will be handled as if 32767 was specified. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "numberOfSavedLines nsl"
		fdesc "The total number of lines (the scrolled lines and currently visible lines) that will be remembered by the field. Any lines beyond this number will be lost, and the user will not be able to review them by scrolling.  Valid values are 1 through 32767.  Any value less than 1 will be handled as if 1 was specified.  Similarly, any value greater than 32767 will be handled as if 32767 was specified. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "prompt pr"
		fdesc "The text that is used as a prompt. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "collision"
	desc "The collision command causes particles to collide with geometry. It also allows you to specify values for the surface properties (friction and resilience) of the collision. These values are stored in the geoConnector node for the geometry object. Unlike earlier versions of Maya, there is no separate "collision node." If a soft object is in the selection list, the collision command assumes that you want to make it a collider. In order to make the soft object collide with something use, use connectDynamic -c. The collision menu option sorts this out using the lead object rule and issues the necessary.... Refer to full documentation"
	fcount "3"
	fnames "friction f"
		fdesc "Friction of the surface.  This is the amount of the colliding particle's velocity parallel to the surface which is removed when the particle collides. A value of 0 will mean that no tangential velocity is lost, while a value of 1 will cause the particle to reflect straight along the normal of the surface. "
	fnames "name n"
		fdesc "This flag is obsolete.  In maya 2.0, there is no longer a separate "collision node," thus there is nothing to name.  See the collision documentation.  This flag is included only to allow scripts written with older versions of Maya to run. It will give you a warning message but will not do anything. "
	fnames "resilience r"
		fdesc "Resilience of the surface.  This is the amount of the colliding particle's velocity reflected along the normal of the surface.  A value of 1 will give perfect reflection, while a value of 0 will have no reflection along the normal of the surface. "
	rcount "2"
		rname "particle"
		rname "event"
name "color"
	desc "This command sets the dormant wireframe color of the specified objects to be their class color or if the -ud/userDefined flag is specified, one of the user defined colors."
	fcount "1"
	fnames "userDefined ud"
		fdesc "Specifies the user defined color index to set selected object to. The valid range of numbers is [1-8]. "
	rcount "0"
name "colorAtPoint"
	desc "ColorAtPoint is NOT undoable , NOT queryable , and NOT editable . The colorAtPoint command is used to query textures or ocean shaders at passed in uv coordinates. (For ocean shaders uv is x and z in worldspace ). The return value is a floating point array whose size is determined by either the number of input uv arguments passed in and the the queried value. One can query alpha only, rgb only, or rgba values. The returned array is only single indexed, so if rgb is specified then the index for red values would be index * 3. Blue.... Refer to full documentation"
	fcount "9"
	fnames "output o"
		fdesc "Type of data to output: A 	 = alpha only RGB  = color only RGBA = color and alpha "
	fnames "coordU u"
		fdesc "Input u coordinate to sample texture at. "
	fnames "coordV v"
		fdesc "Input v coordinate to sample texture at. "
	fnames "minU mu"
		fdesc "DEFAULT 0.0 Minimum u bounds to sample. "
	fnames "minV mv"
		fdesc "DEFAULT 0.0 Minimum v bounds to sample. "
	fnames "maxU xu"
		fdesc "DEFAULT 1.0 Maximum u bounds to sample. "
	fnames "maxV xv"
		fdesc "DEFAULT 1.0 Maximum v bounds to sample. "
	fnames "samplesU su"
		fdesc "DEFAULT 1 The number of points to sample in the U dimension. "
	fnames "samplesV sv"
		fdesc "DEFAULT 1 The number of points to sample in the V dimension. "
	rcount "0"
name "colorEditor"
	desc "The colorEditor command displays a modal dialog that may be used to specify colors in RGB or HSV. The default behaviour when no arguments are specified is to provide an initial color of white (rgb 1.0 1.0 1.0). The command will return the user's color component values along with a boolean to indicate whether the dialog was dismissed by pressing the "OK" button. As an alternative to responding to the colorEditor command's return string you can now query the -rgb/rgbValue , -hsv/hsvValue , and -r/result flags to get the same information."
	fcount "5"
	fnames "alpha a"
		fdesc "Alpha value ranging from 0.0 to 1.0.  Use this flag to specify the initial alpha value of the Color Editor, or query this flag to determine the alpha value set in the editor. "
	fnames "hsvValue hsv"
		fdesc "Three float values corresponding to the hue, saturation, and  value color components, where the hue value ranges from 0.0 to 360.0  and the saturation and value components range from 0.0 to 1.0.  Use  this flag to specify the initial color of the Color Editor, or query this flag to determine the color set in the editor. "
	fnames "parent p"
		fdesc "Specify the parent window for the dialog.  The dialog will be centered on this window and raise and lower with it's parent. By default, the dialog is not parented to a particular window and is simply centered on the screen. "
	fnames "result r"
		fdesc "This query only flag returns true if the dialog's "OK" button was pressed, false otherwise.  If you query this flag immediately after showing the Color Editor then it will return the same value as the boolean value returned in the  colorEditor  command's  return string. "
	fnames "rgbValue rgb"
		fdesc "Three float values corresponding to the red, green, and blue  color components, all of which range from 0.0 to 1.0.  Use this flag to specify the initial color of the Color Editor, or query this flag to determine the color set in the editor. "
	rcount "0"
name "colorIndex"
	desc "The index specifies a color index in the color palette. The r, g, and b values (between 0-1) specify the RGB values (or the HSV values if the -hsv flag is used) for the color."
	fcount "4"
	fnames "hueSaturationValue hsv"
		fdesc "Indicates that rgb values are really hsv values. Upon query, returns the HSV valuses as an array of 3 floats. "
	fnames "q query"
		fdesc "Allows you to query a color for a given index, either in the RGB color space or the HSV color space.      "
	fnames "resetToFactory rf"
		fdesc "Resets all color index palette entries to their factory defaults. "
	fnames "resetToSaved rs"
		fdesc "Resets all color palette entries to their saved values. "
	rcount "0"
name "colorIndexSliderGrp"
	desc "All of the group commands position their individual controls in columns starting at column 1. The layout of each control (ie. column) can be customized using the -cw/columnWidth , -co/columnOffset , -cat/columnAttach , -cal/columnAlign , and -adj/adjustableColumn flags. By default, columns are left aligned with no offset and are 100 pixels wide. Only one column in any group can be adjustable. This command creates a color slider group consisting of a label, a color canvas and a slider. The value of the slider defines a color index into the a color table. The corresponding color is displayed in the canvas."
	fcount "58"
	fnames "adjustableColumn adj"
		fdesc "Specifies which column has an adjustable size that changes with the sizing of the layout.  The column value is a 1-based index.  You may also specify 0 to turn off the previous adjustable column. "
	fnames "adjustableColumn2 ad2"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly two columns.  "
	fnames "adjustableColumn3 ad3"
		fdesc "Specifies that the column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly three columns.  "
	fnames "adjustableColumn4 ad4"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly four columns.  "
	fnames "adjustableColumn5 ad5"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly five columns.  "
	fnames "adjustableColumn6 ad6"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly six columns.  "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed when the value changes.  This command is not invoked when the value changes via the -v/value flag. "
	fnames "columnAlign cal"
		fdesc "Arguments are : column number, alignment type. Possible alignments are: left | right | center.  Specifies alignment type for the specified column. "
	fnames "columnAlign2 cl2"
		fdesc "Sets the text alignment of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign3 cl3"
		fdesc "Sets the text alignment for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign4 cl4"
		fdesc "Sets the text alignment for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign5 cl5"
		fdesc "Sets the text alignment for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign6 cl6"
		fdesc "Sets the text alignment for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "center". "
	fnames "columnAttach cat"
		fdesc "Arguments are : column number, attachment type, and offset. Possible attachments are: left | right | both.  Specifies column attachment types and offets. "
	fnames "columnAttach2 ct2"
		fdesc "Sets the attachment type of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach3 ct3"
		fdesc "Sets the attachment type for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach4 ct4"
		fdesc "Sets the attachment type for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach5 ct5"
		fdesc "Sets the attachment type for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach6 ct6"
		fdesc "Sets the attachment type for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "both". "
	fnames "columnOffset2 co2"
		fdesc "This flag is used in conjunction with the -columnAttach2 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the two columns.  The offsets applied are based on the attachments  specified with the -columnAttach2 flag.  Ignored if there is not exactly two columns.  "
	fnames "columnOffset3 co3"
		fdesc "This flag is used in conjunction with the -columnAttach3 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the three columns.  The offsets applied are based on the attachments  specified with the -columnAttach3 flag.  Ignored if there is not exactly three columns.  "
	fnames "columnOffset4 co4"
		fdesc "This flag is used in conjunction with the -columnAttach4 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the four columns.  The offsets applied are based on the attachments  specified with the -columnAttach4 flag.  Ignored if there is not exactly four columns.  "
	fnames "columnOffset5 co5"
		fdesc "This flag is used in conjunction with the -columnAttach5 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the five columns.  The offsets applied are based on the attachments  specified with the -columnAttach5 flag.  Ignored if there is not exactly five columns.  "
	fnames "columnOffset6 co6"
		fdesc "This flag is used in conjunction with the -columnAttach6 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the six columns.  The offsets applied are based on the attachments  specified with the -columnAttach6 flag.  Ignored if there is not exactly six columns.  "
	fnames "columnWidth cw"
		fdesc "Arguments are : column number, column width. Sets the width of the specified column where the first parameter specifies the column (1 based index) and the second parameter specifies the width. "
	fnames "columnWidth1 cw1"
		fdesc "Sets the width of the first column.  Ignored if there is not  exactly one column. "
	fnames "columnWidth2 cw2"
		fdesc "Sets the column widths of both columns.  Ignored if there is not exactly two columns. "
	fnames "columnWidth3 cw3"
		fdesc "Sets the column widths for all 3 columns.  Ignored if there is not exactly 3 columns. "
	fnames "columnWidth4 cw4"
		fdesc "Sets the column widths for all 4 columns.  Ignored if there is not exactly 4 columns. "
	fnames "columnWidth5 cw5"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "columnWidth6 cw6"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dragCommand dc"
		fdesc "Command executed when the value changes by dragging the slider's value marker. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "extraLabel el"
		fdesc "Sets the string to be the text for the extra label. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "invisible i"
		fdesc "Set the invisible color index. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "Label text for the group. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "maxValue max"
		fdesc "Maximum color index. "
	fnames "minValue min"
		fdesc "Minimum color index. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rowAttach rat"
		fdesc "Arguments are : attachment type, offset. Possible attachments are: top | bottom | both.  Specifies attachment types  and offsets for the entire row.   "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "value v"
		fdesc "Color index. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "colorSliderButtonGrp"
	desc "All of the group commands position their individual controls in columns starting at column 1. The layout of each control (ie. column) can be customized using the -cw/columnWidth , -co/columnOffset , -cat/columnAttach , -cal/columnAlign , and -adj/adjustableColumn flags. By default, columns are left aligned with no offset and are 100 pixels wide. Only one column in any group can be adjustable. This command object creates a new color slider group with a button and a symbol button. This control is primarily used in the rendering UI. In this context, the button brings up a dialog that allows the user to.... Refer to full documentation"
	fcount "60"
	fnames "adjustableColumn adj"
		fdesc "Specifies which column has an adjustable size that changes with the sizing of the layout.  The column value is a 1-based index.  You may also specify 0 to turn off the previous adjustable column. "
	fnames "adjustableColumn2 ad2"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly two columns.  "
	fnames "adjustableColumn3 ad3"
		fdesc "Specifies that the column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly three columns.  "
	fnames "adjustableColumn4 ad4"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly four columns.  "
	fnames "adjustableColumn5 ad5"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly five columns.  "
	fnames "adjustableColumn6 ad6"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly six columns.  "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "buttonCommand bc"
		fdesc "Command string executed when the button is pressed. "
	fnames "buttonLabel bl"
		fdesc "The button text. "
	fnames "changeCommand cc"
		fdesc "Command string executed when slider value changes. "
	fnames "columnAlign cal"
		fdesc "Arguments are : column number, alignment type. Possible alignments are: left | right | center.  Specifies alignment type for the specified column. "
	fnames "columnAlign2 cl2"
		fdesc "Sets the text alignment of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign3 cl3"
		fdesc "Sets the text alignment for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign4 cl4"
		fdesc "Sets the text alignment for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign5 cl5"
		fdesc "Sets the text alignment for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign6 cl6"
		fdesc "Sets the text alignment for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "center". "
	fnames "columnAttach cat"
		fdesc "Arguments are : column number, attachment type, and offset. Possible attachments are: left | right | both.  Specifies column attachment types and offets. "
	fnames "columnAttach2 ct2"
		fdesc "Sets the attachment type of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach3 ct3"
		fdesc "Sets the attachment type for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach4 ct4"
		fdesc "Sets the attachment type for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach5 ct5"
		fdesc "Sets the attachment type for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach6 ct6"
		fdesc "Sets the attachment type for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "both". "
	fnames "columnOffset2 co2"
		fdesc "This flag is used in conjunction with the -columnAttach2 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the two columns.  The offsets applied are based on the attachments  specified with the -columnAttach2 flag.  Ignored if there is not exactly two columns.  "
	fnames "columnOffset3 co3"
		fdesc "This flag is used in conjunction with the -columnAttach3 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the three columns.  The offsets applied are based on the attachments  specified with the -columnAttach3 flag.  Ignored if there is not exactly three columns.  "
	fnames "columnOffset4 co4"
		fdesc "This flag is used in conjunction with the -columnAttach4 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the four columns.  The offsets applied are based on the attachments  specified with the -columnAttach4 flag.  Ignored if there is not exactly four columns.  "
	fnames "columnOffset5 co5"
		fdesc "This flag is used in conjunction with the -columnAttach5 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the five columns.  The offsets applied are based on the attachments  specified with the -columnAttach5 flag.  Ignored if there is not exactly five columns.  "
	fnames "columnOffset6 co6"
		fdesc "This flag is used in conjunction with the -columnAttach6 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the six columns.  The offsets applied are based on the attachments  specified with the -columnAttach6 flag.  Ignored if there is not exactly six columns.  "
	fnames "columnWidth cw"
		fdesc "Arguments are : column number, column width. Sets the width of the specified column where the first parameter specifies the column (1 based index) and the second parameter specifies the width. "
	fnames "columnWidth1 cw1"
		fdesc "Sets the width of the first column.  Ignored if there is not  exactly one column. "
	fnames "columnWidth2 cw2"
		fdesc "Sets the column widths of both columns.  Ignored if there is not exactly two columns. "
	fnames "columnWidth3 cw3"
		fdesc "Sets the column widths for all 3 columns.  Ignored if there is not exactly 3 columns. "
	fnames "columnWidth4 cw4"
		fdesc "Sets the column widths for all 4 columns.  Ignored if there is not exactly 4 columns. "
	fnames "columnWidth5 cw5"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "columnWidth6 cw6"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dragCommand dc"
		fdesc "Command string executed when slider value marker is dragged. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "hsvValue hsv"
		fdesc "Color in hue, saturation, and value format. "
	fnames "image i"
		fdesc "Image displayed on the symbol button. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "Label text for the group. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rgbValue rgb"
		fdesc "Color in red, green, and blue format. "
	fnames "rowAttach rat"
		fdesc "Arguments are : attachment type, offset. Possible attachments are: top | bottom | both.  Specifies attachment types  and offsets for the entire row.   "
	fnames "symbolButtonCommand sbc"
		fdesc "Command string executed when the symbol button is pressed. "
	fnames "symbolButtonDisplay sbd"
		fdesc "Visibility of the symbol button. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "colorSliderGrp"
	desc "All of the group commands position their individual controls in columns starting at column 1. The layout of each control (ie. column) can be customized using the -cw/columnWidth , -co/columnOffset , -cat/columnAttach , -cal/columnAlign , and -adj/adjustableColumn flags. By default, columns are left aligned with no offset and are 100 pixels wide. Only one column in any group can be adjustable. This command creates a color Slider group consisting of a label, a color canvas and a slider. Clicking on the canvas will bring up the color editor dialog."
	fcount "55"
	fnames "adjustableColumn adj"
		fdesc "Specifies which column has an adjustable size that changes with the sizing of the layout.  The column value is a 1-based index.  You may also specify 0 to turn off the previous adjustable column. "
	fnames "adjustableColumn2 ad2"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly two columns.  "
	fnames "adjustableColumn3 ad3"
		fdesc "Specifies that the column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly three columns.  "
	fnames "adjustableColumn4 ad4"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly four columns.  "
	fnames "adjustableColumn5 ad5"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly five columns.  "
	fnames "adjustableColumn6 ad6"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly six columns.  "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command string executed when slider value changes. "
	fnames "columnAlign cal"
		fdesc "Arguments are : column number, alignment type. Possible alignments are: left | right | center.  Specifies alignment type for the specified column. "
	fnames "columnAlign2 cl2"
		fdesc "Sets the text alignment of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign3 cl3"
		fdesc "Sets the text alignment for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign4 cl4"
		fdesc "Sets the text alignment for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign5 cl5"
		fdesc "Sets the text alignment for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign6 cl6"
		fdesc "Sets the text alignment for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "center". "
	fnames "columnAttach cat"
		fdesc "Arguments are : column number, attachment type, and offset. Possible attachments are: left | right | both.  Specifies column attachment types and offets. "
	fnames "columnAttach2 ct2"
		fdesc "Sets the attachment type of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach3 ct3"
		fdesc "Sets the attachment type for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach4 ct4"
		fdesc "Sets the attachment type for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach5 ct5"
		fdesc "Sets the attachment type for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach6 ct6"
		fdesc "Sets the attachment type for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "both". "
	fnames "columnOffset2 co2"
		fdesc "This flag is used in conjunction with the -columnAttach2 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the two columns.  The offsets applied are based on the attachments  specified with the -columnAttach2 flag.  Ignored if there is not exactly two columns.  "
	fnames "columnOffset3 co3"
		fdesc "This flag is used in conjunction with the -columnAttach3 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the three columns.  The offsets applied are based on the attachments  specified with the -columnAttach3 flag.  Ignored if there is not exactly three columns.  "
	fnames "columnOffset4 co4"
		fdesc "This flag is used in conjunction with the -columnAttach4 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the four columns.  The offsets applied are based on the attachments  specified with the -columnAttach4 flag.  Ignored if there is not exactly four columns.  "
	fnames "columnOffset5 co5"
		fdesc "This flag is used in conjunction with the -columnAttach5 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the five columns.  The offsets applied are based on the attachments  specified with the -columnAttach5 flag.  Ignored if there is not exactly five columns.  "
	fnames "columnOffset6 co6"
		fdesc "This flag is used in conjunction with the -columnAttach6 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the six columns.  The offsets applied are based on the attachments  specified with the -columnAttach6 flag.  Ignored if there is not exactly six columns.  "
	fnames "columnWidth cw"
		fdesc "Arguments are : column number, column width. Sets the width of the specified column where the first parameter specifies the column (1 based index) and the second parameter specifies the width. "
	fnames "columnWidth1 cw1"
		fdesc "Sets the width of the first column.  Ignored if there is not  exactly one column. "
	fnames "columnWidth2 cw2"
		fdesc "Sets the column widths of both columns.  Ignored if there is not exactly two columns. "
	fnames "columnWidth3 cw3"
		fdesc "Sets the column widths for all 3 columns.  Ignored if there is not exactly 3 columns. "
	fnames "columnWidth4 cw4"
		fdesc "Sets the column widths for all 4 columns.  Ignored if there is not exactly 4 columns. "
	fnames "columnWidth5 cw5"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "columnWidth6 cw6"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dragCommand dc"
		fdesc "Command string executed when slider value marker is dragged. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "hsvValue hsv"
		fdesc "Color in hue, saturation, and value format. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "Label text for the group. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rgbValue rgb"
		fdesc "Color in red, green, and blue format. "
	fnames "rowAttach rat"
		fdesc "Arguments are : attachment type, offset. Possible attachments are: top | bottom | both.  Specifies attachment types  and offsets for the entire row.   "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "columnLayout"
	desc "This command creates a layout that arranges its children in a single column."
	fcount "27"
	fnames "adjustableColumn adj"
		fdesc "Sets the children of the layout to be attached on both sides. They will stretch or shrink with the layout. "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "childArray ca"
		fdesc "Returns a string array of the names of the layout's  immediate children. "
	fnames "columnAlign cal"
		fdesc "Sets the alignment of children containing text or pixmaps. Align values: "left" | "right" | "center". "
	fnames "columnAttach cat"
		fdesc "Sets the attachment and offsets for the children of the layout.  Side values: "left" | "right" | "both".  Left or both is recommended. "
	fnames "columnOffset co"
		fdesc "Sets the offsets for children of the layout. Side values: "left" | "right" | "both". "
	fnames "columnWidth cw"
		fdesc "Sets the width of the column.  Unless the children are attached to both sides of the column, the width cannot be enforced. Larger children will expand layout. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfChildren nch"
		fdesc "Returns in an int the number of immediate children of the layout. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rowSpacing rs"
		fdesc "Sets the space between children. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "commandEcho"
	desc "This command controls what is echoed to the command window."
	fcount "3"
	fnames "lineNumbers ln"
		fdesc "If true then file name and line number information is provided in error and warning messages. If false then no file name and line number information is provided in error and warning messages. "
	fnames "query q"
		fdesc "Allows you to query the above values. "
	fnames "state st"
		fdesc "If true then all commands are echoed to the command window. If false then only relevant commands are echoed. "
	rcount "0"
name "commandLine"
	desc "This command creates a single line for command input/output. The left half is for input, the right half for output."
	fcount "24"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "command c"
		fdesc "Command executed when the command line text changes. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "enterCommand ec"
		fdesc "Command executed when the keypad 'Enter' key is pressed. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "inputAnnotation ian"
		fdesc "Annotate the input field with an extra string value. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfHistoryLines nhl"
		fdesc "Sets the maximum number of commands saved to the command line history. Up to -nhl/numberOfHistoryLines previous commands will be available by pressing the up-arrow from within the input field. The default value is 50. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "outputAnnotation oan"
		fdesc "Annotate the output field with an extra string value. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "commandPort"
	desc "Opens (closes) the maya command port. The command port comprises a socket to which a client program may connect. An example command port client "mcp" is included in the Motion Capture developers kit. Care should be taken regarding INET domain sockets as no user identification, or authorization is required to connect to a given socket, and all commands (including "system(...)") are allowed and executed with the user id and permissions of the Maya user. The prefix flag can be used to reduce this security risk, as only the prefix command is executed. Commands and results are each subject to size.... Refer to full documentation"
	fcount "4"
	fnames "close cl"
		fdesc "Closes the commandPort, deletes the pipes "
	fnames "name n"
		fdesc "specifies the name of the command port which this command creates.  commandPort names of the form  name  create a  UNIX domain socket on the localhost corresponding to  name .  If  name  does not begin with "/", then /tmp/ name  is used.  If  name  begins  with "/",  name  denotes the full path to the socket.  Names of the form : port number  create an INET domain on the local host at the given port. "
	fnames "noreturn nr"
		fdesc "Do not write the results from executed commands back to the command port socket.  Instead, the results from executed commands are written to the script editor window.  As no information passes back to the command port client regarding the execution of the submitted commands, care must be taken not to overflow  the command buffer, which would cause the connection to close. "
	fnames "prefix pre"
		fdesc "The string argument is the name of a mel command taking one  string argument. This command (the prefix command) is called  each time data is sent to the command port. The data written to the command port is passed as the argument to the prefix command.  The data from the command port is encoded as with  enocodeString and enclosed in quotes.  If newline characters are embedded in the command port data,  the input is split into individual lines.  These lines are treated as if they were separate writes to the command port. Only the result to the last prefix command is returned. "
	rcount "0"
name "componentEditor"
	desc "This command creates a new component editor in the current layout."
	fcount "32"
	fnames "control ctl"
		fdesc "Query only. Returns the top level control for this editor. Usually used for getting a parent to attach popup menus. CAUTION: editors may not have controls at times.  This flag can return "NONE" if no control is present. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dtg"
		fdesc "Attaches a tag to the maya editor. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "filter f"
		fdesc "Specifies the name of a filter to be placed on this editor. This filters the information coming onto the main list of the editor. "
	fnames "floatField ff"
		fdesc "assigns a float field that the component editor will  use for editing groups of values. "
	fnames "floatSlider fs"
		fdesc "assigns a float slider that the component editor will  use for editing groups of values. "
	fnames "forceMainConnection fmc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. This is a variant of the -mainListConnection flag in that it will force a change even when the connection is locked. This flag is used to reduce the overhead when using the -unlockMainConnection , -mainListConnection, -lockMainConnection flags in immediate  succession. "
	fnames "hidePathName hpn"
		fdesc "Hides path name of displayed element.  By default this flag is set to false. "
	fnames "hideZeroColumns hzc"
		fdesc "Hides columns whose elements are all zero.  By default this flag is set to false. "
	fnames "highlightConnection hlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its highlight list.  Not all editors have a highlight list.  For those who do, it is sort of a secondary selection list. "
	fnames "lockInput li"
		fdesc "Prevents the editor from responding to changes in the active list. Independent of selection connection. "
	fnames "lockMainConnection lck"
		fdesc "Locks the current list of objects within the mainConnection, so that only those objects are displayed within the editor. Further changes to the original mainConnection are ignored. "
	fnames "mainListConnection mlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. "
	fnames "operationCount oc"
		fdesc "returns the total number of operation types known to the component editor. "
	fnames "operationLabels ol"
		fdesc "returns a string array containing the names for all operation types known to the editor. "
	fnames "operationType ot"
		fdesc "Tells the editor which of its known operation types it should be performing. This is a 0-based index. "
	fnames "panel pnl"
		fdesc "Specifies the panel that the editor belongs to.  By default if an editor is created in the create callback of a scripted panel it will belong to that panel.  If an editor doesn't belong to a panel it will be deleted when the window that it is in is deleted. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this editor. This flag will only have an effect if the editor is currently un-parented. "
	fnames "precision pre"
		fdesc "Specifies the maximum number of digits displayed to the right of the decimal place.  Can be 0 to 20. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "selectionConnection slc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its own selection list.  As the user selects things in this editor, they will be selected in the selectionConnection object.  If someone else changes the object, the editor will update to show the change. "
	fnames "setOperationLabel sol"
		fdesc "uses the string as the new name for the existing operation type  specified by the integer index. Note that there is no messaging system which allows UI to be informed of changes made by this flag. "
	fnames "showObjects so"
		fdesc "Restricts the display to columns that are in the current active list. "
	fnames "showSelected ss"
		fdesc "Restricts the display to those columns which are currently selected. By default this flag is set to false, so all columns are selected. The results from this flag obey the current -hideZeroColumns setting. "
	fnames "sortAlpha sa"
		fdesc "Controls alphabetical (true), or heirarchical sorting of columns "
	fnames "stateString sts"
		fdesc "Query only flag.  Returns the MEL command that will edit an editor to match the current editor state. The returned command string uses the string variable $editorName in place of a specific name. "
	fnames "unParent up"
		fdesc "Specifies that the editor should be removed from its layout. This cannot be used with query. "
	fnames "unlockMainConnection ulk"
		fdesc "Unlocks the mainConnection, effectively restoring the original mainConnection (if it is still available), and dynamic updates. "
	fnames "updateMainConnection upd"
		fdesc "Causes a locked mainConnection to be updated from the orginal mainConnection, but preserves the lock state. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "computePolysetVolume"
	desc "Prints the total volume of all polysets on the pick list. For accurate results the geometry should be closed, with no holes or minimal gaps and no interpenetrating surfaces( such as as two overlapping spheres ). The method uses the divergence theorem: \int_{vol} Div(f) dV = int_{surf} Dot(f,n) dS To use it to compute volumes set f=(0,0,z), you then have Volume = \int_{vol} 1 dV = int_{surf} n_z(u,v) du dv Where n_z is the "z" component of the normal to the surface at the parameter value (u,v). If you only have triangles then the formula reads: Volume = sum_{over all.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "condition"
	desc "This command creates a new named condition object whose true/false value is calculated by running a mel script. This new condition can then be used for dimming, or controlling other scripts, or whatever."
	fcount "5"
	fnames "delete del"
		fdesc "Deletes the condition. "
	fnames "dependency d"
		fdesc "Each -dependency flag specifies another condition that the new condition will be dependent on.  When any of these conditions change, the new-state-script will run, and the state of this condition will be set accordingly.  It is possible to define infinite loops, but they will be caught and handled correctly at run-time. "
	fnames "initialize i"
		fdesc "Initializes the condition, by forcing it to run its script as soon as it is created.  If this flag is not specified, the script will not run until one of the dependencies is triggered. "
	fnames "script s"
		fdesc "The script that determines the new state of the condition. "
	fnames "state st"
		fdesc "Sets the state of the condition. This can be used to create a manually triggered condition: you could create a condition without any dependencies and without a new-state-script. This condition would only change state in response to the -st/state flag. "
	rcount "0"
name "cone"
	desc "The cone command creates a new cone and/or a dependency node that creates one, and returns their names."
	fcount "26"
	fnames "absoluteSweepDifference asd"
		fdesc "The difference of endSweep - startSweep "
	fnames "axis ax"
		fdesc "The primitive's axis "
	fnames "axisX axx"
		fdesc "X of the axis Default:  1 "
	fnames "axisY axy"
		fdesc "Y of the axis Default:  0 "
	fnames "axisZ axz"
		fdesc "Z of the axis Default:  0 "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "degree d"
		fdesc "The degree of the resulting surface: 1 - linear, 3 - cubic Default:  3 "
	fnames "endSweep esw"
		fdesc "The angle at which to end the surface of revolution. Default is 2Pi radians, or 360 degrees. Default:  6.2831853 "
	fnames "heightRatio hr"
		fdesc "Ratio of "height" to "width" Default:  2.0 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "pivot p"
		fdesc "The primitive's pivot point "
	fnames "pivotX px"
		fdesc "X of the pivot Default:  0 "
	fnames "pivotY py"
		fdesc "Y of the pivot Default:  0 "
	fnames "pivotZ pz"
		fdesc "Z of the pivot Default:  0 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "radius r"
		fdesc "The radius of the object Default:  1.0 "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "sections s"
		fdesc "The number of sections determines the resolution of the surface in the sweep direction. Used only if useTolerance is false. Default:  8 "
	fnames "spans nsp"
		fdesc "The number of spans determines the resolution of the surface in the opposite direction. Default:  1 "
	fnames "startSweep ssw"
		fdesc "The angle at which to start the surface of revolution Default:  0 "
	fnames "tolerance tol"
		fdesc "The tolerance with which to build the surface. Used only if useTolerance is true Default:  0.01 "
	fnames "useTolerance ut"
		fdesc "Use the specified tolerance to determine resolution. Otherwise number of sections will be used. Default:  false "
	rcount "5"
		rname "cylinder"
		rname "torus"
		rname "sphere"
		rname "nurbsPlane"
		rname "nurbsCube"
name "confirmDialog"
	desc "The confirmDialog command creates a modal dialog with a message to the user and a variable number of buttons to dismiss the dialog. The dialog is dismissed when the user presses any button or chooses the close item from the window menu. In the case where a button is pressed then the name of the button selected is returned. If the dialog is dismissed via the close item then the string returned is specified by the -ds/dismissString flag. The default behaviour when no arguments are specified is to create an empty single button dialog."
	fcount "9"
	fnames "backgroundColor bgc"
		fdesc "The background color of the dialog. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "button b"
		fdesc "Create a button with the given string as it's text. "
	fnames "cancelButton cb"
		fdesc "The cancel button is activated by pressing the escape key. Note that this flag does not create a button, it simply indicates which button created via the  -b/button  flag shall respond to the escape key. "
	fnames "defaultButton db"
		fdesc "The default button is activated by pressing the enter key. Note that this flag does not create a button, it simply indicates which button created via the  -b/button  flag shall respond to the enter key. "
	fnames "dismissString ds"
		fdesc "The string returned when the user selects the 'Close' item from the Window Manager menu.  If this flag is not set then the string "dismiss" is returned. "
	fnames "message m"
		fdesc "The message text appearing in the dialog. "
	fnames "messageAlign ma"
		fdesc "Align the message  left ,  center , or  right . "
	fnames "parent p"
		fdesc "Specify the parent window for the dialog.  The dialog will be centered on this window and raise and lower with it's parent. By default, the dialog is not parented to a particular window and is simply centered on the screen. "
	fnames "title t"
		fdesc "The dialog title. "
	rcount "0"
name "connectAttr"
	desc "Connect the attributes of two dependency nodes and return the names of the two connected attributes. The connected attributes must be be of compatible types. (Refer to dependency node documentation.)."
	fcount "4"
	fnames "force f"
		fdesc "Forces the connection.  If the destination is already connected, the old connection is broken and the new one made. "
	fnames "lock l"
		fdesc "If the argument is true, the destination attribute is locked after making the connection. If the argument is false, the connection is unlocked before making the connection. "
	fnames "nextAvailable na"
		fdesc "If the destination multi-attribute has set the indexMatters to be false with this flag specified, a connection is made to the next available index. No index need be specified. "
	fnames "referenceDest rd"
		fdesc "This flag is used for file io only. The flag indicates that the connection replaces a connection made in a referenced file, and the flag argument indicates the original destination from the referenced file. This flag is used so that if the reference file is modified, maya can still attempt to make the appropriate connections in the main scene to the referenced object. "
	rcount "3"
		rname "connectionInfo"
		rname "isConnected"
		rname "listConnections"
name "connectControl"
	desc "This command attaches an ELF control directly to one or more dependency node attributes. (The attributes/nodes don't have to exist yet --- they will get looked up as needed.) With no flag specified, this command works on these kinds of controls: floatField, floatScrollBar, floatSlider, intField, intScrollBar, intSlider, floatFieldGrp, intFieldGrp, checkBox, radioCollection, and optionMenu. With the -index flag, It will also work on the individual components of all other groups. This command sets up a two-way connection between the control and the (first-specified) attribute. If this first attribute is changed in any way, the control will be appropriately updated to match.... Refer to full documentation"
	fcount "2"
	fnames "fileName fi"
		fdesc "This flag causes the connection to be treated as a filename, and the conversion from internal to external filename representation is made as the data is copied. This only applies to connections to Tfield controls. "
	fnames "index in"
		fdesc "This flag enables you to pick out a sub-control from a group that contains a number of different controls. For example, you can connect one field of a floatFieldGrp. You must count each member of the group, including any text labels that may exist.  For example, if you have a check box group with a label, the label will count as index 1, and the first check box as index 2.  (Indexes are 1-based) "
	rcount "0"
name "connectDynamic"
	desc "Dynamic connection specifies that the force fields, emitters, or collisions of an object affect another dynamic object. The dynamic object that is connected to a field, emitter, or collision object is influenced by those fields, emitters and collision objects. Connections are made to individual fields, emitters, collisions. So, if an object owns several fields, if the user wants some of the fields to affect an object, s/he can specify each field with a "-f" flag; but if the user wants to connect all the fields owned by an object, s/he can specify the object name with the "-f" flag. The.... Refer to full documentation"
	fcount "4"
	fnames "collisions c"
		fdesc "Connects each object to the collision models of iObject.  "
	fnames "delete d"
		fdesc "No Description"
	fnames "emitters em"
		fdesc "Connects each object to the emitters of iObject. "
	fnames "fields f"
		fdesc "Connects each object to the fields of iObject  "
	rcount "7"
		rname "particle"
		rname "emitter"
		rname "air"
		rname "radial"
		rname "gravity"
		rname "newton"
		rname "drag"
name "connectJoint"
	desc "This cmd will connect two skeletons by selecting two joints. The first selected joint will be either as a child of the parent of the second selected joint or as a child of the second selected joint, depending onup the mode(flag). Note1: The selected joint to be a child has to be the root of a skeleton. And the selected joint to be parent has to have a parent above. Note2: If a joint name is given at the cmd line, it is as the child. And the first selected joint will be as the parent. If no joint name.... Refer to full documentation"
	fcount "2"
	fnames "connectMode cm"
		fdesc "The first selected joint will be parented under the parent of the second selected joint. "
	fnames "parentMode pm"
		fdesc "The first selected joint will be parented under the second selected joint. Both joints will be in the active list(selection list). "
	rcount "13"
		rname "insertJoint"
		rname "ikSystemInfo"
		rname "ikHandle"
		rname "jointDisplayScale"
		rname "joint"
		rname "jointCluster"
		rname "removeJoint"
		rname "ikHandleDisplayScale"
		rname "ikSolver"
		rname "ikSystem"
		rname "jointLattice"
		rname "mirrorJoint"
		rname "removeJoint"
name "connectionInfo"
	desc "The connectionInfo command is used to get information about connection sources and destinations. Unlike the isConnected command, this command needs only one end of the connection."
	fcount "10"
	fnames "destinationFromSource dfs"
		fdesc "If the specified plug (or its ancestor) is a source, this flag returns the list of destinations connected from the source. (array of strings, empty array if none) "
	fnames "getExactDestination ged"
		fdesc "If the plug or its ancestor is connection destination, this returns the name of the plug that is the exact destination. (empty string if there is no such connection). "
	fnames "getExactSource ges"
		fdesc "If the plug or its ancestor is a connection source, this returns the name of the plug that is the exact source. (empty string if there is no such connection). "
	fnames "getLockedAncestor gla"
		fdesc "If the specified plug is locked, its name is returned.  If an ancestor of the plug is locked, its name is returned.  If more than one ancestor is locked, only the name of the closest one is returned.  If neither this plug nor any ancestors are locked, an empty string is returned. "
	fnames "isDestination id"
		fdesc "Returns true if the plug (or its ancestor) is the destination of a connection, false otherwise. "
	fnames "isExactDestination ied"
		fdesc "Returns true if the plug is the exact destination of a connection, false otherwise. "
	fnames "isExactSource ies"
		fdesc "Returns true if the plug is the exact source of a connection, false otherwise. "
	fnames "isLocked il"
		fdesc "Returns true if this plug (or its ancestor) is locked "
	fnames "isSource is"
		fdesc "Returns true if the plug (or its ancestor) is the source of a connection, false otherwise. "
	fnames "sourceFromDestination sfd"
		fdesc "If the specified plug (or its ancestor) is a destination, this flag returns the source of the connection. (string, empty if none) "
	rcount "3"
		rname "isConnected"
		rname "listConnections"
		rname "connectAttr"
name "constrain"
	desc "This command constrains rigid bodies to the world or other rigid bodies."
	fcount "13"
	fnames "barrier br"
		fdesc "Creates a barrier constraint.  This command requires one rigid bodies. "
	fnames "damping d"
		fdesc "Sets the damping constant. Default value: 0.1 Range: -1000.0 to 1000.0 "
	fnames "directionalHinge dhi"
		fdesc "Creates a directional hinge constraint.  This command requires two rigid bodies. The directional hinge always maintains the initial direction of its axis. "
	fnames "hinge hi"
		fdesc "Creates a hinge constraint.  This command requires one or two rigid bodies. "
	fnames "interpenetrate i"
		fdesc "Allows (or disallows) the rigid bodies defined in the constrain to ipenetrate. "
	fnames "nail na"
		fdesc "Creates a nail constraint.  This command requires one rigid body. "
	fnames "name n"
		fdesc "Names the rigid constraint. "
	fnames "orientation o"
		fdesc "Set initial orientation of the constraint in world space.  This command is only valid with hinge and barrier constraints Default value:    "
	fnames "pinConstraint pin"
		fdesc "Creates a pin constraint.  This command requires two rigid bodies. "
	fnames "position p"
		fdesc "Set initial position of the constraint in world space. Default value:   for uni-constraints, midpoint of bodies for deul constraint. "
	fnames "restLength rl"
		fdesc "Sets the rest length. Default value: 1.0 "
	fnames "spring s"
		fdesc "Creates a spring constraint.  This command requires one or two rigidies. "
	fnames "stiffness st"
		fdesc "Sets the springs stiffness constant. Default value: 5.0 "
	rcount "2"
		rname "rigidBody"
		rname "rigidSolver"
name "constrainValue"
	desc "Returns a floating point value which is an integer multiple of the third argument that falls in the range between the given start and end values. The first argument represents the start value of a range. The second argument represents the end value of a range. The third argument represents a multiple used to compute the constrained value. The fourth and final argument represents the value being constrained."
	fcount "0"
	rcount "0"
name "constructionHistory"
	desc "This command turns construction history on or off."
	fcount "1"
	fnames "toggle tgl"
		fdesc "Turns construction history on or off. "
	rcount "0"
name "contextInfo"
	desc "This command allows you to get information on named contexts."
	fcount "7"
	fnames "class c"
		fdesc "Return the class type of the named context. "
	fnames "escapeContext esc"
		fdesc "Return the command string that will allow you to exit the current tool. "
	fnames "exists ex"
		fdesc "Return true if the context exists, false if it does not exists (or is internal and therefore untouchable) "
	fnames "image1 i1"
		fdesc "Returns the name of an xpm associated with the named context. "
	fnames "image2 i2"
		fdesc "Returns the name of an xpm associated with the named context. "
	fnames "image3 i3"
		fdesc "Returns the name of an xpm associated with the named context. "
	fnames "title t"
		fdesc "Return the title string of the named context. "
	rcount "0"
name "control"
	desc "This command allows you to edit or query the properties of any control."
	fcount "19"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "convertFromOldLayers"
	desc "Convert the layers as implemented in version 1.0/1.5 to the new implementation in 2.0."
	fcount "0"
	rcount "0"
name "convertLightmap"
	desc "Calculating global illumination is an expensive and time-consuming task that denies its usage in realtime rendering. As long as the lighting conditions in scenes do not change, illumination on objects can be precomputed and stored in appropriate data structures, like texture maps or vertex colors. These can then be applied in realtime applications like hardware rendering and game engines. The Lightmap Rendering feature allows to prerender surface color or surface lighting (including global illumination) into file textures and per-vertex colors, respectively, on a per object basis. These file textures can then be used as regular texture maps to speed up.... Refer to full documentation"
	fcount "14"
	fnames "bakeSetOverride bo"
		fdesc "If this parameter is given, the specified bakeset will be used instead of bakeset of each object. "
	fnames "camera c"
		fdesc "Which camera to use for computing the direction of the incident ray. Default: current render camera "
	fnames "faceNormals fn"
		fdesc "Use only face normals for baking. Otherwise, vertex normals are used. "
	fnames "file f"
		fdesc "Specifies the absolute file name of the mental ray file to be generated. Effective only if -mi/-miStream flag is present. "
	fnames "help h"
		fdesc "Prints a verbose help message. "
	fnames "illumOnly io"
		fdesc "If present, only the diffuse irradiance (photons, final gathering) is sampled.  Otherwise, the radiance exiting from the surface is computed. "
	fnames "miStream mi"
		fdesc "If this parameter is given, besides the lightmap rendering, the command generates a mental ray file that can be used with mental ray standalone. -f/-file flag must be specified. "
	fnames "normalDirection nd"
		fdesc "Determines in which direction the normals of the object to be baked should be pointing.  Supported arguments are "toCamera" (towards the camera), "front" (outwards), and "back" (inwards). Default: "toCamera" "
	fnames "notUndoable nun"
		fdesc "If this parameter is given, the command can not be undone. "
	fnames "project prj"
		fdesc "Set the project directory. If baking to a light map, light maps will be generated into "lightMap" sub directory in the project. If "lightMap" directory does not exist, the command fails to write light maps. Default: current project root directory "
	fnames "rayDirection rd"
		fdesc "Choose direction of the incoming ray.  This direction is not well defined for baking.  Currently one can select either "fromCamera"  (incident ray points from the current render camera to the point being shaded)  or "normal" (incident ray hits the surface perpendicularly at the point being shaded).  The direction of the incident ray makes a difference  when computing specular highlights, ray traced reflections, environment maps, and more. "
	fnames "separator sep"
		fdesc "If this parameter is given, baking will use this string to separate instance and shape name parts  when generating unique file names for complex dag objects (dag instances with multiple shapes, or hierarchical dag entries). Default: no separator. "
	fnames "shadows sh"
		fdesc "Take shadow into account. If shadow is disabled in the mental ray render globals, mental ray for maya will enable the shadow map, and shadow method segments will be turned on. "
	fnames "vertexMap vm"
		fdesc "Bake illumination into vertices. If not present bake into a light map. "
	rcount "1"
		rname "Mayatomr"
name "convertSolidTx"
	desc "Command to convert a texture on a surface to a file texture. The current selection will be used if a texture and surface are not specified. If a texture plug is not specified, the outColor attribute will be sampled. If the node does not have an outColor attribute, the first attribute on the node which is: readable, not writable, not hidden, connectable, and not a multi is used. If lighting is to be baked, a shading group must be specified as the texture. An image file will be generated for each object and stored in your image segment of your.... Refer to full documentation"
	fcount "22"
	fnames "alpha al"
		fdesc "Specify whether to compute the transparency when baking lighting. The conversion will sample both the color and transparency of the shading network; the alpha channel of the file texture will be set to correspond to the result from sampling the transparency. By default transparency is not computed. "
	fnames "antiAlias aa"
		fdesc "Perform anti-aliasing on the resulting image. Convert solid texture will generally take four times longer than without anti-aliasing. By default this flag is off. "
	fnames "backgroundColor bc"
		fdesc "Set the background color to a specific value. Default is to use the shader default color to fill the background. Valid values range from 0 to 255. This flag automatically sets -backgroundMode to "color". Default is black: 0 0 0. "
	fnames "backgroundMode bm"
		fdesc "Defines how the background of the texture should be filled. Three modes are available: "shader"  or  1 : uses the default shader color. "color"  or  2 : uses the color given by -backgroundColor flag. "extend"  or  3 : extends outwards the color along the seam edges. Default is "shader". "
	fnames "camera cam"
		fdesc "Specify a camera to use in baking lighting. If a camera is not specified the camera in the active view will be used. "
	fnames "componentRange cr"
		fdesc "If one or more components have been selected to use, then if this flag is set, then the uv range of the components is used to fit into the texture map resolution. By default this flag is set to false. "
	fnames "doubleSided ds"
		fdesc "Specify whether the sampler should flip the surface normal if the sample point faces away from the camera. Note: flipping the normal will make the result dependent on the camera (ie. one camera may flip normals where different camera wouldn't). It's not recommended that doubleSided be used in combination with shadows. By default this flag is false. "
	fnames "fileFormat fil"
		fdesc "File format to be used for output.  IFF is the default if unspecified.  The rest include: - als: Alias PIX - cin: Cineon - eps: EPS - gif: GIF - iff: Maya IFF - jpg: JPEG - yuv: Quantel - rla: Wavefront RLA - sgi: SGI - si: SoftImage (.pic) - tga: Targa - tif: TIFF - bmp: Windows Bitmap "
	fnames "fileImageName fin"
		fdesc "Specify the output path and name of file texture image. If the file name doesn't contain a directory separator, the image will be written to source images of the current project. The file will not be versioned if it already exists. "
	fnames "fillTextureSeams fts"
		fdesc "Specify whether or not to overscan the polygon beyond its outer edges, when creating the file texture, in order to fill the texture seams. Default is true. "
	fnames "force f"
		fdesc "If the output image already exists overwrite it. By default this flag is off. "
	fnames "fullUvRange fur"
		fdesc "Sample using the full uv range of the surface. This flag cannot be used with the -uvr flag. A 2D texture placement node will be created and connected to the file texture. The placement's translate and coverage will be set according to the full UV range of the surface. "
	fnames "name n"
		fdesc "Set the name of the file texture node. Name conflict resolution will be used to determine valid names when multiple objects are specified. "
	fnames "resolutionX rx"
		fdesc "Set the horizontal image resolution. If this flag is not specified, the resolution will be set to 256. "
	fnames "resolutionY ry"
		fdesc "Set the vertical image resolution. If this flag is not specified, the resolution will be set to 256. "
	fnames "reuseDepthMap rdm"
		fdesc "Specify whether or not to reuse all the generated dmaps. Default is false. "
	fnames "samplePlane sp"
		fdesc "Specify whether to sample using a virtual plane. This virtual plane has texture coordinates in the rectangle defined by the  -samplePlaneRange flag. If the -samplePlaneRange flag is not set then the virtual plane defaults to having texture coordinates in the (0,0) to (1,1) square. If this option is set than all surface based  arguments will be ignored. "
	fnames "samplePlaneRange spr"
		fdesc "Specify the uv range of the texture coordinates used to sample if the -samplePlane option is set. There are four arguments corresponding  to uMin, uMax, vMin and vMax. By default the virtual plane is from uMin 0 to uMax 1, and vMin 0 to vMax 1. "
	fnames "shadows sh"
		fdesc "Specify whether to compute shadows when baking lighting. Disk based shadow maps will be used. Only lights with depth map shadows enabled will contribute to the shading. By default shadows are not computed. "
	fnames "uvBBoxIntersect ubi"
		fdesc "This flag is obsolete. "
	fnames "uvRange uvr"
		fdesc "Specify the uv range in which samples will be computed. There are four arguments corresponding to uMin, uMax, vMin and vMax. Each value should be specified based on the surface's uv space. A 2D texture placement node will be created and connected to the file texture. The placement's frame translate and coverage will be set according to the uv range specified. By default the entire uv range of the surface will be used. "
	fnames "uvSetName uv"
		fdesc "Specify which uv set has to be used as the driving parametrization for convert solid.  "
	rcount "0"
name "convertTessellation"
	desc "ConvertTessellation is undoable , NOT queryable , and NOT editable . Command to translate the basic tessellation attributes to advanced. If a camera flag is specified the translation will be based on the distance the surface is from the camera. The closer the surface is to the camera the more triangles there will be in the tessellation. If the "-allCameras" flags is specified, the renderable camera closest to the surface will be used to set the tessellation. The camera tessellation estimate is also dependent on the current render resolution; a higher resolution the result in a more finely tessellated surface.... Refer to full documentation"
	fcount "2"
	fnames "camera cam"
		fdesc "Specifies the camera which should be used in calculating the screen based tessellation. "
	fnames "allCameras acm"
		fdesc "Specifies that all renderable cameras should be used in calculating the screen based tessellation. "
	rcount "0"
name "convertUnit"
	desc "This command converts values between different units of measure. The command takes a string, because a string can incorporate unit names as well as values (see examples)."
	fcount "2"
	fnames "fromUnit f"
		fdesc "the unit to convert from.  If not supplied, it is assumed to be the system default.  The from unit may also be supplied as part of the value e.g. 11.2m (11.2 meters). "
	fnames "toUnit t"
		fdesc "the unit to convert to.  If not supplied, it is assumed to be the system default  "
	rcount "0"
name "copyArray"
	desc "Copies a certain number of values from one float array to another."
	fcount "0"
	rcount "0"
name "copyFlexor"
	desc "This command copies an existing bone or joint flexor from one bone (joint) to another. The attributes of the flexor and their connections as well as any tweaks in on the latticeFfd are copied from the original to the new flexor. If the selected bone (joint) appears to be a mirror reflection of the bone (joint) of the existing flexor then the transform of the ffd lattice group gets reflected to the new bone (joint). The arguments for the command are the name of the ffd Lattice and the name of the destination joint. If they are not specified at.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "copyKey"
	desc "This command copies curve segments's hierarchies from specified targets and puts them in the clipboard. Source curves are unchanged. The pasteKey command applies these curves to other objects. The shape of the copied curve placed in the clipboard depends on the copyKey "-option" specified. Each of these options below will be explained using an example. For all the explanations, let us assume that the source animation curve (from which keys will be copied) has 5 keyframes at times 10, 15, 20, 25, and 30. copyKey -t "12:22" -option keys A 5-frame animation curve with one key at 15 and another.... Refer to full documentation"
	fcount "12"
	fnames "animation an"
		fdesc "Where this command should get the animation to act on.  Valid values are "objects," "keys," and "keysOrObjects" Default: "keysOrObjects."  (See Description for details.) "
	fnames "attribute at"
		fdesc "List of attributes to select "
	fnames "clipboard cb"
		fdesc "Specifies the clipboard to which animation is copied. Valid clipboards are "api" and "anim".  The default clipboard is: anim "
	fnames "controlPoints cp"
		fdesc "This flag explicitly specifies whether or not to include the control points of a shape (see "-s" flag) in the list of attributes. Default: false.   (Not valid for "pasteKey" cmd.) "
	fnames "float f"
		fdesc "value uniquely representing a non-time-based key (or key range) on a time-based animCurve.  Valid floatRange include single values (-f 10) or a string with a lower and upper bound, separated by a colon (-f "10:20") "
	fnames "forceIndependentEulerAngles fea"
		fdesc "Specifies that the rotation curves should always be placed on the clipboard as independent Euler Angles. The default value is false. "
	fnames "hierarchy hi"
		fdesc "Hierarchy expansion options.  Valid values are "above," "below," "both," and "none."  (Not valid for "pasteKey" cmd.) "
	fnames "includeUpperBound iub"
		fdesc "When the -t/time or -f/float flags represent a range of keys, this flag determines whether the keys at the  upper bound of the range are included in the keyset. Default value: true.  This flag is only valid when the argument to the -t/time flag is a time range with a lower and upper bound.  (When used with the "pasteKey"  command, this flag refers only to the time range of the target curve that is replaced, when using options such as "replace," "fitReplace," or "scaleReplace."  This  flag has no effect on the curve pasted from the clipboard.) "
	fnames "index in"
		fdesc "index of a key on an animCurve "
	fnames "option o"
		fdesc "The option to use when performing the copyKey operation. Valid options are "keys," and "curve."  The default copy option is: keys "
	fnames "shape s"
		fdesc "Consider attributes of shapes below transforms as well, except "controlPoints".  Default: true.   (Not valid for "pasteKey" cmd.) "
	fnames "time t"
		fdesc "time uniquely representing a key (or key range) on a time-based animCurve.  Valid timeRanges include single values (-t 10) or a string with a lower and upper bound, separated by a colon (-t "10:20") "
	rcount "10"
		rname "cutKey"
		rname "pasteKey"
		rname "snapKey"
		rname "keyframe"
		rname "keyframeStats"
		rname "keyframeOutliner"
		rname "scaleKey"
		rname "setInfinity"
		rname "keyTangent"
		rname "findKeyframe"
name "copySkinWeights"
	desc "CopySkinWeights is undoable , queryable , and editable . Command to copy or mirror the skinCluster weights accross one of the three major axes. The command can be used to mirror weights either from one surface to another or within the same surface."
	fcount "6"
	fnames "destinationSkin ds"
		fdesc "Specify the destination skin shape "
	fnames "mirrorInverse mi"
		fdesc "Values are mirrored from the positive side to the negative.  If this flag is used then the direction is inverted. "
	fnames "mirrorMode mm"
		fdesc "The mirrorMode flag defines the plane of mirroring (XY, YZ, or XZ) when the mirror flag is used. The default plane is XY. "
	fnames "noMirror nm"
		fdesc "When the no mirror flag is used, the weights are copied instead of mirrored. "
	fnames "smooth sm"
		fdesc "When the smooth flag is used, the weights are smoothly interpolated between the closest vertices, instead of assigned from the single closest. "
	fnames "sourceSkin ss"
		fdesc "Specify the source skin shape "
	rcount "10"
		rname "bindPose"
		rname "bindSkin"
		rname "blendShape"
		rname "boneLattice"
		rname "copyFlexor"
		rname "flexor"
		rname "skinCluster"
		rname "skinPercent"
		rname "wire"
		rname "wrinkle"
name "cos"
	desc "Returns the cosine of the given value. Also available: acos : Returns the arc cosine in the range 0 to PI. cosh : Hyperbolic function. acosh : Inverse hyperbolic function. cosd : Returns value in degrees. acosd : Returns value in degrees."
	fcount "0"
	rcount "0"
name "cpButton"
	desc "This command creates one or more buttons on a cloth mesh. The use of this command requires multiple selection or muliple objects on the command line. The first objects to be selected are transforms that relate to geometry to be attached to the cloth. Note: this command only takes into account the transform of the object selected. It ignores whatever shapes are children of the transform. The last object selected or listed must be a cloth mesh. After successful command completion, the transforms are reparented to a new object of type cpButton. This cpButton object is also parented to the.... Refer to full documentation"
	fcount "2"
	fnames "help h"
		fdesc "Prints a quick help message. "
	fnames "translate t"
		fdesc "Specifies the relative offset for the button. If this flag is omitted, the default is for the button's world space translation to be preserved after the command has execute. In other words, the default value for -t is to preserve the button translation. -/rotate      Specifies the relative rotation for the button. If this flag is omitted, the default is for the button's world space rotation to be preserved after the command has execute. In other words, the default value for -r is to preserve the button's rotation. "
	rcount "7"
		rname "cpPanel"
		rname "cpSolver"
		rname "cpCollision"
		rname "cpProperty"
		rname "cpTool"
		rname "cpConstraint"
		rname "cpSeam"
name "cpCache"
	desc "This command is used to create new cache nodes to connect the a solver. It also offers flags for cloth cache manipulation."
	fcount "13"
	fnames "assignCache ac"
		fdesc "Assigns cacheName as the active cache on the solver it belongs to. "
	fnames "blend b"
		fdesc "Specifies the cache editing operation to be blend.  This takes  a series of cache segments and blends them together.  "
	fnames "cacheSegment cs"
		fdesc "This flag is used in conjunction with an edit operation, like -interpolate or -blend. Edit operation require cache segments to act against.  Cache segments are multi-use. Cache segments require two paramters, a cacheNode and a range from that cache node. "
	fnames "copy cop"
		fdesc "Copies source cache segment to target cache segment. Only one cache segment can be specified. "
	fnames "createCache cc"
		fdesc "Create a new cache and attach it to the current solver.   "
	fnames "help h"
		fdesc "Prints a quick help message. "
	fnames "interpolate i"
		fdesc "Specifies the cache editing operation to be interpolation and  the interpolation method used is 'interpType'.  Interpolation types can be 'linear' or 'sine'.  "
	fnames "listAllCaches lac"
		fdesc "Lists all of the caches in the current scene.  "
	fnames "listCaches lc"
		fdesc "List the caches current assigned to the solver.  "
	fnames "replaceCache rc"
		fdesc "Replaces the cacheNode's current cache file with cacheFile. "
	fnames "saveCache sav"
		fdesc "Save the cache in cacheNode to the filename specified. "
	fnames "solverCache sc"
		fdesc "Returns the cache current assigned to 'solver'.  "
	fnames "targetCacheSegment tc"
		fdesc "Target cache segment specifies the destination of an edit operation. This is where the result of the edit will be placed.  The rangeString provide must be equal in duration to the source cache segments (-cacheSegment) provided.  Time dilation is currently not supported. "
	rcount "1"
		rname "cpSolver"
name "cpCollision"
	desc "No Description."
	fcount "4"
	fnames "cloth c"
		fdesc "Enable collisions Cloth-to-cloth. "
	fnames "help h"
		fdesc "Prints a quick help message. "
	fnames "name n"
		fdesc "Specifies the name of the constraint object transform. The actual shape name will be objectNameShape. "
	fnames "rigid r"
		fdesc "Enable collisions to Rigid bodies. "
	rcount "7"
		rname "cpButton"
		rname "cpPanel"
		rname "cpSolver"
		rname "cpProperty"
		rname "cpTool"
		rname "cpConstraint"
		rname "cpSeam"
name "cpConstraint"
	desc "This command creates a constraint on a cloth mesh. The use of this command requires multiple selection. One selection is an object which will act as the constraint. The other selection is either a group of cloth vertices to be constrained, or a curve on the cloth panel. There are currently 5 types of constraints: 1. Transform constraint, which constrains a set of cloth vertices to follow another object's transform. 2. Mesh constraint, which constrains a set of cloth vertices to follow a set of triangles of a rigid body. 3. Field constraint, which affects a set of cloth vertices.... Refer to full documentation"
	fcount "4"
	fnames "assigner a"
		fdesc "Specifies the type of assigner: points or curve. A curve assigner allows you to pick a construction curve that was used to make a cloth panel, and a target object. The point assigner allows you to pick a set of points on cloth and a target. Assigner types: [point|curve]. If you have 2  objects selected, then the default is curve. If you have 1 non-component object selected, then the default is point. "
	fnames "help h"
		fdesc "Prints a quick help message. "
	fnames "name n"
		fdesc "Specifies the name of the constraint object transform. The actual shape name will be objectNameShape. "
	fnames "type t"
		fdesc "Specifies the type of constraint target. Currently, the type name must be cloth, transform, mesh, or field. The default value is transform. Type names: [cloth|field|mesh|transform] "
	rcount "7"
		rname "cpButton"
		rname "cpPanel"
		rname "cpSolver"
		rname "cpCollision"
		rname "cpProperty"
		rname "cpTool"
		rname "cpSeam"
name "cpPanel"
	desc "This command creates a panel node from a set of closed curves and optionally creates a new garment (stitcher node) for it. If a panel node is being created, the selection must contain a set of nurbs curves that form a planar closed loop. The curves are not required to be in any order. If a new garment is to be created, the selection can either contain a panel to go into the garment or a set of nurbs curves to form the first panel for the garment."
	fcount "11"
	fnames "clothName cn"
		fdesc "This option uses the given name to name the newly created cloth shape and is only used with the -newStitcher option. "
	fnames "clothShape c"
		fdesc "This option requires a panel to be selected and returns the name of the cloth shape which contains the panel.  "
	fnames "curveVertices cv"
		fdesc "Returns the vertex ids of the cloth mesh that corresponds to the selected curve. Return type is int array. "
	fnames "facets f"
		fdesc "This option requires a panel to be selected and returns the list of facets that compose the panel.  "
	fnames "name n"
		fdesc "This option uses the given name when creating a panel.  "
	fnames "newStitcher ns"
		fdesc "This option creates a new panel and also creates a new stitcher. The new panel is connected to the new stitcher.  This is how one creates a new garment.  "
	fnames "property p"
		fdesc "This option requires a panel to be selected and returns the name of the property that is currently assigned to the panel.  "
	fnames "query q"
		fdesc "This option requires a panel to be selected and specifies that the command is a query.  "
	fnames "resolutionFactor rf"
		fdesc "This option assigns the given resolution factor to the panel when it is created. "
	fnames "stitcherName sn"
		fdesc "This option uses the given name when creating a stitcher and is only used with the -newStitcher option. "
	fnames "stitcherResolution sr"
		fdesc "This option assigns the given resolution as the base resolution of the stitcher when it is created.  This option is only used with the -newStitcher option. "
	rcount "7"
		rname "cpButton"
		rname "cpSolver"
		rname "cpCollision"
		rname "cpProperty"
		rname "cpTool"
		rname "cpConstraint"
		rname "cpSeam"
name "cpProperty"
	desc "This command creates or assignes a property node."
	fcount "12"
	fnames "addVerts add"
		fdesc "This flag can be used with the -reassign flag to specify that  that the given selection list should be added to the property set  versus the default action of replace.  "
	fnames "assign a"
		fdesc "This option assigns the property with the given name to the set of selected panels.  "
	fnames "help h"
		fdesc "Prints a quick help message. "
	fnames "indexList il"
		fdesc "Show the index list for the given property set and mesh. The property set is the first argument and the mesh is the second argment. If the mesh is not attached to the property set nothing is returned. "
	fnames "list l"
		fdesc "This option returns the names of the property nodes that are in the scene. "
	fnames "listMeshNodes lmn"
		fdesc "Show the mesh nodes that belongs to the given property set. "
	fnames "listSets ls"
		fdesc "List the property sets in the scene. "
	fnames "name n"
		fdesc "This option uses the given name when creating a property.  "
	fnames "query q"
		fdesc "This option requires a property to be selected and specifies that the command is a query.  "
	fnames "reassign ra"
		fdesc "This option assigns the selection to the existing property set node. This is useful for assigning an alterative set of vertices  to an existing property set. The selected vertices must belong to the same mesh that the property was previously assigned.     "
	fnames "remove r"
		fdesc "Remove the property nodes from the selected items.  This removes the controller node connection from the solver.  It does not delete the node.   "
	fnames "removeVerts rv"
		fdesc "This flag can be used with the -reassign flag to specify that  the selected vertices should be removed from the property set.  "
	rcount "7"
		rname "cpButton"
		rname "cpPanel"
		rname "cpSolver"
		rname "cpCollision"
		rname "cpTool"
		rname "cpConstraint"
		rname "cpSeam"
name "cpSeam"
	desc "This command creates a seam node which seams two cloth panels together."
	fcount "4"
	fnames "angle a"
		fdesc "This option returns the crease angle assigned to the selected seam.  "
	fnames "help h"
		fdesc "Prints a quick help message. "
	fnames "query q"
		fdesc "This option requires a seam to be selected and specifies that the command is a query.  "
	fnames "stiffness s"
		fdesc "This option returns the crease stiffness assigned to the selected seam.  "
	rcount "7"
		rname "cpButton"
		rname "cpPanel"
		rname "cpSolver"
		rname "cpCollision"
		rname "cpProperty"
		rname "cpTool"
		rname "cpConstraint"
name "cpSolver"
	desc "This command is used to create a cloth solver node and to perform various edit operations on it. When executed without any flags, this command creates a new cloth solver node."
	fcount "37"
	fnames "busyLoopMode blm"
		fdesc "Turns on busy loop mode in the solver. The solver monitors how it is progressing in the simulation.  If it is having difficulty it adjusts its own parameters and restarts the simulation.  However, the solver depends on Maya running in interactive mode.  If you are running in a none interactive mode you must turn this mode on for fail detection to work. You also must service scheduled restarts by using the -serviceScheduledRequests. See the mel script cpRunBatch.mel for an example of this flag's use. "
	fnames "busyLoopValue blv"
		fdesc "The current busy loop value.  "
	fnames "cacheBodies cb"
		fdesc "Return the vertices for each cloth body in the given cache file. "
	fnames "cacheFrames cf"
		fdesc "Return the number of frames in the given cache file. "
	fnames "clearTimer ct"
		fdesc "Clear the simulation timer. "
	fnames "clothObject co"
		fdesc "Returns a string array consisting of the cloth objects that are selected. If no cloth objects are selected, nothing is returned. "
	fnames "clothObjectTriangulator cot"
		fdesc "Returns a string array consisting of the associated triangulator(s) for the selected object(s) which are triangulated cloth object(s). If none of the selected objects are triangulated cloth objects, nothing is returned. "
	fnames "compressCache cc"
		fdesc "This option will remove much of the data from the cache that is  not directly involved with display. A compressed cache can still  be extended through simulation, but not partially deleted.  "
	fnames "createClothMesh ccm"
		fdesc "Create a cloth mesh from a polygonal shape. "
	fnames "createCollisionObject cco"
		fdesc "Create a collision object from a polygonal shape. "
	fnames "current c"
		fdesc "Set the new current solver state. "
	fnames "deleteCache dc"
		fdesc "This option requires a cloth solver to be selected.  The command deletes the cache for all cloth bodies over  all frames. This is useful when the cloth properties or  locations of the cloth or rigid bodies have been changed.  "
	fnames "deleteRestOfCache drc"
		fdesc "This option deletes the cache from the current frame  to the end of the cache. Data for frames before the current  frame are left intact.  "
	fnames "disableSolver ds"
		fdesc "This option disconnects the solver from the time input,  allowing animations to be setup and run without running  the solver.  "
	fnames "enableSolver es"
		fdesc "This option reconnects the solver to the time input.  "
	fnames "frameSamples fs"
		fdesc "Solver oversample value per time step. "
	fnames "getUVs uvs"
		fdesc "This flag will accept a cloth/panel pair or simply a cloth object name followed by an empty string.  The cloth/panel pair will allow the user to retrieve UV-values on a per-panel level, if the scene was constructed with panels.  If just a cloth name is provided, the UV-values for the entire mesh will be returned.  "
	fnames "gravity g"
		fdesc "Gravity vector used by solver. "
	fnames "help h"
		fdesc "Prints a quick help message. "
	fnames "isInterrupted ii"
		fdesc "Returns true if all solvers have been interrupted.  "
	fnames "loadCache lc"
		fdesc "This option loads the given cache into the solver.  "
	fnames "name n"
		fdesc "Name of solver node. "
	fnames "relaxFrameLen rfl"
		fdesc "Number of frames used for relaxed property. "
	fnames "removeCollisionObject rco"
		fdesc "This option removes a collision object from a solver.  "
	fnames "resetInterrupt ri"
		fdesc "Reset the interrupt state on all of the solvers.  "
	fnames "saveAllCache sac"
		fdesc "This option saves the cache out to the file for all selected solvers. The file names are given by the cache attribute. Users can change the filename by changing the cache attribute value. "
	fnames "saveCache sc"
		fdesc "This option saves the cache out to a file. User must give the file name on the command line. The cache attribute is not used. It works for one and only one selected solver. "
	fnames "savePositions svp"
		fdesc "This option saves the current vertex positions of the selected  cloth object as its initial set of positions. This option will also prevent subsequent changes to the initial geometry from overwriting the initial positions.  "
	fnames "scale s"
		fdesc "Internal solver scale of garments used for simulation. "
	fnames "serviceScheduledRequests ssr"
		fdesc "When busyLoopMode is on, this flag allows you to run the solver's  internal restart mechanism.  This mechanism is triggered whenever the solver detects a failure in the simuation from bad cloth configurations. "
	fnames "start st"
		fdesc "Start a local cloth simulation. This allows you to run the cloth solver without advancing the maya time clock. Only one solver at a time is allowed to run a local simulation. Specify the solver by selecting it, selecting a cloth object connected to the solver, or by giving its name on the command line. In the event that no solver is specified, but there is only one solver in the scene, that solver will be used. Use undo/redo to undo the effect of a local simulation. "
	fnames "startFrame sf"
		fdesc "Frame used for start of simulation. "
	fnames "stepSize ss"
		fdesc "Solver step size in seconds. "
	fnames "stop stp"
		fdesc "Stop a local cloth simulation. It is not necessary to specify which solver. "
	fnames "transfer t"
		fdesc "Transfer a garment between solvers. "
	fnames "updateFromOutput ufo"
		fdesc "Update from manually modified vertex positions. After moving the vertices of the cloth object using the polygon tools, issue this command to update the cloth solver with the new vertex positions. "
	fnames "writeSolverHistory wsh"
		fdesc "Writes the solver callback history data. This is used for  diagnostic purposes.  Internal use only.  This flag requires a  string specifying the output file for the history data.  "
	rcount "7"
		rname "cpButton"
		rname "cpPanel"
		rname "cpCollision"
		rname "cpProperty"
		rname "cpTool"
		rname "cpConstraint"
		rname "cpSeam"
name "cpTool"
	desc "Create a cloth control. Controls allow you to manipulate the cloth object directly. To create a control, select one or more vertices of the cloth mesh. Then issue the cpTool -drag command to create a cloth control. The control will be attached to these vertices. You must then run a local simulation to see the cloth object move."
	fcount "2"
	fnames "drag d"
		fdesc "Create a drag control. This control has a  shuttle object which moves along a  motion path . The shuttle is attached to the selected vertices and pulls them along. The motion path's shape can be modified by selecting the end locator and moving it. The shuttle will follow the modified path. A local simulation will move the shuttle along the path. The shuttle can also be key framed by setting keys on the the uValue attribute. "
	fnames "help h"
		fdesc "Print a quick help message. "
	rcount "7"
		rname "cpButton"
		rname "cpPanel"
		rname "cpSolver"
		rname "cpCollision"
		rname "cpProperty"
		rname "cpConstraint"
		rname "cpSeam"
name "createDisplayLayer"
	desc "CreateDisplayLayer is undoable , NOT queryable , and NOT editable . Create a new display layer. The display layer number will be assigned based on the first unassigned number not less than the base index number found in the display layer global parameters. Normally all objects and their descendants will be added to the new display layer but if the '-nr' flag is specified then only the objects themselves will be added."
	fcount "5"
	fnames "empty e"
		fdesc "If set then create an empty display layer.  ie. Do not add the selected items to the new display layer. "
	fnames "makeCurrent mc"
		fdesc "If set then make the new display layer the current one. "
	fnames "name n"
		fdesc "Name of the new display layer being created. "
	fnames "noRecurse nr"
		fdesc "If set then only add selected objects to the display layer.  Otherwise all descendants of the selected objects will also be added. "
	fnames "number num"
		fdesc "Number for the new display layer being created. "
	rcount "3"
		rname "editDisplayLayerGlobals"
		rname "editDisplayLayerMembers"
		rname "layerButton"
name "createDrawCtx"
	desc "The command creates a create/draw joint context. The context allows the user to quickly create mirrored joint chains."
	fcount "9"
	fnames "axis a"
		fdesc "Specifies the axis to mirror. Valid strings are "x", "y",  and "z".  C: The default is "x". Q: When queried, this flag returns a string. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "createEditor"
	desc "This command creates a property sheet for any dependency node. The second argument is the name of the node, and the first is the name of a layout into which the property sheet controls should be placed. The property sheets created by this command can by user-customized using the editorTemplate command."
	fcount "1"
	fnames "queueForDelete qfd"
		fdesc "The specified layout is put on a queue.  When the queue is full, layouts past the end of the queue are automatically deleted.  If the layout is already on the queue, it is moved to the front.  This allows us to dispose of editors when they are no longer being used.  This flag should only be used by the showEditor.mel script. "
	rcount "0"
name "createMotionField"
	desc "This command creates a force that pushes a fluid based on the motion of an object. One selects the objects that one wishes to push the fluid with and the fluids one wishes to affect. At least one fluid and one non-fluid must be selected. One will not see an effect until the object is animated. MakeFluidPusher creates a force for each object and sizes the volume boundary of the force to be a bit larger than the object. An expression is generated that sets the direction and magnitude of the force based on the current motion of the object.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "createNewShelf"
	desc "Create an empty new shelf tab. Prompt the user for the name. If the name is invalid then it will re-prompt until the user cancels."
	fcount "0"
	rcount "0"
name "createNode"
	desc "This command creates a new node in the dependency graph of the specified type."
	fcount "3"
	fnames "name n"
		fdesc "Sets the name of the newly-created node. "
	fnames "parent p"
		fdesc "Specifies the parent in the DAG under which the new node belongs. "
	fnames "shared s"
		fdesc "This node is shared across multiple files, so only create it if it does not already exist.  "
	rcount "2"
		rname "setAttr"
		rname "connectAttr"
name "createRenderLayer"
	desc "CreateRenderLayer is undoable , NOT queryable , and NOT editable . Create a new render layer. The render layer number will be assigned based on the first unassigned number not less than the base index number found in the render layer global parameters. Normally all objects and their descendants will be added to the new render layer but if the '-nr' flag is specified then only the objects themselves will be added."
	fcount "5"
	fnames "empty e"
		fdesc "If set then create an empty render layer.  ie. Do not add the selected items to the new render layer. "
	fnames "makeCurrent mc"
		fdesc "If set then make the new render layer the current one. "
	fnames "name n"
		fdesc "Name of the new render layer being created. "
	fnames "noRecurse nr"
		fdesc "If set then only add selected objects to the render layer.  Otherwise all descendants of the selected objects will also be added. "
	fnames "number num"
		fdesc "Number for the new render layer being created. "
	rcount "2"
		rname "editRenderLayerGlobals"
		rname "editRenderLayerMembers"
name "createSubdivRegion"
	desc "CreateSubdivRegion is undoable , NOT queryable , and NOT editable . Creates a subdivision surface region based on the selection list. Once a selection region is created, only the components in the selection list or converted from the selection list will be displayed and selectible through the UI."
	fcount "0"
	rcount "0"
name "cross"
	desc "This command returns the cross product of two vectors."
	fcount "0"
	rcount "0"
name "crossProduct"
	desc "Given two float arrays of 3 values each, this procedure returns the cross product of the two arrays as a float array of size 3."
	fcount "0"
	rcount "0"
name "ctxAbort"
	desc "This command tells the current context to reset itself, losing what has been done so far. If a escape context has been set it then makes that context current. (See setEscapeCtx)."
	fcount "0"
	rcount "0"
name "ctxCompletion"
	desc "This command tells the current context to finish what it is doing and create any objects that is is working on."
	fcount "0"
	rcount "0"
name "ctxEditMode"
	desc "This command tells the current context to switch edit modes. It acts as a toggle."
	fcount "0"
	rcount "0"
name "ctxTraverse"
	desc "This command tells the current context to do a traversal. Some contexts will ignore this command. Individual contexts determine what up/down left/right mean."
	fcount "3"
	fnames "down d"
		fdesc "Move "down" as defined by the current context. "
	fnames "left l"
		fdesc "Move "left" as defined by the current context. "
	fnames "right r"
		fdesc "Move "right" as defined by the current context. "
	rcount "0"
name "currentCtx"
	desc "This command returns the currently selected tool context."
	fcount "0"
	rcount "0"
name "currentTime"
	desc "When given a time argument (with or without the -edit flag) this command sets the current global time. The model updates and displays at the new time, unless "-update off" is present on the command line."
	fcount "3"
	fnames "edit e"
		fdesc "Change the global time of the system. "
	fnames "query q"
		fdesc "Query the global time of the system.  "
	fnames "update u"
		fdesc "change the current time, but do not update the world. Default value is true. "
	rcount "0"
name "currentTimeCtx"
	desc "This command creates a context which may be used to change current time within the graph editor."
	fcount "8"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "currentUnit"
	desc "This command allows you to change the units in which you will work in Maya. There are three types of units: linear, angular and time. The current unit affects how all commands in Maya interpret their numeric values. For example, if the current linear unit is cm , then the command: move 5 -2 3; sphere -radius 4; will be interpreted as moving 5cm in X, -2cm in Y, 3cm in Z, and as creating a sphere with radius 4cm. Similarly, if the current time unit is Film (24 frames per second), then the command: currentTime 6; will be interpreted.... Refer to full documentation"
	fcount "5"
	fnames "angle a"
		fdesc "Set the current angular unit. Valid strings are: [deg | degree | rad | radian] When queried, returns a string which is the current angular unit "
	fnames "fullName f"
		fdesc "A query only flag. When specified in conjunction with any of the -linear/-angle/-time flags, will return the long form of the unit. For example,  mm  and  millimeter  are the same unit, but the former is the short form of the unit name, and the latter is the long form of the unit name. "
	fnames "linear l"
		fdesc "Set the current linear unit. Valid strings are: [mm | millimeter | cm | centimeter | m | meter | km | kilometer | in | inch | ft | foot | yd | yard | mi | mile] When queried, returns a string which is the current linear unit "
	fnames "time t"
		fdesc "Set the current time unit. Valid strings are: [hour | min | sec | millisec | game | film | pal | ntsc | show | palf | ntscf] When queried, returns a string which is the current time unit Note that there is no long form for any of the time units. The non-seconds based time units are interpreted as the following frames per second: game: 15 fps film: 24 fps pal: 25 fps ntsc: 30 fps show: 48 fps palf: 50 fps ntscf: 60 fps "
	fnames "updateAnimation ua"
		fdesc "An edit only flag.  When specified in conjunction with the -time flag indicates that times for keys are not updated.  By default when the current time unit is changed, the times for keys are modified so that playback timing is preserved.  For example a key set a frame 12film is changed to frame 15ntsc when the current time unit is changed to ntsc, since they both represent a key at a time of 0.5 seconds.  Specifying -updateAnimation false would leave the key at frame 12ntsc. Default is -updateAnimation true. "
	rcount "13"
		rname "displayPref"
		rname "hide"
		rname "displayAffected"
		rname "displayRGBColor"
		rname "refresh"
		rname "displayColor"
		rname "displaySmoothness"
		rname "showHidden"
		rname "displayCull"
		rname "displayStats"
		rname "toggle"
		rname "displayLevelOfDetail"
		rname "displaySurface"
name "curve"
	desc "The curve command creates a new curve from a list of control vertices (CVs). A string is returned containing the pathname to the newly created curve. You can create a curve from points either in world space or object (local) space, either with weights or without. You can replace an existing curve by using the "-r/replace" flag. You can append a point to an existing curve by using the "-a/append" flag. To create a curve-on-surface, use the curveOnSurface command. To change the degree of a curve, use the rebuildCurve command. To change the of parameter range curve, use the rebuildCurve.... Refer to full documentation"
	fcount "9"
	fnames "append a"
		fdesc "Appends point(s) to the end of an existing curve. If you use this flag, you must specify the name of the curve to append to, at the end of the command.  (See examples below.) "
	fnames "degree d"
		fdesc "The degree of the new curve.  Default is 3.  Note that you need (degree+1) curve points to create a visible curve span.  eg. you must place 4 points for a degree 3 curve. "
	fnames "knot k"
		fdesc "A knot value in a knot vector.  One flag per knot value. There must be (numberOfPoints + degree - 1) knots and the knot vector must be non-decreasing. "
	fnames "objectSpace os"
		fdesc "Points are in object, or "local" space.  This is the default. You cannot specify both "-os" and "-ws" in the same command. "
	fnames "periodic per"
		fdesc "If on, creates a curve that is periodic.  Default is off. "
	fnames "point p"
		fdesc "The x, y, z position of a point.  "distance" means that this flag can take values with units. "
	fnames "pointWeight pw"
		fdesc "The x,y,z and w values of a point, where the w is a weight value.   A rational curve will be created if this flag is used.   "distance" means that this flag can take values with units. "
	fnames "replace r"
		fdesc "Replaces an entire existing curve. If you use this flag, you must specify the name of the curve to replace, at the end of the command.  (See examples below.) "
	fnames "worldSpace ws"
		fdesc "Points are in world space.  The default is "-os". You cannot specify both "-os" and "-ws" in the same command. "
	rcount "1"
		rname "curveOnSurface"
name "curveAddPtCtx"
	desc "The curveAddPtCtx command creates a new curve add points context, which adds either control vertices (CVs) or edit points to an existing curve."
	fcount "0"
	rcount "0"
name "curveCVCtx"
	desc "The curveCVCtx command creates a new context for creating curves by placing control vertices (CVs)."
	fcount "3"
	fnames "degree d"
		fdesc "No Description"
	fnames "multEndKnots me"
		fdesc "No Description"
	fnames "uniform un"
		fdesc "No Description"
	rcount "0"
name "curveEPCtx"
	desc "The curveEPCtx command creates a new context for creating curves by placing edit points."
	fcount "2"
	fnames "degree d"
		fdesc "No Description"
	fnames "uniform un"
		fdesc "No Description"
	rcount "0"
name "curveEditorCtx"
	desc "The curveEditorCtx command creates a new NURBS editor context, which is used to edit a NURBS curve or surface."
	fcount "3"
	fnames "direction dir"
		fdesc "Query the current direction of the tangent control.  Always zero for the curve case.  In the surface case, its 0 for the normal direction, 1 for U direction and 2 for V direction. "
	fnames "relativeTangentSize rts"
		fdesc "Relative size of the tangent manipulator handle.  Helps to adjust as the surface parameterization controls the size of the tangent, even if the shape of the surface remains the same. The default is 4. "
	fnames "title t"
		fdesc "The title for the tool. "
	rcount "0"
name "curveIntersect"
	desc "You must specify two curves to intersect. This command either returns the parameter values at which the given pair of curves intersect, or returns a dependency node that provides the intersection information. If you want to find the intersection of the curves in a specific direction you must use BOTH the "-useDirection" flag and the "direction" flag."
	fcount "11"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "direction d"
		fdesc "The direction that the input curves are projected in before intersecting.  This vector is only used if  "useDirection" flag is true. "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "tolerance tol"
		fdesc "The tolerance that the intersection is calculated with. For example, given two curves end-to-end, the ends must be within tolerance for an intersection to be returned. Default:  (Tdouble)0.001 "
	fnames "useDirection ud"
		fdesc "If true, use direction flag.  The input curves are first  projected in a specified direction and then intersected.   If false, this command will only find true 3D intersections. Default:  (Tboolean)false "
	rcount "0"
name "curveMoveEPCtx"
	desc "The curveMoveEPCtx command creates a new context for moving curve edit points using a manipulator. Edit points can only be moved one at a time."
	fcount "0"
	rcount "0"
name "curveOnSurface"
	desc "The curve-on-surface command creates a new curve-on-surface from a list of control vertices (CVs). A string is returned containing the pathname to the newly created curve-on-surface. You can replace an existing curve by using the "-r/replace" flag. You can append points to an existing curve-on-surface by using the "-a/append" flag. See also the curve command, which describes how to query curve attributes."
	fcount "6"
	fnames "append a"
		fdesc "Appends point(s) to the end of an existing curve. If you use this flag, you must specify the name of the curve to append to, at the end of the command.  (See examples  below.) "
	fnames "degree d"
		fdesc "The degree of the new curve.  Default is 3.  Note that you need degree+1 curve points to create a visible curve span, eg. you must place 4 points for a degree 3 curve. "
	fnames "knot k"
		fdesc "A knot value in a knot vector. One flag per knot value. There must be (numberOfPoints + degree - 1) knots and the knot vector must be non-decreasing. "
	fnames "periodic per"
		fdesc "If on, creates a curve that is periodic.  Default is off. "
	fnames "positionUV uv"
		fdesc "The uv position of a point. "
	fnames "replace r"
		fdesc "Replaces an entire existing curve. If you use this flag, you must specify the name of the curve to replace, at the end of the command.  (See examples below.) "
	rcount "1"
		rname "curve"
name "curveSketchCtx"
	desc "The curveSketchCtx command creates a new curve sketch context, also known as the "pencil context"."
	fcount "1"
	fnames "degree d"
		fdesc "No Description"
	rcount "0"
name "cutKey"
	desc "The cutKey command cuts curve segment hierarchies from specified targets and puts them in the clipboard. The pasteKey command applies these curves to other objects. The shape of the cut curve placed in the clipboard, and the effect of the cutKey command on the source animation curve depends on the cutKey "-option" specified. Each of these options below will be explained using an example. For all the explanations, let us assume that the source animation curve (from which keys will be cut) has 5 keyframes at times 10, 15, 20, 25, and 30. This command operates on a keyset. A.... Refer to full documentation"
	fcount "11"
	fnames "animation an"
		fdesc "Where this command should get the animation to act on.  Valid values are "objects," "keys," and "keysOrObjects" Default: "keysOrObjects."  (See Description for details.) "
	fnames "attribute at"
		fdesc "List of attributes to select "
	fnames "clear cl"
		fdesc "Just remove the keyframes (i.e. do not overwrite the clipboard)  "
	fnames "controlPoints cp"
		fdesc "This flag explicitly specifies whether or not to include the control points of a shape (see "-s" flag) in the list of attributes. Default: false.   (Not valid for "pasteKey" cmd.) "
	fnames "float f"
		fdesc "value uniquely representing a non-time-based key (or key range) on a time-based animCurve.  Valid floatRange include single values (-f 10) or a string with a lower and upper bound, separated by a colon (-f "10:20") "
	fnames "hierarchy hi"
		fdesc "Hierarchy expansion options.  Valid values are "above," "below," "both," and "none."  (Not valid for "pasteKey" cmd.) "
	fnames "includeUpperBound iub"
		fdesc "When the -t/time or -f/float flags represent a range of keys, this flag determines whether the keys at the  upper bound of the range are included in the keyset. Default value: true.  This flag is only valid when the argument to the -t/time flag is a time range with a lower and upper bound.  (When used with the "pasteKey"  command, this flag refers only to the time range of the target curve that is replaced, when using options such as "replace," "fitReplace," or "scaleReplace."  This  flag has no effect on the curve pasted from the clipboard.) "
	fnames "index in"
		fdesc "index of a key on an animCurve "
	fnames "option o"
		fdesc "Option for how to perform the cutKey operation.  Valid values for this flag are "keys", "curve", "curveCollapse", "curveConnect".  The default cut option is: keys "
	fnames "shape s"
		fdesc "Consider attributes of shapes below transforms as well, except "controlPoints".  Default: true.   (Not valid for "pasteKey" cmd.) "
	fnames "time t"
		fdesc "time uniquely representing a key (or key range) on a time-based animCurve.  Valid timeRanges include single values (-t 10) or a string with a lower and upper bound, separated by a colon (-t "10:20") "
	rcount "10"
		rname "copyKey"
		rname "pasteKey"
		rname "snapKey"
		rname "keyframe"
		rname "keyframeStats"
		rname "keyframeOutliner"
		rname "scaleKey"
		rname "setInfinity"
		rname "keyTangent"
		rname "findKeyframe"
name "cycleCheck"
	desc "This command searches for plug cycles in the dependency graph. If a plug or node is selected then it searches for cycles that that plug or node is involved with. If the -all flag is used then the entire graph is searched. Normally the return value is a boolean indicating whether or not the given items were involved in a cycle. If the -list flag is used then the return value is the list of all plugs in cycles (involving the selected plug or node if any)."
	fcount "6"
	fnames "children c"
		fdesc "do not consider cycles on the children, only the specified plugs "
	fnames "evaluation e"
		fdesc "turn on and off cycle detection during graph evaluation "
	fnames "list l"
		fdesc "Return all plugs involved in one or more cycles.  If not specified, returns a boolean indicating whether a cycle exists. "
	fnames "parents p"
		fdesc "do not consider cycles on the parents, only the specified plugs "
	fnames "secondary s"
		fdesc "look for cycles on related plugs as well as the specified plugs Default is "on" for the "-all" case and "off" for others "
	fnames "timeLimit tl"
		fdesc "limit the search to the given amount of time "
	rcount "0"
name "cylinder"
	desc "The cylinder command creates a new cylinder and/or a dependency node that creates one, and returns their names."
	fcount "26"
	fnames "absoluteSweepDifference asd"
		fdesc "The difference of endSweep - startSweep "
	fnames "axis ax"
		fdesc "The primitive's axis "
	fnames "axisX axx"
		fdesc "X of the axis Default:  1 "
	fnames "axisY axy"
		fdesc "Y of the axis Default:  0 "
	fnames "axisZ axz"
		fdesc "Z of the axis Default:  0 "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "degree d"
		fdesc "The degree of the resulting surface: 1 - linear, 3 - cubic Default:  3 "
	fnames "endSweep esw"
		fdesc "The angle at which to end the surface of revolution. Default is 2Pi radians, or 360 degrees. Default:  6.2831853 "
	fnames "heightRatio hr"
		fdesc "Ratio of "height" to "width" Default:  2.0 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "pivot p"
		fdesc "The primitive's pivot point "
	fnames "pivotX px"
		fdesc "X of the pivot Default:  0 "
	fnames "pivotY py"
		fdesc "Y of the pivot Default:  0 "
	fnames "pivotZ pz"
		fdesc "Z of the pivot Default:  0 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "radius r"
		fdesc "The radius of the object Default:  1.0 "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "sections s"
		fdesc "The number of sections determines the resolution of the surface in the sweep direction. Used only if useTolerance is false. Default:  8 "
	fnames "spans nsp"
		fdesc "The number of spans determines the resolution of the surface in the opposite direction. Default:  1 "
	fnames "startSweep ssw"
		fdesc "The angle at which to start the surface of revolution Default:  0 "
	fnames "tolerance tol"
		fdesc "The tolerance with which to build the surface. Used only if useTolerance is true Default:  0.01 "
	fnames "useTolerance ut"
		fdesc "Use the specified tolerance to determine resolution. Otherwise number of sections will be used. Default:  false "
	rcount "5"
		rname "cone"
		rname "torus"
		rname "sphere"
		rname "nurbsPlane"
		rname "nurbsCube"
name "dagPose"
	desc "This command is used to save and restore the matrix information for a dag hierarchy. Specifically, the data stored will restore the translate, rotate, scale, scale pivot, rotate pivot, rotation order, and (for joints) joint order for all the objects on the hierarchy. Data for other attributes is not stored by this command. This command can also be used to store a bindPose for an object. When you skin an object, a dagPose is automatically created for the skin."
	fcount "10"
	fnames "atPose ap"
		fdesc "Query whether the hierarchy is at same position as the pose. Names of hierarchy members that are not at the pose position will be returned. An empty return list indicates that the hierarchy is at the pose. "
	fnames "bindPose bp"
		fdesc "Used to specify the bindPose for the selected hierarchy. Each hierarchy can have only a single bindPose, which is saved automatically at the time of a skin bind. The bindPose is used when adding influence objects, binding new skins, or adding flexors. Take care when modifying the bindPose with the -rs/-reset  or -rm/-remove flags, since if the bindPose is ill-defined it can cause problems with subsequent skinning operations. "
	fnames "global g"
		fdesc "This flag can be used in conjunction with the restore flag to signal that the members of the pose should be restored to the global pose. The global pose means not only is each object locally oriented with respect to its parents, it is also in the same global position that it was at when the pose was saved. If a hierarchy's parenting has been changed since the time that the pose was saved, you may have trouble reaching the global pose. "
	fnames "members m"
		fdesc "Query the members of the specified pose. The pose should be specified using the selection list, the -bp/-bindPose or the -n/-name flag. "
	fnames "name n"
		fdesc "Specify the name of the pose. This can be used during create, restore, reset, remove, and query operations to specify the pose to be created or acted upon. "
	fnames "remove rm"
		fdesc "Remove the selected joints from the specified pose. "
	fnames "reset rs"
		fdesc "Reset the pose on the selected joints. If you are resetting pose data for a bindPose, take care. It is appropriate to use the -rs/-reset flag if a joint has been reparented and/or appears to be exactly at the bindPose. However, a bindPose that is much different from the exact bindPose can cause problems with subsequent skinning operations. "
	fnames "restore r"
		fdesc "Restore the hierarchy to a saved pose. To specify the pose, select the pose node, or use the -bp/-bindPose or -n/-name flag. "
	fnames "save s"
		fdesc "Save a dagPose for the selected dag hierarchy. The name of the new pose will be returned. "
	fnames "selection sl"
		fdesc "Whether or not to store a pose for all items in the hierarchy, or for only the selected items. "
	rcount "3"
		rname "bindSkin"
		rname "skinCluster"
		rname "retarget"
name "defaultLightListCheckBox"
	desc "This command creates a checkBox that controls whether a shadingGroup is connected/disconnected from the defaultLightList."
	fcount "20"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "shadingGroup sg"
		fdesc "The shading group that is to be connected/disconnected from the defaultLightList. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "defaultNavigation"
	desc "The defaultNavigation command defines default behaviours when creating or manipulating connections between nodes and when navigating between nodes via those connections. This command is primarily used by attribute editors."
	fcount "13"
	fnames "connectToExisting ce"
		fdesc "Connect the destination (which is a node.attribute or simply  node) to an existing source. If the source is specified (as node.attribute or simply as node), the command will proceed  immediately. If the source is not specified, the user will be prompted to specify one. Once a source has been specified,  a best guess will be made about what the user is trying to  accomplish by connecting the two, based on the type of source and type of destination. The command will connect the nodes/attributes according to the best guess. The destination is specified using the -destination flag and the source specified using the -source flag. "
	fnames "createNew cn"
		fdesc "Create a new node and connect it to the node.attribute specified using the -destination flag. "
	fnames "defaultTraversal dtv"
		fdesc "Returns the name of the node to which it would make the most sense to navigate to from the destination node.attribute specified. The destination is specified using the -destination flag. Returns a string. "
	fnames "defaultWorkingNode dwn"
		fdesc "Returns the name of the node which the user is most likely to  want to work with if they are interested in the attributes of  the destination node. The destination is specified using the -destination flag. Returns a string. "
	fnames "delete del"
		fdesc "Delete nodes with connections flowing into the node.attribute specified by the -destination flag. "
	fnames "destination d"
		fdesc "Specifies an existing destination for a createNew or connectToExisting. "
	fnames "force f"
		fdesc "If set to true, then an attempt to connect a source attribute to  a destination attribute which already has a source will cause the existing source to be disconnected and the new source to be connected in its place. Default value is true. "
	fnames "ignore i"
		fdesc "Ignore any connections flowing into the node.attribute specified by the -destination flag. "
	fnames "navigatorDecisionString nds"
		fdesc "This is your opportunity to pass the navigator a string that can help it decide what behaviour to execute. "
	fnames "quiet qt"
		fdesc "If set to true, then under no circumstances should the user be prompted for more information. Default value is false. "
	fnames "relatedNodes ren"
		fdesc "List nodes which are conceptually related to the node.attribute specified by the destination. Related nodes may include, but are not limited to, nodes which are directly or indirectly connected to the destination. The destination is specified using the -destination flag. Returns an array of strings. "
	fnames "source s"
		fdesc "Specifies an existing source for a connectToExisting. "
	fnames "unignore u"
		fdesc "Stop ignoring any connections flowing into the node.attribute specified by the -destination flag. "
	rcount "0"
name "defineDataServer"
	desc "Connects to the specified data servername, creating a named device which then can be attached to device handlers. When the device is defined, it queries queries the server for data axis information. The "CapChannels" present are represented as axis in form "channelName"."usage" for scalar channels and "channelName"."component" for compound channels. See listInputDeviceAxes to list axis names. Note that undoing defineDataServer -d "myDevice" -s "myServer" does not break the connection with the data server until it cannot be redone. Executing any other command (sphere for example) will cause this to occur. Similarly, the command defineDataServer -d "myDevice" -u does not break.... Refer to full documentation"
	fcount "3"
	fnames "device d"
		fdesc "specified the device name to be given to the server connection.  device name must be unique or the command fails. "
	fnames "server s"
		fdesc "specifies the name of the server with which the define  device connects, and can be specifiied in two ways name  -- the name of the server socket Server names of the form  name  connect to the  server socket on the localhost corresponding to  name .  If  name  does not begin with "/", then /tmp/ name  is used. This is the default behavior  of most servers. If  name  begins with "/",  name  denotes the full path to the socket.  host : service  - a udp service  on the specified host. The  service  can be any one of a "udp service name," a "port number," or a named service of "tcpmux," and they are  found in that order. If host  is omitted, the localhost is used.  In any case, if the server cannot be found, the device is not defined (created) and the command fails. "
	fnames "undefine u"
		fdesc "undefines (destroys) the dataServer device, closing the connection with the server. "
	rcount "9"
		rname "applyTake"
		rname "filter"
		rname "recordDevice"
		rname "movIn"
		rname "writeTake"
		rname "defineVirtualDevice"
		rname "movOut"
		rname "enableDevice"
		rname "readTake"
name "defineVirtualDevice"
	desc "This command defines a virtual device. Virtual devices act like real devices and are useful to manipulate/playback data when an command device is not connected to the computer."
	fcount "8"
	fnames "axis ax"
		fdesc "Specifies the axis number of the channel. All children have their axis number determined by their parent's axis number and the width  of the parent channel. If this flag is not used, the order of the  channel determines the axis number. "
	fnames "channel c"
		fdesc "After a -create is started, channels may be added to the device definition. The channel string wil be the name of the channel being added to the device. The -channel flag must also be  accompanied by the -usage flag and optionally by the -axis flag. "
	fnames "clear cl"
		fdesc "The -clear option will end a device definition and throw away any defined channels. "
	fnames "create cr"
		fdesc "Start defining a virtual device. If a device is currently being defined, the -create flag will produce an error.  "
	fnames "device d"
		fdesc "The -device flag ends the device definition. All of the channels between the -create flag and the -device flag are added to  the specified device. If that device already exists, the command will fail and the device should be redefined with another device name. To see the currently defined devices, use the listInputDevices command. The -device flag is also used with -undefine to undefine a virtual device. "
	fnames "parent p"
		fdesc "Specified the parent channel of the channel being defined. If the channel does not exist, or is an incompatible type, the command  will fail. "
	fnames "undefine u"
		fdesc "Undefines the device specified with the -device flag. "
	fnames "usage use"
		fdesc "The -usage option is required for every -channel flag. It  describes what usage type the defined channel is. The usage  types are: "
	rcount "0"
name "deformer"
	desc "This command creates a deformer of the specified type. The deformer will deform the selected objects."
	fcount "12"
	fnames "after af"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node after the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "before bf"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node before the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "deformerTool dt"
		fdesc "Returns the name of the deformer tool objects (if any) as string string ... "
	fnames "exclusive ex"
		fdesc "Puts the deformation set in a deform partition. "
	fnames "frontOfChain foc"
		fdesc "This command is used to specify that the new deformer  node should be placed ahead (upstream) of existing deformer and skin nodes in the shape's history (but not ahead of existing tweak nodes). The input to the deformer will be the upstream shape rather than the visible downstream shape, so the behavior of this flag is the most intuitive if the downstream deformers are in their reset (hasNoEffect) position when the new deformer is added. "
	fnames "geometry g"
		fdesc "The specified object will be added to the list of objects being deformed by this deformer object, unless the -rm flag is also specified. When queried, this flag returns string string string ... "
	fnames "ignoreSelected is"
		fdesc "Tells the command to not deform objects on the current selection list "
	fnames "name n"
		fdesc "Used to specify the name of the node being created "
	fnames "prune pr"
		fdesc "Removes any points not being deformed by the deformer in  its current configuration from the deformer set. "
	fnames "remove rm"
		fdesc "Specifies that objects listed after the -g flag should be removed from this deformer. "
	fnames "split sp"
		fdesc "Branches off a new chain in the dependency graph instead of inserting/appending the deformer into/onto an existing chain. "
	fnames "type typ"
		fdesc "Specify the type of deformer to create. This flag is required in create mode. Typically the type should specify a loaded plugin deformer. This command should typically not be used to create one of the standard deformers  such as sculpt, lattice, blendShape, wire and cluster, since they have their own customized commands which perform useful specialized functionality. "
	rcount "7"
		rname "cluster"
		rname "lattice"
		rname "sculpt"
		rname "flexor"
		rname "wire"
		rname "wrinkle"
		rname "percent"
name "deg_to_rad"
	desc "Converts from degrees to radians."
	fcount "0"
	rcount "0"
name "delete"
	desc "This command is used to delete selected objects, or all objects, or objects specified alongwith the command. Flags are available to filter the type of objects that the command acts on. At times, more than just specified items will be deleted. For example, deleting two CVs in the same "row" on a NURBS surface will delete the whole row."
	fcount "12"
	fnames "attribute at"
		fdesc "List of attributes to select "
	fnames "channels c"
		fdesc "Remove animation channels in the scene. Either all channels can be removed, or the scope can be narrowed down by specifying some of the above mentioned options. "
	fnames "constraints cn"
		fdesc "Remove selected constraints and constraints attached to the selected nodes, or remove all constraints in the scene. "
	fnames "constructionHistory ch"
		fdesc "Remove the construction history on the objects specified or selected. "
	fnames "controlPoints cp"
		fdesc "This flag explicitly specifies whether or not to include the control points of a shape (see "-s" flag) in the list of attributes. Default: false.   (Not valid for "pasteKey" cmd.) "
	fnames "expressions e"
		fdesc "Remove expressions in the scene. Either all expressions can be removed, or the scope can be narrowed down by specifying some of the above mentioned options. "
	fnames "hierarchy hi"
		fdesc "Hierarchy expansion options.  Valid values are "above," "below," "both," and "none."  (Not valid for "pasteKey" cmd.) "
	fnames "inputConnectionsAndNodes icn"
		fdesc "Break input connection to specified attribute and delete all unconnected nodes that are left behind. The graph will be traversed until a node that cannot be deleted is encountered. "
	fnames "shape s"
		fdesc "Consider attributes of shapes below transforms as well, except "controlPoints".  Default: true.   (Not valid for "pasteKey" cmd.) "
	fnames "staticChannels sc"
		fdesc "Remove static animation channels in the scene. Either all static channels can be removed, or the scope can be narrowed down by specifying some of the above mentioned options. "
	fnames "timeAnimationCurves tac"
		fdesc "Modifies the -c/channels and -sc/staticChannels flags. When true, only channels connected to time-input animation curves (for instance, those created by 'setKeyframe' will be deleted.  When false, no time-input animation curves will be deleted. Default: true. "
	fnames "unitlessAnimationCurves uac"
		fdesc "Modifies the -c/channels and -sc/staticChannels flags. When true, only channels connected to unitless-input animation curves (for instance, those created by 'setDrivenKeyframe' will be deleted.  When false, no unitless-input animation curves will be deleted.  Default: true. "
	rcount "0"
name "deleteAttr"
	desc "This command is used to delete a dynamic attribute from a node or nodes. The attribute can be specified by using either the long or short name. Only one dynamic attribute can be deleted at a time. Static attributes cannot be deleted. Children of a compound attribute cannot be deleted. You must delete the complete compound attribute. This command has no edit capabilities. The only query ability is to list all the dynamic attributes of a node."
	fcount "2"
	fnames "attribute at"
		fdesc "Specify either the long or short name of the attribute. "
	fnames "query q"
		fdesc "List all dynamic attributes of a node. Only one node may be specified. "
	rcount "8"
		rname "addAttr"
		rname "aliasAttr"
		rname "getClassification"
		rname "nodeType"
		rname "objExists"
		rname "attributeInfo"
		rname "objectType"
		rname "renameAttr"
name "deleteShadingGroupsAndMaterials"
	desc "Deletes all shading groups and everything returned by "ls -materials". Geometry in the shading groups is reassigned to the intialShadingGroup, which cannot be deleted."
	fcount "0"
	rcount "0"
name "deleteShelfTab"
	desc "Deletes a shelf layout and tab, and removes its preferences so that it will not be loaded again. The user is prompted for confirmation of the delete."
	fcount "0"
	rcount "0"
name "deleteUI"
	desc "This command deletes UI objects such as windows and controls. Deleting a layout or window will also delete all of its children. If a flag is used then all objects being deleted must be of the specified type. This command may not be edited or queried. NOTE: it is recommended that the type flags be used to disambiguate different kinds of objects with the same name."
	fcount "12"
	fnames "collection cl"
		fdesc "Object names for deletion are all radio or tool collections. "
	fnames "control ctl"
		fdesc "Object names for deletion are all controls. "
	fnames "editor ed"
		fdesc "Object names for deletion are all editors. "
	fnames "layout lay"
		fdesc "Object names for deletion are all layouts. "
	fnames "menu m"
		fdesc "Object names for deletion are all menus. "
	fnames "menuItem mi"
		fdesc "Object names for deletion are all menu items. "
	fnames "panel pnl"
		fdesc "Object names for deletion are all panels. "
	fnames "panelConfig pc"
		fdesc "Object names for deletion are panel configurations. "
	fnames "radioMenuItemCollection ric"
		fdesc "Object names for deletion are all radio menu item collections. "
	fnames "toolContext tc"
		fdesc "Object names for deletion are all tool contexts. "
	fnames "uiTemplate uit"
		fdesc "Object names for deletion are all UI templates. "
	fnames "window wnd"
		fdesc "Object names for deletion are all windows. "
	rcount "0"
name "deleteUnusedBrushes"
	desc "This deletes all brushes that are not attached to any strokes This can be used to clean up default brush nodes that may accumulate when doing a large number of import operations."
	fcount "0"
	rcount "0"
name "delrandstr"
	desc "The command deletes the random number stream(s) specified by the string argument. The string accepts a wildcard asterisk (currently only a single "*" character is supported) which allows like-named streams to be deleted together. The command returns the number of random number streams which have been deleted, and thus a value of 0 signifies that the string did not match any existing stream names. Note that the default stream cannot be deleted, and attempts to delete it are silently ignored. For more details about creating and using multiple random number streams with MEL, please refer to the documentation for the.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "detachCurve"
	desc "The detachCurve command detaches a curve into pieces, given a list of parameter values. You can also specify which pieces to keep and which to discard using the "-k" flag. The names of the newly detached curve(s) is returned. If history is on, then the name of the resulting dependency node is also returned. You can use this command to open a periodic curve at a particular parameter value. You would use this command with only one "-p" flag. If you are specifying "-k" flags, then you must specify one, none or all "-k" flags. If you are specifying all.... Refer to full documentation"
	fcount "10"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "keep k"
		fdesc "Whether or not to keep a detached piece.  This multiattribute should be one element larger than the parameter multattribute. Default:  true "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "parameter p"
		fdesc "Parameter values to detach at Default:  0.0 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	rcount "0"
name "detachDeviceAttr"
	desc "This command detaches connections between device axes and node attributes. The command line arguments are the same as for the corresponding attachDeviceAttr except for the clutch argument which can not be used in this command."
	fcount "4"
	fnames "attribute at"
		fdesc "The attribute to detach. This flag must be used  with the -d/device flag. "
	fnames "axis ax"
		fdesc "The axis to detach. This flag must be used with  the -d/device flag. "
	fnames "device d"
		fdesc "Delete the attachment for this device. If the -ax/axis flag is not used, all of the attachments connected to this device are detached. "
	fnames "selection sl"
		fdesc "Detaches selection attachments.  -all Delete all attachments on every device. "
	rcount "13"
		rname "assignInputDevice"
		rname "getModifiers"
		rname "recordAttr"
		rname "attachDeviceAttr"
		rname "listDeviceAttachments"
		rname "setAttrMapping"
		rname "listInputDeviceAxes"
		rname "setInputDeviceMapping"
		rname "devicePanel"
		rname "listInputDeviceButtons"
		rname "unassignInputDevice"
		rname "getInputDeviceRange"
		rname "listInputDevices"
name "detachSurface"
	desc "The detachSurface command detaches a surface into pieces, given a list of parameter values and a direction. You can also specify which pieces to keep and which to discard using the "-k" flag. The names of the newly detached surface(s) are returned. If history is on, the name of the resulting dependency node is also returned. You can only detach in either U or V (not both) with a single detachSurface operation. You can use this command to open a closed surface at a particular parameter value. You would use this command with only one "-p" flag. If you are.... Refer to full documentation"
	fcount "11"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "direction d"
		fdesc "Direction in which to detach: 0 - V direction, 1 - U direction Default:  1 "
	fnames "keep k"
		fdesc "Keep the detached pieces. Default:  true "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "parameter p"
		fdesc "Parameter at which to detach. Default:  0.0 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	rcount "0"
name "deviceEditor"
	desc "This creates an editor for creating/modifying attachments to input devices."
	fcount "20"
	fnames "control ctl"
		fdesc "Query only. Returns the top level control for this editor. Usually used for getting a parent to attach popup menus. CAUTION: editors may not have controls at times.  This flag can return "NONE" if no control is present. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dtg"
		fdesc "Attaches a tag to the maya editor. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "filter f"
		fdesc "Specifies the name of a filter to be placed on this editor. This filters the information coming onto the main list of the editor. "
	fnames "forceMainConnection fmc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. This is a variant of the -mainListConnection flag in that it will force a change even when the connection is locked. This flag is used to reduce the overhead when using the -unlockMainConnection , -mainListConnection, -lockMainConnection flags in immediate  succession. "
	fnames "highlightConnection hlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its highlight list.  Not all editors have a highlight list.  For those who do, it is sort of a secondary selection list. "
	fnames "lockMainConnection lck"
		fdesc "Locks the current list of objects within the mainConnection, so that only those objects are displayed within the editor. Further changes to the original mainConnection are ignored. "
	fnames "mainListConnection mlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. "
	fnames "panel pnl"
		fdesc "Specifies the panel that the editor belongs to.  By default if an editor is created in the create callback of a scripted panel it will belong to that panel.  If an editor doesn't belong to a panel it will be deleted when the window that it is in is deleted. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this editor. This flag will only have an effect if the editor is currently un-parented. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "selectionConnection slc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its own selection list.  As the user selects things in this editor, they will be selected in the selectionConnection object.  If someone else changes the object, the editor will update to show the change. "
	fnames "stateString sts"
		fdesc "Query only flag.  Returns the MEL command that will edit an editor to match the current editor state. The returned command string uses the string variable $editorName in place of a specific name. "
	fnames "takePath tp"
		fdesc "The path used for writing/reading take data through the  editor.  "
	fnames "unParent up"
		fdesc "Specifies that the editor should be removed from its layout. This cannot be used with query. "
	fnames "unlockMainConnection ulk"
		fdesc "Unlocks the mainConnection, effectively restoring the original mainConnection (if it is still available), and dynamic updates. "
	fnames "updateMainConnection upd"
		fdesc "Causes a locked mainConnection to be updated from the orginal mainConnection, but preserves the lock state. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "devicePanel"
	desc "This creates a panel containing an editor for creating/modifying attachments to input devices."
	fcount "0"
	rcount "0"
name "dgInfo"
	desc "DgInfo is undoable , queryable , and editable . This command prints information about the DG in a text-oriented manner. The scope of the information printed is the entire graph if the -all flag is used, the nodes/plugs on the command line if they were specified, and the selection list, in that order."
	fcount "10"
	fnames "allNodes all"
		fdesc "Use the entire graph as the context "
	fnames "connections c"
		fdesc "Print the connection information "
	fnames "dirty d"
		fdesc "Only print dirty/clean nodes/plugs/connections.  Default is both "
	fnames "nodes n"
		fdesc "Print the specified nodes (or the entire graph if -all is used) "
	fnames "nonDeletable nd"
		fdesc "Include non-deletable nodes as well (normally not of interest) "
	fnames "outputFile of"
		fdesc "Send the output to the file FILE instead of STDERR "
	fnames "propagation p"
		fdesc "Only print propagating/not propagating nodes/plugs/connections. Default is both. "
	fnames "short s"
		fdesc "Print using short format instead of long "
	fnames "subgraph sub"
		fdesc "Print the subgraph affected by the node or plugs (or all nodes in the graph grouped in subgraphs if -all is used) "
	fnames "type nt"
		fdesc "Filter output to only show nodes of type NODETYPE "
	rcount "2"
		rname "dgdirty"
		rname "dgeval"
name "dgdirty"
	desc "The dgdirty command is used to force a dependency graph dirty message on a node or plug. Used for debugging to find evaluation problems. If no nodes are specified then the current selection list is used."
	fcount "3"
	fnames "allPlugs a"
		fdesc "Ignore the selected or specified objects and dirty (or clean) all plugs. "
	fnames "clean c"
		fdesc "If this flag is set then the attributes are cleaned.  Otherwise they are set to dirty. "
	fnames "verbose v"
		fdesc "Prints out all of the plugs being set dirty on stdout. "
	rcount "2"
		rname "dgeval"
		rname "dgInfo"
name "dgeval"
	desc "The dgeval command is used to force a dependency graph evaluate of a node or plug. Used for debugging to find propagation problems."
	fcount "1"
	fnames "verbose v"
		fdesc "If this flag is used then the results of the evaluation(s) is/are printed on stdout. -src If specified then evaluate node outputs as well as inputs when evaluating an entire node. objectList Normally the selection list is used to determine which objects to evaluate, but you can add to the selection list by specifying which objects you want on the command line. "
	rcount "2"
		rname "dgdirty"
		rname "dgInfo"
name "dgtimer"
	desc "Dgtimer is NOT undoable , queryable , and NOT editable . This command measures dependency graph node performance by managing timers on a per-node basis. Logically, each DG node has a timer associated with it which records the amount of real time spent in computation on its plugs. The time measurement includes the cost of copying data to the node on behalf of computation, MEL commands executed by an expression contained in an expression node, and includes any wait time such as when a fileTexture node loads an image file from disk. However, certain DG operations are not reported (basically.... Refer to full documentation"
	fcount "11"
	fnames "combineType ct"
		fdesc "Causes all nodes of the same type (e.g. animCurveTA) to be combined in the output display. "
	fnames "hierarchy h"
		fdesc "Used to specify that a hierarchy of the dependency graph be affected, thus "-reset -hierarchy -name ball" will reset the timers on the node named "ball" and all of its descendents in the dependency graph. "
	fnames "maxDisplay m"
		fdesc "Truncates the display so that only the most expenive "n" entries are printed in the output display. "
	fnames "name n"
		fdesc "Used in conjunction with -reset or -query to specify the name of the node to reset or print timer values for. When querying a single timer, only a single line of output is generated (i.e. the global timers and header information is omitted). Note that one can force output to the script editor window via the "-outputFile MEL" option to make it easy to grab the values in a MEL script. Note: the -name and -type flag cannot be used together. "
	fnames "noHeader nh"
		fdesc "Used in conjunction with -query to prevent any header or footer information from being printed. All that will be output is the per-node timing data. This option makes it easier to parse the output such as when you output the query to a file on disk using the  -outputFile  option. "
	fnames "outputFile o"
		fdesc "Used in conjunction with the -query flag to cause output to be directed to an output file. By default, output is to stdout, but can be redirected e.g. -outputFile "/home/virginia/timing/dgtrace.txt". This makes it handy to load the data into an external application such as a spreadsheet program. To force output to the script editor, use "-outputFile MEL" which makes it easy to grab the values from within a MEL script. "
	fnames "reset r"
		fdesc "Resets the node timers to zero. By default, the timers on all nodes as well as the global timers are reset, but if specified with the -name or -type flags, only the timers on specified nodes are reset. "
	fnames "threshold th"
		fdesc "Truncates the display once the percentage of total execution time falls below the threshold value. "
	fnames "timerOff off"
		fdesc "Turns off node timing. By default, the timers on all nodes are turned off, but if specified with the -name or -type flags, only the timers on specified nodes are turned off. If the timers on all nodes become turned off, then global timing is also turned off as well. "
	fnames "timerOn on"
		fdesc "Turns on node timing. By default, the timers on all nodes are turned on, but if specified with the -name or -type flags, only the timers on specified nodes are turned on. The global timers are also turned on by this command. Note that turning on timing does NOT reset the timers to zero. Use the -reset flag to reset the timers. The idea for NOT resetting the timers is to allow the user to arbitrarily turn timing on and off and continue to add to the existing timer values. "
	fnames "type t"
		fdesc "Used in conjunction with -reset or -query to specify the type of the node(s) (e.g. animCurveTA) to reset or print timer values for. When querying, use of the -combineType flag will cause all nodes of the same type to be combined into one entry, and only one line of output is generated (i.e. the global timers and header information is omitted). Note that one can force output to the script editor window via the "-outputFile MEL" option to make it easy to grab the values in a MEL script. Note: the -name and -type flag cannot be used together. "
	rcount "0"
name "dimWhen"
	desc "This method attaches the named UI object to the named condition so that the object will be dimmed when the condition is in a particular state. This command will fail if the object does not exist. If the condition does not exist (yet), that's okay --- a placeholder will be used until such a condition comes into existence. The UI object should be one of two things, either a control or a menu item."
	fcount "3"
	fnames "clear c"
		fdesc "Remove the condition on the specified dimmable. "
	fnames "false f"
		fdesc "Dim the object when the condition is false. "
	fnames "true t"
		fdesc "Dim the object when the condition is true. (default) "
	rcount "0"
name "directKeyCtx"
	desc "This command creates a context which may be used to directly manipulate keyframes within the graph editor."
	fcount "9"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "option o"
		fdesc "move | insert | over | segmentOver Specifies the keyframe -option to use "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "directionalLight"
	desc "The directionalLight command is used to edit the parameters of existing directionalLights, or to create new ones. The default behaviour is to create a new directionallight."
	fcount "4"
	fnames "edit e"
		fdesc "edit the parameters of an existing light  -rgb float float float color of the light (0-1)  "
	fnames "intensity i"
		fdesc "intensity of the light (expressed as a percentage)  "
	fnames "shadowColor sc"
		fdesc "the shadow color  "
	fnames "useRayTraceShadows rs"
		fdesc "ray trace shadows  "
	rcount "9"
		rname "ambientLight"
		rname "lightListEditor"
		rname "lightListPanel"
		rname "spotLight"
		rname "exclusiveLightCheckBox"
		rname "lightlink"
		rname "spotLightPreviewPort"
		rname "pointLight"
		rname "lightList"
name "dirmap"
	desc "Use this command to map a directory to another directory. Directories must both be absolute paths, and should be separated with forward slashes ('/'). The mapping is case-sensitive on all platforms. This command can be useful when moving projects to another machine where some textures may not be contained in the Maya project, or when a texture archive moves to a new location. This command is not necessary when moving a (self-contained) project from one machine to another - instead copy the entire project over and set the Maya project to the new location. For one-time directory moves, if the.... Refer to full documentation"
	fcount "6"
	fnames "convertDirectory cd"
		fdesc "Convert a file or directory. Returns the name of the mapped file or directory, if the command is enabled. If the given string contains one of the mapped directories, the return value will have that substring replaced with the mapped one. Otherwise the given argument string will be returned. If the command is disabled the given argument is always returned. Checks are not made for whether the file or directory exists. If the given string is a directory it should have a trailing '/'.  "
	fnames "enable en"
		fdesc "Enable directory mapping. Directory mapping is off when you start Maya. If enabled, when opening Maya scenes, file texture paths (and other file paths) will be converted when the scene is opened. The -cd flag only returns mapped directories  when -enable is true. Query returns whether mapping has been enabled. "
	fnames "getAllMappings gam"
		fdesc "Get all current mappings. Returns string array of current mappings in format: [redirect1, replacement1, ... redirectN, replacementN] "
	fnames "getMappedDirectory gmd"
		fdesc "Get the mapped redirected directory. The given argument must exactly match the first string used with the -mapDirectory flag. "
	fnames "mapDirectory m"
		fdesc "Map a directory - the first argument is mapped to the second. Neither directory needs to exist on the local machine at the time of invocation. "
	fnames "unmapDirectory um"
		fdesc "Unmap a directory. The given argument must exactly match the argument used with the -mapDirectory flag. "
	rcount "0"
name "dirname"
	desc "Strips the last level of the given pathname. On NT, all '\' characters in $path (input as "\\") are replaced with '/'."
	fcount "0"
	rcount "0"
name "disable"
	desc "This command enables or disables any control."
	fcount "1"
	fnames "value v"
		fdesc "If true, this command disables the control. If false, this command enables the control. Default value is true (disable) "
	rcount "0"
name "disconnectAttr"
	desc "Disconnects two connected attributes."
	fcount "1"
	fnames "nextAvailable na"
		fdesc "If the destination multi-attribute has set the indexMatters to be false, the command will disconnect the first matching connection.  No index needs to be specified.  "
	rcount "5"
		rname "addAttr"
		rname "getAttr"
		rname "setAttr"
		rname "connectAttr"
		rname "listAttr"
name "disconnectJoint"
	desc "This command will break a skeleton at the selected joint and delete any associated handles."
	fcount "0"
	rcount "0"
name "diskCache"
	desc "DiskCache is NOT undoable , queryable , and NOT editable . Command to create, clear, or close disk cache(s)."
	fcount "15"
	fnames "frameRangeType frt"
		fdesc "Specifies the type of frame range to use, namely "Render Globals", "Time Slider", and "Start/End".  In the case of "Time Slider", startFrame and endFrame need to be specified.  (This flag is now obsolete.  Please use the -startTime and -endTime flags to specify the frame range explicitly.) "
	fnames "startTime st"
		fdesc "Specifies the start frame of the cache range. "
	fnames "endTime et"
		fdesc "Specifies the end frame of the cache range. "
	fnames "samplingRate sr"
		fdesc "Specifies the numbers of times to sample within each frame interval. If over sample has been toggled, r is the number of frames taken within one frame.  Otherwise, it's under sample and the runup will everaulte at every rth frame. "
	fnames "enabledCachesOnly eco"
		fdesc "When present, this flag restricts the -ea/emptyAll, so that only "enabled" disk caches (i.e., disk cache nodes with the ".enable" attribute set to "true") are affected. "
	fnames "emptyAll ea"
		fdesc "Clear the content of all disk caches.  If -eco/enabledCachesOnly is "true" only enabled disk cache nodes are affected. "
	fnames "empty e"
		fdesc "Clear the content of the disk cache with the given disk cache node name.  If -eco/enabledCachesOnly is "true" only enabled disk cache nodes are affected. "
	fnames "deleteAll da"
		fdesc "Delete all disk cache files.  If -eco/enabledCachesOnly is "true" only enabled disk cache nodes are affected. "
	fnames "delete d"
		fdesc "Delete the cache given the disk cache node name.  If -eco/enabledCachesOnly is "true" only enabled disk cache nodes are affected. "
	fnames "closeAll ca"
		fdesc "Close all disk cache files. If -eco/enabledCachesOnly is "true" only enabled disk cache nodes are affected. "
	fnames "close c"
		fdesc "Close the cache given the disk cache node name.  If -eco/enabledCachesOnly is "true" only enabled disk cache nodes are affected. "
	fnames "append a"
		fdesc "Append at the end and not to flush the existing cache "
	fnames "overSample os"
		fdesc "Over sample if true. Otherwise, under sample. "
	fnames "cacheType ct"
		fdesc "Specifies the type of cache to overwrite.  "mcfp" for particle playback cache, "mcfi" for particle initial cache. "mcj" for jiggle cache. This option is only activated during the cache creation. "
	fnames "tempDir tmp"
		fdesc "Query-only flag for the location of temporary diskCache files. "
	rcount "0"
name "displacementToPoly"
	desc "DisplacementToPoly is undoable , queryable , and editable . Command bakes geometry with displacement mapping into a polygonal object."
	fcount "1"
	fnames "findBboxOnly fbb"
		fdesc "When used, only the bounding box scale for the displaced object is found. "
	rcount "0"
name "displayAffected"
	desc "Turns on/off the special coloring of objects that are affected by the objects that are currently in the selection list. If one of the curves in a loft were selected and this feature were turned on, then the lofted surface would be highlighted because it is affected by the loft curve."
	fcount "0"
	rcount "0"
name "displayColor"
	desc "This command changes or queries the display color for anything in the application that allows the user to set its color. The color is defined by a color index into either the dormant or active color palette. These colors are part of the UI and not part of the saved data for a model. This command is not undoable."
	fcount "8"
	fnames "active a"
		fdesc "Specifies the color index applies to active color palette. name Specifies the name of color to change. index The color index for the color. "
	fnames "create c"
		fdesc "Creates a new display color which can be queried or set. If is used only when saving color preferences. "
	fnames "dormant d"
		fdesc "Specifies the color index applies to dormant color palette. If neither of the dormant or active flags is specified, dormant is the default. "
	fnames "list l"
		fdesc "Writes out a list of all color names and their value. "
	fnames "q query"
		fdesc "Allows you to query the color index for a color setting. "
	fnames "qi queryIndex"
		fdesc "Allows you to obtain a list of color names with the given color indices. "
	fnames "resetToFactory rf"
		fdesc "Resets all display colors to their factory defaults. "
	fnames "resetToSaved rs"
		fdesc "Resets all display colors to their saved values. "
	rcount "13"
		rname "currentUnit"
		rname "displayPref"
		rname "hide"
		rname "displayAffected"
		rname "displayRGBColor"
		rname "refresh"
		rname "displaySmoothness"
		rname "showHidden"
		rname "displayCull"
		rname "displayStats"
		rname "toggle"
		rname "displayLevelOfDetail"
		rname "displaySurface"
name "displayCull"
	desc "This command is responsible for setting the display culling property of back faces of surfaces."
	fcount "1"
	fnames "query q"
		fdesc "Query the state of back-face-culling on the selected object. -bfc boolean Enable/disable culling of back faces.   "
	rcount "13"
		rname "currentUnit"
		rname "displayPref"
		rname "hide"
		rname "displayAffected"
		rname "displayRGBColor"
		rname "refresh"
		rname "displayColor"
		rname "displaySmoothness"
		rname "showHidden"
		rname "displayStats"
		rname "toggle"
		rname "displayLevelOfDetail"
		rname "displaySurface"
name "displayLevelOfDetail"
	desc "This command is responsible for setting the display level-of-detail for edit refreshes. If enabled, objects will draw with lower detail based on their distance from the camera. When disabled objects will display at full resolution at all times. This is not an undoable command."
	fcount "1"
	fnames "query q"
		fdesc "Query the state of level-of-detail display. -lod [true,false] Enable/disable level of detail. "
	rcount "13"
		rname "currentUnit"
		rname "displayPref"
		rname "hide"
		rname "displayAffected"
		rname "displayRGBColor"
		rname "refresh"
		rname "displayColor"
		rname "displaySmoothness"
		rname "showHidden"
		rname "displayCull"
		rname "displayStats"
		rname "toggle"
		rname "displaySurface"
name "displayPref"
	desc "This command sets/queries the state of global display parameters."
	fcount "7"
	fnames "activeObjectPivots aop"
		fdesc "Sets the display state for drawing pivots for active objects. "
	fnames "displayAffected da"
		fdesc "Turns on/off the special coloring of objects that are affected by the objects that are currently in the selection list. If one of the curves in a loft were selected and this feature were  turned on, then the lofted surface would be highlighted because it is affected by the loft curve. "
	fnames "ghostFrames gf"
		fdesc "Sets the ghosting frame preferences: steps before, steps after and step size. "
	fnames "regionOfEffect roe"
		fdesc "Turns on/off the display of the region of curves/surfaces that is affected by changes to selected CVs and edit points. "
	fnames "shadeTemplates st"
		fdesc "Turns on/off the display of templated surfaces as shaded in shaded display mode. If its off, templated surfaces appear in wireframe. "
	fnames "textureDrawPixels tdp"
		fdesc "Sets the display mode for drawing image planes. True for use of gltexture calls for perspective views. This flag should not normally be needed. Image Planes may display faster on  Windows but can result in some display artifacts. "
	fnames "wireframeOnShadedActive wsa"
		fdesc "Sets the display state for drawing the wireframe on active shaded objects.  Possible values for the string argument are "full", "reduced" and "none". "
	rcount "13"
		rname "currentUnit"
		rname "hide"
		rname "displayAffected"
		rname "displayRGBColor"
		rname "refresh"
		rname "displayColor"
		rname "displaySmoothness"
		rname "showHidden"
		rname "displayCull"
		rname "displayStats"
		rname "toggle"
		rname "displayLevelOfDetail"
		rname "displaySurface"
name "displayRGBColor"
	desc "This command changes or queries the display color for anything in the application that allows the user to set its color. These colors are part of the UI and not part of the saved data for a model. This command is not undoable."
	fcount "6"
	fnames "create c"
		fdesc "Creates a new RGB display color which can be queried or set. If is used only when saving color preferences. name Specifies the name of color to change. "
	fnames "hueSaturationValue hsv"
		fdesc "Indicates that rgb values are really hsv values. Upon query, returns the HSV valuses as an array of 3 floats. r g b The RGB values for the color.  (Between 0-1) "
	fnames "list l"
		fdesc "Writes out a list of all RGB color names and their value. "
	fnames "q query"
		fdesc "Allows you to query a color setting. "
	fnames "resetToFactory rf"
		fdesc "Resets all the RGB display colors to their factory defaults. "
	fnames "resetToSaved rf"
		fdesc "Resets all the RGB display colors to their saved values. "
	rcount "13"
		rname "currentUnit"
		rname "displayPref"
		rname "hide"
		rname "displayAffected"
		rname "refresh"
		rname "displayColor"
		rname "displaySmoothness"
		rname "showHidden"
		rname "displayCull"
		rname "displayStats"
		rname "toggle"
		rname "displayLevelOfDetail"
		rname "displaySurface"
name "displaySmoothness"
	desc "This command is responsible for setting the display smoothness of NURBS curves and surfaces to either predefined or custom values. It also sets display modes for smoothness such as hulls and the hull simplification factors. At present, this command is NOT un-doable."
	fcount "13"
	fnames "boundary bn"
		fdesc "Display wireframe surfaces using only the boundaries of the surface Not fully implemented yet "
	fnames "defaultCreation dc"
		fdesc "The default values at creation (applies only -du, -dv, -pw, -ps) "
	fnames "divisionsU du"
		fdesc "Number of isoparm divisions per span in the U direction. The valid range of values is [0,64]. "
	fnames "divisionsV dv"
		fdesc "Number of isoparm divisions per span in the V direction. The valid range of values is [0,64]. "
	fnames "full f"
		fdesc "Display surface at full resolution - the default. "
	fnames "hull hl"
		fdesc "Display surface using the hull (control points are drawn rather than surface knot points). This mode is a useful display performance improvement when modifying a surface since it doesn't require evaluating points on the surface. "
	fnames "pointsShaded ps"
		fdesc "Number of points per surface span in shaded mode. The valid range of values is [1,64]. "
	fnames "pointsWire pw"
		fdesc "Number of points per surface isoparm span  or the number of points per curve span in wireframe mode. The valid range of values is [1,128]. Note: This is the only flag that also applies to nurbs curves. "
	fnames "polygonObject po"
		fdesc "Display the polygon objects with the given resolution "
	fnames "query q"
		fdesc "Query smoothness of selected surfaces (and curves). -all Change smoothness for all curves and surfaces "
	fnames "renderTessellation rt"
		fdesc "Display using render tesselation parameters when in shaded mode. "
	fnames "simplifyU su"
		fdesc "Number of spans to skip in the U direction when in hull display mode. "
	fnames "simplifyV sv"
		fdesc "Number of spans to skip in the V direction when in hull display mode. "
	rcount "13"
		rname "currentUnit"
		rname "displayPref"
		rname "hide"
		rname "displayAffected"
		rname "displayRGBColor"
		rname "refresh"
		rname "displayColor"
		rname "showHidden"
		rname "displayCull"
		rname "displayStats"
		rname "toggle"
		rname "displayLevelOfDetail"
		rname "displaySurface"
name "displayStats"
	desc "Enable display of important statistics about 3D ports. (Obsolete) - This command is no longer used and has been rendered obsolete to the headsUpDisplay command."
	fcount "2"
	fnames "frameRate fr"
		fdesc "Display frame rate (in Hertz) on 3D ports "
	fnames "query q"
		fdesc "Query whether the frame rate is currently being displayed "
	rcount "13"
		rname "currentUnit"
		rname "displayPref"
		rname "hide"
		rname "displayAffected"
		rname "displayRGBColor"
		rname "refresh"
		rname "displayColor"
		rname "displaySmoothness"
		rname "showHidden"
		rname "displayCull"
		rname "toggle"
		rname "displayLevelOfDetail"
		rname "displaySurface"
name "displaySurface"
	desc "This command toggles display options on the specified or active surfaces. Typicly this command applies to NURBS or poly mesh surfaces and ignores other type of objects See also: displaySmoothness, modelEditor."
	fcount "4"
	fnames "flipNormals flp"
		fdesc "flip normal direction on the surface "
	fnames "query q"
		fdesc "query the following surface display parameters for the selected objects "
	fnames "twoSidedLighting two"
		fdesc "toggle if the surface should be considedred  two sided.  If its single sided drawing and rendering may use single sided lighting and back face cull to improve performance. "
	fnames "xRay x"
		fdesc "toggle X ray mode(make surface transparent) "
	rcount "13"
		rname "currentUnit"
		rname "displayPref"
		rname "hide"
		rname "displayAffected"
		rname "displayRGBColor"
		rname "refresh"
		rname "displayColor"
		rname "displaySmoothness"
		rname "showHidden"
		rname "displayCull"
		rname "displayStats"
		rname "toggle"
		rname "displayLevelOfDetail"
name "distanceDimContext"
	desc "Command used to register the distanceDimCtx tool."
	fcount "0"
	rcount "0"
name "distanceDimension"
	desc "This command is used to create a distance dimension to display the distance between two specified points."
	fcount "2"
	fnames "endPoint ep"
		fdesc "Specifies the point to measure distance to, from the startPoint. "
	fnames "startPoint sp"
		fdesc "Specifies the point to start measuring distance from. "
	rcount "0"
name "doBlur"
	desc "The doBlur command will invoke the blur2d, which is a Maya stand-alone application to do 2.5 motion blur given the color image and the motion vector file. For a given input colorFile name, e.g. "xxx.iff", the output blurred image will be "xxx_blur.iff" in the same directory as the input colorFile. There is currently no control over the name of the output blurred image."
	fcount "6"
	fnames "colorFile c"
		fdesc "Name of the input color image to be blurred. "
	fnames "length l"
		fdesc "Scale applied on the motion vector. Ranges from 0 to infinity. "
	fnames "sharpness s"
		fdesc "Determines  the shape of the blur filter. The higher the value,  the narrower the filter, the sharper the blur. The lower the value,  the wider the filter, the more spread out the blur. Ranges from 0 to infinity. "
	fnames "smooth m"
		fdesc "Filter size to smooth the blurred image. The higher the value,  the more anti-aliased the alpha channel. Ranges from 1.0 to 5.0. "
	fnames "smoothColor r"
		fdesc "Whether to smooth the color or not.  "
	fnames "vectorFile v"
		fdesc "Name of the input motion vector file. "
	rcount "0"
name "dolly"
	desc "The dolly command moves a camera along the viewing direction in the world space. The viewing-direction and up-direction of the camera are not altered. There are two modes of operation: Relative mode: for a perspective camera, the camera is moved along its viewing direction, and the distance of travel is computed with respect to the current position of the camera in the world space. In relative mode, when the camera is moved, its COI is moved along with it, and is kept at the same distance, in front of the camera, as before applying the dolly operation. For orthographic camera,.... Refer to full documentation"
	fcount "5"
	fnames "absolute abs"
		fdesc "This flag modifies the behavior of the distance and orthoScale flags. When used in conjunction with the distance flag, the distance argument specifies how far the camera's eye point should be set from the camera's center of interest. When used with the orthoScale flag, the orthoScale argument specifies the camera's new ortho width. "
	fnames "distance d"
		fdesc "Unit distance to dolly a perspective camera. "
	fnames "dollyTowardsCenter dtc"
		fdesc "This flag controls whether the dolly is performed towards the  center of the view (if true), or towards the point where the user  clicks (if false). By default, dollyTowardsCenter is on. "
	fnames "orthoScale os"
		fdesc "Scale to change the ortho width of an orthographic camera. "
	fnames "relative rel"
		fdesc "This flag modifies the behavior of the distance and orthoScale flags. When used in conjunction with the distance flag, the camera eye and center of interest are both moved by the amount specified by the distance flag's argument. When used with the orthoScale flag, the orthoScale argument is used multiply the camera's ortho width.By default the relative flag is always on. "
	rcount "15"
		rname "camera"
		rname "cameraView"
		rname "listCameras"
		rname "lookThru"
		rname "orbit"
		rname "roll"
		rname "track"
		rname "tumble"
		rname "viewCamera"
		rname "viewClipPlane"
		rname "viewFit"
		rname "viewHeadOn"
		rname "viewLookAt"
		rname "viewPlace"
		rname "viewSet"
name "dollyCtx"
	desc "This command can be used to create, edit, or query a dolly context."
	fcount "6"
	fnames "alternateContext ac"
		fdesc "Set the ALT+LMB+MMB and ALT+CRL+LMB to refer to this context. "
	fnames "boxDollyType bdt"
		fdesc "Set the behavior of where the camera's center of interest is set to after the box dolly. In  surface  mode, the center of interest will be snapped to the surface point at the center of the marquee. In  bbox  mode, the closest bounding box to the camera will be used. Bounding box mode will use the selection mask to determine which objects to include into the calculation. "
	fnames "centerOfInterestDolly cd"
		fdesc "Set the translate the camera's center of interest. Left and right drag movements with the mouse will translate the center of interest towards or away respectively from the camera. The center of interest can be snapped to objects by using the left mouse button for selection. The default select mask will be used. "
	fnames "dollyTowardsCenter dtc"
		fdesc "Dolly towards center (if true), else dolly towards point where user clicks in the view. "
	fnames "localDolly ld"
		fdesc "Dolly with respect to the camera's center of interest. The camera will not pass through the center of interest. Local dolly only applies to perspective cameras. "
	fnames "scale s"
		fdesc "The sensitivity for dollying the camera. "
	rcount "0"
name "dopeSheetEditor"
	desc "Edit a characteristic of a dope sheet editor."
	fcount "33"
	fnames "autoFit af"
		fdesc "on | off | tgl auto fit-to-view "
	fnames "control ctl"
		fdesc "Query only. Returns the top level control for this editor. Usually used for getting a parent to attach popup menus. CAUTION: editors may not have controls at times.  This flag can return "NONE" if no control is present. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "displayActiveKeyTangents dat"
		fdesc "on | off | tgl display tangents in the editor "
	fnames "displayActiveKeys dak"
		fdesc "on | off | tgl display tangents in the editor "
	fnames "displayInfinities di"
		fdesc "on | off | tgl display infinities in the editor "
	fnames "displayKeys dk"
		fdesc "on | off | tgl display keyframes in the editor "
	fnames "displayTangents dtn"
		fdesc "on | off | tgl display tangents in the editor "
	fnames "docTag dtg"
		fdesc "Attaches a tag to the maya editor. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "filter f"
		fdesc "Specifies the name of a filter to be placed on this editor. This filters the information coming onto the main list of the editor. "
	fnames "forceMainConnection fmc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. This is a variant of the -mainListConnection flag in that it will force a change even when the connection is locked. This flag is used to reduce the overhead when using the -unlockMainConnection , -mainListConnection, -lockMainConnection flags in immediate  succession. "
	fnames "hierarchyBelow hb"
		fdesc "display animation for objects hierarchically "
	fnames "highlightConnection hlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its highlight list.  Not all editors have a highlight list.  For those who do, it is sort of a secondary selection list. "
	fnames "lockMainConnection lck"
		fdesc "Locks the current list of objects within the mainConnection, so that only those objects are displayed within the editor. Further changes to the original mainConnection are ignored. "
	fnames "lookAt la"
		fdesc "all | selected | currentTime fitView helpers "
	fnames "mainListConnection mlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. "
	fnames "outliner o"
		fdesc "the name of the outliner which is associated with the dope sheet "
	fnames "panel pnl"
		fdesc "Specifies the panel that the editor belongs to.  By default if an editor is created in the create callback of a scripted panel it will belong to that panel.  If an editor doesn't belong to a panel it will be deleted when the window that it is in is deleted. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this editor. This flag will only have an effect if the editor is currently un-parented. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "selectionConnection slc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its own selection list.  As the user selects things in this editor, they will be selected in the selectionConnection object.  If someone else changes the object, the editor will update to show the change. "
	fnames "showScene sc"
		fdesc "display the scene summary object "
	fnames "showSummary ss"
		fdesc "display the summary object "
	fnames "showTicks st"
		fdesc "display per animation tick divider in channel "
	fnames "snapTime st"
		fdesc "none | integer | keyframe keyframe move snap in time "
	fnames "snapValue sv"
		fdesc "none | integer | keyframe keyframe move snap in values "
	fnames "stateString sts"
		fdesc "Query only flag.  Returns the MEL command that will edit an editor to match the current editor state. The returned command string uses the string variable $editorName in place of a specific name. "
	fnames "unParent up"
		fdesc "Specifies that the editor should be removed from its layout. This cannot be used with query. "
	fnames "unlockMainConnection ulk"
		fdesc "Unlocks the mainConnection, effectively restoring the original mainConnection (if it is still available), and dynamic updates. "
	fnames "updateMainConnection upd"
		fdesc "Causes a locked mainConnection to be updated from the orginal mainConnection, but preserves the lock state. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "dot"
	desc "This command returns the dot product of two vectors."
	fcount "0"
	rcount "0"
name "dotProduct"
	desc "Returns the dot product of two 3D float arrays. If $normalizeInputs is set then the vectors are normalized before the dot product is calculated."
	fcount "0"
	rcount "0"
name "doubleProfileBirailSurface"
	desc "This command builds a railed surface by sweeping profile "profile1" along the two given rail curves "rail1", "rail2" until "profile2" is reached. By using the -blend control, the railed surface creation could be biased more towards one of the two profile curves. The curves ( both profiles and rails ) could also be surface curves ( isoparams, curve on surfaces ). If the profile curves are surface curves the surface constructed could be made tangent continuous to the surfaces underlying the profiles using the flags -tp1, -tp2 respectively. Current Limitation: Its necessary that the two profile curves intersect the rail.... Refer to full documentation"
	fcount "13"
	fnames "blendFactor bl"
		fdesc "A blend factor applied in between the two profiles. The amount of influence 'inputProfile1' has in the surface creation. Default:  0.5 "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "sweepStyle ss"
		fdesc "sweep style for Profile ( Natural, View ). Only Natural is supported. Default:  0 "
	fnames "tangentContinuityProfile1 tp1"
		fdesc "Need tangent continuity across the input profile at inputProfile1. Default:  false "
	fnames "tangentContinuityProfile2 tp2"
		fdesc "Need tangent continuity across the input curve at inputProfile2. Default:  false "
	fnames "transformMode tm"
		fdesc "transform mode ( Non proportional, proportional ). Non proportional is default value. Default:  0 "
	rcount "2"
		rname "singleProfileBirailSurface"
		rname "multiProfileBirailSurface"
name "drag"
	desc "Drag exerts a friction, or braking force proportional to the speed of a moving object. If direction is not enabled, the drag acts opposite to the current velocity of the object. If direction is enabled, it acts opposite to the component of the velocity in the specified direction. The force is independent of the position of the affected object. The transform is the associated dependency node. Use connectDynamic to cause the field to affect a dynamic object. If fields are created, this command returns the names of each of the fields. If a field was queried, the results of the.... Refer to full documentation"
	fcount "10"
	fnames "attenuation att"
		fdesc "Attentuation rate of field  "
	fnames "directionX dx"
		fdesc "X-component of direction. "
	fnames "directionY dy"
		fdesc "Y-component of direction. "
	fnames "directionZ dz"
		fdesc "Z-component of direction  "
	fnames "magnitude m"
		fdesc "Strength of field.  "
	fnames "maxDistance mxd"
		fdesc "Maximum distance at which field is exerted.  -1 indicates that the field has no maximum distance.  "
	fnames "name n"
		fdesc "name of field  "
	fnames "perVertex pv"
		fdesc "Per-vertex application. If this flag is set true, then each  individual point (CV, particle, vertex,etc.) of the chosen object  exerts an identical copy of the force field. If this flag is set to  false, then the force is exerted only from the geometric center of the set of points.  "
	fnames "position pos"
		fdesc "Position in space where you want to place a field. The gravity then emanates from this position in space rather  than from an object. Note that you can both use -pos  (creating a field at a position) and also provide object names.  "
	fnames "useDirection ud"
		fdesc "Enable/disable direction. Drag will use -dx/-dy/-dz arguments if and only if this flag is set true.  "
	rcount "3"
		rname "particle"
		rname "connectDynamic"
		rname "addDynamic"
name "draggerContext"
	desc "The draggerContext allows the user to program the behavior of the mouse or an equivalent dragging device in MEL."
	fcount "21"
	fnames "anchorPoint ap"
		fdesc "Anchor point (double array) where dragger was initially pressed "
	fnames "button bu"
		fdesc "Returns the current mouse button (1,2,3) "
	fnames "cursor cur"
		fdesc "Cursor displayed while context is active.  Valid values are: "default", "hand", "crossHair", "dolly", "track", and "tumble". "
	fnames "dragCommand dc"
		fdesc "Command called when mouse dragger is dragged "
	fnames "dragPoint dp"
		fdesc "Drag point (double array) current position of dragger during drag. "
	fnames "drawString ds"
		fdesc "A string to be drawn at the current position of the pointer. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "holdCommand hc"
		fdesc "Command called when mouse dragger is held. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "modifer mo"
		fdesc "Returns the current modifier type:  ctrl, alt or none "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "plane pl"
		fdesc "Provide normal of projection plane at selected object. "
	fnames "pressCommand pc"
		fdesc "Command called when mouse dragger is pressed "
	fnames "projection pr"
		fdesc "Sets current projection of drag point. Valid types are: "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "releaseCommand rc"
		fdesc "Command called when mouse dragger is released "
	fnames "space sp"
		fdesc "Sets current space that coordinates are reported in. Types are: "
	rcount "0"
name "dropoffLocator"
	desc "This command adds one or more dropoff locators to a wire curve, one for each selected curve point. The dropoff locators can be used to provide localized tuning of the wire deformation about the curve point."
	fcount "0"
	rcount "0"
name "duplicate"
	desc "This command duplicates the given objects. If no objects are given, then the selected list is duplicated. The smart transform feature allows duplicate to transform newly duplicated objects based on previous transformations between duplications. Example: Duplicate an object and move it to a new location. Duplicate it again with the smart duplicate flag. It should have moved once again the distance you had previously moved it. Note: changing the selected list between smart duplications will cause the transform information to be deleted The upstream Nodes option forces duplication of all upstream nodes leading upto the selected objects.. Upstream nodes are.... Refer to full documentation"
	fcount "7"
	fnames "inputConnections ic"
		fdesc "Input connections to the node to be duplicated, are also duplicated. This would result in a fan-out scenario as the nodes at the input side are not duplicated (unlike the -un option). "
	fnames "instanceLeaf ilf"
		fdesc "instead of duplicating leaf DAG nodes, instance them. "
	fnames "name n"
		fdesc "name to give duplicated object(s) "
	fnames "renameChildren rc"
		fdesc "rename the child nodes of the hierarchy, to make them  unique. "
	fnames "returnRootsOnly rr"
		fdesc "return only the root nodes of the new hierarchy. When used with upstreamNodes flag, the upstream nodes will be omitted in the result.  This flag controls only  what is returned in the output string[], and it does NOT change the behaviour of the duplicate command. "
	fnames "smartTransform st"
		fdesc "remembers last transformation and applies it to duplicated object(s) "
	fnames "upstreamNodes un"
		fdesc "the upstream nodes leading upto the selected nodes (along with their connections) are also duplicated. "
	rcount "0"
name "duplicateCurve"
	desc "The duplicateCurve command takes a curve on a surface and and returns the 3D curve. The curve on a surface could be isoparam component, trimmed edge or curve on surface object."
	fcount "5"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable) "
	fnames "local l"
		fdesc "Copy the transform of the surface and connect to the local space version instead. "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (where applicable) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (where applicable) "
	rcount "3"
		rname "curveOnSurface"
		rname "projectCurve"
		rname "intersect"
name "duplicateSurface"
	desc "The duplicateSurface command takes a surface patch (face) and and returns the 3D surface. Connected patches are returned as a single surface."
	fcount "4"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable) "
	fnames "local l"
		fdesc "Copy the transform of the surface and connect to the local space version instead. "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (where applicable) "
	rcount "0"
name "dynCache"
	desc "Cache the current state of all particle shapes at the current time."
	fcount "0"
	rcount "0"
name "dynControl"
	desc "This command is obsolete. Do not use it. The Dynamics documentation explains how to set particle and rigid body node attributes to accomplish the same tasks."
	fcount "0"
	rcount "0"
name "dynExport"
	desc "Export particle data to disk files. For cache export (-format cache), dynExport also sets three attributes of the current dynGlobals node. It sets the useParticleRenderCache attribute to true, and the min/maxFrameOfLastParticleRenderCache attributes to correspond to the min and max frames. Exported .pda or .pdb files are assigned a name of form object name.frame.extension , where extension is "pda" or "pdb." The naming convention for .pdc files is similar but does not use frame numbers, it uses a more precise representation of the time instead. By default, the pda and pdb formats export all per-particle attributes, and all integer or float.... Refer to full documentation"
	fcount "7"
	fnames "allObjects all"
		fdesc "Ignore the selection list and export all particle objects. If you also specify an object name, the -all flag will be ignored. "
	fnames "attribute atr"
		fdesc "Name of attribute to be exported. If any specified object does not have one of the specified attributes, dynExport will issue an error and not do the export. "
	fnames "format f"
		fdesc "Desired format: "binary" ("pdb"), "ascii" ("pda"), or "cache" ("pdc"). The pdc format is for use by the Maya particle system to cache particle data.  The pda and pdb format options are intended for pipelines involving other software (for example,  sending the data to some program written in-house);  Maya cannot read pda or pdb files. There is no formal description of the PDB format, but the Gifts  directory (in Maya 2.0 and later versions) contains the source  and Makefile for a small, simple C program called "readpdb"  which reads it. Note that you must compile and run reapdb on the platform (Intel or Irix) which you exported the files on. "
	fnames "maxFrame mxf"
		fdesc "Ending frame to be exported. "
	fnames "minFrame mnf"
		fdesc "Starting frame to be exported. The export operation will play the scene through from min frame to max frame as it exports. "
	fnames "overSampling os"
		fdesc "OverSampling to be used during export. "
	fnames "path p"
		fdesc "This option allows you to specify a subdirectory of the workspace "particles" directory where you want the exported files to be stored. By default, files are stored in the workspace particles directory, i.e., -path is relative to that directory.  (  Please Read This:   This is a change from previous versions of Maya in which the path was relative to the workspace root directory.) You can set the "particles" directory anywhere you want using the project window or workspace -fr command. (In this way, you can use an absolute path for export). The -path flag cannot handle strings which include "/" or "\",  in other words, it lets you go down only one level in the directory hierarchy. If you specify a path which doesn't exist, the action will create it if possible; if it can't create the path it will warn you and fail. If you are using a project for which a particle data directory is not defined, dynExport will create a default one called "particles" and add it to your workspace. "
	rcount "2"
		rname "particle"
		rname "getParticleAttr"
name "dynExpression"
	desc "This command describes an expression that belongs to the specified particle shape. The expression is a block of code of unlimited length with a C-like syntax that can perform conversions, mathematical operations, and logical decision making on any numeric attribute(s) or per-particle attribute(s) in the scene. One expression can read and alter any number of these attributes. Every particle shape in your scene has three expressions, one for the runtimeBeforeDynamics, one for the runtimeAfterDynamics and one for creation time. The create expression gets executed for every particle in the object whose age is 0.0. The runtime expression gets executed for.... Refer to full documentation"
	fcount "3"
	fnames "creation c"
		fdesc "Tells the command that the string passed will be a creation expression for the particle shape.  This means that this expression will be executed when a particle is emitted or at the beginning of the scene for existing particles. "
	fnames "runtimeAfterDynamics rbd"
		fdesc "Tells the command that the string passed will be a runtime expression for the particle shape.  This expression  will be executed before dynamics whenever a particle's age is greater then zero (0). "
	fnames "string s"
		fdesc "Set the expression string.  This is queriable with the -q/query flag and the -rbd/runtimeBeforeDynamics, the -rab/runtimeAfterDynamics or the -c/creation flag. "
	rcount "1"
		rname "particle"
name "dynGlobals"
	desc "This node edits and queries the attributes of the active dynGlobals node in the scene. There can be only one active node of this type. The active dynGlobals node is the first one that was created, either with a "createNode" command or by accessing/editing any of the attributes on the node through this command."
	fcount "3"
	fnames "active a"
		fdesc "This flag returns the name of the active dynGlobals node in the the scene.  Only one dynGlobals node is active.  It is the first on created.  Any additional dynGlobals nodes will be ignored. "
	fnames "listAll la"
		fdesc "This flag will list all of the dynGlobals nodes in the scene. "
	fnames "overSampling os"
		fdesc "This flag will set the current overSampling value for all of the particle in the scene. "
	rcount "0"
name "dynPaintEditor"
	desc "Create a editor window that can be painted into."
	fcount "58"
	fnames "activeOnly ao"
		fdesc "For Scene mode, this determines if only the active strokes will be refreshed. "
	fnames "autoSave as"
		fdesc "For Canvas mode, this determines if the buffer will be saved to a disk file after every stroke. Good for painting textures and viewing the results in shaded display in the model view. "
	fnames "camera cam"
		fdesc "Sets the name of the camera which the Paint Effects panel looks through. "
	fnames "canvasMode cm"
		fdesc "Sets the Paint Effects panel into Canvas mode if true. "
	fnames "canvasUndo cu"
		fdesc "Does a fast undo in Canvas mode. This is a special undo because we are not using any history when we paint in Canvas mode so we provide a single level undo for the Canvas. "
	fnames "changedCommand cc"
		fdesc "Call the command when something changes in the editor The command should have this prototype : command(string $editor, string $editorCmd, string $updateFunc, int $reason) The possible reasons could be : 0: no particular reason 1: scale color 2: buffer (single/double) 3: axis  4: image displayed 5: image saved in memory "
	fnames "clear cl"
		fdesc "Clear the image with the given color (R,G,B). "
	fnames "control ctl"
		fdesc "Query only. Returns the top level control for this editor. Usually used for getting a parent to attach popup menus. CAUTION: editors may not have controls at times.  This flag can return "NONE" if no control is present. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "displayAppearance dsa"
		fdesc "Sets the display appearance of the model panel.  Possible values are "wireframe", "points", "boundingBox", "smoothShaded", "flatShaded".  This flag may be used with the -interactive and -default flags.  Note that only "wireframe", "points", and "boundingBox" are valid for the interactive mode. "
	fnames "displayFog dfg"
		fdesc "For Scene mode, this determines if fog will be displayed in the Paint Effects panel when refreshing the scene. If fog is on, but this is off, fog will only be drawn on the strokes, not the rest of the scene. "
	fnames "displayImage di"
		fdesc "Set a particular image in the Editor Image Stack as the current Editor Image. Images are added to the Editor Image Stack using the "si/saveImage" flag. "
	fnames "displayLights dsl"
		fdesc "Sets the lighting for shaded mode.  Possible values are "selected", "active", "all", "default". "
	fnames "displayStyle dst"
		fdesc "Set how to display the image color is the basic image mask is display the mask channel lum display the luminance channel "
	fnames "displayTextures dtx"
		fdesc "Turns on or off display of textures in shaded mode "
	fnames "docTag dtg"
		fdesc "Attaches a tag to the maya editor. "
	fnames "doubleBuffer dbf"
		fdesc "Set the display in double buffer mode "
	fnames "drawContext drc"
		fdesc "Returns the name of the context. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "fileName fil"
		fdesc "This sets the file to which the canvas will be saved. "
	fnames "filter f"
		fdesc "Specifies the name of a filter to be placed on this editor. This filters the information coming onto the main list of the editor. "
	fnames "forceMainConnection fmc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. This is a variant of the -mainListConnection flag in that it will force a change even when the connection is locked. This flag is used to reduce the overhead when using the -unlockMainConnection , -mainListConnection, -lockMainConnection flags in immediate  succession. "
	fnames "highlightConnection hlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its highlight list.  Not all editors have a highlight list.  For those who do, it is sort of a secondary selection list. "
	fnames "iconGrab ig"
		fdesc "This puts the Paint Effects panel into Grab Icon mode where the user is expected to drag out a section of the screen to be made into an icon. "
	fnames "loadImage li"
		fdesc "load an image from disk and set it as the current Editor Image "
	fnames "lockMainConnection lck"
		fdesc "Locks the current list of objects within the mainConnection, so that only those objects are displayed within the editor. Further changes to the original mainConnection are ignored. "
	fnames "mainListConnection mlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. "
	fnames "menu mn"
		fdesc "Sets the name of the script used to build a menu in the editor. The script takes the editor name as an argument. "
	fnames "nbImages nim"
		fdesc "returns the number of images "
	fnames "newImage ni"
		fdesc "Starts a new image in edit mode, setting the resolution to the integer values (X,Y) and clearing the buffer to the floating point values (R,G,B). In Query mode, this returns the (X,Y) resolution of the current canvas. "
	fnames "paintAll pa"
		fdesc "Redraws the buffer in current refresh mode. "
	fnames "panel pnl"
		fdesc "Specifies the panel that the editor belongs to.  By default if an editor is created in the create callback of a scripted panel it will belong to that panel.  If an editor doesn't belong to a panel it will be deleted when the window that it is in is deleted. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this editor. This flag will only have an effect if the editor is currently un-parented. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "redrawLast rl"
		fdesc "Redraws the last stroke again. Useful when it's brush has just changed. This feature does a fast undo and redraws the stroke again. "
	fnames "refreshMode rmd"
		fdesc "Sets the refresh mode to the specified value. 0 - Do not draw strokes on refresh, 1 - Redraw strokes in wireframe mode, 2 - Redraw strokes in final rendered mode. "
	fnames "removeImage ri"
		fdesc "remove the current Editor Image from the Editor Image Stack "
	fnames "rollImage rig"
		fdesc "In Canvas mode, this rolls the image by the floating point values (X,Y). X and Y are between 0 (no roll) and 1 (full roll). A value of .5 rolls the image 50% (ie. the border moves to the center of the screen. "
	fnames "saveAlpha sa"
		fdesc "For Canvas mode, this determines if the alpha will be saved when storing the canvas to a disk file. "
	fnames "saveBumpmap sbm"
		fdesc "Saves the current buffer as a bump map to the specified file. "
	fnames "saveImage si"
		fdesc "save the current Editor Image to memory. Saved Editor Images are stored in an Editor Image Stack. The most recently saved image is stored in position 0, the second most recently saved image in position 1, and so on... To set the current Editor Image to a previously saved  image use the "di/displayImage" flag. "
	fnames "scaleBlue sb"
		fdesc "Define the scaling factor for the blue component in the View. The default value is 1 and can be between -1000 to +1000 "
	fnames "scaleGreen sg"
		fdesc "Define the scaling factor for the green component in the View. The default value is 1 and can be between -1000 to +1000 "
	fnames "scaleRed sr"
		fdesc "Define the scaling factor for the red component in the View. The default value is 1 and can be between -1000 to +1000 "
	fnames "selectionConnection slc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its own selection list.  As the user selects things in this editor, they will be selected in the selectionConnection object.  If someone else changes the object, the editor will update to show the change. "
	fnames "singleBuffer sbf"
		fdesc "Set the display in single buffer mode "
	fnames "snapShot snp"
		fdesc "Takes a snapshot of the current camera view. "
	fnames "stateString sts"
		fdesc "Query only flag.  Returns the MEL command that will edit an editor to match the current editor state. The returned command string uses the string variable $editorName in place of a specific name. "
	fnames "tileSize ts"
		fdesc "Sets the size of the tile for the hardware texture redraw of the display buffer. "
	fnames "unParent up"
		fdesc "Specifies that the editor should be removed from its layout. This cannot be used with query. "
	fnames "undoCache uc"
		fdesc "By default the last image is cached for undo. If this is set false, then undoing will be disabled in canvas mode and undo in scene mode will force a full refresh. Less memory will be used if this is set false before the first clear or refresh of the current scene. "
	fnames "unlockMainConnection ulk"
		fdesc "Unlocks the mainConnection, effectively restoring the original mainConnection (if it is still available), and dynamic updates. "
	fnames "updateMainConnection upd"
		fdesc "Causes a locked mainConnection to be updated from the orginal mainConnection, but preserves the lock state. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "wrap wr"
		fdesc "For Canvas mode, should the buffer wrap in U, and V (respectively) when painting. "
	fnames "writeImage wi"
		fdesc "write the current Editor Image to disk "
	fnames "zoom zm"
		fdesc "Zooms the Canvas image by the specified value. "
	rcount "2"
		rname "getDefaultBrush"
		rname "stroke"
name "dynParticleCtx"
	desc "The particle context command creates a particle context. The particle context provides an interactive means to create particle objects. The particle context command also provides an interactive means to set the option values, through the Tool Property Sheet, for the "particle" command that the context will issue."
	fcount "16"
	fnames "conserve c"
		fdesc "Conservation of momentum control (between 0 and 1). For smaller values, the field will tend to erase any existing velocity the object has (in other words, will not conserve momentum from frame to frame). A value of 1 (the default) corresponds to the true physical law of conservation of momentum. "
	fnames "cursorPlacement cp"
		fdesc "Use the cursor to place the lower left and upper right of the grid. "
	fnames "grid gr"
		fdesc "Create a particle grid. "
	fnames "gridSpacing grs"
		fdesc "Spacing between particles in the grid. "
	fnames "jitterRadius jr"
		fdesc "Max radius from the center to place the particle instances. "
	fnames "lowerLeftX llx"
		fdesc "Lower left X position of the particle grid. "
	fnames "lowerLeftY lly"
		fdesc "Lower left Y position of the particle grid. "
	fnames "lowerLeftZ llz"
		fdesc "Lower left Z position of the particle grid. "
	fnames "numJitters nj"
		fdesc "Number of jitters (instances) per particle. "
	fnames "particleName pn"
		fdesc "Particle name. "
	fnames "sketch sk"
		fdesc "Create particles in sketch mode. "
	fnames "sketchInterval ski"
		fdesc "Interval between particles, when in sketch mode. "
	fnames "textPlacement tp"
		fdesc "Use the textfields to specify the lower left and upper right of/ the grid. "
	fnames "upperRightX urx"
		fdesc "Upper right X position of the particle grid. "
	fnames "upperRightY ury"
		fdesc "Upper right Y position of the particle grid. "
	fnames "upperZ urz"
		fdesc "Upper right Z position of the particle grid. "
	rcount "0"
name "dynPref"
	desc "This action modifies and queries the current state of "autoCreate rigid bodies", "run up to current time", and "run up from" (previous time or start time)."
	fcount "6"
	fnames "autoCreate ac"
		fdesc "If on, autoCreate rigid bodies. "
	fnames "echoCollision ec"
		fdesc "If on, will cause particle systems to echo to the Script Editor the command that they are running for each particle collision event. If off, only the output of the command will be echoed. "
	fnames "runupFrom rf"
		fdesc "If 1, run up from previous time; if 2, run up from start time "
	fnames "runupToCurrentTime rt"
		fdesc "If on, run up the scene to current time "
	fnames "saveOnQuit sq"
		fdesc "If 1, save the current values of preferences to userPrefs file. "
	fnames "saveRuntimeState sr"
		fdesc "If on, runtime state as well as initial state of all particle objects will be saved to file. If off, only initial state will be saved. "
	rcount "0"
name "dynRelEdPanel"
	desc "This command creates a Dynamics Relationship Editor panel. A relationship editor panel has a dynamics relationship editor (see the command dynRelEditor). It displays the Dynamics relationships of the selected objects. As the active list changes, the information displayed in the Relationship Editor changes."
	fcount "0"
	rcount "0"
name "dynRelEditor"
	desc "This command created a Dynamics Relationship Editor editor. The editor displays the connections of selected objects. As the active list changes, the information displayed in the editor changes. You can add relationships by drag-and-dropping the object to be connect to from a UI like the outliner onto the editor. You can remove relationships by selecting the connect objects in the editor and pressing "REMOVE". You can show the relationships in the modeling window by pressing "SHOW". The influences linked to the last object put into the editor are shown in yellow."
	fcount "0"
	rcount "0"
name "dynamicLoad"
	desc "Dynamically load a DSO."
	fcount "1"
	fnames "query q"
		fdesc "Returns true if the specified DSO is loaded "
	rcount "0"
name "editAttrLimits"
	desc "Edit the attribute min and max of dynamic attributes."
	fcount "0"
	rcount "0"
name "editDisplayLayerGlobals"
	desc "EditDisplayLayerGlobals is undoable , queryable , and NOT editable . Edit the parameter values common to all display layers. Some of these paremeters, eg. baseId and mergeType, are stored as preferences and some, eg. currentDisplayLayer, are stored in the file."
	fcount "4"
	fnames "baseId bi"
		fdesc "Set base layer ID.  This is the number at which new layers start searching for a unique ID. "
	fnames "currentDisplayLayer cdl"
		fdesc "Set current display layer; ie. the one that all new objects are added to. "
	fnames "mergeType mt"
		fdesc "Set file import merge type.  Valid values are 0, none, 1, by number, and 2, by name. "
	fnames "useCurrent uc"
		fdesc "Set whether or not to enable usage of the current display layer as the destination for all new nodes. "
	rcount "3"
		rname "createDisplayLayer"
		rname "editDisplayLayerMembers"
		rname "layerButton"
name "editDisplayLayerMembers"
	desc "EditDisplayLayerMembers is undoable , queryable , and NOT editable . This command is used to query and edit membership of display layers. No equivalent 'remove' command is necessary since all objects must be in exactly one display layer. Removing an object from a layer can be accomplished by adding it to a different layer."
	fcount "2"
	fnames "fullNames fn"
		fdesc "(Query only.) If set then return the full DAG paths of the objects in the layer.  Otherwise return just the object's name. "
	fnames "noRecurse nr"
		fdesc "If set then only add selected objects to the display layer.  Otherwise all descendants of the selected objects will also be added. "
	rcount "3"
		rname "createDisplayLayer"
		rname "editDisplayLayerGlobals"
		rname "layerButton"
name "editRenderLayerGlobals"
	desc "EditRenderLayerGlobals is undoable , queryable , and NOT editable . Edit the parameter values common to all render layers. Some of these paremeters, eg. baseId and mergeType, are stored as preferences and some, eg. currentRenderLayer, are stored in the file."
	fcount "4"
	fnames "baseId bi"
		fdesc "Set base layer ID.  This is the number at which new layers start searching for a unique ID. "
	fnames "currentRenderLayer cdl"
		fdesc "Set current render layer; ie. the one that all new objects are added to. "
	fnames "mergeType mt"
		fdesc "Set file import merge type.  Valid values are 0, none, 1, by number, and 2, by name. "
	fnames "useCurrent uc"
		fdesc "Set whether or not to enable usage of the current render layer as the destination for all new nodes. "
	rcount "2"
		rname "createRenderLayer"
		rname "editRenderLayerMembers"
name "editRenderLayerMembers"
	desc "EditRenderLayerMembers is undoable , queryable , and NOT editable . This command is used to query and edit membership of render layers. No equivalent 'remove' command is necessary since all objects must be in exactly one render layer. Removing an object from a layer can be accomplished by adding it to a different layer."
	fcount "2"
	fnames "fullNames fn"
		fdesc "(Query only.) If set then return the full DAG paths of the objects in the layer.  Otherwise return just the object's name. "
	fnames "noRecurse nr"
		fdesc "If set then only add selected objects to the render layer.  Otherwise all descendants of the selected objects will also be added. "
	rcount "2"
		rname "editRenderLayerGlobals"
		rname "createRenderLayer"
name "editor"
	desc "Edit the characteristic of an editor."
	fcount "19"
	fnames "control ctl"
		fdesc "Query only. Returns the top level control for this editor. Usually used for getting a parent to attach popup menus. CAUTION: editors may not have controls at times.  This flag can return "NONE" if no control is present. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dtg"
		fdesc "Attaches a tag to the maya editor. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "filter f"
		fdesc "Specifies the name of a filter to be placed on this editor. This filters the information coming onto the main list of the editor. "
	fnames "forceMainConnection fmc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. This is a variant of the -mainListConnection flag in that it will force a change even when the connection is locked. This flag is used to reduce the overhead when using the -unlockMainConnection , -mainListConnection, -lockMainConnection flags in immediate  succession. "
	fnames "highlightConnection hlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its highlight list.  Not all editors have a highlight list.  For those who do, it is sort of a secondary selection list. "
	fnames "lockMainConnection lck"
		fdesc "Locks the current list of objects within the mainConnection, so that only those objects are displayed within the editor. Further changes to the original mainConnection are ignored. "
	fnames "mainListConnection mlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. "
	fnames "panel pnl"
		fdesc "Specifies the panel that the editor belongs to.  By default if an editor is created in the create callback of a scripted panel it will belong to that panel.  If an editor doesn't belong to a panel it will be deleted when the window that it is in is deleted. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this editor. This flag will only have an effect if the editor is currently un-parented. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "selectionConnection slc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its own selection list.  As the user selects things in this editor, they will be selected in the selectionConnection object.  If someone else changes the object, the editor will update to show the change. "
	fnames "stateString sts"
		fdesc "Query only flag.  Returns the MEL command that will edit an editor to match the current editor state. The returned command string uses the string variable $editorName in place of a specific name. "
	fnames "unParent up"
		fdesc "Specifies that the editor should be removed from its layout. This cannot be used with query. "
	fnames "unlockMainConnection ulk"
		fdesc "Unlocks the mainConnection, effectively restoring the original mainConnection (if it is still available), and dynamic updates. "
	fnames "updateMainConnection upd"
		fdesc "Causes a locked mainConnection to be updated from the orginal mainConnection, but preserves the lock state. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "editorTemplate"
	desc "The editorTemplate command allows the user to specify the conceptual layout of an attribute editor and leave the details of exactly which UI elements are used in the final result to the automatic dialog generation mechanism."
	fcount "19"
	fnames "addComponents acp"
		fdesc "This flag will add a frameLayout with a channel box which will display any selected components for the object. "
	fnames "addControl ac"
		fdesc "The first argument is the name of the attribtue for which you wish to add a control. You can assume that when the editor is created from the template, an appropriate type of control will be used. The second string argument is optional, and can be used  to specify a command (or script) to be executed when the attribute is changed. "
	fnames "addDynamicControl adc"
		fdesc "As -addControl with the exception that the attribute for which the control is to be created/attached is dynamic. [Note: -addControl will also work for dynamic attributes, but will not preserve their order in the attribute editor]. "
	fnames "addExtraControls aec"
		fdesc "By default, if there are attributes of a node which you do  not -addControl or -suppress, then controls will be created automatically and appended to the end of editor created from the  template. This flag allows you to specify a particular place in the template for such controls to be automatically inserted. If dynamic attributes have not already been addressed with -addControl, they will also be placed here.  A frameLayout will automatically be generated for you when you use this flag. "
	fnames "addSeparator as"
		fdesc "Adds a separator to the template. "
	fnames "beginLayout bl"
		fdesc "Begins a layout in the template with the title specified by the string argument. Items between this flag and	its corresponding -endLayout flag  will be contained within the layout. You can assume that when  the editor is created from the template, an appropriate type of  layout will be used. (frameLayout). "
	fnames "beginNoOptimize bn"
		fdesc "Specifies that the layout of items between this flag and its  corresponding -endNoOptimize flag is not to be optimized to  minimize space. "
	fnames "beginScrollLayout bsl"
		fdesc "Begins a scrollLayout.  Items between this flag and its corresponding -endScrollLayout flag will be contained within the layout. "
	fnames "callCustom ccu"
		fdesc "Specifies that at this point in the template when building the dialog, the procedure specified by the first argument is to be called to create some UI objects when a new node type is edited. The procedure specified by the second argument is to be called if an attribute editor already exists and another node of the same type is now to be edited. The replacing procedure should connect any controls created by the creating procedure to the equivalent attributes in the new node. A list of zero or more attributes specifies the attributes which the two procedures will involve. The procedures should have the signature:  proc AEcustomNew(string attributeName1, string attributeName2) The number of attributes specified in the call should correspond to the number of attributes in the procedure signature. "
	fnames "collapse cl"
		fdesc "This flag is only valid when used in conjunction with a -bl/beginLayout flag.  It is used to specify the initial expand/collapse state of the layout.  A true value will cause the layout to be collapsed upon creation, while a false value will expand the layout.  The default is true (ie. collapsed). "
	fnames "dimControl dc"
		fdesc "This flag is only useful AFTER a control has already been created (using the -addControl flag).  The first argument is the node name and the second is the attribute whose control you wish to affect.  The third argument is a boolean which specifies whether to dim (true) or undim (false) the associated control. "
	fnames "endLayout el"
		fdesc "Ends a layout in the template started by -beginLayout. "
	fnames "endNoOptimize en"
		fdesc "Ends a set of non-optimized items. "
	fnames "endScrollLayout esl"
		fdesc "Ends a scrollLayout. "
	fnames "extraControlsLabel ecl"
		fdesc "By default the label is "Extra Attributes". Specify an  alternate label or an empty string to hide the label. This flag must be used in conjuction with the -aec/addExtraControls flag. "
	fnames "interruptOptimize io"
		fdesc "Enforces a division between two sets of items whose layouts may be optimized.  "
	fnames "label l"
		fdesc "This flag can only be used with the -addControl or  the -addDynamicControl flags.  And it must be specified FIRST. The string will override the name of the attribute that will be displayed in the attribute editor. "
	fnames "queryControl qc"
		fdesc "This flag is only usefule AFTER a control has already been created (using thte -addControl flag).  The first argument is the node name and the second is the attribute whose control you wish to query.  Note that in most cases, using this flag is identical to issuing a getAttr command, however, in the case of textFields (e.g. for message attributes), the text value currently being displayed will be returned, NOT the actual attribute value. "
	fnames "suppress s"
		fdesc "Prevent a control for the attribute specified by the string argument from appearing in the editor created from the template. "
	rcount "0"
name "effector"
	desc "The effector command is used to set the name, or hidden flag for the effector. The standard edit (-e) and query (-q) flags are used for edit and query functions."
	fcount "2"
	fnames "hide hi"
		fdesc "Specifies whether the hide drawing of effector if attached to a handle. "
	fnames "name n"
		fdesc "Specifies the name of the effector. "
	rcount "3"
		rname "ikHandle"
		rname "ikSolver"
		rname "ikSystem"
name "emit"
	desc "The emit action allows users to add particles to an existing particle object without the use of an emitter. At the same time, it allows them to set any per-particle attribute for the particles that are created with the action. The particles created do not become a part of the initial state for the particle object, and will disappear when the scene is rewound unless they are saved into the initial state by the user explicitly. In addition, a particle object will accept particles from an emit action ONLY at frames greater than or equal to its start frame. For.... Refer to full documentation"
	fcount "5"
	fnames "attribute at"
		fdesc "Specifies the attribute on the particle object that any value flags following it and before the next -attribute flag will be associated with.  The same attribute can be specified later in the command to pick up where the first one left off. The attributes used must be per-particle attributes.  This will accept both long and short names for the attributes. Note the per-particle attribute must already exist on the particle object prior to being specified via this command flag. "
	fnames "floatValue fv"
		fdesc "Sets the float value to be used for the "current" attribute of the "current" particle.  By current attribute, it is meant the attribute specified by the most recent -attribute flag.  By current particle, it is meant the particle in the list of -position flags that corresponds to the number of values that  have been set for the "current" attribute.  If the current attribute is a vector-per-particle attribute, then the float value specified will be used for all three components of the vector. "
	fnames "object o"
		fdesc "This flag takes the name of a particleShape or the transform directly above it in the DAG as its parent.  It specifies which object to add the particles to.  This flag must be passed, as the selection list is ignored for this action. "
	fnames "position pos"
		fdesc "Specifies the positions in the particle object's space (usually world space) where the particles are to be created. One particle is created for each occurence of this flag. "
	fnames "vectorValue vv"
		fdesc "Sets the vector value to be used for the "current" attribute of the "current" particle.  By current attribute, it is meant the attribute specified by the most recent -attribute flag.  By current particle, it is meant the particle in the list of -position  flags that corresponds to the number of values that have been set for the "current" attribute.  If the current attribute is a float-per-particle attribute, then the length of the vector described by this flag will be used.  The length is described as  SQR( xVal 2  + yVal 2  + zVal 2  ) . "
	rcount "1"
		rname "particle"
name "emitter"
	desc "Creates an emitter object. If object names are provided or if objects are selected, applies the emitter to the named/selected object(s)in the scene. Particles will then be emitted from each. If no objects are named or selected, or if the -pos option is specified, creates a positional emitter. If an emitter was created, the command returns the name of the object owning the emitter, and the name of emitter shape. If an emitter was queried, the command returns the results of the query. Keyframeable attributes of the emitter node: rate, directionX, directionY, directionZ, minDistance, maxDistance, spread."
	fcount "28"
	fnames "alongAxis alx"
		fdesc "Initial velocity multiplier in the direction along the central axis of the volume.  See the diagrams in the documentation.  Applies only to volume emitters.      "
	fnames "aroundAxis arx"
		fdesc "Initial velocity multiplier in the direction around the central axis of the volume.  See the diagrams in the documentation.  Applies only to volume emitters. "
	fnames "awayFromAxis afx"
		fdesc "Initial velocity multiplier in the direction away from the central axis of the volume.  See the diagrams in the documentation.  Used only with the cylinder, cone,  and torus volume emitters. "
	fnames "awayFromCenter afc"
		fdesc "Initial velocity multiplier in the direction away from the center point of a cube or sphere volume emitter. Used only with the cube and sphere volume emitters. "
	fnames "cycleEmission cye"
		fdesc "Possible values are "none" and "frame." Cycling emission restarts the random number stream after a specified interval.  This can either be a number of frames or a number of emitted particles.  In each case the number is specified by the cycleInterval attribute. Setting cycleEmission to "frame" and cycleInterval to 1 is equivalent to setting timeRandom on in Power Animator.  The random stream will then re-start every frame.  Setting cycleInterval to values greater than 1 can be used to generate cycles for games work. "
	fnames "cycleInterval cyi"
		fdesc "Specifies the number of frames or particles between restarts of the random number stream.  See cycleEmission.  Has no effect if cycleEmission is set to None. "
	fnames "directionX dx"
		fdesc "x-component of emission direction.  Used for directional emitters, and for volume emitters with directionalSpeed. "
	fnames "directionY dy"
		fdesc "y-component of emission direction. Used for directional emitters, and for volume emitters with directionalSpeed. "
	fnames "directionZ dz"
		fdesc "z-component of emission direction. Used for directional emitters, and for volume emitters with directionalSpeed. "
	fnames "directionalSpeed drs"
		fdesc "For volume emitters only, adds a component of speed in the direction specified by the directionX, Y, and Z attributes. Applies only to volume emitters. Does not apply to other types of emitters. "
	fnames "maxDistance mxd"
		fdesc "Maximum distance at which emission ends. "
	fnames "minDistance mnd"
		fdesc "Minimum distance at which emission starts. "
	fnames "needParentUV nuv"
		fdesc "If aNeedParentUV is true, compute parentUV value from  each triangle or each line segment, then send out to the  target particle object. You also need to add parentU and  parentV attributes to the particle object to store these values. "
	fnames "normalSpeed nsp"
		fdesc "Normal speed multiple for point emission. For each emitted particle, multiplies the component of the velocity normal  to the surface or curve by this amount. Surface and curve emitters only. "
	fnames "position pos"
		fdesc "Positional emitter at world space location (x,y,z). "
	fnames "randomDirection rnd"
		fdesc "Magnitude of a random component of the speed  from volume emission. "
	fnames "rate r"
		fdesc "Rate at which particles emitted (can be non-integer).  For point emission this is rate per point per unit time.  For surface emission it is rate per square unit of area per unit time. "
	fnames "scaleRateByObjectSize sro"
		fdesc "Applies to curve and surface emitters, only. If true, number of particles is determined by object size (area or length) times rate value.  If false, object size is ignored and the rate value is used without modification. The former is the way Maya behaved prior to version 3.0. "
	fnames "scaleSpeedBySize ssz"
		fdesc "Indicates whether the scale of a volume emitter  affects its velocity. "
	fnames "speed spd"
		fdesc "Speed multiple.  Multiplies the velocity of the emitted particles by this amount. Does not apply to volume emitters.  For that emitter type, use directionalSpeed. "
	fnames "speedRandom srn"
		fdesc "Identifies a range of random variation for the speed of each generated particle.  If set to a non-zero value, speed becomes the mean value of the generated particles, whose speeds vary by a random amount up to plus or minus speedRandom/2. For example, speed 5 and speedRandom 2 will make the speeds vary between 4 and 6.  In Power Animator this was called speedRange.  "
	fnames "spread sp"
		fdesc "Random spread (0-1), as a fraction of 90 degrees,  along specified direction.   Directional emitters only. "
	fnames "tangentSpeed tsp"
		fdesc "Tangent speed multiple for point emission. For each emitted particle, multiplies the component of the velocity  tangent to the surface  or curve by this amount.  Surface and curve emitters only. "
	fnames "torusSectionRadius tsr"
		fdesc "Section radius for a torus volume.  Applies only to torus. Similar to the section radius in the torus modelling primitive. "
	fnames "type typ"
		fdesc "Type of emitter. The choices are omni | dir | direction | surf |  surface | curve | curv. The default is omni. The full definition of these types are: omnidirectional point emitter, directional point emitter, surface emitter, or curve emitter. "
	fnames "volumeOffset vof"
		fdesc "Volume offset of the emitter.  Volume offset translates the emission volume by the specified amount from the actual emitter location.  This is in the emitter's local space. "
	fnames "volumeShape vsh"
		fdesc "Volume shape of the emitter.  Sets/edits/queries the field's volume shape attribute.  If set to any value other than "none", determines a 3-D volume within which  particles are generated. Values are: "cube," "sphere," "cylinder," "cone," "torus." "
	fnames "volumeSweep vsw"
		fdesc "Volume sweep of the emitter.  Applies only to sphere, cone, cylinder, and torus.  Similar effect to the sweep attribute in modelling. "
	rcount "3"
		rname "particle"
		rname "addPP"
		rname "addDynamic"
name "enableDevice"
	desc "Sets (or queries) the device enable state for actions involving the device. -monitor affects all assignInputDevice and attachDeviceAttr actions for the named device -record controls if the device is recorded (by default) by a recordDevice action -apply channelName [channelName ... ] controls if data from the device channel is applied (by default) by applyTake to the param curves attached to the named channel. Disabling a channel for applyTake cause applyTake to ignore the enable state of all "child" channels -- treating them as disabled."
	fcount "6"
	fnames "apply a"
		fdesc "enable/disable "applyTake" for the specified channel(s) "
	fnames "device d"
		fdesc "specifies the device to change "
	fnames "enable en"
		fdesc "enable (or disable) monitor/record/apply "
	fnames "monitor m"
		fdesc "enables/disables visible update for the device (default) "
	fnames "query q"
		fdesc "queries monitor/record/apply state "
	fnames "record rec"
		fdesc "enable/disable "recordDevice" device recording "
	rcount "9"
		rname "applyTake"
		rname "filter"
		rname "recordDevice"
		rname "defineDataServer"
		rname "movIn"
		rname "writeTake"
		rname "defineVirtualDevice"
		rname "movOut"
		rname "readTake"
name "encodeString"
	desc "This action will take a string and encode any character that would need to be escaped before being sent to some other command. Such characters include: double quotes newlines tabs."
	fcount "0"
	rcount "0"
name "endString"
	desc "This procedure returns the last $count characters of the string $s. If $count is zero or negative, then an empty string is returned. If $count is greater than or equal to the number of characters in $s, then the entire string is returned."
	fcount "0"
	rcount "0"
name "endsWith"
	desc "This procedure returns true if the string $s ends with the string $suffix."
	fcount "0"
	rcount "0"
name "env"
	desc "Returns the names of the global variables currently declared in MEL."
	fcount "0"
	rcount "0"
name "equivalent"
	desc "Compare 2 float values within the current linear tolerance value."
	fcount "0"
	rcount "0"
name "equivalentTol"
	desc "Compare 2 float values within the given tolerance value."
	fcount "0"
	rcount "0"
name "erf"
	desc "This command is implemented using the builtin system functions. Returns the error function of the argument, call it x, defined as (2 / sqrt(pi)) integral{0 to x} of (e ** -t **2) dt. Special Note: There is also an erfc command which returns 1.0 - erf(x), and is provided because of the extreme loss of relative accuracy if erf(x) is called for large x and the result subtracted from 1.0 (e.g., for x = 10, 12 places are lost)."
	fcount "0"
	rcount "0"
name "error"
	desc "The error command is provided so that the user can issue error messages from his/her scripts and control execution in the event of runtime errors. The string argument is displayed in the command window (or stdout if running in batch mode) after being prefixed with an error message heading and surrounded by //. The error command also causes execution to terminate with an error. Using error is like raising an exception because the error will propagate up through the call chain. You can use catch to handle the error from the caller side. If you don't want execution to end,.... Refer to full documentation"
	fcount "1"
	fnames "showLineNumber sl"
		fdesc "If true then file and line number information are displayed. Default: false "
	rcount "1"
		rname "warning"
name "eval"
	desc "The purpose of the eval command is to provide a way for the user to execute a command or procedure which can only be determined at runtime. Any valid MEL statements can be passed as the string argument to eval. For those familiar with C, this provides a functionality akin to function pointers. This feature is of particular use to plug-in users. Since a plugin command is available only after the execution of the loadPlugin command, references to that plugin can only be resolved at runtime. If the user wants to use eval to execute only a single simple command.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "evalDeferred"
	desc "This command takes the string it is given and evaluates it during the next available idle time. It is useful for attaching commands to controls that can change or delete the control."
	fcount "1"
	fnames "lowestPriority lp"
		fdesc "Specified that the command to be executed should be deferred with the lowest priority. That is, it will be executed when no other idle events are scheduled. "
	rcount "3"
		rname "eval"
		rname "evalEcho"
		rname "scriptJob"
name "evalEcho"
	desc "This command is the same as the eval command except that it additionally echoes the command string being executed. This is useful for commands embedded within scripts and procedures which the user would like to see displayed in the command window."
	fcount "0"
	rcount "0"
name "event"
	desc "The event command assigns collision events to a particle object. Collision events are stored in multi-attributes in the particle shape. The event command returns the event name."
	fcount "13"
	fnames "count ct"
		fdesc "Collision number (for each particle) to which this event  applies. Zero (the default) indicates that it applies to all  collisions.  "
	fnames "delete d"
		fdesc "Delete the specified event. "
	fnames "dieAtCollision die"
		fdesc "Particle dies at the collision specified by "count." If no count value is given, die at first collision. "
	fnames "emit em"
		fdesc "Emit n additional particles into the assigned target object.  The original (colliding) particle survives as well, and remains  in its original object.  The new particles have age zero and mass equal to the emitting particle. They use the velocity inheritance parameter of the target object. "
	fnames "list ls"
		fdesc "List all events for the chosen shape, like this: event1Name event2Name ... If no shape identified, list all events for all shapes, like this:  shape1Name event1Name shape2Name event2Name... Returns a string array. "
	fnames "name n"
		fdesc "Assign a name to an event you are creating, or identify an event you wish to edit, query, or delete. See examples. "
	fnames "proc pr"
		fdesc "Specify a MEL proc to be called each time the event occurs. This must be a global proc with arguments as follows: global proc procName( string obj, int id, string objHit ); Arguments passed in are the name of the particle object, the id of the particle which collided, and the name of the object collided with.  You can use particle -id -q to get values of the particle's attributes. "
	fnames "random r"
		fdesc "Used with -split and -emit flags.  If -random is set true and -split or -emit is set to n, then a random number of particles uniformly distributed between 1 and n will be created at the event. "
	fnames "rename re"
		fdesc "Assign a new name to an event you are editing. See examples. "
	fnames "select s"
		fdesc "This flag is obsolete.  See the -name flag. "
	fnames "split spl"
		fdesc "Colliding particle splits into specified number of  new particles. These new particles become part of the assigned  target object. If no target has been assigned, they become part of  the same object.  The new particles inherit the current age of the particle that split.  They use the velocity inheritance parameter of the target object.  If you set both emit and split, the event will do both: first emit new particles, then split the original one. This is a change from earlier versions where emit and split were mutually exclusive. "
	fnames "spread sp"
		fdesc "Particles created at collision will spread out a random amount  from the rebound direction of the colliding particle.  The spread is specified as a fraction (0-1) of 90 degrees.  If spread is set at 0 (the default) all the new particles created may coincide. "
	fnames "target t"
		fdesc "Target object for emitting or split particles. New particles  created through the -emit or -split flags join this object.  "
	rcount "2"
		rname "particle"
		rname "collision"
name "exactWorldBoundingBox"
	desc "This command figures out an exact-fit bounding box for the specified objects (or selected objects if none are specified) This bounding box is always in world space."
	fcount "1"
	fnames "ignoreInvisible ii"
		fdesc "Should the bounding box calculation include or exclude invisible objects? "
	rcount "0"
name "exclusiveLightCheckBox"
	desc "This command creates a checkBox that controls a light's exclusive non-exclusive status. An exclusive light is one that is not hooked up to the default-light-list, thus it does not illuminate all objects be default. However an exclusive light can be linked to an object."
	fcount "20"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "light lt"
		fdesc "The light that is to be made exclusive/non-exclusive. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "9"
		rname "ambientLight"
		rname "lightListEditor"
		rname "directionalLight"
		rname "lightListPanel"
		rname "spotLight"
		rname "lightlink"
		rname "spotLightPreviewPort"
		rname "pointLight"
		rname "lightList"
name "exec"
	desc "The string argument is a command which gets executed as a background process from the shell. The process id of the background process is returned as an int. Note that the exec command is system dependent, and will give different results on Windows than on a UNIX system. On Windows we use spawnvp and on UNIX systems we use execv."
	fcount "0"
	rcount "0"
name "executeForEachObject"
	desc "This procedure takes a list of object names and applies the command in "thisCmd" to each object. The object name is substituted for a %s in the command."
	fcount "0"
	rcount "0"
name "exists"
	desc "This command is designed to allow the user to query the existence of a command or Mel procedure. It takes one argument of type string. An integer value of 1 is returned if the argument represents the name of a Maya command, a builtin Mel command, or a user written Mel procedure or script. This command returns 0 if none of these can be found."
	fcount "0"
	rcount "0"
name "exp"
	desc "If the given value is x . This command returns the exponential function of x , e x Also available: expm1 : Returns exp(x) - 1."
	fcount "0"
	rcount "0"
name "exportComposerCurves"
	desc "Generates a bezier curve(s) to import into Composer based on a specified attribute in Maya. Select objects with attributes to be exported exportComposerCurves select which attributes should be exported This will output a ".cmp" to the current maya project's directory. You can File>Import this into Composer."
	fcount "0"
	rcount "0"
name "expression"
	desc "This command describes an expression that belongs to the current scene. The expression is a block of code of unlimited length with a C-like syntax that can perform conversions, mathematical operations, and logical decision making on any numeric attribute(s) in the scene. One expression can read and alter any number of numeric attributes. Theoretically, every expression in a scene can be combined into one long expression, but it is recommended that they are separated for ease of use and editing, as well as efficiency. If this command is being sent by the command line or in a script, then the.... Refer to full documentation"
	fcount "8"
	fnames "alwaysEvaluate ae"
		fdesc "If this is TRUE (the default), then the expression will be evaluated whenever time changes regardless of whether the other inputs have changed, and an output is requested.  If it is FALSE, then the expression will only be evaluated if one or more of the inputs changes and an output is requested.  Note, if 'time' or 'frame' are inputs, then the expression will act as if this was set to TRUE. "
	fnames "edit e"
		fdesc "Edit the expression node.  Valid edit parameters are -s/-n "
	fnames "name n"
		fdesc "Sets the name of the dependency graph node to use for the expression "
	fnames "object o"
		fdesc "Sets the "default" object for the expression.  This allows the expression writer to not type the object name for frequently-used objects.  See the examples below. "
	fnames "query q"
		fdesc "Query the expression node.  Valid query parameters are -s/-n "
	fnames "shortNames sn"
		fdesc "When used with the -q/quety flag, tells the command to return the expression with attribute names as short as possible. The default is to return the FULL attribute name, regardless of how the user entered it into the expression, including the object names.  With this flag set, attribute names are returned as their short versions, and any attribute that belongs to the default object, if there is one specified, will not display the object's name. "
	fnames "string s"
		fdesc "Set the expression string "
	fnames "unitConversion uc"
		fdesc "Insert specified unit conversion nodes at creation: "all", "none,"  or "angularOnly." Default is "all."  For angularOnly, will insert unit  conversion nodes only for angular attributes (allowing degrees-to-radians  conversion).  This is for performance tuning. If queried, returns the option used when the expression was created or last edited. "
	rcount "0"
name "expressionEditorListen"
	desc "Listens for messages for the Expression Editor, at its request, and communicates them to it. This action is for internal use only and should not be called by users. This action should be called only by the Expression Editor."
	fcount "5"
	fnames "listenFile lf"
		fdesc "Listen for changes to the file argument. "
	fnames "listenForAttr la"
		fdesc "Listen for changes to the attributes of the node argument. "
	fnames "listenForName ln"
		fdesc "Listen for name changes for the node argument. "
	fnames "stopListenForAttr sla"
		fdesc "Stop listening for changes to the attributes of the  node argument. "
	fnames "stopListenForName sln"
		fdesc "Stop listening for name changes for the node argument. "
	rcount "0"
name "extendCurve"
	desc "This command extends a curve or creates a new curve as an extension."
	fcount "19"
	fnames "bothEnds be"
		fdesc "Obsolete.  Use value 2 in start/s attribute instead of setting this. Default:  false "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "distance d"
		fdesc "The distance to extend Used only for extendMethod is byDistance. Default:  1 "
	fnames "extendMethod em"
		fdesc "The method with which to extend: 0 - based on distance, 2 - to a 3D point Default:  0 "
	fnames "extensionType et"
		fdesc "The type of extension: 0 - linear, 1 - circular, 2 - extrapolate Default:  0 "
	fnames "inputPoint ip"
		fdesc "The point to extend to (optional) "
	fnames "join jn"
		fdesc "If true, join the extension to original curve Default:  true "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "pointX px"
		fdesc "X of the point to extend to Default:  0 "
	fnames "pointY py"
		fdesc "Y of the point to extend to Default:  0 "
	fnames "pointZ pz"
		fdesc "Z of the point to extend to Default:  0 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "removeMultipleKnots rmk"
		fdesc "If true remove multiple knots at join Used only if join is true. Default:  false "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "start s"
		fdesc "Which end of the curve to extend. 0 - end, 1 - start, 2 - both Default:  1 "
	rcount "0"
name "extendSurface"
	desc "This command extends a surface or creates a new surface as an extension."
	fcount "14"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "distance d"
		fdesc "The distance to extend (for by distance only) Default:  1 "
	fnames "extendDirection ed"
		fdesc "Which parametric direction of the surface to extend ( 0 - U, 1 - V, 2 - both ) Default:  0 "
	fnames "extendMethod em"
		fdesc "The extend method (0 - distance) Default:  kByDistance "
	fnames "extendSide es"
		fdesc "Which end of the surface to extend ( 0 - end, 1 - start, 2 - both ) Default:  1 "
	fnames "extensionType et"
		fdesc "The type of extension (0 - tangent, 2 - extrapolate) Default:  0 "
	fnames "join jn"
		fdesc "Join extension to original Default:  true "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	rcount "0"
name "extrude"
	desc "This command computes a surface given a profile curve and possibly a path curve. There are three ways to extrude a profile curve. The most basic method is called a "distance" extrude where direction and length are specified. No path curve is necessary in this case. The second method is called "flat" extrude. This method sweeps the profile curve down the path curve without changing the orientation of the profile curve. Finally, the third method is called "tube" extrude. This method sweeps a profile curve down a path curve while the profile curve rotates so that it maintains a relationship.... Refer to full documentation"
	fcount "26"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "degreeAlongLength dl"
		fdesc "Surface degree along the distance when a distance extrude is performed Default:  1 "
	fnames "direction d"
		fdesc "The direction in which to extrude. Use only for distance extrudeType and useProfileNormal off "
	fnames "directionX dx"
		fdesc "X of the direction Default:  0 "
	fnames "directionY dy"
		fdesc "Y of the direction Default:  1 "
	fnames "directionZ dz"
		fdesc "Z of the direction Default:  0 "
	fnames "extrudeType et"
		fdesc "The extrude type (distance-0, flat-1, or tube-2) Default:  2 "
	fnames "fixedPath fpt"
		fdesc "If true, the resulting surface will be placed at the path curve. Otherwise, the resulting surface will be placed at the profile curve. Default:  false "
	fnames "length l"
		fdesc "The distance to extrude. Use only for distance extrudeType Default:  1 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "pivot p"
		fdesc "The pivot point used for tube extrudeType "
	fnames "pivotX px"
		fdesc "X of the pivot Default:  0 "
	fnames "pivotY py"
		fdesc "Y of the pivot Default:  0 "
	fnames "pivotZ pz"
		fdesc "Z of the pivot Default:  0 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "reverseSurfaceIfPathReversed rsp"
		fdesc "If true, extrude type is tube (2) and path has been internally reversed then computed surface is reversed in the direction corresponding to the path. Default:  false "
	fnames "rotation ro"
		fdesc "Amount to rotate the profile curve as it sweeps along the path curve. Default:  0.0 "
	fnames "scale sc"
		fdesc "Amount to scale the profile curve as it sweeps along the path curve. Default:  1.0 "
	fnames "subCurveSubSurface scs"
		fdesc "If true, curve range on the path will get applied to the resulting surface instead of cut before the extrude. Default:  false "
	fnames "useComponentPivot ucp"
		fdesc "Use closest endpoint of the path - 0, component pivot - 1 or the center of the bounding box of the profile - 2 Default:  0 "
	fnames "useProfileNormal upn"
		fdesc "If true, use the profile curve normal for the direction in which to extrude. Use only for distance or tube extrudeType. Default:  false "
	rcount "1"
		rname "singleProfileBirailSurface"
name "fcheck"
	desc "Fcheck is NOT undoable , NOT queryable , and NOT editable . Invokes the fcheck program to display images in a separate window."
	fcount "0"
	rcount "0"
name "fclose"
	desc "This command must be called with the file identifier returned by fopen after all file input/output is completed."
	fcount "0"
	rcount "0"
name "feof"
	desc "Returns non-zero if end of file is reached. Note that if an empty file is opened, feof will not detect that it is at the end of the file until at least one read is performed."
	fcount "0"
	rcount "0"
name "fflush"
	desc "This command is used after you have opened a file and have written to it but have not closed it yet. fwrite doesn't actually write directly onto your disk. It writes into a buffer that is in the software. When the buffer is full it writes out to disk in one go. This means there are fewer I/O accesses so the program doesn't slow down. If you want to force the buffer to be written to disk then you use fflush . Note that this is normally done just before something risky that might cause a crash, so is usually.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "fgetline"
	desc "Returns the next line (string of characters followed by a newline) or nothing if end of file is reached."
	fcount "0"
	rcount "0"
name "fgetword"
	desc "Returns the next word (string of characters separated by white space characters) or nothing at end of file. The optional field separators string can replace the use of white spaces. Characters in the separator string are used to determine word boundaries."
	fcount "0"
	rcount "0"
name "file"
	desc "Opening, importing, exporting, referencing, saving, or renaming a file This command needs a single main flag that specifies the action to take. Some of the main flags also take optional secondary flags to modify that action. The main flags are: cr ea ean ear eas er esa es esn esr ex fr i ir l lr loc ltf mf new o op ot pmt r rn rr rts s sa sdx st stx typ uc ur w -o/-open can be modified by the following secondary flags f lad lad lnr -es/-exportSelected can be modified by the following secondary flags ch.... Refer to full documentation"
	fcount "71"
	fnames "anyModified amf"
		fdesc "This is a query only flag. If any of the memory resident files require a save to be performed then 1 is returned. "
	fnames "buildLoadSettings bls"
		fdesc "When used with the "o/open" flag it indicates that the specified file should be read for reference hierarchy information only. This information will be stored in temporary load settings under the name "implicitLoadSettings". When this flag is used the specified scene file will not be loaded: no objects/nodes will be  created or modified. Note: most users will not need to use this flag or the  "implicitLoadSettings" it builds. They can access the same  functionality by setting the "Selective Load" option in the  File > Open Option Box. "
	fnames "channels chn"
		fdesc "For use with exportSelected to specify whether attached channels should be included in the export. "
	fnames "cleanReference cr"
		fdesc "Removes any unresolved pieces of information from the passed reference node.  "
	fnames "command c"
		fdesc "Specifies the callback to execute before any file operation. This is an internal flag used only in the file format. "
	fnames "constraints con"
		fdesc "For use with exportSelected to specify whether attached constraints should be included in the export. "
	fnames "constructionHistory ch"
		fdesc "For use with exportSelected to specify whether attached construction history should be included in the export. "
	fnames "copyNumberList cnl"
		fdesc "When queried, this flag returns a string array containing a number that uniquely identifies each instance the file is used. "
	fnames "defaultExtensions de"
		fdesc "Use the default extensions to rename the files. "
	fnames "defaultNamespace dns"
		fdesc "Use the default name space for import and referencing.  This is an advanced option.  If set, then on import or reference, Maya will attempt to place all nodes from the imported or referenced file directly into the root (default) name space, without invoking any name clash resolution algorithms.  If the names of any of the new objects	already exist in the root namespace, then errors will result. The user of this flag is responsible for creating a name clash resolution mechanism outside of Maya to avoid such errors. "
	fnames "deferReference dr"
		fdesc "When used in conjuction with the -reference flag, this flag determines if the reference is loaded, or if loading is  deferred. C: The default is false. Q: When queried, this flag returns true if the reference is deferred, or flase if the reference is not deferred. If this is used  with -rfn/referenceNode, the -rfn flag must come before -q. "
	fnames "errorStatus err"
		fdesc "Query the error status of the last file read. Returns true if and error occurred during the last file read. "
	fnames "executeScriptNodes esn"
		fdesc "If true, allow the appropriate script nodes to execute. If false, do not allow any script node scripts to run. For more information, see the documentation for  script  nodes. Default: true. "
	fnames "exists ex"
		fdesc "Query if the file exists. Returns true if the file exists. "
	fnames "expandName exn"
		fdesc "This is a query only flag that can be used to query for the file path name of the file. "
	fnames "exportAll ea"
		fdesc "Export everything into a single file. Returns the name of the exported file. "
	fnames "exportAnim ean"
		fdesc "Export all animation nodes and animation helper nodes from all objects in the scene. The resulting animation export file will contain connections to objects that are not included in the animation file. As a result, importing/referencing this file back in will require objects of the same name to be present, else errors will occur. The -sns/swapNamespace flag is available for swapping the namespaces of given objects to another namespace. This use of namespaces can be used to re-purpose the animation file to multiple targets using a consistent naming scheme. "
	fnames "exportAnimFromReference ear"
		fdesc "Export the main scene animation nodes and animation helper nodes from all referenced objects. This flag, when used in conjunction with the -rfn/referenceNode flag, can be constrained to only export animation nodes from the specified reference file. See -ean/exportAnim flag description for details on usage of animation files. "
	fnames "exportAsReference er"
		fdesc "Export the selected objects into a reference file with the given name. The file is saved on disk during the process.  Returns the name of the reference created. "
	fnames "exportSelected es"
		fdesc "Export the selected items into the specified file. Returns the name of the exported file. "
	fnames "exportSelectedAnim eas"
		fdesc "Export all animation nodes and animation helper nodes from the selected objects in the scene. See -ean/exportAnim flag description for details on usage of animation files. "
	fnames "exportSelectedAnimFromReference esa"
		fdesc "Export the main scene animation nodes and animation helper nodes from the selected referenced objects. This flag, when used in conjunction with the -rfn/referenceNode flag, can be constrained to only export animation nodes from the selected nodes of a specified reference file. See -ean/exportAnim flag description for details on usage of animation files. "
	fnames "exportSelectedNoReference esr"
		fdesc "Export the selected items into the specified file without their parent nodes. Returns the name of the exported file. The selected items will remain in the scene as scene objects, not as referenced objects. "
	fnames "expressions exp"
		fdesc "For use with exportSelected to specify whether attached expressions should be included in the export. "
	fnames "flushReference fr"
		fdesc "This flag will unload the reference file associated with the  passed reference node, retaining all associated reference nodes and scene files. ** This option only works when using namespaces **. More Details: This flag is primarily intended to be used as part of a custom asset management system. It can be used to  defer loading of a reference which contains child references without  losing information about those child references. Prior to reloading a flushed	reference which contains child references, the  'createNode reference' lines should be manually removed from the  children's Maya ASCII files. If this is not done, extra reference  nodes will be created.  "
	fnames "force f"
		fdesc "Force an action to take place. (new, open, save) "
	fnames "groupLocator gl"
		fdesc "Used only with the -r and the -gr flag. Used to group the output of groupReference under a locator "
	fnames "groupName gn"
		fdesc "Used only with the -gr flag. Optionally used to set the name of the transform node that the imported/referenced items will be grouped under. "
	fnames "groupReference gr"
		fdesc "Used only with the -r or the -i flag. Used to group all the imported/referenced items under a single transform. "
	fnames "import i"
		fdesc "Import the specified file. Returns the name of the imported file. "
	fnames "importReference ir"
		fdesc "Remove the encapsulation of the reference around the data within the specified file.	This makes the contents of the specified file part of the current scene and all references to the original file are lost. Returns the name of the reference that was imported. "
	fnames "lastTempFile ltf"
		fdesc "When queried, this flag returns the temp file name used during  file save. The temp file will be left in the same directory  as the intented file name if the save fails. "
	fnames "list l"
		fdesc "List all files. Returns a string array of the names of all segment/reference files in the scene. "
	fnames "loadAllDeferred lad"
		fdesc "This flag is obsolete, and has been replaced by the -lar/loadAllReferences flag. When used with the -open flag, determines if the -deferReference flag is respected when reading in the file. If true is passed, all of the references are loaded. If false is passed, the -deferReference flag is respected. "
	fnames "loadAllReferences lar"
		fdesc "This flag replaces the obsolete -lad/loadAllDeferred boolean flag. When used with the -open flag, this will cause all references to be loaded. "
	fnames "loadNoReferences lnr"
		fdesc "When used with the -open flag, no references will be loaded. "
	fnames "loadReference lr"
		fdesc "This flag loads a file and associates it with the passed reference node. If the reference node does not exist, the command will fail. If the file is already loaded, then this flag will reload the same file. If a file is not given, the command will load (or reload) the last used reference file.  "
	fnames "loadSettings ls"
		fdesc "When used with the "o/open" flag this flag specifies which reference  load settings should be used. Reference load settings specify which  references should be brought in loaded and which unloaded. Those  reference files that are brought in unloaded will usually not need  to be read and interpreted by Maya. This can potentially reduce the  time it takes Maya to load the whole scene. If no "ls/loadSettings" flag is specified, or the empty string ("") is  used as the flag argument, the default load settings are used. The  default load settings represent the state of all references when the file  was last saved. The load settings "implicitLoadSettings" refer to the  temporary load settings generated by the "bls/buildLoadSettings" flag and  edited with the "loadSettings" command. Currently on the default and implicit load settings are supported. "
	fnames "location loc"
		fdesc "Query the location of the given file name. "
	fnames "modified mf"
		fdesc "Set the modified state of the file. A modified file will need to be saved before a new file is opened or created. You do not normally need to edit this flag as the state of the file is updated automatically whenever an object is created or modified. If the file has been modified 1 is returned. Otherwise 0 is returned. "
	fnames "namespace ns"
		fdesc "The namespace name to use that will group all objects during importing and referencing. "
	fnames "newFile new"
		fdesc "Initialize the scene. Returns untitled scene with default location. "
	fnames "objectType ot"
		fdesc "Query the list of existing object types. The list is returned as pairs of "name" "rule".  When setting a rule the syntax is "name" "rule". In all cases the name is simply the object type. Valid values are scene and userInterface. The rule is the location to look for/store this type of file. Returns the name of the current scene. "
	fnames "open o"
		fdesc "Open the specified file. Returns the name of the opened file. "
	fnames "options op"
		fdesc "Set/query the currently set file options. "
	fnames "parentNamespace pns"
		fdesc "Returns the name(s) of a referenced file's parent namespaces. "
	fnames "preserveReferences pr"
		fdesc "When used with the import/export flags this tells the  importer/exporter to import/export references as references  instead of copies of those references. "
	fnames "prompt pmt"
		fdesc "This flag controls the display of file prompting dialogs. Some examples of file prompting dialogs include error messages that require user confirmation and missing file reference dialogs. Once this flag is used, every instance of the file command will use the last set value of this flag. Some interactive file operations may post dialogs even when the flag is set to false, but every scripted file command will not display any dialogs when this flag is set to false.  The default value is true. "
	fnames "reference r"
		fdesc "Create a reference to the specified file. Returns the name of the file referenced. Query all file references from the specified file. "
	fnames "referenceNode rfn"
		fdesc "When queried, this flag returns the name of the reference node associated with the file. If the file is not a reference or does not have a reference node, an empty string is  returned. "
	fnames "removeReference rr"
		fdesc "Remove the given file reference from its parent. This will also Remove everything this file references. Returns the name of the file removed. "
	fnames "rename rn"
		fdesc "Rename the scene. Used mostly during save to set the saveAs name. Returns the new name of the scene. "
	fnames "renameAll ra"
		fdesc "Only available with -import. If true, rename all newly-created nodes, not just those whose names clash with existing nodes. Only available with -import. "
	fnames "renameToSave rts"
		fdesc "If true, the scene will need to be renamed before it can be  saved. When queried this flag returns true if the scene must be  renamed before it can be saved.  The default is false. "
	fnames "renamingPrefix rpr"
		fdesc "The string to use as a prefix for all objects from this file. This flag has been replaced by -ns/namepace. "
	fnames "renamingPrefixList rpl"
		fdesc "This flag returns a list of all of the renaming prefixes used  by the file.  "
	fnames "save s"
		fdesc "Save the specified file. Returns the name of the saved file. "
	fnames "saveDiskCache sdc"
		fdesc "This flag sets the saveAs option for Jiggle disk caches. The valid inputs are "always" - always copy a file texture to a  new location, "never" - do not copy at all.  C: The default is "always".  Q: When queried it returns a string ("always", "never"). "
	fnames "saveTextures stx"
		fdesc "This flag sets the saveAs option for 3d Paint file textures. The valid inputs are "always" - always copy a file texture to a  new location, "unlessRef" - copy only if this is not a referenced file texture, "never" - do not copy at all.  C: The default is "unlessRef".  Q: When queried it returns a string ("always", unlessRef", "never"). "
	fnames "sceneName sn"
		fdesc "return the name of the current scene. "
	fnames "selectAll sa"
		fdesc "Select all the components of this file as well as its child files.  Note that the file specified must be one that is already opened in this Maya session. "
	fnames "shader sh"
		fdesc "For use with exportSelected to specify whether attached shaders should be included in the export. "
	fnames "shortName shn"
		fdesc "When used with a main query flag it indicates that the file name  returned will be the short name (i.e. just a file name without any directory paths). If this flag is not present, the full name and directory path will be returned. "
	fnames "subType st"
		fdesc "Set the file subtype. This can be any one of the types returned by querying the file objectType list. Return the file subtype (scene or userInterface). "
	fnames "swapNamespace sns"
		fdesc "Can only be used in conjunction with the -r/reference or -i/import flags. This flag will replace any occurrences of a given namespace to an alternate specified namespace. This namespace "swap" will occur as the file is referenced in. It takes in two string arguments. The first argument specifies the namespace to replace. The second argument specifies the replacement namespace. Use of this flag, implicitly enables the use of namespaces and cannot be used with deferReference. "
	fnames "type typ"
		fdesc "Set the type of this file.  By default this can be any one of: "mayaAscii", "mayaBinary", "mel",  "OBJ", "directory", "plug-in", "audio", "move", "EPS", "Illustrator", "image" plug-ins may define their own types as well. Return a string array of file types that match this file. "
	fnames "uiConfiguration uc"
		fdesc "Save the ui configuration with the scene in a uiConfiguration script node. (eg. panes, etc.) The current default is on and is set in initialStartup.mel. "
	fnames "unloadReference ur"
		fdesc "This flag will unload the reference file associated with the  passed reference node.  "
	fnames "unresolvedName un"
		fdesc "When used with a main query flag it indicates that the file name returned will be unresolved (i.e. it will be the path originally specified when the file was loaded into Maya; this path may  contain environment variables and may not exist on disk). If this flag is not present, the resolved name will	be returned. "
	fnames "withoutCopyNumber wcn"
		fdesc "When used with a main query flag it indicates that the file name  returned will not have a copy number appended to the end. If this flag is not present, the file name returned may have a copy number appended to the end. "
	fnames "writable w"
		fdesc "Query whether the given file is writable in the current scene. For main scene files this indicates writable to the file system by the current user. Files referenced by the main scene file are always not writable (referenced files are by nature read only). Files not present in the current scene always return false. "
	rcount "5"
		rname "workspace"
		rname "namespace"
		rname "namespaceInfo"
		rname "filetest"
		rname "getFileList"
name "fileBrowserDialog"
	desc "The fileBrowserDialog command offers more control of the windows NT file browser dialog. See the fileDialog mel command for cross platform file dialog support."
	fcount "10"
	fnames "actionName an"
		fdesc "the action "
	fnames "dialogStyle ds"
		fdesc "0 for old style dialog       1 for Windows 2000 style Explorer style 2 for Explorer style with "Shortcut" tip at bottom "
	fnames "fileCommand fc"
		fdesc "the command to run on command action "
	fnames "fileType ft"
		fdesc "Set the type of file to filter.  By default this can be any one of: "mayaAscii", "mayaBinary", "mel", "OBJ", "directory", "plug-in", "audio", "move", "EPS", "Illustrator", "image" plug-ins may define their own types as well. "
	fnames "filterList fl"
		fdesc "Multi use flag for specifying file filters.  Used with dialog style       1 and 2.  Each string should be a description followed by a comma followed by a semi-colon separated list of file extensions with wildcard. "
	fnames "includeName in"
		fdesc "Include the given string after the actionName in parentheses. If the name is too long, it will be shortened to fit on the dialog (for example, /usr/alias/commands/scripts/fileBrowser.mel might be shortened to /usr/...pts/fileBrowser.mel) "
	fnames "mode m"
		fdesc "0 for read 1 for write 2 for write without paths (segmented files) 4 for directories have meaning when used with the action +100 for returning short names "
	fnames "operationMode om"
		fdesc "enables the option dialog. Valid strings are: "Import" "Reference" "SaveAs" "ExportAll" "ExportActive" "
	fnames "tipMessage tm"
		fdesc "Message to be displayed at the bottom of the style 2 dialog box. "
	fnames "windowTitle wt"
		fdesc "Set the window title of a style 1 or 2 dialog box "
	rcount "1"
		rname "finder"
name "fileDialog"
	desc "Displays a file picking window, and returns the name of the file that the user picked. If the user picked no file, then an empty string is returned."
	fcount "1"
	fnames "directoryMask dm"
		fdesc "This can be used to specify what directory and file names will be displayed in the dialog.  If not specified, the current directory will be used, with all files displayed.  The string may contain a path name, and must contain a wild-carded file specifier. (eg "*.cc" or "/usr/u/*") If just a path is specified, then the last directory in the path is taken to be a file specifier, and this will not produce the desired results. "
	rcount "1"
		rname "fileBrowserDialog"
name "fileExtension"
	desc "Return the file extension."
	fcount "0"
	rcount "0"
name "fileInfo"
	desc "FileInfo is NOT undoable , queryable , and NOT editable . fileInfo provides a mechanism for keeping information related to a Maya scene file. Each invocation of the command consists of a keyword/value pair, where both the keyword and the associated value are strings. The command may be invoked multiple times with different keywords. Maya emits this command several times into each file it creates, primarily to provide details such as which productization or packaging of the program was used (e.g "Complete", "Unlimited"), the specific version and build identification that was run, and the operating system on which it was.... Refer to full documentation"
	fcount "1"
	fnames "remove rm"
		fdesc "If the remove flag is specified, the string following it is a keyword to remove from the list of fileInfo to be saved with the scene file. "
	rcount "2"
		rname "about"
		rname "requires"
name "filetest"
	desc "This is a file access and type checking command. It evaluates a test based on a single flag given to it and returns 1 if the value is true; otherwise, 0. Filetest also returns 0 if the test is invalid. When permissions are tested, the effective user ID of the process is used. The unary negation operator, "!", may precede the test. Special Note: If you test a file you own (the -r, -w, or -x tests), but the permission tested does not have the owner bit set, a non-zero (false) exit status will be returned even though the file.... Refer to full documentation"
	fcount "14"
	fnames "l l"
		fdesc "true if file exists and is a symbolic link. "
	fnames "b b"
		fdesc "true if file exists and is a block special file. "
	fnames "c c"
		fdesc "true if file exists and is a character special file. "
	fnames "d d"
		fdesc "true if file exists and is a directory. "
	fnames "f f"
		fdesc "true if file exists and is a regular file. "
	fnames "g g"
		fdesc "true if file exists and its set-group-ID bit is set. "
	fnames "h h"
		fdesc "true if file exists and is a symbolic link. "
	fnames "k k"
		fdesc "true if file exists and its sticky bit is set. "
	fnames "p p"
		fdesc "true if file exists and is a named pipe (fifo). "
	fnames "r r"
		fdesc "true if file exists and is readable. "
	fnames "s s"
		fdesc "true if file exists and has a size greater than zero. "
	fnames "u u"
		fdesc "true if file exists and its set-user-ID bit is set. "
	fnames "w w"
		fdesc "true if file exists and is writable. "
	fnames "x x"
		fdesc "true if file exists and is executable. "
	rcount "0"
name "filletCurve"
	desc "The curve fillet command creates a fillet curve between two curves. If no objects are specified in the command line, then the first two active curves are used. The fillet created can be circular (with a radius) or freeform (with a type of tangent or blend)."
	fcount "18"
	fnames "bias b"
		fdesc "Adjusting the bias value causes the fillet curve to be skewed to one of the input curves. Available only if blendControl is true. Default:  0.0 "
	fnames "blendControl bc"
		fdesc "If true then depth and bias can be controlled. Otherwise, depth and bias are not available options. Default:  false "
	fnames "circular cir"
		fdesc "Curve fillet will be created as circular if true or freeform if false. Default:  true "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "curveParameter1 cp1"
		fdesc "Parameter where fillet curve will contact the primary input curve. Default:  0.0 "
	fnames "curveParameter2 cp2"
		fdesc "Parameter where fillet curve will contact the secondary input curve. Default:  0.0 "
	fnames "depth d"
		fdesc "Adjusts the depth of the fillet curve. Available only if blendControl is true. Default:  0.5 "
	fnames "freeformBlend fb"
		fdesc "The freeform type is blend if true or tangent if false. Available if the fillet type is freeform. Default:  false "
	fnames "join jn"
		fdesc "If true, join the trimmed curves to the fillet curve. Available only if trim option is true. NOTE: setting this attribute to random values will cause unpredictable results and is not supported. Default:  false "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "radius r"
		fdesc "The radius if creating a circular fillet. Default:  1.0 "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "trim t"
		fdesc "If true, trim the input curves at the parameter values. Otherwise, leave the input curves as they are. NOTE: setting this attribute to random values will cause unpredictable results and is not supported. Default:  false "
	rcount "0"
name "filter"
	desc "Creates or modifies a filter node. Filter nodes are used by applyTake to modify recorded device data before assigning it to the param curves for the attached attributes."
	fcount "23"
	fnames "allowDuplicates ad"
		fdesc "Treat ranges of duplicate values as data OBSOLETE: filterClosestSample Flags: "
	fnames "edit e"
		fdesc "Edit filter attributes (filter type specific) "
	fnames "enableInitialRotation eir"
		fdesc "enable use of initial Euler rotation value for -smooth 2 or 3 "
	fnames "frequency f"
		fdesc "output sample frequency "
	fnames "initRotation ir"
		fdesc "set initial Euler value for -smooth 2 or 3 "
	fnames "initRotationX irx"
		fdesc "set x component of initial Euler value "
	fnames "initRotationY iry"
		fdesc "set y component of initial Euler value "
	fnames "initRotationZ irz"
		fdesc "set z component of initial Euler value filterResample Flags: "
	fnames "kernel kr"
		fdesc "The resampling kernel applied the incoming data. "
	fnames "maxTimeStep mxt"
		fdesc "max time step between output records  "
	fnames "minTimeStep mnt"
		fdesc "minimum time step between output records "
	fnames "name n"
		fdesc "Name for created filter Edit/Query Flags: "
	fnames "nearestTo nt"
		fdesc "Only with -smooth 2 or 3, select the cut or solution  which is nearest to: "
	fnames "query q"
		fdesc "Query filter attributes (filter type specific) filterEuler Flags:	 	 "
	fnames "smooth s"
		fdesc "Set the the Euler demangling operation to one of: "
	fnames "timeStep ts"
		fdesc "output period in time units "
	fnames "timeTolerance tt"
		fdesc "temporal tolerance for timestampe "
	fnames "tolerance tol"
		fdesc "tolerance parameter, fraction of input range "
	fnames "type t"
		fdesc "Filter type to create, One of: "
	fnames "weight w"
		fdesc "Only with -smooth 2 or 3, defines a weight vector for evaluating "closeness". Axes with smaller weight are considered less important than those with higher weights. "
	fnames "weightX wx"
		fdesc "set X component of the weight vector. "
	fnames "weightY wy"
		fdesc "set Y component of the weight vector. "
	fnames "weightZ wz"
		fdesc "set Z component of the weight vector. "
	rcount "9"
		rname "applyTake"
		rname "recordDevice"
		rname "defineDataServer"
		rname "movIn"
		rname "writeTake"
		rname "defineVirtualDevice"
		rname "movOut"
		rname "enableDevice"
		rname "readTake"
name "filterCurve"
	desc "FilterCurve is undoable , NOT queryable , and NOT editable . The filterCurve command takes a list of anim curve and filters them. Currently only a Euler filter is supported. The Euler filter demangles discontinous rotation anim curves into smooth curves."
	fcount "9"
	fnames "filter f"
		fdesc "Specifies the filter type to use. The avalible filters are euler, simplify, and resample. By default euler is used. "
	fnames "tolerance tol"
		fdesc "Simplify filter. "
	fnames "timeTolerance tto"
		fdesc "Simplify filter. "
	fnames "minTimeStep mns"
		fdesc "Simplify filter. "
	fnames "maxTimeStep mxs"
		fdesc "Simplify filter. "
	fnames "period per"
		fdesc "Resample filter "
	fnames "kernel ker"
		fdesc "The resample kernel is a decimation resampling filter used to resample dense data. It works on the keyframes and may not produce the desired results when used with sparse data. The resample filter converts from either uniform or non-uniform timestep input data samples to the specified uniform timeStep. Various time domain filters are available and are specified with the kernel flag which selects the resampling kernel applied to the keyframes on the animation curves. Kernel Values "
	fnames "startTime s"
		fdesc "Specify the start time to filter. If not specified, then the first key in the animation curve is used to get the start time. "
	fnames "endTime e"
		fdesc "Specify the end time of the section to filter. If not specified, the last key of the animation curve is used to define the end time. "
	rcount "0"
name "filterExpand"
	desc "Based on selected components (or components specified on the command line), the command filters and/or expands the list given the options. Returns a string array containing all matching selection items. Selection masks are as follows: Object Type Mask Handle 0 Nurbs Curves 9 Nurbs Surfaces 10 Nurbs Curves On Surface 11 Polygon 12 Locator XYZ 22 Orientation Locator 23 Locator UV 24 Control Vertices (CVs) 28 Edit Points 30 Polygon Vertices 31 Polygon Edges 32 Polygon Face 34 Polygon UVs 35 Subdivision Mesh Points 36 Subdivision Mesh Edges 37 Subdivision Mesh Faces 38 Curve Parameter Points 39 Curve Knot 40.... Refer to full documentation"
	fcount "3"
	fnames "expand ex"
		fdesc "Each item is a single entity if this is true.  Default is true. "
	fnames "fullPath fp"
		fdesc "If this is true and the selection item is a DAG object, return its full selection path, instead of the name of the object only when this value is false.  Default is false. "
	fnames "selectionMask sm"
		fdesc "Specify the selection mask (multiple usage flag) "
	rcount "1"
		rname "selectType"
name "filterStudioImport"
	desc "FilterStudioImport is NOT undoable , NOT queryable , and NOT editable . Directly sets the filter options on the studioImport plugin from anywhere in MEL without having to use the UI. This is used by ViCE."
	fcount "3"
	fnames "includeCameras ic"
		fdesc "If true, cameras in the input to "studioImport" will be translated. If false, any/all cameras encountered by "studioImport" will be ignored. "
	fnames "includeLights il"
		fdesc "If true, lights in the input to "studioImport" will be translated. If false, any/all lights encountered by "studioImport" will be ignored. "
	fnames "transferDirectoryName td"
		fdesc "If set (non-empty), use as directory for storing imbedded binary files, else use the directory given by "theTempDirectory->fullName()". "
	rcount "0"
name "findAllIntersections"
	desc "Find all intersections between a list of curves, two at a time. If there are no intersections, then no nodes are created."
	fcount "0"
	rcount "0"
name "findKeyframe"
	desc "This command will return the time (in current units) of the requested key. For the relative direction methods (next, previous) if -time is NOT specified they will use current time. If the specified object is not animated the command will return the current time. This command operates on a keyset. A keyset is defined as a group of keys within a specified time range on one or more animation curves. The animation curves comprising a keyset depend on the value of the "-animation" flag: keysOrObjects : 1) any active keys, when no target objects or -attribute flags appear on the.... Refer to full documentation"
	fcount "11"
	fnames "animation an"
		fdesc "Where this command should get the animation to act on.  Valid values are "objects," "keys," and "keysOrObjects" Default: "keysOrObjects."  (See Description for details.) "
	fnames "attribute at"
		fdesc "List of attributes to select "
	fnames "controlPoints cp"
		fdesc "This flag explicitly specifies whether or not to include the control points of a shape (see "-s" flag) in the list of attributes. Default: false.   (Not valid for "pasteKey" cmd.) "
	fnames "float f"
		fdesc "value uniquely representing a non-time-based key (or key range) on a time-based animCurve.  Valid floatRange include single values (-f 10) or a string with a lower and upper bound, separated by a colon (-f "10:20") "
	fnames "hierarchy hi"
		fdesc "Hierarchy expansion options.  Valid values are "above," "below," "both," and "none."  (Not valid for "pasteKey" cmd.) "
	fnames "includeUpperBound iub"
		fdesc "When the -t/time or -f/float flags represent a range of keys, this flag determines whether the keys at the  upper bound of the range are included in the keyset. Default value: true.  This flag is only valid when the argument to the -t/time flag is a time range with a lower and upper bound.  (When used with the "pasteKey"  command, this flag refers only to the time range of the target curve that is replaced, when using options such as "replace," "fitReplace," or "scaleReplace."  This  flag has no effect on the curve pasted from the clipboard.) "
	fnames "index in"
		fdesc "index of a key on an animCurve "
	fnames "shape s"
		fdesc "Consider attributes of shapes below transforms as well, except "controlPoints".  Default: true.   (Not valid for "pasteKey" cmd.) "
	fnames "time t"
		fdesc "time uniquely representing a key (or key range) on a time-based animCurve.  Valid timeRanges include single values (-t 10) or a string with a lower and upper bound, separated by a colon (-t "10:20") "
	fnames "timeSlider ts"
		fdesc "Get the next key time from the ticks displayed in the time slider. If this flag is set, then the -an/animation flag is ignored. "
	fnames "which w"
		fdesc "next | previous | first | last How to find the key "
	rcount "10"
		rname "copyKey"
		rname "cutKey"
		rname "pasteKey"
		rname "snapKey"
		rname "keyframe"
		rname "keyframeStats"
		rname "keyframeOutliner"
		rname "scaleKey"
		rname "setInfinity"
		rname "keyTangent"
name "findMenuItem"
	desc "Displays a window that takes a text string and searches the main Maya window menus for that string. The search can be slow if Maya has just started as the menus need to be built before they can be searched."
	fcount "0"
	rcount "0"
name "findRelatedSkinCluster"
	desc "Script for finding a skin cluster that deforms the specified skin."
	fcount "0"
	rcount "0"
name "finder"
	desc "Create/Query/Edit a finder control. Each finder control has a drop icon pocket, an edit line and a history button."
	fcount "6"
	fnames "addDropBox adr"
		fdesc "If true (default) a drop box is displayed and active. "
	fnames "addHistory ah"
		fdesc "If true (default) a history box is displayed. "
	fnames "command c"
		fdesc "Set the command to be executed when Enter is pressed. "
	fnames "fileHistory fh"
		fdesc "Add a history item to the history list. Note: this cannot be queried. "
	fnames "filePath fp"
		fdesc "Set the path in the text edit field. "
	fnames "valueChanged vc"
		fdesc "Set the command to be executed when the value of the edit field changes. "
	rcount "1"
		rname "fileBrowserDialog"
name "firstParentOf"
	desc "This procedure returns the name of the first DAG parent of the specified object, if any. If the specified object has no parents, the return value is ""."
	fcount "0"
	rcount "0"
name "fitBspline"
	desc "The fitBspline command fits the CVs from an input curve and and returns a 3D curve."
	fcount "9"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "tolerance tol"
		fdesc "Tolerance for the fit.  The resulting curve will be kept within tolerance of the given points. Default:  0.1 "
	rcount "2"
		rname "rebuildCurve"
		rname "smoothCurve"
name "flexor"
	desc "This command creates a flexor. A flexor a deformer plus a set of driving attributes. For example, a flexor might be a sculpt object that is driven by a joint's x rotation and a cube's y position."
	fcount "7"
	fnames "atBones ab"
		fdesc "Add a flexor at bones. Flexor will be added at each of the selected bones, or at all bones in the selected skeleton if the -ts flag is also specified. "
	fnames "atJoints aj"
		fdesc "Add a flexor at joints. Flexor will be added at each of the selected joints, or at all joints in the selected skeleton if the -ts flag is specified. "
	fnames "deformerCommand dc"
		fdesc "String representing underlying deformer command string. "
	fnames "list l"
		fdesc "List all possible types of flexors. Query mode only. "
	fnames "noScale ns"
		fdesc "Do not auto-scale the flexor to the size of the nearby geometry. "
	fnames "toSkeleton ts"
		fdesc "Specifies that flexors will be added to the entire skeleton rather than just to the selected joints/bones. This flag is used in conjunction with the -ab and -aj flags. "
	fnames "type typ"
		fdesc "Specifies which type of flexor. (To see list of valid types, use the "flexor -q -l" command.) "
	rcount "7"
		rname "cluster"
		rname "lattice"
		rname "sculpt"
		rname "deformer"
		rname "wire"
		rname "wrinkle"
		rname "percent"
name "floatEq"
	desc "This script checks two float to determine they are equal within 0.01."
	fcount "0"
	rcount "0"
name "floatField"
	desc "Create a field control that accepts only float values and is bound by a minimum and maximum value. An invisible slider is attached to the field and accessed by holding down the Ctrl modifier key while pressing one of the mouse buttons. Dragging the invisible slider to the right with the middle mouse button increases the field value by the amount specified with the -s/step flag, while dragging to the left decreases the value by the same amount. The left and right mouse buttons apply a factor of 0.1 and 10 to the step value."
	fcount "29"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed when the field changes.  This command is not invoked when the value changes via the  -v/value  flag. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dragCommand dc"
		fdesc "Command executed when dragging in the field. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "editable ed"
		fdesc "The edit state of the field.  By default, this flag is set to true and the field value may be changed by typing into it.  If false then the field can not be changed interactively.  However, you can change the field text with the  -v/value  flag regardless of the state of the  -ed/editable  flag. "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "enterCommand ec"
		fdesc "Command executed when the keypad 'Enter' key is pressed. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "maxValue max"
		fdesc "Upper limit of the field. "
	fnames "minValue min"
		fdesc "Lower limit of the field. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "precision pre"
		fdesc "Number of digits to the right of the decimal place. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "receiveFocusCommand rfc"
		fdesc "Command executed when the field receives focus. "
	fnames "step s"
		fdesc "Increment for the invisible slider.   The field value will change by this amount when the invisible slider is dragged. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "value v"
		fdesc "Value of the field. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "floatFieldGrp"
	desc "This command creates a pre-packaged collection of label text and editable float fields. The label text is optional and one to four float fields can be created. All of the group commands position their individual controls in columns starting at column 1. The layout of each control (ie. column) can be customized using the -cw/columnWidth , -co/columnOffset , -cat/columnAttach , -cal/columnAlign , and -adj/adjustableColumn flags. By default, columns are left aligned with no offset and are 100 pixels wide. Only one column in any group can be adjustable."
	fcount "65"
	fnames "adjustableColumn adj"
		fdesc "Specifies which column has an adjustable size that changes with the sizing of the layout.  The column value is a 1-based index.  You may also specify 0 to turn off the previous adjustable column. "
	fnames "adjustableColumn2 ad2"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly two columns.  "
	fnames "adjustableColumn3 ad3"
		fdesc "Specifies that the column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly three columns.  "
	fnames "adjustableColumn4 ad4"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly four columns.  "
	fnames "adjustableColumn5 ad5"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly five columns.  "
	fnames "adjustableColumn6 ad6"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly six columns.  "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command string executed when the value of any of the fields changes. "
	fnames "columnAlign cal"
		fdesc "Arguments are : column number, alignment type. Possible alignments are: left | right | center.  Specifies alignment type for the specified column. "
	fnames "columnAlign2 cl2"
		fdesc "Sets the text alignment of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign3 cl3"
		fdesc "Sets the text alignment for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign4 cl4"
		fdesc "Sets the text alignment for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign5 cl5"
		fdesc "Sets the text alignment for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign6 cl6"
		fdesc "Sets the text alignment for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "center". "
	fnames "columnAttach cat"
		fdesc "Arguments are : column number, attachment type, and offset. Possible attachments are: left | right | both.  Specifies column attachment types and offets. "
	fnames "columnAttach2 ct2"
		fdesc "Sets the attachment type of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach3 ct3"
		fdesc "Sets the attachment type for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach4 ct4"
		fdesc "Sets the attachment type for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach5 ct5"
		fdesc "Sets the attachment type for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach6 ct6"
		fdesc "Sets the attachment type for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "both". "
	fnames "columnOffset2 co2"
		fdesc "This flag is used in conjunction with the -columnAttach2 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the two columns.  The offsets applied are based on the attachments  specified with the -columnAttach2 flag.  Ignored if there is not exactly two columns.  "
	fnames "columnOffset3 co3"
		fdesc "This flag is used in conjunction with the -columnAttach3 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the three columns.  The offsets applied are based on the attachments  specified with the -columnAttach3 flag.  Ignored if there is not exactly three columns.  "
	fnames "columnOffset4 co4"
		fdesc "This flag is used in conjunction with the -columnAttach4 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the four columns.  The offsets applied are based on the attachments  specified with the -columnAttach4 flag.  Ignored if there is not exactly four columns.  "
	fnames "columnOffset5 co5"
		fdesc "This flag is used in conjunction with the -columnAttach5 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the five columns.  The offsets applied are based on the attachments  specified with the -columnAttach5 flag.  Ignored if there is not exactly five columns.  "
	fnames "columnOffset6 co6"
		fdesc "This flag is used in conjunction with the -columnAttach6 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the six columns.  The offsets applied are based on the attachments  specified with the -columnAttach6 flag.  Ignored if there is not exactly six columns.  "
	fnames "columnWidth cw"
		fdesc "Arguments are : column number, column width. Sets the width of the specified column where the first parameter specifies the column (1 based index) and the second parameter specifies the width. "
	fnames "columnWidth1 cw1"
		fdesc "Sets the width of the first column.  Ignored if there is not  exactly one column. "
	fnames "columnWidth2 cw2"
		fdesc "Sets the column widths of both columns.  Ignored if there is not exactly two columns. "
	fnames "columnWidth3 cw3"
		fdesc "Sets the column widths for all 3 columns.  Ignored if there is not exactly 3 columns. "
	fnames "columnWidth4 cw4"
		fdesc "Sets the column widths for all 4 columns.  Ignored if there is not exactly 4 columns. "
	fnames "columnWidth5 cw5"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "columnWidth6 cw6"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dragCommand dc"
		fdesc "Command string executed when dragging the invisible slider in any of the fields. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "enable1 en1"
		fdesc "No Description"
	fnames "enable2 en2"
		fdesc "No Description"
	fnames "enable3 en3"
		fdesc "No Description"
	fnames "enable4 en4"
		fdesc "Enable state for the respective field. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "extraLabel el"
		fdesc "If present on creation this specifies that there will be an extra label in the group.  Sets the string to be label text to the right of fields. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "If present on creation this specifies that there will be a label to the left of the fields.  Sets the string to be the label text. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfFields nf"
		fdesc "Set the number of fields on creation. One to four fields are available.  The default is one field. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "precision pre"
		fdesc "Set the number of digits to the right of the decimal. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rowAttach rat"
		fdesc "Arguments are : attachment type, offset. Possible attachments are: top | bottom | both.  Specifies attachment types  and offsets for the entire row.   "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "value v"
		fdesc "Values for all fields. "
	fnames "value1 v1"
		fdesc "No Description"
	fnames "value2 v2"
		fdesc "No Description"
	fnames "value3 v3"
		fdesc "No Description"
	fnames "value4 v4"
		fdesc "Value for the respective field. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "floatScrollBar"
	desc "Create a scroll bar control that accepts only float values and is bound by a minimum and maximum value. The scroll bar displays a marker indicating the current value of the scroll bar relative to it's minimum and maximum values. Click and drag the marker or on the scroll bar itself to change the current value."
	fcount "27"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed when the value changes.  This command is not invoked when the value changes via the -v/value flag. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dragCommand dc"
		fdesc "Command executed when the value changes by dragging the scroll bar's value marker. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "horizontal hr"
		fdesc "Orientation of the slider.  This flag is true by default  which corresponds to a horizontally oriented slider. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "largeStep ls"
		fdesc "Larger increment for the scroll bar, ie. the increment used when the press is between the arrow button and the thumb.   "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "maxValue max"
		fdesc "Upper limit of the scroll bar. "
	fnames "minValue min"
		fdesc "Lower limit of the scroll bar. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "step s"
		fdesc "Smaller increment for the scroll bar, ie. the increment used when the arrow buttons are pressed. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "value v"
		fdesc "Value of the scroll bar. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "floatSlider"
	desc "Create a slider control that accepts only float values and is bound by a minimum and maximum value. The slider displays a marker indicating the current value of the slider relative to it's minimum and maximum values. Click and drag the marker or on the slider itself to change the current value."
	fcount "26"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed when the value changes.  This command is not invoked when the value changes via the -v/value flag. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dragCommand dc"
		fdesc "Command executed when the value changes by dragging the slider's value marker. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "horizontal hr"
		fdesc "Orientation of the slider.  This flag is true by default  which corresponds to a horizontally oriented slider. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "maxValue max"
		fdesc "Upper limit of the slider. "
	fnames "minValue min"
		fdesc "Lower limit of the slider. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "step s"
		fdesc "On Irix and Linux the step value represents the amount the value will increase or decrease when you click either side of the slider. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "value v"
		fdesc "Value of the slider. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "floatSliderButtonGrp"
	desc "This command creates a float slider component with optional button and symbol buttons. All of the group commands position their individual controls in columns starting at column 1. The layout of each control (ie. column) can be customized using the -cw/columnWidth , -co/columnOffset , -cat/columnAttach , -cal/columnAlign , and -adj/adjustableColumn flags. By default, columns are left aligned with no offset and are 100 pixels wide. Only one column in any group can be adjustable."
	fcount "69"
	fnames "adjustableColumn adj"
		fdesc "Specifies which column has an adjustable size that changes with the sizing of the layout.  The column value is a 1-based index.  You may also specify 0 to turn off the previous adjustable column. "
	fnames "adjustableColumn2 ad2"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly two columns.  "
	fnames "adjustableColumn3 ad3"
		fdesc "Specifies that the column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly three columns.  "
	fnames "adjustableColumn4 ad4"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly four columns.  "
	fnames "adjustableColumn5 ad5"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly five columns.  "
	fnames "adjustableColumn6 ad6"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly six columns.  "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "buttonCommand bc"
		fdesc "Command string to be executed when the button is pressed. "
	fnames "buttonLabel bl"
		fdesc "The button text. "
	fnames "changeCommand cc"
		fdesc "Command string executed when the value of the slider changes.  It will be executed only once after a drag of the slider. "
	fnames "columnAlign cal"
		fdesc "Arguments are : column number, alignment type. Possible alignments are: left | right | center.  Specifies alignment type for the specified column. "
	fnames "columnAlign2 cl2"
		fdesc "Sets the text alignment of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign3 cl3"
		fdesc "Sets the text alignment for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign4 cl4"
		fdesc "Sets the text alignment for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign5 cl5"
		fdesc "Sets the text alignment for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign6 cl6"
		fdesc "Sets the text alignment for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "center". "
	fnames "columnAttach cat"
		fdesc "Arguments are : column number, attachment type, and offset. Possible attachments are: left | right | both.  Specifies column attachment types and offets. "
	fnames "columnAttach2 ct2"
		fdesc "Sets the attachment type of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach3 ct3"
		fdesc "Sets the attachment type for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach4 ct4"
		fdesc "Sets the attachment type for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach5 ct5"
		fdesc "Sets the attachment type for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach6 ct6"
		fdesc "Sets the attachment type for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "both". "
	fnames "columnOffset2 co2"
		fdesc "This flag is used in conjunction with the -columnAttach2 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the two columns.  The offsets applied are based on the attachments  specified with the -columnAttach2 flag.  Ignored if there is not exactly two columns.  "
	fnames "columnOffset3 co3"
		fdesc "This flag is used in conjunction with the -columnAttach3 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the three columns.  The offsets applied are based on the attachments  specified with the -columnAttach3 flag.  Ignored if there is not exactly three columns.  "
	fnames "columnOffset4 co4"
		fdesc "This flag is used in conjunction with the -columnAttach4 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the four columns.  The offsets applied are based on the attachments  specified with the -columnAttach4 flag.  Ignored if there is not exactly four columns.  "
	fnames "columnOffset5 co5"
		fdesc "This flag is used in conjunction with the -columnAttach5 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the five columns.  The offsets applied are based on the attachments  specified with the -columnAttach5 flag.  Ignored if there is not exactly five columns.  "
	fnames "columnOffset6 co6"
		fdesc "This flag is used in conjunction with the -columnAttach6 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the six columns.  The offsets applied are based on the attachments  specified with the -columnAttach6 flag.  Ignored if there is not exactly six columns.  "
	fnames "columnWidth cw"
		fdesc "Arguments are : column number, column width. Sets the width of the specified column where the first parameter specifies the column (1 based index) and the second parameter specifies the width. "
	fnames "columnWidth1 cw1"
		fdesc "Sets the width of the first column.  Ignored if there is not  exactly one column. "
	fnames "columnWidth2 cw2"
		fdesc "Sets the column widths of both columns.  Ignored if there is not exactly two columns. "
	fnames "columnWidth3 cw3"
		fdesc "Sets the column widths for all 3 columns.  Ignored if there is not exactly 3 columns. "
	fnames "columnWidth4 cw4"
		fdesc "Sets the column widths for all 4 columns.  Ignored if there is not exactly 4 columns. "
	fnames "columnWidth5 cw5"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "columnWidth6 cw6"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dragCommand dc"
		fdesc "Command string executed repeatedly during a drag of the slider. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "extraLabel el"
		fdesc "If present on creation this specifies that there will be an extra label appearing after the slider.  Sets the string to be the text for the extra label. "
	fnames "field f"
		fdesc "Indicates whether the group will have an editable float field present that reflects the value of the slider. "
	fnames "fieldMaxValue fmx"
		fdesc "Maximum value that may be entered in the field.  This  value may be set to any value greater than  the  -max/maxValue  flag.  By default, it is equal to the  -max/maxValue  flag. "
	fnames "fieldMinValue fmn"
		fdesc "Minimum value that may be entered in the field.  This  value may be set to any value less than  the  -min/minValue  flag.  By default, it is equal to the  -min/minValue  flag. "
	fnames "fieldStep fs"
		fdesc "Increment for the field. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "image i"
		fdesc "Image displayed on the symbol button. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "If present on creation the group will have static text. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "maxValue max"
		fdesc "Maximum value for both the slider and the field. "
	fnames "minValue min"
		fdesc "Minimum value for both the slider and the field. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "precision pre"
		fdesc "Number of digits to the right of the decimal. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rowAttach rat"
		fdesc "Arguments are : attachment type, offset. Possible attachments are: top | bottom | both.  Specifies attachment types  and offsets for the entire row.   "
	fnames "sliderStep ss"
		fdesc "On Irix and Linux the slider step value represents the  amount the value will increase or decrease when you click either side of the slider. "
	fnames "step s"
		fdesc "Increment for both the slider and field. "
	fnames "symbolButtonCommand sbc"
		fdesc "Command string executed when the symbol button is pressed. "
	fnames "symbolButtonDisplay sbd"
		fdesc "Visibility of the symbol button. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "value v"
		fdesc "Value of the group. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "floatSliderGrp"
	desc "All of the group commands position their individual controls in columns starting at column 1. The layout of each control (ie. column) can be customized using the -cw/columnWidth , -co/columnOffset , -cat/columnAttach , -cal/columnAlign , and -adj/adjustableColumn flags. By default, columns are left aligned with no offset and are 100 pixels wide. Only one column in any group can be adjustable. This command creates a pre-packaged collection of controls containing a label text, an float field and a float slider. The text and field controls are optional. Editing or querying the field range values has no effect if the -f/field.... Refer to full documentation"
	fcount "64"
	fnames "adjustableColumn adj"
		fdesc "Specifies which column has an adjustable size that changes with the sizing of the layout.  The column value is a 1-based index.  You may also specify 0 to turn off the previous adjustable column. "
	fnames "adjustableColumn2 ad2"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly two columns.  "
	fnames "adjustableColumn3 ad3"
		fdesc "Specifies that the column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly three columns.  "
	fnames "adjustableColumn4 ad4"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly four columns.  "
	fnames "adjustableColumn5 ad5"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly five columns.  "
	fnames "adjustableColumn6 ad6"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly six columns.  "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command string executed when the value of the slider changes.  It will be executed only once after a drag of the slider. "
	fnames "columnAlign cal"
		fdesc "Arguments are : column number, alignment type. Possible alignments are: left | right | center.  Specifies alignment type for the specified column. "
	fnames "columnAlign2 cl2"
		fdesc "Sets the text alignment of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign3 cl3"
		fdesc "Sets the text alignment for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign4 cl4"
		fdesc "Sets the text alignment for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign5 cl5"
		fdesc "Sets the text alignment for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign6 cl6"
		fdesc "Sets the text alignment for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "center". "
	fnames "columnAttach cat"
		fdesc "Arguments are : column number, attachment type, and offset. Possible attachments are: left | right | both.  Specifies column attachment types and offets. "
	fnames "columnAttach2 ct2"
		fdesc "Sets the attachment type of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach3 ct3"
		fdesc "Sets the attachment type for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach4 ct4"
		fdesc "Sets the attachment type for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach5 ct5"
		fdesc "Sets the attachment type for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach6 ct6"
		fdesc "Sets the attachment type for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "both". "
	fnames "columnOffset2 co2"
		fdesc "This flag is used in conjunction with the -columnAttach2 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the two columns.  The offsets applied are based on the attachments  specified with the -columnAttach2 flag.  Ignored if there is not exactly two columns.  "
	fnames "columnOffset3 co3"
		fdesc "This flag is used in conjunction with the -columnAttach3 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the three columns.  The offsets applied are based on the attachments  specified with the -columnAttach3 flag.  Ignored if there is not exactly three columns.  "
	fnames "columnOffset4 co4"
		fdesc "This flag is used in conjunction with the -columnAttach4 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the four columns.  The offsets applied are based on the attachments  specified with the -columnAttach4 flag.  Ignored if there is not exactly four columns.  "
	fnames "columnOffset5 co5"
		fdesc "This flag is used in conjunction with the -columnAttach5 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the five columns.  The offsets applied are based on the attachments  specified with the -columnAttach5 flag.  Ignored if there is not exactly five columns.  "
	fnames "columnOffset6 co6"
		fdesc "This flag is used in conjunction with the -columnAttach6 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the six columns.  The offsets applied are based on the attachments  specified with the -columnAttach6 flag.  Ignored if there is not exactly six columns.  "
	fnames "columnWidth cw"
		fdesc "Arguments are : column number, column width. Sets the width of the specified column where the first parameter specifies the column (1 based index) and the second parameter specifies the width. "
	fnames "columnWidth1 cw1"
		fdesc "Sets the width of the first column.  Ignored if there is not  exactly one column. "
	fnames "columnWidth2 cw2"
		fdesc "Sets the column widths of both columns.  Ignored if there is not exactly two columns. "
	fnames "columnWidth3 cw3"
		fdesc "Sets the column widths for all 3 columns.  Ignored if there is not exactly 3 columns. "
	fnames "columnWidth4 cw4"
		fdesc "Sets the column widths for all 4 columns.  Ignored if there is not exactly 4 columns. "
	fnames "columnWidth5 cw5"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "columnWidth6 cw6"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dragCommand dc"
		fdesc "Command string executed repeatedly during a drag of the slider. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "extraLabel el"
		fdesc "If present on creation this specifies that there will be an extra label appearing after the slider.  Sets the string to be the text for the extra label. "
	fnames "field f"
		fdesc "Indicates whether the group will have an editable float field present that reflects the value of the slider. "
	fnames "fieldMaxValue fmx"
		fdesc "Maximum value that may be entered in the field.  This  value may be set to any value greater than  the  -max/maxValue  flag.  By default, it is equal to the  -max/maxValue  flag. "
	fnames "fieldMinValue fmn"
		fdesc "Minimum value that may be entered in the field.  This  value may be set to any value less than  the  -min/minValue  flag.  By default, it is equal to the  -min/minValue  flag. "
	fnames "fieldStep fs"
		fdesc "Increment for the field. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "If present on creation the group will have static text. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "maxValue max"
		fdesc "Maximum value for both the slider and the field. "
	fnames "minValue min"
		fdesc "Minimum value for both the slider and the field. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "precision pre"
		fdesc "Number of digits to the right of the decimal. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rowAttach rat"
		fdesc "Arguments are : attachment type, offset. Possible attachments are: top | bottom | both.  Specifies attachment types  and offsets for the entire row.   "
	fnames "sliderStep ss"
		fdesc "On Irix and Linux the slider step value represents the  amount the value will increase or decrease when you click either side of the slider. "
	fnames "step s"
		fdesc "Increment for both the slider and field. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "value v"
		fdesc "Value of the group. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "floor"
	desc "Returns the largest integer value that is not greater than the argument."
	fcount "0"
	rcount "0"
name "flow"
	desc "The flow command creates a deformation lattice to `bend' the object that is animated along a curve of a motion path animation. The motion path animation has to have the follow option set to be on."
	fcount "4"
	fnames "divisions dv"
		fdesc "This flag specifies the number of lattice slices in x,y,z. The default values are 2 5 2. When queried, it returns the  TuInt32 TuInt32 TuInt32 "
	fnames "localCompute lc"
		fdesc "This flag specifies whether or not to have local control over the object deformation. Default value: is on when the lattice is around the curve, and is off when the lattice is around the object.  When queried, it returns a  boolean "
	fnames "localDivisions ld"
		fdesc "This flag specifies the extent of the region of effect. Default values are 2 2 2. When queried, it returns the  TuInt32 TuInt32 TuInt32 "
	fnames "objectCentered oc"
		fdesc "This flag specifies whether to create the lattice around the selected object at its center, or to create the lattice around the curve. Default value is true. When queried, it returns a  boolean "
	rcount "0"
name "fluidCacheInfo"
	desc "FluidCacheInfo is undoable , queryable , and editable . A command to get information about the fluids cache. Get the startFrame and resolution for InitialConditions. Get the endFrame as well for a playback cache. Note that for the playback cache, it will look at the current time (or last frame if the current time is past end of cache)."
	fcount "9"
	fnames "initialConditions ic"
		fdesc "Specifies the cache to be queried is the "Initial Conditions" cache. "
	fnames "playback pb"
		fdesc "Specifies the cache to be queried is the "Playback" cache. "
	fnames "startFrame sf"
		fdesc "Returns start time for cache as float. "
	fnames "endFrame ef"
		fdesc "Returns end time of cache as float. "
	fnames "resolution re"
		fdesc "Returns cache resolution as float[]. "
	fnames "hasCache hc"
		fdesc "Returns true if fluid has specified cache, false if not. "
	fnames "attribute at"
		fdesc "Modifier to the "hasData" flag, used to query whether a cache has data (at the current time) for a specific fluid attribute.  Valid attribute values are "density", "velocity", "temperature", "fuel", "color", "coordinates" (for texture coordinates). "
	fnames "hasData hd"
		fdesc "Queries whether a given cache has data in it at the time specified by the -time flag.  (If not -time flag is present, -hasData assumes the current time.) When used with the "attribute" flag, indicates if data for the specified attribute exists in the cache.  When used without the "attribute" flag, "hasData" indicates whether there is data in the cache for any of the valid fluid attributes. "
	fnames "cacheTime t"
		fdesc "Only valid with the -hasData flag.  The time the -hasData flag uses when it queries the cache to see if there is data. "
	rcount "0"
name "fluidEmitter"
	desc "Creates an emitter object. If object names are provided or if objects are selected, applies the emitter to the named/selected object(s)in the scene. Fluid will then be emitted from each. If no objects are named or selected, or if the -pos option is specified, creates a positional emitter. If an emitter was created, the command returns the name of the object owning the emitter, and the name of emitter shape. If an emitter was queried, the command returns the results of the query."
	fcount "15"
	fnames "cycleEmission cye"
		fdesc "Possible values are "none" and "frame." Cycling emission restarts the random number stream after a specified interval.  This can either be a number of frames or a number of emitted particles.  In each case the number is specified by the cycleInterval attribute. Setting cycleEmission to "frame" and cycleInterval to 1 is equivalent to setting timeRandom on in Power Animator.  The random stream will then re-start every frame.  Setting cycleInterval to values greater than 1 can be used to generate cycles for games work. "
	fnames "cycleInterval cyi"
		fdesc "Specifies the number of frames or particles between restarts of the random number stream.  See cycleEmission.  Has no effect if cycleEmission is set to None. "
	fnames "densityEmissionRate der"
		fdesc "Rate at which density is emitted. "
	fnames "fluidDropoff fdr"
		fdesc "Fluid Emission Dropoff in volume "
	fnames "fuelEmissionRate fer"
		fdesc "Rate at which  is emitted. "
	fnames "heatEmissionRate her"
		fdesc "Rate at which density is emitted. "
	fnames "maxDistance mxd"
		fdesc "Maximum distance at which emission ends. "
	fnames "minDistance mnd"
		fdesc "Minimum distance at which emission starts. "
	fnames "position pos"
		fdesc "Positional emitter at world space location (x,y,z). "
	fnames "rate r"
		fdesc "Rate at which particles emitted (can be non-integer).  For point emission this is rate per point per unit time.  For surface emission it is rate per square unit of area per unit time. "
	fnames "torusSectionRadius tsr"
		fdesc "Section radius for a torus volume.  Applies only to torus. Similar to the section radius in the torus modelling primitive. "
	fnames "type typ"
		fdesc "Type of emitter. The choices are omni | dir | direction | surf |  surface | curve | curv. The default is omni. The full definition of these types are: omnidirectional point emitter, directional point emitter, surface emitter, or curve emitter. "
	fnames "volumeOffset vof"
		fdesc "Volume offset of the emitter.  Volume offset translates the emission volume by the specified amount from the actual emitter location.  This is in the emitter's local space. "
	fnames "volumeShape vsh"
		fdesc "Volume shape of the emitter.  Sets/edits/queries the field's volume shape attribute.  If set to any value other than "none", determines a 3-D volume within which  particles are generated. Values are: "cube," "sphere," "cylinder," "cone," "torus." "
	fnames "volumeSweep vsw"
		fdesc "Volume sweep of the emitter.  Applies only to sphere, cone, cylinder, and torus.  Similar effect to the sweep attribute in modelling. "
	rcount "0"
name "fluidVoxelInfo"
	desc "FluidVoxelInfo is NOT undoable , queryable , and NOT editable . Provides basic information about the mapping of a fluid voxel grid into world- or object space of the fluid. Use this command to determine the center point of a voxel, or to find the voxel containing a given point, among other things."
	fcount "9"
	fnames "objectSpace os"
		fdesc "Whether the queried value should be returned in object space (TRUE), or world space (FALSE, the default). "
	fnames "voxelCenter vc"
		fdesc "The center position of the specified voxels.  Returns an array of floats (three for each of the indices in the query).  (Valid only with the -xIndex, -yIndex, and -zIndex flags.) "
	fnames "voxel v"
		fdesc "Returns array of three ints representing the x, y, z indices of the voxel within which the given point position is contained. If the checkBounds flag is on, and the point is out of bounds, we return nothing. Otherwise, even if the point is out of bounds, index values are returned. When combined with the -radius flag, returns an array of index triples representing a list of voxels within a given radius of the given point position. "
	fnames "checkBounds cb"
		fdesc "If this flag is on, and the voxel index of a point that is out of bounds is requested, then we return nothing. "
	fnames "inBounds ib"
		fdesc "Are the three ints representing the x, y, z indices of a voxel within the bounds of the fluid's voxel grid?  True if yes, false if not.  (For 2D fluids, pass in z=0 for the third argument.  See examples.) "
	fnames "xIndex xi"
		fdesc "Only return values for cells with this X index "
	fnames "yIndex yi"
		fdesc "Only return values for cells with this Y index "
	fnames "zIndex zi"
		fdesc "Only return values for cells with this Z index "
	fnames "radius r"
		fdesc "Modifier for the -voxel flag.  Returns a list of index triples identifying voxels that fall within the given radius of the point specified by the -voxel flag. "
	rcount "0"
name "flushUndo"
	desc "Removes everything from the undo queue, freeing up memory."
	fcount "0"
	rcount "0"
name "fmod"
	desc "This command is implemented using the builtin system function. Returns the floating-point remainder of the division of it arguments x and y. The result is a number f with the same sign as x such that x = iy + f for some integer i and |f|."
	fcount "0"
	rcount "0"
name "fontDialog"
	desc "On Windows systems only, the command can be invoked with no flags; in this case it displays a font picking window, and returns the name of the font that the user picked. If the user picked no font, then an empty string is returned."
	fcount "1"
	fnames "FontList fl"
		fdesc "This option is available on all platforms.  No dialog is displayed; a list of all available font names is returned. "
	rcount "0"
name "fopen"
	desc "This command defaults to opening a file for writing and returns a file identifier. The optional mode string may be one of the following: "w" open file for writing (destroys prior contents of file). "a" append for writing (appends to end of file). "r" open for reading. A "+" optionally after the mode character opens for both reading and writing. If an error occurrs while attempting to open the file, fopen will return zero. For more information see the C implementation of the function fopen."
	fcount "0"
	rcount "0"
name "formLayout"
	desc "This command creates a form layout control. A form layout allows absolute and relative positioning of the controls that are its immediate children. Controls have four edges: top, left, bottom and right. There are only two directions that children can be positioned in, right-left and up-down. The attach flags take the direction of an attachment from the argument that names the edge to attach (the second argument). Any or all edges of a child may be attached. There are six ways to attach them: Attach to Form - Attaches an edge to the relevant side of the form layout. Thus.... Refer to full documentation"
	fcount "28"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "attachControl ac"
		fdesc "Arguments are: control, edge, offset, control Valid edge values are: "top" | "bottom" | "left" | "right". Attach a control to another control.  "
	fnames "attachForm af"
		fdesc "Arguments are: control, edge, offset. Valid edge values are: "top" | "bottom" | "left" | "right". Attach the specified control to the form, offset by the specified amount. "
	fnames "attachNone an"
		fdesc "Arguments are: control, edge Valid edge values are: "top" | "bottom" | "left" | "right". Attach a control to nothing.  "
	fnames "attachOppositeControl aoc"
		fdesc "Arguments are: control, edge, offset, control Valid edge values are: "top" | "bottom" | "left" | "right". Attach a control to the opposite side of another control.  "
	fnames "attachOppositeForm aof"
		fdesc "Arguments are: control, edge, offset. Valid edge values are: "top" | "bottom" | "left" | "right". Attach a control to the opposite side of the form.  "
	fnames "attachPosition ap"
		fdesc "Arguments are: control, edge, offset, position Valid edge values are: "top" | "bottom" | "left" | "right". Attach a control to a position in the form. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "childArray ca"
		fdesc "Returns a string array of the names of the layout's  immediate children. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfChildren nch"
		fdesc "Returns in an int the number of immediate children of the layout. "
	fnames "numberOfDivisions nd"
		fdesc "Specify the number of horizontal and vertical divisions across the form. Value must be greater than 0. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "fprint"
	desc "This command is functionally equivalent to the print function. The difference being the mandatory file identifier argument."
	fcount "0"
	rcount "0"
name "frameLayout"
	desc "This command creates frame layout control. A frame layout may draw a border around its child controls as well as a display a title. Frame layouts may also be collapsable. Collapsing a frame layout will make the child of the frame layout invisible and shrink the frame layout size. The frame layout may then be expanded to make its child visible. Note that the frame layout may have only one child control. If you wish to have more than one child inside a frame layout then you must use some other control layout as the immediate child of the frame.... Refer to full documentation"
	fcount "37"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "borderStyle bs"
		fdesc "Border style.  Valid values are "in", "out", "etchedIn", or "etchedOut".  "in" will make the frame appear sunk in. "out" will make the frame appear raised.  "etchedIn" will make the border itself appear sunk in.  Similary, "etchedOut" will make the border appear raised. "
	fnames "borderVisible bv"
		fdesc "Visibility of the border.  "
	fnames "childArray ca"
		fdesc "Returns a string array of the names of the layout's  immediate children. "
	fnames "collapsable cll"
		fdesc "Collapasability of the frame layout. "
	fnames "collapse cl"
		fdesc "Collapse state of the frame layout.  "
	fnames "collapseCommand cc"
		fdesc "Command executed after the frame is collapsed.  "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "expandCommand ec"
		fdesc "Command executed after the frame is expanded. "
	fnames "font fn"
		fdesc "The font for the frame label.  Valid values are "boldLabelFont", "smallBoldLabelFont", "tinyBoldLabelFont", "plainLabelFont", "smallPlainLabelFont", "obliqueLabelFont", "smallObliqueLabelFont", "fixedWidthFont" and "smallFixedWidthFont". "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "Label string for the frame layout. "
	fnames "labelAlign la"
		fdesc "Aligment of the frame label.  Valid values are "top", "center", or "bottom". "
	fnames "labelIndent li"
		fdesc "Indentation for the frame label. "
	fnames "labelVisible lv"
		fdesc "Visibility of the frame label.  "
	fnames "labelWidth lw"
		fdesc "Width of the frame label. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "marginHeight mh"
		fdesc "Vertical distance between the frame and its children. "
	fnames "marginWidth mw"
		fdesc "Horizontal distance between the frame and its children. "
	fnames "numberOfChildren nch"
		fdesc "Returns in an int the number of immediate children of the layout. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "preCollapseCommand pcc"
		fdesc "Command executed just before the frame is collapsed.  "
	fnames "preExpandCommand pec"
		fdesc "Command executed just before the frame is expanded.  "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "fread"
	desc "Reads the next set of bytes as binary data interpreting their type by the dummy argument. An integer dummy argument, for instance, tells fread that it should read and return an integer value. Strings are read up to the first occurrence of a NULL character or until EOF. There is a read limit of 1024 bytes on strings. If a string being read is longer than 1024 bytes, then only the first 1024 bytes will be returned. The type returned by the fread command corresponds to the type of the second argument."
	fcount "0"
	rcount "0"
name "freeFormFillet"
	desc "This cmd creates a free form surface fillet across two surface trim edges or isoparms or curve on surface. The fillet surface creation has blend controls in the form of bias and depth. The bias value scales the tangents at the two ends across the two selected curves. The depth values controls the curvature of the fillet across the two selected curves. The default values of depth, bias are 0.5 and 0.5 respectively."
	fcount "12"
	fnames "bias b"
		fdesc "Bias value for fillet Default:  0.5 "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "depth d"
		fdesc "Depth value for fillet Default:  0.5 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "positionTolerance pt"
		fdesc "C(0) Tolerance For Filleted Surface creation Default:  0.1 "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "tangentTolerance tt"
		fdesc "G(1) continuity Tolerance For Filleted Surface creation Default:  0.1 "
	rcount "1"
		rname "circularFillet"
name "frewind"
	desc "Rewind the file to the first byte."
	fcount "0"
	rcount "0"
name "fromNativePath"
	desc "Convert from '/' to '\' path formats on NT, otherwise does nothing. This proceedure can be used to try to unify path data to use the forward slash character (a safer and more cross-platform way of handling paths, since the forward slash is what Maya uses internally to separate path names)."
	fcount "0"
	rcount "0"
name "fwrite"
	desc "The fwrite command writes the data argument in binary format to a file. Strings are written as ascii terminating with a NULL character. Note that this should not be used for writing to a text file. If you wish to write out a text file, use fprint instead as it does not terminate the written string with a null character. Only use this for binary files."
	fcount "0"
	rcount "0"
name "gamma"
	desc "This command is implemented using the builtin system function. Let x be the floating point intput argument, then gamma returns ln|(GAMMA(x))|, where GAMMA is the mathematical gamma function."
	fcount "0"
	rcount "0"
name "gauss"
	desc "This command returns random numbers with one, two or three dimensional correlation in a Gaussian distribution. The float arguments to the command scale the output. The distribution is normalized. Multiple random number streams: The three stream-based variants of gauss accept a string parameter which specifies the name of the random number stream to use when generating random numbers. The behaviour of the function is identical to the non-stream versions with the exception that random number generation is performed from the specified rather than the default random number stream. For more details on multiple random number streams please see the documentation.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "geometryConstraint"
	desc "Constrain an object's position based on the shape of the target surface(s) at the closest point(s) to the object. A geometryConstraint takes as input one or more surface shapes (the targets) and a DAG transform node (the object). The geometryConstraint position constrained object such object lies on the surface of the target with the greatest weight value. If two targets have the same weight value then the one with the lowest index is chosen."
	fcount "0"
	rcount "0"
name "getApplicationVersionAsFloat"
	desc "Return the application version number as a float value. If you use the "about -version" command you get a string value containing the application version. Strings of course may not be used in comparisons like: if ($version > 3.5) { ... }; This procedure will return a float value containing the major and minor version number. The major version will be separated from the minor version by a decimal. For example, 4.0.3 will return a float value of 4.03."
	fcount "0"
	rcount "0"
name "getAttr"
	desc "This command returns the value of the named object's attribute. UI units are used where applicable. Currently, the types of attributes that can be displayed are: numeric attributes string attributes matrix attributes numeric compound attributes (whose children are all numeric) vector array attributes double array attributes int32 array attributes Other data types cannot be retrieved. No result is returned if the attribute contains no data."
	fcount "9"
	fnames "asString as"
		fdesc "This flag is only valid for enum attributes. It allows you to get the attribute values as strings instead of integer values. "
	fnames "expandEnvironmentVariables x"
		fdesc "Expand any environment variable and (tilde characters on UNIX) found in string attributes which are returned. "
	fnames "keyable k"
		fdesc "Returns the keyable state of the attribute. "
	fnames "lock l"
		fdesc "Returns the lock state of the attribute. "
	fnames "settable se"
		fdesc "Returns 1 if this attribute is currently settable by setAttr, 0 otherwise. An attribute is settable if it's not locked and either not connected, or has only keyframed animation. "
	fnames "silent sl"
		fdesc "When evaluating an attribute that is not a numeric or string value, suppress the error message saying that the data cannot be displayed. The attribute will be evaluated even though its data cannot be displayed. This flag does not suppress all error messages, only those that are benign. "
	fnames "size s"
		fdesc "Returns the size of a multi-attribute array.  Returns 1 if non-multi. "
	fnames "time t"
		fdesc "Evaluate the attribute at the given time instead of the current time. "
	fnames "type typ"
		fdesc "Returns the type of data to expect at the attribute. "
	rcount "5"
		rname "addAttr"
		rname "setAttr"
		rname "connectAttr"
		rname "disconnectAttr"
		rname "listAttr"
name "getClassification"
	desc "No Description."
	fcount "0"
	rcount "0"
name "getDefaultBrush"
	desc "The command returns the name of the default Maya Genesis brush."
	fcount "0"
	rcount "0"
name "getFileList"
	desc "No Description."
	fcount "2"
	fnames "filespec fs"
		fdesc "wildcard specifier for search. "
	fnames "folder fld"
		fdesc "return a directory listing "
	rcount "2"
		rname "sysFile"
		rname "filetest"
name "getFluidAttr"
	desc "GetFluidAttr is NOT undoable , NOT queryable , and NOT editable . Returns values of built-in fluid attributes such as density, velocity, etc., for individual grid cells or for all cells in the grid."
	fcount "8"
	fnames "attribute at"
		fdesc "Specifies the fluid attribute for which to display values.  Valid attributes are "force", "velocity", "density", "fuel", "color", and "temperature".  (Note that getting force values is an alternate way of getting velocity values at one time step.) "
	fnames "xvalue x"
		fdesc "Only get the first component of the vector-valued attribute specified by the "-at/attribute" flag. "
	fnames "yvalue y"
		fdesc "Only get the second component of the vector-valued attribute specified by the "-at/attribute" flag. "
	fnames "zvalue z"
		fdesc "Only get the third component of the vector-valued attribute specified by the "-at/attribute" flag. "
	fnames "xIndex xi"
		fdesc "Only return values for cells with this X index "
	fnames "yIndex yi"
		fdesc "Only return values for cells with this Y index "
	fnames "zIndex zi"
		fdesc "Only return values for cells with this Z index "
	fnames "lowerFace lf"
		fdesc "Only valid with "-at velocity".  Since velocity values are stored on the edges of each voxel and not at the center, using voxel based indices to set velocity necessarily affects neighboring voxels.  Use this flag to only set velocity components on the lower left three faces of a voxel, rather than all six. "
	rcount "0"
name "getInputDeviceRange"
	desc "This command lists the minimum and maximum values the device axis can return. This value is the raw device values before any mapping is applied. If you don't specify an axis the values for all axes of the device are returned."
	fcount "2"
	fnames "maxValue max"
		fdesc "list only the maximum value of the axis "
	fnames "minValue min"
		fdesc "list only the minimum value of the axis "
	rcount "13"
		rname "assignInputDevice"
		rname "getModifiers"
		rname "recordAttr"
		rname "attachDeviceAttr"
		rname "listDeviceAttachments"
		rname "setAttrMapping"
		rname "detachDeviceAttr"
		rname "listInputDeviceAxes"
		rname "setInputDeviceMapping"
		rname "devicePanel"
		rname "listInputDeviceButtons"
		rname "unassignInputDevice"
		rname "listInputDevices"
name "getMayaPanelTypes"
	desc "This proc returns available panel types for Maya. It will filter any unwanted types from all of the available types."
	fcount "0"
	rcount "0"
name "getModifiers"
	desc "This command returns the current state of the modifier keys. The state of each modifier can be obtained by testing for the modifier's corresponding bit value in the return value. Shift is bit 1, Caps Lock is bit 2, Ctrl is bit 3, and Alt is bit 4. See the provided example for more details on testing for each modifier's bit value."
	fcount "0"
	rcount "0"
name "getPanel"
	desc "This command returns panel and panel configuration information."
	fcount "14"
	fnames "allConfigs ac"
		fdesc "Return the names of the all panel configuration in a string array. "
	fnames "allPanels all"
		fdesc "Return the names of all the panels in a string array. "
	fnames "allScriptedTypes ast"
		fdesc "Return the names of all types of scripted panels in a string array. "
	fnames "allTypes at"
		fdesc "Return the names of all types of panels, except scripted types in a string array. "
	fnames "configWithLabel cwl"
		fdesc "Return the name of the panel configuration with the specified label text. "
	fnames "containing c"
		fdesc "Return the name of the panel containing the specified control. An empty string is returned if the specified control is not in any panel. "
	fnames "invisiblePanels inv"
		fdesc "Return the names of all the invisible panels in a string array. "
	fnames "scriptType sty"
		fdesc "Return the names of all scripted panels of the specified type in a string array. "
	fnames "type typ"
		fdesc "Return the names of all panels of the specified type in a string array. "
	fnames "typeOf to"
		fdesc "Return the type of the specified panel. "
	fnames "underPointer up"
		fdesc "Return the name of the panel that the pointer is currently over. An empty string is returned if the pointer is not over any panel. "
	fnames "visiblePanels vis"
		fdesc "Return the names of all the visible panels in a string array. "
	fnames "withFocus wf"
		fdesc "Return the name of the panel that currently has focus.  If no panel has focus then the last panel that had focus is returned. "
	fnames "withLabel wl"
		fdesc "Return the name of the panel with the specified label text. "
	rcount "0"
name "getParticleAttr"
	desc "This action will return either an array of values, or the average value and maximum offset, for a specied per-particle attribute of a particle object or component. If a particle component is specified on the command line, values are returned for that component only. If an object name is given instead, values are returned for all particles in that object. If no object name is passed, but a particle object or component is selected, values are returned for the selection. If you list components, they must all be from the same particle object; the action ignores all objects after the.... Refer to full documentation"
	fcount "3"
	fnames "array a"
		fdesc "Tells the action whether you want a full array of data. If set true, the action returns an array of floats containing the values for all the specified particles.  If set false (the default), the action  returns the average value and the maximum offset from the average over the component.  If the attribute is a vector attribute, the action returns six values: Average X, Average Y, Average Z, Maximum offset in X, Y, and Z of component. "
	fnames "attribute at"
		fdesc "Tells the action which attribute you want the value of. Must be a per-particle attribute. "
	fnames "object o"
		fdesc "This flag is obsolete.  Instead of using it, please pass the name of the object and/or components you want on the command line. See the examples. "
	rcount "2"
		rname "particle"
		rname "setParticleAttr"
name "getenv"
	desc "The argument is the name of an environment variable. This command returns the value of that environment variable. If it doesn't exist, an empty string is returned."
	fcount "0"
	rcount "0"
name "getpid"
	desc "The process identifier of the process which is running Maya is returned as an integer value."
	fcount "0"
	rcount "0"
name "glRender"
	desc "This command provides access to the Hardware Render Manager (HRM). There is one-and-only-one HRM in maya. The HRM controls the rendering performed in the hardware render buffer window. This command allows shell scripts, to modify the render state, and to initiate a render request."
	fcount "33"
	fnames "accumBufferPasses abp"
		fdesc "Set the number of accum buffer render passes. "
	fnames "alphaSource as"
		fdesc "Control the alpha source when writing image files. Valid values include: off, alpha, red, green, blue, luminance, clamp, invClamp. "
	fnames "antiAliasMethod aam"
		fdesc "Set the method used for anti-aliasing polygons: off,  uniform, gaussian. "
	fnames "cameraIcons ci"
		fdesc "Set display status of camera icons. "
	fnames "clearClr cc"
		fdesc "Set the viewport clear color (0 - 1). "
	fnames "collisionIcons coi"
		fdesc "Set display status of collison model icons. "
	fnames "crossingEffect ce"
		fdesc "Enable/disable image filtering with a convolution filter. "
	fnames "currentFrame cf"
		fdesc "Returns the current frame being rendered. "
	fnames "drawStyle ds"
		fdesc "Set the object drawing style: boundingBox, points, wireframe,  flatShaded, smoothShaded. "
	fnames "edgeSmoothness es"
		fdesc "Controls the amount of edge smoothing. A value of 0.0 gives no smoothing, 1.0 gives default smoothing, and any other value scales the amount of default smoothing. Must enable the accumulation buffer. "
	fnames "emitterIcons ei"
		fdesc "Set display status of emitter icons. "
	fnames "fieldIcons fii"
		fdesc "Set display status of field icons. "
	fnames "flipbookCallback fc"
		fdesc "Register a procedure to be called after the render sequence has completed. Used to build the flipbook pulldown menu. See the example section for more details about how to build this procedure. "
	fnames "frameEnd fe"
		fdesc "Set the last frame to be rendered. "
	fnames "frameIncrement fi"
		fdesc "Set the frame increment during rendering. "
	fnames "frameStart fs"
		fdesc "Set the first frame to be rendered. "
	fnames "fullResolution fr"
		fdesc "Enable/disable rendering to full image output resolution. Must set a valid image output resolution (-is). "
	fnames "grid gr"
		fdesc "Set display status of the grid. "
	fnames "imageDirectory id"
		fdesc "Set the directory for the image files. "
	fnames "imageName in"
		fdesc "Set the base name of the image files. "
	fnames "imageSize is"
		fdesc "Set the image output size. Takes width, height and aspect ratio. Pass 0,0,0 to use current port size. The image size must be equal to  or greater then the viewport size. Large images will be tiled if full resolution rendering has been enabled (-fr/fullResolution). "
	fnames "lightIcons li"
		fdesc "Set display status of light icons. "
	fnames "lightingMode lm"
		fdesc "Set the lighting mode used for rendering: all, selected, default. "
	fnames "lineSmoothing ls"
		fdesc "Enable/disable anti-aliased lines. "
	fnames "renderFrame rf"
		fdesc "Render the current frame. Requires the name of the view in  which to render. "
	fnames "renderSequence rs"
		fdesc "Render the current frame sequence. Requires the name of the  view in which to render. "
	fnames "sharpness sh"
		fdesc "Control the sharpness level of the convolution filter. "
	fnames "shutterAngle sa"
		fdesc "Set the shutter angle used for motion blur (0 - 1). A value  of 0.0 gives no blurring, 0.5 gives correct blurring, and 1.0  gives continuous blurring. Must enable the accumulation buffer. "
	fnames "textureDisplay txd"
		fdesc "Enable/disable texture map display. "
	fnames "transformIcons ti"
		fdesc "Set display status of transform icons. "
	fnames "useAccumBuffer uab"
		fdesc "Enable/disable the accumulation buffer. "
	fnames "viewport vp"
		fdesc "Set the viewport size. Pass in the width, height and aspect ratio. This size will be used for all test rendering and image output size unless full resolution (-fr) has been set and a valid image output size (-is) has been set. "
	fnames "writeDepthMap wdm"
		fdesc "Enable/disable writing of zdepth to image files. "
	rcount "0"
name "glRenderEditor"
	desc "Create a glRender view. This is a special view used for hardware rendering. This command is used to create and reparent the view as needed to support panels. See the glRender command for controlling the specific behavior of the hardware rendering."
	fcount "23"
	fnames "control ctl"
		fdesc "Query only. Returns the top level control for this editor. Usually used for getting a parent to attach popup menus. CAUTION: editors may not have controls at times.  This flag can return "NONE" if no control is present. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dtg"
		fdesc "Attaches a tag to the maya editor. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "filter f"
		fdesc "Specifies the name of a filter to be placed on this editor. This filters the information coming onto the main list of the editor. "
	fnames "forceMainConnection fmc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. This is a variant of the -mainListConnection flag in that it will force a change even when the connection is locked. This flag is used to reduce the overhead when using the -unlockMainConnection , -mainListConnection, -lockMainConnection flags in immediate  succession. "
	fnames "glRenderViewName rvn"
		fdesc "Returns the name of the gl render view. (Query only). "
	fnames "highlightConnection hlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its highlight list.  Not all editors have a highlight list.  For those who do, it is sort of a secondary selection list. "
	fnames "lockMainConnection lck"
		fdesc "Locks the current list of objects within the mainConnection, so that only those objects are displayed within the editor. Further changes to the original mainConnection are ignored. "
	fnames "lookThru lt"
		fdesc "Specify which camera the glRender view should be using. "
	fnames "mainListConnection mlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. "
	fnames "modelViewName mvn"
		fdesc "Returns the name of the model view. (Query only). "
	fnames "panel pnl"
		fdesc "Specifies the panel that the editor belongs to.  By default if an editor is created in the create callback of a scripted panel it will belong to that panel.  If an editor doesn't belong to a panel it will be deleted when the window that it is in is deleted. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this editor. This flag will only have an effect if the editor is currently un-parented. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "selectionConnection slc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its own selection list.  As the user selects things in this editor, they will be selected in the selectionConnection object.  If someone else changes the object, the editor will update to show the change. "
	fnames "stateString sts"
		fdesc "Query only flag.  Returns the MEL command that will edit an editor to match the current editor state. The returned command string uses the string variable $editorName in place of a specific name. "
	fnames "unParent up"
		fdesc "Specifies that the editor should be removed from its layout. This cannot be used with query. "
	fnames "unlockMainConnection ulk"
		fdesc "Unlocks the mainConnection, effectively restoring the original mainConnection (if it is still available), and dynamic updates. "
	fnames "updateMainConnection upd"
		fdesc "Causes a locked mainConnection to be updated from the orginal mainConnection, but preserves the lock state. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "viewCameraName vcn"
		fdesc "Returns the name of the current camera used by the glRenderPanel. This is a query only flag. "
	rcount "0"
name "globalStitch"
	desc "This command computes a globalStitch of NURBS surfaces. There should be at least one NURBS surface. The NURBS surface(s) should be untrimmed."
	fcount "10"
	fnames "lockSurface lk"
		fdesc "Keep the NURBS surface at the specified multi index unchanged by the fitting. Default:  false "
	fnames "maxSeparation ms"
		fdesc "Maximum separation that will still be stitched Default:  0.1 "
	fnames "modificationResistance mr"
		fdesc "Modification resistance weight for surface CVs Default:  1e-1 "
	fnames "sampling sam"
		fdesc "Sampling when stitching edges Default:  1 "
	fnames "shouldBeLast sbl"
		fdesc "Deformers will let it be last Default:  true "
	fnames "stitchCorners sc"
		fdesc "Stitch corners of surfaces 0 - off 1 - closest point 2 - closest knot Default:  1 "
	fnames "stitchEdges se"
		fdesc "Stitch edges of surfaces 0 - off 1 - closest point 2 - matching params Default:  1 "
	fnames "stitchPartialEdges spe"
		fdesc "Toggle on(off) partial edge stitching Default:  false "
	fnames "stitchSmoothness ss"
		fdesc "Set type of smoothness of edge join 0 - off 1 - tangent 2 - normal Default:  0 "
	fnames "updateSampling us"
		fdesc "Forces sampling to update "
	rcount "0"
name "gmatch"
	desc "Returns a non-zero result if the pattern specified by the second argument matches the search string in the first argument. gmatch provides shell-style pattern matching, also known as "glob" matching. There are three ways to specify wild cards in this type of matching and they are as follows: * matches any string ? matches any single character [...] Matches any one of the enclosed characters. A pair of characters separated by - matches any character lexically between the pair, inclusive. If the first character following the opening "[ " is a "!" any character not enclosed is matched. A -.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "goal"
	desc "Specifies the given objects as being goals for the given particle object. If the goal objects are geometry, each particle in the particle object will each try to follow or match its position to that of a certain vertex/CV/lattice point of the goal. If the goal object is another particle object, each particle will try to follow a paricle of the goal. In any other case, all the particles will try to follow the current location of the goal object's transform. You can get this latter behavior for a geometry or particle object too by using -utr true. The goal.... Refer to full documentation"
	fcount "4"
	fnames "goal g"
		fdesc "This flag specifies string to be a goal of the particle object on the command line or the currently selected particle object.  This flag can be used multiple times to specify multiple goals for a particle object.  Query is for use by the attribute editor. "
	fnames "index i"
		fdesc "(Q only) Returns array of multi-attribute indices for the goals. Intended for use by the Attribute Editor.  "
	fnames "useTransformAsGoal utr"
		fdesc "Use transform of specified object instead of the shape. Meaningful only for particle and geometry objects.  Can only be passed once, applies to all objects passed with -g. "
	fnames "weight w"
		fdesc "This specifies the goal weight as a value from 0 to 1.  A value of 0 means that the goal's position will have no effect on the particle object, while a weight of 1 will make the particle object try to follow the goal object exactly.  This flag can only be passed once and sets the weight for every goal passed with the -g/-goal flag. "
	rcount "1"
		rname "particle"
name "gotoBindPose"
	desc "This script moves all selected skeletons to the bindPose."
	fcount "0"
	rcount "0"
name "grabColor"
	desc "This command changes the cursor and enters a modal state which will be exited by pressing a mouse button. The color component values of the pixel below the cursor at the time of the button press are returned."
	fcount "2"
	fnames "hsvValue hsv"
		fdesc "The 3 returned float values will specify the hue, saturation and value color components.   "
	fnames "rgbValue rgb"
		fdesc "The 3 returned float values will specify the red, green and blue color components.   "
	rcount "0"
name "gradientControl"
	desc "This command creates a control that displays the gradient attribute specified. The gradient attribute must be of the correct form and naming. It should be a multi attribute with each entry a compound composed of: Either a color compound or a float value (the control will automatically detect which and display a ramp or graph accordingly). A single float attribute for position. An enum for the interpolation types. Currently the routines to get the value of a ramp structure (with interpolation) are not available through MEL, which limits the use of this control by end users. The MEL command AEaddRampControl.... Refer to full documentation"
	fcount "24"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "attribute at"
		fdesc "Specifies the name of the gradient attribute to control. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfControls nc"
		fdesc "Returns the number of controls in the ramp widget "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "selectedColorControl scc"
		fdesc "Specifies the name of a color control to edit the selected color.  "
	fnames "selectedInterpControl sic"
		fdesc "Specifies the name of an enum control to edit the selected interpolation.  "
	fnames "selectedPositionControl spc"
		fdesc "Specifies the name of a float slider to edit the selected position.  "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "gradientControlNoAttr"
	desc "This command creates a control for editing a ramp (2D control curve). The control attaches to an optionVar used to store and retrieve the encoded gradient control points stored in a string."
	fcount "1"
	fnames "optionVar ov"
		fdesc "Specifies the name of the option var used to store and retrieve the string value capturing the curve "
	rcount "0"
name "graphDollyCtx"
	desc "This command can be used to create a dolly context for the graph editor."
	fcount "8"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "graphSelectContext"
	desc "This command can be used to create a selection context for the hypergraph editor."
	fcount "8"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "graphTrackCtx"
	desc "This command can be used to create a track context for the graph editor."
	fcount "8"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "gravity"
	desc "A gravity field simulates the Earth's gravitational force. It pulls objects in a fixed direction (generally downward) entirely independent of their position or mass. The transform is the associated dependency node. Use connectDynamic to cause the field to affect a dynamic object. If fields are created, this command returns the names of each of the fields. If a field was queried, the results of the query are returned. If a field was edited, the field name is returned. If object names are provided or the active selection list is non-empty, the command creates a field for every object in the.... Refer to full documentation"
	fcount "9"
	fnames "attenuation att"
		fdesc "Attentuation rate of field  "
	fnames "directionX dx"
		fdesc "X-component of direction. "
	fnames "directionY dy"
		fdesc "Y-component of direction. "
	fnames "directionZ dz"
		fdesc "Z-component of direction  "
	fnames "magnitude m"
		fdesc "Strength of field.  "
	fnames "maxDistance mxd"
		fdesc "Maximum distance at which field is exerted.  -1 indicates that the field has no maximum distance.  "
	fnames "name n"
		fdesc "name of field  "
	fnames "perVertex pv"
		fdesc "Per-vertex application. If this flag is set true, then each  individual point (CV, particle, vertex,etc.) of the chosen object  exerts an identical copy of the force field. If this flag is set to  false, then the force is exerted only from the geometric center of the set of points.  "
	fnames "position pos"
		fdesc "Position in space where you want to place a field. The gravity then emanates from this position in space rather  than from an object. Note that you can both use -pos  (creating a field at a position) and also provide object names.  "
	rcount "3"
		rname "particle"
		rname "connectDynamic"
		rname "addDynamic"
name "grid"
	desc "This command changes the size and spacing of lines on the ground plane displayed in the perspective and orthographic views. This command lets you reset the ground plane, change its size and grid line spacing, grid subdivisions and display options."
	fcount "15"
	fnames "default df"
		fdesc "Used to specify/query default values. "
	fnames "displayAxes da"
		fdesc "Specify true to display the grid axes. "
	fnames "displayAxesBold dab"
		fdesc "Specify true to accent the grid axes by drawing them with a thicker line. "
	fnames "displayDivisionLines ddl"
		fdesc "Specify true to display the subdivision lines between grid lines. "
	fnames "displayGridLines dgl"
		fdesc "Specify true to display the grid lines. "
	fnames "displayOrthographicLabels dol"
		fdesc "Specify true to display the grid line numeric labels in the orthographic views. "
	fnames "displayPerspectiveLabels dpl"
		fdesc "Specify true to display the grid line numeric labels in the perspective view. "
	fnames "divisions d"
		fdesc "Sets the number of subdivisions between major grid lines. The default is 5. If the spacing is 5 units, setting divisions to 5 will cause division lines to appear 1 unit apart. "
	fnames "orthographicLabelPosition olp"
		fdesc "The position of the grid's numeric labels in orthographic views. Valid values are	"axis" and "edge". "
	fnames "perspectiveLabelPosition plp"
		fdesc "The position of the grid's numeric labels in perspective views. Valid values are	"axis" and "edge". "
	fnames "reset r"
		fdesc "Resets the ground plane to its default values "
	fnames "size s"
		fdesc "Sets the size of the grid in linear units.  The default is 12 units. "
	fnames "spacing sp"
		fdesc "Sets the spacing between major grid lines in linear units. The default is 5 units. "
	fnames "style st"
		fdesc "This flag is obsolete and should not be used. "
	fnames "toggle tgl"
		fdesc "Turns the ground plane display off in all windows, including orthographic windows.  Default is true. "
	rcount "0"
name "gridLayout"
	desc "This layout arranges children in a grid fashion where every cell in the grid is the same size. You may specify the number of rows and columns as well as the width and height of the grid cells."
	fcount "32"
	fnames "allowEmptyCells aec"
		fdesc "Specify false if you want free positioning of the children in the layout and potentially leaving empty cells between children. Set to true if you want the children to always be packed together. This flag must be specifed when the grid layout is created.  The default is true. "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "autoGrow ag"
		fdesc "Specify true if you want the grid layout size to grow as children are added.  For example, if the grid layout has 2 columns and 2 rows then adding a fifth child will cause the grid to expand to 3 rows if this flag is true, otherwise the grid will remain the same size and the new child will be hidden from view until you expand the size of the grid using the appropriate flags.  The default is true. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "cellHeight ch"
		fdesc "A positive non-zero integer value indicating the height of cells in the grid layout. "
	fnames "cellWidth cw"
		fdesc "A positive non-zero integer value indicating the width of cells in the grid layout. "
	fnames "cellWidthHeight cwh"
		fdesc "Two positive non-zero integer values for indicating the width and height, respectively, of the cells in the grid layout. "
	fnames "childArray ca"
		fdesc "Returns a string array of the names of the layout's  immediate children. "
	fnames "columnsResizable cr"
		fdesc "Specify true if you want the number of columns to adjust according to the width of the layout.  Set to false if you want the number of columns to remain fixed when the width of the layout is changed.  The default is false. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "gridOrder go"
		fdesc "As opposed to the childArray flag, the gridOrder flag returns the children of the grid Layout in the order they are diplayed in the window. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfChildren nch"
		fdesc "Returns in an int the number of immediate children of the layout. "
	fnames "numberOfColumns nc"
		fdesc "A positive non-zero integer value indicating the number of columns in the grid layout. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "numberOfRows nr"
		fdesc "A positive non-zero integer value indicating the number of rows in the grid layout. "
	fnames "numberOfRowsColumns nrc"
		fdesc "Two positive non-zero integer values for the number of rows and columns, respectively, in the grid layout. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "position pos"
		fdesc "Specify the name of a child control in the grid layout along with a 1-based integer value indicating the desired position of the child.  Positions increase from left to right within a row and then wrap around to the next row increasing from top to bottom.  For example, a grid layout with 3 columns and 2 rows has 6 visible positions where 1, 2 and 3 occupy the first row and 4, 5 and 6 occupy the second. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "group"
	desc "This command groups the specified objects under a new group and returns the name of the new group. If the -em flag is specified, then an empty group (with no objects) is created. If the -w flag is specified then the new group is placed under the world, otherwise if -p is specified it is placed under the specified node. If neither -w or -p is specified the new group is placed under the lowest common group they have in common. (or the world if no such group exists) If an object is grouped with another object that has the.... Refer to full documentation"
	fcount "6"
	fnames "absolute a"
		fdesc "preserve existing world object transformations (overall object transformation is preserved by modifying the objects local transformation) [default] "
	fnames "empty em"
		fdesc "create an empty group (with no objects in it) "
	fnames "name n"
		fdesc "Assign given name to new group node. "
	fnames "parent p"
		fdesc "put the new group under the given parent "
	fnames "relative r"
		fdesc "preserve existing local object transformations (relative to the new group node) "
	fnames "world w"
		fdesc "put the new group under the world "
	rcount "4"
		rname "ungroup"
		rname "parent"
		rname "instance"
		rname "duplicate"
name "groupObjectsByName"
	desc "Given a list of strings, this procedure groups the strings into lists with the same object."
	fcount "0"
	rcount "0"
name "hardenPointCurve"
	desc "The hardenPointCurve command changes the knots of a curve given a list of control point indices so that the knot corresponding to that control point gets the specified multiplicity. Multiplicity of -1 is the universal value used for multiplicity equal to the degree of the curve. The CV whose multiplicity is being raised needs to have its neighbouring CVs of multiplicity 1. How many neighbours depends on the degree of the curve and the difference in CV multiplicities before and after this operation. For example, if you're changing a CV of multiplicity 1 into a CV of multiplicity 3, you.... Refer to full documentation"
	fcount "10"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "index i"
		fdesc "index of the control vertex "
	fnames "multiplicity m"
		fdesc "the required multiplicity of the curve knot Default:  -1 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	rcount "0"
name "hardware"
	desc "Return description of the hardware available in the machine."
	fcount "5"
	fnames "brdType brd"
		fdesc "Returns IP number identifying the CPU motherboard "
	fnames "cpuType cpu"
		fdesc "Returns type of CPU "
	fnames "graphicsType gfx"
		fdesc "Returns string identifying graphics hardware type "
	fnames "megaHertz mhz"
		fdesc "Returns string identifying the speed of the CPU chip "
	fnames "numProcessors npr"
		fdesc "Returns string identifying the number of processors "
	rcount "0"
name "hardwareRenderPanel"
	desc "This command creates, edit and queries hardware render panels which contain only a hardware render editor."
	fcount "21"
	fnames "camera cam"
		fdesc "Query or edit the camera in a gl render panel. "
	fnames "control ctl"
		fdesc "Returns the top level control for this panel. Usually used for getting a parent to attach popup menus. CAUTION: panels may not have controls at times.  This flag can return "" if no control is present. "
	fnames "copy cp"
		fdesc "Makes this panel a copy of the specified panel.  Both panels must be of the same type. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Attaches a tag to the maya panel. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "glRenderEditor gre"
		fdesc "Query only. This flag returns the name of the gl render editor contained in the panel. "
	fnames "init in"
		fdesc "Initializes the panel's default state.  This is usually done automatically on file -new and file -open. "
	fnames "isUnique iu"
		fdesc "Returns true if only one instance of this panel type is allowed. "
	fnames "label l"
		fdesc "Specifies the user readable label for the panel. "
	fnames "menuBarVisible mbv"
		fdesc "Controls whether the menu bar for the panel is displayed. "
	fnames "needsInit ni"
		fdesc "(Internal) On Edit will mark the panel as requiring initialization. Query will return whether the panel is marked for initialization.  Used during file -new and file -open. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this panel. "
	fnames "popupMenuProcedure pmp"
		fdesc "Specifies the procedure called for building the panel's popup menu(s). The default value is "buildPanelPopupMenu". "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "replacePanel rp"
		fdesc "Will replace the specifed panel with this panel.  If the target panel is within the same layout it will perform a swap. "
	fnames "tearOff to"
		fdesc "Will tear off this panel into a separate window with a paneLayout as the parent of the panel. When queried this flag will return if the panel has been torn off into its own window. "
	fnames "tearOffCopy toc"
		fdesc "Will create this panel as a torn of copy of the specified source panel. "
	fnames "unParent up"
		fdesc "Specifies that the panel should be removed from its layout. This (obviously) cannot be used with query. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "headsUpDisplay"
	desc "HeadsUpDisplay is NOT undoable , queryable , and editable . This command creates a Heads-up Display (HUD) object which is placed in a 2D inactive overlay plane on the 3D viewport. It is to be used to provide hands-on information designated by a user script. The text string displayed on the viewport is formatted using the various flags of this command. The only mandatory flags, on creation are the section and block flags. Note if the preset OR command/trigger flags are not present, only a label will be drawn on the viewport. Upon creation of a HUD object, an ID.... Refer to full documentation"
	fcount "44"
	fnames "allDescendants ad"
		fdesc "This flag can only be used in conjunction with the -ac/attributeChange flag. If it is specified, and the HUD is attached to a compound or multi attribute, then the HUD command will run due to changes to the specified attribute as well as changes to its descendants. "
	fnames "allowOverlap ao"
		fdesc "Sets the Heads-Up Display to be visible regardless of overlapping section widths/limitations (see -s/section flag description for more details). "
	fnames "attachToRefresh atr"
		fdesc "Attaches the command to the refresh process. The script is then run each time an idle refresh is run and updates directly following it. "
	fnames "attributeChange ac"
		fdesc "Runs the command when the named attribute changes value. The string must identify both the dependency node and the particular attribute. If the dependency node is deleted, this HUD is removed (even if the deletion is undoable). "
	fnames "block b"
		fdesc "Denotes the individual block that the HUD will reside in, within a section. Each section is composed of a single column of blocks. The total number of blocks contained within each section is variable. The number of blocks that will be visible within each section is dependent on the size of blocks contained in each section and the current	size of the window. Blocks begin enumerating from 0 and flexibly increase based on need. The resultant output string of each HUD is formatted within each block, using parameters defined by the formatting flags listed below (eg. justify, padding, labelWidth and dataWidth). The layout is shown in the following diagram: __________________________________________ |     |     |        |         |     |     | |  P  |  J  |   LW   |   DWX   |  J  |  P  | |_____|_____|________|_________|_____|_____| P = Sub-block of width, padding J = Justification of the entire block LW = Sub-block of width, labelWidth DWX = X number of sub-blocks of width, dataWidth, for X data elements. Block Layout The above diagram shows the layout of each block. The widths: padding, labelWidth and dataWidth are defined by their respective flags. To elaborate on the layout of the blocks, First the padding of the block is calculated. Then the two main sub-blocks (LW and DWX) in the above diagram, are justified and positioned together between the left and right margins of the block. The widths of the main sub-blocks are not variable based on it's contents. The only sub-block in the above diagram which is unique is the DWX sub-block which actually represents X number of sub-blocks, where X is the number of data elements returned by the command. Block Positioning Blocks on the top section begin from the top edge of the main viewport, while the bottom section begins from the bottom edge. Blocks are dynamically removed from visibility from the midpoint of the viewport. So, a relatively large block number will not draw to the viewport. Lastly, there can be at most one HUD occupying a block at any time. Trying to position a HUD in an occupied block will result in an error. Keep this in mind when positioning the HUD. "
	fnames "blockAlignment ba"
		fdesc "Specifies the alignment of the block within its respective column. Available alignments are: "center", "left" and "right". The default alignment is "left". "
	fnames "blockSize bs"
		fdesc "Sets the height of each block. Available heights are: small, medium and large. In pixel measurements, each corresponds to a 20, 35 or 50 pixel height, respectively. "
	fnames "command c"
		fdesc "Specifies the procedure or script to run, in order to obtain the desired information. This must return a value or an array of values. A warning will be displayed if the command does not return a value. This flag MUST always be accompanied by a trigger flag (eg. a condition flag, an event flag, an attachToRefresh flag, etc.). "
	fnames "conditionChange cc"
		fdesc "A trigger which runs the command (to sample the data), when the named condition changes. The named condition must be pre-defined or a user defined boolean. To get a list of what conditions exist, use the -lc/listConditions flag. "
	fnames "conditionFalse cf"
		fdesc "A trigger which runs the command (to sample the data), when the named condition becomes false. The named condition must be pre-defined or a user defined boolean. To get a list of what conditions exist, use the -lc/listConditions flag. "
	fnames "conditionTrue ct"
		fdesc "A trigger which runs the command (to sample the data), when the named condition becomes true. The named condition must be pre-defined or a user defined boolean. To get a list of what conditions exist, use the -lc/listConditions flag. "
	fnames "connectionChange con"
		fdesc "Runs the command when the named attribute changes its connectivity. The string must identify both the dependency node and the particular attribute. If the dependency node is deleted, this HUD is removed (even if the deletion is undoable). "
	fnames "dataAlignment da"
		fdesc "Specifies the alignment of the data blocks and the data text, within a HUD block. Available alignments are: "left" and "right". The default alignment is "left". "
	fnames "dataFontSize dfs"
		fdesc "Sets the font size of the returned data. Available sizes are: small and large. "
	fnames "dataWidth dw"
		fdesc "Specifies the pixel width of the virtual "textbox" which will hold a data value. For commands which return more than one value (ie. arrays), one of these "textboxes" will be created for each data element, each with this specified width. If the width of the data value exceeds the width of the "textbox", the data value will be truncated to fit within the dimensions of the "textbox." (To see a layout of a block, see the description of the -block flag.) "
	fnames "decimalPrecision dp"
		fdesc "Sets the decimal precision of any floating point value returned by the command. The valid range of precision values are 1 to 8. "
	fnames "disregardIndex di"
		fdesc "This flag can only be used in conjunction with the -ac/attributeChange flag. If it is specified, and the HUD is attached to a multi (indexed) attribute, then the HUD command will run no matter which attribute in the multi changes. "
	fnames "event ev"
		fdesc "Runs the command when the named event occurs. The named event, must be a pre-defined Maya event. To get a list of what events exist, use the -le/listEvents flag. "
	fnames "exists ex"
		fdesc "This flag returns whether the given object exists in the Heads-Up Display layout. An object name must be supplied with this command. This flag cannot be combined with any other flag. "
	fnames "gridColor gco"
		fdesc "This flag specifies a color for the grid lines using the inactive color palette. Specifying an index number between 1 to 23 will select the corresponding color in the palette. "
	fnames "label l"
		fdesc "Text string that appears to the left of the desired information. "
	fnames "labelFontSize lfs"
		fdesc "Sets the font size of the label. Available sizes are: small and large. "
	fnames "labelWidth lw"
		fdesc "Specifies the pixel width of the virtual "textbox" which will hold the label. The contents of this "textbox" will be left justified. If the width of the actual label exceeds the width of the "textbox," the label will be truncated to fit within the dimensions of the "textbox." (To see a layout of a block, see the description of the -block flag.) "
	fnames "lastOccupiedBlock lob"
		fdesc "Returns the block number of the last occupied block in a given section. "
	fnames "layoutVisibility lv"
		fdesc "Sets the visibility of Heads-Up Display layout on and off. This does not modify individual visibilities of heads-up displays, but turns off the layout so that no heads-up displays will draw to screen. Personalized settings for the visibilities of HUDs are kept safe. This flag can only be used by itself, excepting edit and query. "
	fnames "listConditions lc"
		fdesc "This flag will return a string array containing all names of the available conditions. "
	fnames "listEvents le"
		fdesc "This flag will return a string array containing all names of the available events. "
	fnames "listHeadsUpDisplays lh"
		fdesc "This flag will return a string array containing all names of existing HUDs. "
	fnames "listNodeChanges lnc"
		fdesc "This flag will return a string array containing all names of the available node changes. "
	fnames "listPresets lp"
		fdesc "This flag will return a string array containing all names of the available preset HUDs. "
	fnames "name n"
		fdesc "This flag only permits the EDITING of the name of the Heads-Up Display. "
	fnames "nextFreeBlock nfb"
		fdesc "Returns the block number of the next free block in a given section. "
	fnames "nodeChanges nc"
		fdesc "Works only with selection based triggers (ie. "SelectionChanged" or "SomethingSelected"), otherwise this flag is ignored. This flag attaches the HUD script to execute on specific node changes of any selected node. This flag is used to set a nodeChange. In order to reset a nodeChange, use the -rnc/resetNodeChanges flag. To view a list of all available node changes, use the -lnc/listNodeChanges flag. The following is a list of available node changes and their function: attributeChange:  The script will be sensitive to any attribute changes in the currently selected nodes. connectionChange: The script will be sensitive to any connection changes in the currently selected nodes. instanceChange:   The script will be sensitive to any changes to an instance in the currently selected nodes. On query mode, this flag will return the values of all nodeChanges in pairs of values (the name of the nodeChange followed by its value). WARNING: (Performance Warning) Attaching a nodeChange trigger to a selection based trigger can cause a large performance drop, if the node change that is being watched is caused by the HUD script itself. With this said, an attempt should be made to keep the HUD command/script simple and limited to retrieving data. Changing an attribute, creating or modifying a connection or instance will all result in a performance drop. "
	fnames "padding p"
		fdesc "Specifies the width of both the left and right margins of a block. Default value is 15 pixels. "
	fnames "preset pre"
		fdesc "This setting is used to select certain pre-defined HUDs, some of which retrieve specific data, that is unobtainable through normal MEL commands or scripts. This flag is mutually exclusive from the command and trigger flag combination. However, presets can work with all other headsUpDisplay attribute flags (ie. block alignment, label, dataFontSize, etc.), unless otherwise specified below. To obtain a list of available presets, use the -lp/listPresets flag on this command. The following is a list of available presets and a description of each: cameraNames This will return the camera name that the view is looking through, in the data block, for each view that the HUD is drawing to. polyVerts This will return three values in the data block, regarding the number of vertices that are visible by the camera. 1st Value: Represents the number of camera visible vertices, both active and inactive. 2nd Value: Represents the number of camera visible vertices, on active objects only. 3rd Value: Represents the number of camera visible vertices, that are active. polyEdges This will return three values in the data block, regarding the number of edges that are visible by the camera. The order of these three values are similar to the polyVerts preset. polyFaces This will return three values in the data block, regarding the number of faces that are visible by the camera. The order of these three values are similar to the polyVerts preset. polyUVs This will return three values in the data block, regarding the number of UVs that are visible by the camera. The order of these three values are similar to the polyVerts preset. polyTriangles This will return three values in the data block, regarding the number of triangles that are visible by the camera. The order of these three values are similar to the polyVerts preset. frameRate This will return a single string carrying both the frame rate and the "fps" string in the data block. It updates on each refresh. viewAxis This will draw the orientation of the grid axes within the HUD. It updates on each refresh. While this preset can take in all attribute flags, the only one which will have an effect are block attribute related flags (ie. block alignment and block size). The block dimensions of this preset are: blockSize - "large" and blockWidth - "50", which results in a 50x50 pixel region. distanceFromCamera This will return in the data block the distance from the view's camera to the centre of the bounding box containing the selected objects in the view. "
	fnames "refresh r"
		fdesc "This flag forces the given Heads-Up Display element to refresh, updating the value displayed.  This flag cannot be combined with any other flag. "
	fnames "remove rem"
		fdesc "This command will remove a given HUD object, given a specified HUD name. This flag will override all other flags and is mutually exclusive from the other remove flags. "
	fnames "removeID rid"
		fdesc "This command will remove a given HUD object, given a specified HUD ID number assigned to it at creation time. This flag will override all other flags and is mutually exclusive from the other remove flags. "
	fnames "removePosition rp"
		fdesc "This command will remove the contents of a specific block location in the HUD layout. This flag will override all other flags and is mutually exclusive from the other remove flags. Syntax for this flag is: -removePosition/rp [section] [block]. "
	fnames "resetNodeChanges rnc"
		fdesc "This flag will reset a specificied nodeChange back to false. This flag only operates under the edit flag. See the description for the -nc/nodeChanges flag for further details. "
	fnames "scriptResult sr"
		fdesc "This flag is only used in conjunction with the query flag. Calling a query on this flag returns the most recent result of the HUD. "
	fnames "section s"
		fdesc "Defines the section the HUD will appear in. There are 10 sections divided across the screen. Five columns and two rows make up the ten element matrix which divide the main viewport. Here is a visual layout of the sections. ________________________ |    |    |    |    |    | |    |    |    |    |    | | 0  | 1  | 2  | 3  | 4  | |    |    |    |    |    | |____|____|____|____|____| |    |    |    |    |    | |    |    |    |    |    | | 5  | 6  | 7  | 8  | 9  | |    |    |    |    |    | |____|____|____|____|____| Each section is denoted by a number from 0 to 9 as illustrated above. For example, if the second column of the top row was desired, the section would be defined as: -sec 1 To prevent HUD objects from writing over each other and causing a clutter of letters, each row has a defined visibility precedence, where each section would have a visibility priority level. Depending on each priority level, when the screen space begins to shrink to a point where the section widths of a given row begin to collide, the HUD automatically compensates for this by removing the sections of least priority. These sections are made invisible and a warning is issued to inform the user of the removal. This continues until only the section of highest priority remains. For each row, the priorities are defined as follows. Using the top row as an example: Section 0, has the highest priority, followed by Section 4, making the outermost sections of highest priority. Next in the list is Section 2, and lastly Sections 1 and 3 are of the equal and least priority. This priority structure can be applied to the bottom row as well. The two outermost sections have the highest priority, followed by the middle section, and finally the remaining two sections are of lowest priority. This means that as the viewport gradually decreases in width to the point where sections in the top row begin to overlap, sections 1 and 3 will be removed from view first, followed by section 2, and finally section 4. A similar note is provided below for the block layout. "
	fnames "showGrid sg"
		fdesc "This flag will toggle the display of the grid lines of the HUD layout. "
	fnames "visible vis"
		fdesc "Sets the visibility of the Heads-Up Display on and off. "
	rcount "3"
		rname "scriptJob"
		rname "displayStats"
		rname "polyEvaluate"
name "help"
	desc "With no arguments, help tells you how to use help. If a command name is specified, help will give you quick help for that command. Other flags can be used to open the online documentation, or to list available commands based on a pattern. Pattern follows the following syntax: * matches any string ? matches any character [agj] matches a, g or j [^0-9] matches anything but a digit x+ matches any number of subsequent x a{3} matches aaa a{3,} matches aaa, aaaa, ... a{3,5} matches aaa, aaaa, or aaaaa (ab)(CD)\2\1 matches abCDCDab (\1 to \9 available)."
	fcount "6"
	fnames "documentation doc"
		fdesc "Use netscape to show the documentation associated with the single command name given.  A pattern cannot be used with this flag.  If no command name is specified, then this flag will go to the main documentation index. "
	fnames "list l"
		fdesc "List all the commands whose names match the regular expression specified. "
	fnames "popupDisplayTime pdt"
		fdesc "Set the amount of time, in seconds, that the popup help will be displayed.  The default is 4 seconds.  This flag is mutually exclusive of the -list and -doc flags. "
	fnames "popupMode pm"
		fdesc "Turn on or off popup help mode.  This flag is mutually exclusive of the -list and -doc flags. "
	fnames "popupPauseTime ppt"
		fdesc "Set the amount of time, in milliseconds, before the popup help will be displayed. The default is 800 milliseconds. This flag is mutually exclusive of the -list and -doc flags. "
	fnames "rolloverMode rm"
		fdesc "Turn on or off rollover help mode.  This flag is mutually exclusive of the -list and -doc flags. "
	rcount "0"
name "helpLine"
	desc "This command creates a help line where tool help/hints are shown."
	fcount "19"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "hermite"
	desc "This command returns a point along on a hermite curve from the five given control arguments. The first two arguments are the start and end points of the curve, respectively. The next two arguments are the tangents of the curve at the start point and end point of the curve, respectively. The fifth argument, parameter, specifies the point on the hermite curve that is returned by this function. This parameter is the unitized distance along the curve from the start point to the end point. A parameter value of 0 corresponds to the start point and a parameter value of.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "hide"
	desc "The hide command is used to make objects invisible. If no flags are specified, the objects given to the command or the active objects, if no objects are specified, will be made invisible. See also: showHidden."
	fcount "1"
	fnames "returnHidden rh"
		fdesc "hide objects but also return list of object hidden. "
	rcount "13"
		rname "currentUnit"
		rname "displayPref"
		rname "displayAffected"
		rname "displayRGBColor"
		rname "refresh"
		rname "displayColor"
		rname "displaySmoothness"
		rname "showHidden"
		rname "displayCull"
		rname "displayStats"
		rname "toggle"
		rname "displayLevelOfDetail"
		rname "displaySurface"
name "hilite"
	desc "Hilites/Unhilites the specifed object(s). Hiliting an object makes it possible to select the components of the object. If no objects are specified then the selection list is used."
	fcount "3"
	fnames "replace r"
		fdesc "Hilite the specified objects.  Any objects previously hilited will no longer be hilited. "
	fnames "toggle tgl"
		fdesc "Toggle the hilite state of the specified objects. "
	fnames "unHilite u"
		fdesc "Remove the specified objects from the hilite list. "
	rcount "0"
name "hitTest"
	desc "HitTest is NOT undoable , NOT queryable , and NOT editable . The hitTest command hit-tests a point in the named control and returns a list of items underneath the point. The point is specified in pixels with the origin (0,0) at the top-left corner. This position is compatible with the coordinates provided by a drop-callback. The types of items that may be returned depends upon the specific control; not all controls currently support hit-testing."
	fcount "0"
	rcount "0"
name "hotBox"
	desc "This command controls parameters related to the hotBox menubar palette. When the command is invoked with no flags, the hotBox is popped up."
	fcount "28"
	fnames "PaneOnlyMenus po"
		fdesc "Sets a row of menus to be the only visible row. "
	fnames "PaneToggleMenus pt"
		fdesc "Sets the visibilty of a row of menus to on or off. "
	fnames "animationOnlyMenus ao"
		fdesc "No Description"
	fnames "animationToggleMenus at"
		fdesc "No Description"
	fnames "clothOnlyMenus clo"
		fdesc "No Description"
	fnames "clothToggleMenus clt"
		fdesc "No Description"
	fnames "commonOnlyMenus co"
		fdesc "No Description"
	fnames "commonToggleMenus ct"
		fdesc "No Description"
	fnames "displayCenterOnly dco"
		fdesc "Three different display styles are defined for the hotBox. It can be fully displayed (-dh), display only the marking menu zones (-dzo) or no display (-dco) which means that the entire screen can be used to  access the marking menus defined in the center zone. "
	fnames "displayHotbox dh"
		fdesc "No Description"
	fnames "displayStyle ds"
		fdesc "Returns a string that identifies the flag used to set the current  display style. The results can be "-dh", "-dzo", or "-dco", depending on which style the HotBox is using at the moment. "
	fnames "displayZonesOnly dzo"
		fdesc "No Description"
	fnames "dynamicsOnlyMenus do"
		fdesc "No Description"
	fnames "dynamicsToggleMenus dt"
		fdesc "No Description"
	fnames "liveOnlyMenus lo"
		fdesc "No Description"
	fnames "liveToggleMenus lt"
		fdesc "No Description"
	fnames "modelingOnlyMenus mo"
		fdesc "No Description"
	fnames "modelingToggleMenus mt"
		fdesc "No Description"
	fnames "noClickCommand ncc"
		fdesc "The command to be executed if the hotBox is engaged and then disengaged within noClickDelay time units. "
	fnames "noClickDelay ncd"
		fdesc "If the hotBox is engaged and then disengaged within this time interval, then the noClickCommand is executed. The time interval is in seconds.  The default value is 0.1. "
	fnames "noKeyPress nkp"
		fdesc "Normally the hotbox is popped by a pressing a keyboard key. Use hotBox -nkp to pop the hotbox from a device other than the keyboard (still use hotBox -rl to unpop the hotbox) "
	fnames "release rl"
		fdesc "Action to be called on the release of the key which invoked the hotbox "
	fnames "renderingOnlyMenus ro"
		fdesc "No Description"
	fnames "renderingToggleMenus rt"
		fdesc "No Description"
	fnames "rmbPopups rmb"
		fdesc "Enables/Disables a popup menu of the current function set. This popup menu appear when the right mouse button is pressed in the center zone of the hotbox. "
	fnames "showAllToggleMenus a"
		fdesc "Sets the visibility of all menus to on or off. When queried, will only return true if all menu rows are visible. "
	fnames "transparenyLevel tr"
		fdesc "The percentage of transparency, from 0 to 100. Currently, only the values 0, 25, 50, 75 and 100 are supported.  Any other values will be rounded off to the nearest supported value. "
	fnames "updateMenus um"
		fdesc "Reloads the hotBox menus from the main menubar. This flag is used when the menus in the main menubar are modified, and the hotBox menus need to be refreshed. "
	rcount "0"
name "hotkey"
	desc "This command sets the single-key hotkeys for the entire application."
	fcount "12"
	fnames "altModifier alt"
		fdesc "No Description"
	fnames "autoSave as"
		fdesc "If set to true then the hotkeys will always be saved when you quit.  If false then the hotkeys are not saved unless "savePrefs -hotkeys" is used. "
	fnames "commandModifier cmd"
		fdesc "The Command key must be pressed to get the hotkey. This is only available on systems which have a separate command key. Note that if menu item accelerator keys are being used (menuItem -ke/keyEquivalent), then the accelerator key settings override the hotkey settings. "
	fnames "ctrlModifier ctl"
		fdesc "The Ctrl key must be pressed to get the hotkey. Note that if menu item accelerator keys are being used (menuItem -ke/keyEquivalent), then the accelerator key settings override the hotkey settings. "
	fnames "factorySettings fs"
		fdesc "Resets the hotkeys back to the initial defaults. "
	fnames "keyShortcut k"
		fdesc "Specify what key is being set. The key must be either a single ascii character (capital and lowercase can be set independently)  or one of the keyword  strings for the  special  keyboard characters. The valid keywords are: Up, Down, Right, Left, Home, End, Page_Up, Page_Down, Insert Return, Space F1 to F12 "
	fnames "name n"
		fdesc "The name of the namedCommand object that will be executed when the key is pressed. "
	fnames "optionModifier opt"
		fdesc "The Alt key (or the option key on a Macintosh) must be pressed to get the hotkey.  These two flags may be used interchangeably. Note that if menu item accelerator keys are being used (menuItem -ke/keyEquivalent), then the accelerator key settings override the hotkey settings. "
	fnames "pressCommandRepeat pcr"
		fdesc "Specify true and the command may be repeated by executing the command repeatLast. This flag is false by default. "
	fnames "releaseCommandRepeat rcr"
		fdesc "Specify true and the command may be repeated by executing the command repeatLast. This flag is false by default. "
	fnames "releaseName rn"
		fdesc "The name of the namedCommand object that will be executed when the key is released. "
	fnames "sourceUserHotkeys suh"
		fdesc "This command reads the userHotkey file "
	rcount "0"
name "hotkeyCheck"
	desc "This command checks if the given hotkey is mapped to a nameCommand object. If so, the annotation of the nameCommand object is returned. Otherwise an empty string is returned."
	fcount "6"
	fnames "altModifier alt"
		fdesc "Specifies if the Alt key is pressed. "
	fnames "commandModifier cmd"
		fdesc "Specifies if the command key is pressed. "
	fnames "ctrlModifier ctl"
		fdesc "Specifies if the Ctrl key is pressed. "
	fnames "keyString key"
		fdesc "The key to check. "
	fnames "keyUp kup"
		fdesc "Specifies if the hotkey is on keyup or keydown  (i.e. Release or Press). "
	fnames "optionModifier opt"
		fdesc "Specifies if the option key is pressed. "
	rcount "0"
name "hsv_to_rgb"
	desc "Converts colors between HSV and RGB colorspace representations. The components of the argument vector are expected to be between 0.0 and 1.0."
	fcount "0"
	rcount "0"
name "hwReflectionMap"
	desc "This command creates a hwReflectionMap node for having reflection on textured surfaces that currently have their boolean attribute displayHWEnvironment set to true."
	fcount "10"
	fnames "backTextureName bkn"
		fdesc "This flag specifies the file texture name for the back side of the cube. Default is none When queried, this flag returns a  string . "
	fnames "bottomTextureName bmn"
		fdesc "This flag specifies the file texture name for the bottom side of the cube. Default is none When queried, this flag returns a  string . "
	fnames "cubeMap cm"
		fdesc "If on, the reflection of the textures is done using the cube mapping. Default is false. The reflection is done using sphere mapping. When queried, this flag returns a  boolean . "
	fnames "decalMode dm"
		fdesc "If on, the reflection color replaces the surface shading. Default is false. The reflection is multiplied to the surface shading. When queried, this flag returns a  boolean . "
	fnames "enable en"
		fdesc "If on, enable the corresponding hwReflectionMap node. Default is false. When queried, this flag returns a  boolean . "
	fnames "frontTextureName ftn"
		fdesc "This flag specifies the file texture name for the front side of the cube. Default is none When queried, this flag returns a  string . "
	fnames "leftTextureName ltn"
		fdesc "This flag specifies the file texture name for the left side of the cube. Default is none When queried, this flag returns a  string . "
	fnames "rightTextureName rtn"
		fdesc "This flag specifies the file texture name for the right side of the cube. Default is none When queried, this flag returns a  string . "
	fnames "sphereMapTextureName smn"
		fdesc "This flag specifies the file texture name for the sphere mapping option. Default is none When queried, this flag returns a  string . "
	fnames "topTextureName tpn"
		fdesc "This flag specifies the file texture name for the top side of the cube. Default is none When queried, this flag returns a  string . "
	rcount "0"
name "hwRender"
	desc "HwRender is NOT undoable , queryable , and NOT editable . Renders and image or a sequence using the hardware rendering engine."
	fcount "23"
	fnames "acceleratedMultiSampleSupport ams"
		fdesc "This flag when used with query will return whether the graphics supports hardware accelerated multi-sampling. "
	fnames "activeTextureCount atc"
		fdesc "This flag when used with query will return the number of textures that have been bound to the graphics by the hardware renderer. "
	fnames "camera cam"
		fdesc "Specify the camera to use.  Use the first available camera if the camera given is not found. "
	fnames "currentFrame cf"
		fdesc "Render the current frame. "
	fnames "currentView cv"
		fdesc "When turned on, only the current view will be rendered. "
	fnames "edgeAntiAliasing eaa"
		fdesc "Enables multipass rendering. Controls for the number of exposures rendered per frame are provided in the form of two associated flag arguments. The first specifies the sampling algorithm: 0 - Uniform Weighted Grid Sampling 1 - Rotated Grid Super Sampling (RGSS) 2 - Gaussian Weighted Sampling Use of a sampling method other than the others listed above, will result in use of the default sample method of Uniform Weighted Grid Sampling. The second argument specifies a number of samples to use. For each sampling algorithm there	is a fixed set of sample counts available: 0 - Uniform Weighted Grid Sampling 1 Sample 3 Samples 4 Samples 5 Samples 7 Samples 9 Samples 16 Samples 25 Samples 36 Samples 1 - Rotated Grid Super Sampling (RGSS) 1 Sample 4 Samples 5 Samples 2 - Gaussian Weighted Sampling 1 Sample 3 Samples 4 Samples 5 Samples 7 Samples 9 Samples 16 Samples 25 Samples 36 Samples Using a sampling count other than the allowable options for the given sampling method will result in using the default sample count of 5. The values passed via the command will override settings stored in the hardwareRenderGlobals node. "
	fnames "fixFileNameNumberPattern fnp"
		fdesc "This flag allows the user to take the hardwareRenderGlobals filename as the initial filename pattern, fix the frame number pattern in the filename in a unique way, returns the new filename pattern.  This does not change the hardwareRenderGlobals's filename. "
	fnames "frame f"
		fdesc "Specify the frame to render. "
	fnames "fullRenderSupport frs"
		fdesc "This flag may be used in the create or query context. In the create context, it will force the renderer to abort and not render any frames if the hardware is not fully supported. In the query context, it will return whether full quality rendering is supported on the current graphics system. Please see the graphics card qualification charts for an explanation of limited support. "
	fnames "height h"
		fdesc "The height flag pass the height to the hwRender command. If not used, the height is taken from the render globals settings. "
	fnames "imageFileName ifn"
		fdesc "This flag let people query the image name for a specified frame. The frame can be specified using the "-frame" flag. When no "-frame" is used, the current frame number is used. "
	fnames "limitedRenderSupport lrs"
		fdesc "This flag when used with query will return whether limited rendering is supported on the current graphics system. Please see the graphics card qualification charts for the current definition of limited support. "
	fnames "lowQualityLighting lql"
		fdesc "Disable lighting evaluation per pixel (fragment). Note: The values passed via the command will override settings stored in the hardware render globals node. "
	fnames "noRenderView nrv"
		fdesc "When turned on, the render view is not updated after image computation "
	fnames "notWriteToFile nwf"
		fdesc "This flag is set to true if the user does not want to write the image to a file.  It is set to false, otherwise. The default value of the flag is "false". "
	fnames "printGeometry pg"
		fdesc "Print the geomety objects as they get translated. "
	fnames "renderHardwareName rhw"
		fdesc "This flag will create a graphics context and return the name of the graphics hardware being used. The graphics hardware is determined by creating an off screen buffer and querying the GL_RENDERER string from OpenGL. If the off screen buffer cannot be created an empty string is returned. "
	fnames "renderRegion reg"
		fdesc "The renderRegion flag pass the render region to the hwRender command.  The parameters are 4 integers, indicating left right bottom top of the region. "
	fnames "renderSelected rs"
		fdesc "Only renders the selected objects. "
	fnames "textureResolution res"
		fdesc "Specify the desired resolution of baked textures. "
	fnames "width w"
		fdesc "The width flag pass the width to the hwRender command. If not used, the width is taken from the render globals settings. "
	fnames "writeAlpha a"
		fdesc "Read the alpha channel of color buffer and return as tif file. "
	fnames "writeDepth d"
		fdesc "Read the depth buffer and return as tif file. "
	rcount "1"
		rname "hwRenderLoad"
name "hwRenderLoad"
	desc "HwRenderLoad is NOT undoable , NOT queryable , and NOT editable . Empty command used to force the dynamic load of HR render."
	fcount "0"
	rcount "0"
name "hyperGraph"
	desc "The following is an overview of the basic features of the hypergraph. A more detailed description is given in the user manuals. The hypergraph provides the user with the ability to view and edit the maya scene graph. The hypergraph supports two types of graphs: the DAG or scene hierarchy and the dependency graph. The default view of the hypergraph editor is the DAG view. The user can show the dependency graph for a collection of nodes by first selecting the nodes and navigating to the dependency graph using one of the graph options. The user can save any view.... Refer to full documentation"
	fcount "88"
	fnames "addBookmark abk"
		fdesc "Create a bookmark for the current hypergraph view. "
	fnames "addDependGraph adg"
		fdesc "Add a dependency graph starting at the named node to the view "
	fnames "addDependNode adn"
		fdesc "Add a dependency node to the dependency graph view "
	fnames "animateTransition atr"
		fdesc "Turns animate transitions off and on. "
	fnames "attributeEditor ae"
		fdesc "Launches attribute editor on selected node. "
	fnames "bookmarkName bn"
		fdesc "Returns the bookmark name for the most recently created bookmark. "
	fnames "clear clr"
		fdesc "Clears the current hypergraph view and deletes the graph UI. (see also -rebuild flag) "
	fnames "connectionDrawStyle cds"
		fdesc "Specify how connections between nodes should be drawn. Valid values are "center" (draws connection lines from the center of one node to the center of the other) and "side" (draws connection lines from the right side of the source node to the left side of the destination node). The default is "center". This flag does not apply to Hypershade graphs, which are always drawn with the "side" connection draw style. "
	fnames "control ctl"
		fdesc "Query only. Returns the top level control for this editor. Usually used for getting a parent to attach popup menus. CAUTION: editors may not have controls at times.  This flag can return "NONE" if no control is present. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "deleteBookmark dbk"
		fdesc "Delete the bookmark with the corresponding node name. "
	fnames "dependGraph dg"
		fdesc "Displays dependency graph iterated from specified node. "
	fnames "dependNode dn"
		fdesc "Displays dependency node in view. "
	fnames "docTag dtg"
		fdesc "Attaches a tag to the maya editor. "
	fnames "down do"
		fdesc "Navigate down to the dependency graph containing the current selection. Shows upstream and downstream connections. "
	fnames "downstream ds"
		fdesc "Show downstream dependency graph of selected node(s). "
	fnames "dragAndDropBehaviorCommand ddc"
		fdesc "Mel proc called when a drag and drop onto a hyperGraph node has occurred. Proc signature is procName (string $editor, string $sourceNode, string $destinationNode). "
	fnames "dropNode dr"
		fdesc "Returns the name of the source node in a drag and drop connection, when called during processing of a drop. "
	fnames "dropTargetNode drt"
		fdesc "Returns the name of the destination node in a drag and drop connection, when called during processing of a drop. "
	fnames "edgeDimmedDoubleClickCommand edd"
		fdesc "Mel proc called when a dimmed edge is double clicked.  Proc signature is procName (string $editor, string $edge). "
	fnames "edgeDoubleClickCommand edc"
		fdesc "Mel proc called when an edge is double clicked.  Proc signature is procName (string $editor, string $edge). "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enableAutomaticLayout eal"
		fdesc "Rebuild the graph if a node is added or removed from the graph via drag and drop or dg messages. Default is true. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "feedbackGadget fbg"
		fdesc "Returns the name of the current gadget. "
	fnames "feedbackNode fbn"
		fdesc "Returns the name of the current feedback or highlight node. "
	fnames "filter f"
		fdesc "Specifies the name of a filter to be placed on this editor. This filters the information coming onto the main list of the editor. "
	fnames "filterDetail fd"
		fdesc "This flag is obsolete. Use the showConstraints, showExpressions, showDeformer, showInvisible, showShapes and showUnderworld flags instead. "
	fnames "focusCommand fc"
		fdesc "Mel proc to be run when the mouse is clicked in the hyper graph. Primarily of use in setting the window focus.	 "
	fnames "fold fo"
		fdesc "Folds (Collapses) selected object. "
	fnames "forceMainConnection fmc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. This is a variant of the -mainListConnection flag in that it will force a change even when the connection is locked. This flag is used to reduce the overhead when using the -unlockMainConnection , -mainListConnection, -lockMainConnection flags in immediate  succession. "
	fnames "forceRefresh frf"
		fdesc "Forces the hypergraph to refresh (redraw) its contents. "
	fnames "frame fr"
		fdesc "Frames the selected objects "
	fnames "frameBranch frb"
		fdesc "Frames the the branch from the selected node on downward. "
	fnames "frameGraph fg"
		fdesc "Frames the entire graph. "
	fnames "frameHierarchy frh"
		fdesc "Frames the hierarchy that contains the selected node. "
	fnames "freeform fre"
		fdesc "Enable freeform layout mode. "
	fnames "fromAttr fat"
		fdesc "Returns the name of the source attribute in a drag and drop  connection, when called during processing of a drop. "
	fnames "getNodeList gnl"
		fdesc "Returns a string array that represents a list of all the nodes in the graph. "
	fnames "getNodePosition gnp"
		fdesc "Returns the position of a specified node in x,y graph coords. This flag and its argument must be passed to the command before the  -q flag (see examples).  "
	fnames "graphType gt"
		fdesc "Returns the type name of the current graph in the view (either DAG or DG). "
	fnames "highlightConnection hlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its highlight list.  Not all editors have a highlight list.  For those who do, it is sort of a secondary selection list. "
	fnames "image img"
		fdesc "Specify background image to be loaded from the project image directory. "
	fnames "imageEnabled ime"
		fdesc "Enable display of a loaded background image (DAG view) "
	fnames "imageScale ims"
		fdesc "Uniform scale of the background image.  "
	fnames "isHotkeyTarget iht"
		fdesc "For internal use. "
	fnames "layout lay"
		fdesc "Perform an automatic layout on the graph. "
	fnames "lockMainConnection lck"
		fdesc "Locks the current list of objects within the mainConnection, so that only those objects are displayed within the editor. Further changes to the original mainConnection are ignored. "
	fnames "look loo"
		fdesc "Look at a coordinate in the graph view  "
	fnames "mainListConnection mlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. "
	fnames "navigateHome hom"
		fdesc "Navigate to the home (DAG) view. "
	fnames "nextView nvw"
		fdesc "Changes the view to the next DAG view. "
	fnames "nodeDropCommand ndr"
		fdesc "Set the command to be called when a node is dropped in the hypergraph window. "
	fnames "nodePressCommand np"
		fdesc "Set the command to be called when the user presses a mouse button while the cursor is over a node in the hypergraph window. "
	fnames "nodeReleaseCommand nr"
		fdesc "Set the command to be called when the user releases a mouse button while the cursor is over a node in the hypergraph window. "
	fnames "orientation or"
		fdesc "Selects orientation style of graph: "horiz"|"vert" "
	fnames "panel pnl"
		fdesc "Specifies the panel that the editor belongs to.  By default if an editor is created in the create callback of a scripted panel it will belong to that panel.  If an editor doesn't belong to a panel it will be deleted when the window that it is in is deleted. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this editor. This flag will only have an effect if the editor is currently un-parented. "
	fnames "popupMenuScript pms"
		fdesc "Set the script to be called to register the popup menu with the control for this hypergraph. The script will be called with a string argument which gives the name of the hypergraph whose control the popup menu should be parented to. "
	fnames "previousView pvw"
		fdesc "Changes the view back to the previous DAG view. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rebuild rb"
		fdesc "Rebuilds graph "
	fnames "removeNode rmn"
		fdesc "Removes the node identified by string from the graph. "
	fnames "rename rn"
		fdesc "Pops up text field over selected object for renaming "
	fnames "resetFreeform rf"
		fdesc "Resets freeform position on all nodes. "
	fnames "restoreBookmark rbk"
		fdesc "Restore the view corresponding to the bookmark. "
	fnames "selectionConnection slc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its own selection list.  As the user selects things in this editor, they will be selected in the selectionConnection object.  If someone else changes the object, the editor will update to show the change. "
	fnames "setNodePosition snp"
		fdesc "Sets the node identified by string to the (x,y) position  in the window specified by the two floats. If  the node is not in the graph than it will be added to the graph and then moved to the new position. "
	fnames "showConstraints shc"
		fdesc "Show constraint relationships in the DAG. "
	fnames "showDeformer shd"
		fdesc "Show deformer or geometry filter relationships in the DAG. "
	fnames "showExpressions shx"
		fdesc "Show expression relationships in the DAG. "
	fnames "showInvisible shi"
		fdesc "Show invisible nodes in the DAG. "
	fnames "showShapes shs"
		fdesc "Show shape nodes in the DAG. "
	fnames "showUnderworld shu"
		fdesc "Show underworld graphs in the DAG. "
	fnames "stateString sts"
		fdesc "Query only flag.  Returns the MEL command that will edit an editor to match the current editor state. The returned command string uses the string variable $editorName in place of a specific name. "
	fnames "transitionFrames tfr"
		fdesc "Specify te number of transition frames for animate transitions. "
	fnames "unParent up"
		fdesc "Specifies that the editor should be removed from its layout. This cannot be used with query. "
	fnames "unfold uf"
		fdesc "Unfolds (expands) selected object. "
	fnames "unfoldAll ua"
		fdesc "Unfolds everything under selected object. "
	fnames "unlockMainConnection ulk"
		fdesc "Unlocks the mainConnection, effectively restoring the original mainConnection (if it is still available), and dynamic updates. "
	fnames "updateMainConnection upd"
		fdesc "Causes a locked mainConnection to be updated from the orginal mainConnection, but preserves the lock state. "
	fnames "updateNodeAdded una"
		fdesc "Update graph when a new node is added to the database "
	fnames "updateSelection us"
		fdesc "Update selection state in the graph when the selection state of database changes. "
	fnames "upstream ups"
		fdesc "Show upstream dependency graph of selected node(s). "
	fnames "useFeedbackList ufl"
		fdesc "Use feedback or highlight list as the target selection when processing other hypergraph command-line options. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visibility vis"
		fdesc "Set the visible state of the selected node(s). "
	fnames "zoomFactor zft"
		fdesc "Specify the zoom factor for animating transitions "
	rcount "0"
name "hyperPanel"
	desc "This command creates, edit and queries hypergraph panels which contain only a hypergraph editor."
	fcount "20"
	fnames "control ctl"
		fdesc "Returns the top level control for this panel. Usually used for getting a parent to attach popup menus. CAUTION: panels may not have controls at times.  This flag can return "" if no control is present. "
	fnames "copy cp"
		fdesc "Makes this panel a copy of the specified panel.  Both panels must be of the same type. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Attaches a tag to the maya panel. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "hyperEditor he"
		fdesc "This flag returns the name of the hypergraph editor contained by the panel. "
	fnames "init in"
		fdesc "Initializes the panel's default state.  This is usually done automatically on file -new and file -open. "
	fnames "isUnique iu"
		fdesc "Returns true if only one instance of this panel type is allowed. "
	fnames "label l"
		fdesc "Specifies the user readable label for the panel. "
	fnames "menuBarVisible mbv"
		fdesc "Controls whether the menu bar for the panel is displayed. "
	fnames "needsInit ni"
		fdesc "(Internal) On Edit will mark the panel as requiring initialization. Query will return whether the panel is marked for initialization.  Used during file -new and file -open. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this panel. "
	fnames "popupMenuProcedure pmp"
		fdesc "Specifies the procedure called for building the panel's popup menu(s). The default value is "buildPanelPopupMenu". "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "replacePanel rp"
		fdesc "Will replace the specifed panel with this panel.  If the target panel is within the same layout it will perform a swap. "
	fnames "tearOff to"
		fdesc "Will tear off this panel into a separate window with a paneLayout as the parent of the panel. When queried this flag will return if the panel has been torn off into its own window. "
	fnames "tearOffCopy toc"
		fdesc "Will create this panel as a torn of copy of the specified source panel. "
	fnames "unParent up"
		fdesc "Specifies that the panel should be removed from its layout. This (obviously) cannot be used with query. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "hyperShade"
	desc "HyperShade is undoable , NOT queryable , and NOT editable . Commands for shader editing in the hypergraph."
	fcount "33"
	fnames "setAllowsRegraphing sar"
		fdesc "For internal use only. "
	fnames "assign a"
		fdesc "Assign the specified shader node to renderable objects on the active list. The node can either be a shading group or the shader node attached to the shading group. "
	fnames "clearWorkArea cwa"
		fdesc "Push the current work area on to the stack and create a clear work area "
	fnames "setWorkArea swa"
		fdesc "Set the work area to the existing named work ard "
	fnames "dependGraphArea dg"
		fdesc "When setting a work area, and the work area doesn't already exist this flag inicates a new graph should be created that is either a depend graph or a folder view. "
	fnames "collapse clp"
		fdesc "Hide the upstream nodes from the specified node. "
	fnames "uncollapse ucl"
		fdesc "Unhide the upstream nodes from the specified node. "
	fnames "duplicate dup"
		fdesc "Duplicate upstream nodes.  If the node is a shader make sure duplicate include the shading group if there is one "
	fnames "fixRenderSize fix"
		fdesc "If set to true dont rerender swatches when they change size as the user zooms "
	fnames "reset rst"
		fdesc "Reset the Hypershade panel to its initial state.  In particular delete all the work areas. "
	fnames "resetGraph rsg"
		fdesc "Reset the current graph.  Typicly called prior to rebuilding a folder in a Hypershade view. "
	fnames "resetSwatch rss"
		fdesc "For all selected nodes remove user defined swatches if the node has one "
	fnames "name n"
		fdesc "Name for the work area created by this command "
	fnames "incremental inc"
		fdesc "Enable or disable incremental layout when making new nodes or connections "
	fnames "upStream ups"
		fdesc "Show nodes upstream from the specified node "
	fnames "downStream ds"
		fdesc "Show nodes downstream from the specified node "
	fnames "snapShot snp"
		fdesc "Put hypergraph in snapshot mode.  This is only for testing "
	fnames "objects o"
		fdesc "Select the objects which are attached to the specified shader node. The shader node can be either the shading group or the shader attached to the shading group.  When this flag's argument is the empty string, we will use the currently selected shder node as the input. "
	fnames "createNode rcn"
		fdesc "Create a node of the specified type.  This is called when a new rendering node is created using drag and drop from the image browser or from the RMB context sensitve menu on nodes in the Visor Create folders. "
	fnames "renderCreateAndDrop rcd"
		fdesc "Create a render node of the specified type and put user into drag and drop mode to place or connect it. "
	fnames "networks net"
		fdesc "Do an incremental layout on all of the nodes in the current selection list and that are in the current work area. "
	fnames "shaderNetwork sn"
		fdesc "Show the shader network for the specified material node.  If the materials shading group has a displacement or volume map these will be shown.  If not then the shading group wont be shown. "
	fnames "shaderNetworks sns"
		fdesc "Show the shader network for all the objects on the selection list that have shaders. "
	fnames "shaderNetworksSelectMaterialNodes smn"
		fdesc "Select the material nodes in the shader network for all the objects on the selection list that have shaders. "
	fnames "workAreaAddCmd waa"
		fdesc "Set the MEL procedure called when a new work area is added to HyperShade "
	fnames "workAreaDeleteCmd wad"
		fdesc "Set the MEL procedure called when a work area is deleted in HyperShade "
	fnames "workAreaSelectCmd was"
		fdesc "Set the MEL procedure called when a work area is selected in HyperShade "
	fnames "userDefinedLayout udl"
		fdesc "Enable or disable remembrance of user defined layouts.  Default is disabled until this functionality is better tested. "
	fnames "noShapes ns"
		fdesc "Display no shapes when graphing networks. "
	fnames "noSGShapes nsg"
		fdesc "Display only shapes that are connected to nodes in the network other than a shading group. "
	fnames "noTransforms nt"
		fdesc "Display no transforms when graphing networks. "
	fnames "listUpstreamNodes lun"
		fdesc "List all the upstream render nodes from the specified nodes. "
	fnames "listDownstreamShaderNodes lds"
		fdesc "List all the downstream shader nodes from the specified nodes. "
	rcount "0"
name "hypot"
	desc "This command is implemented using the builtin system function. Let the input arguments be x and y, respectively. hypot(x,y) return sqrt(x*x+y*y) computed in such a way that overflow will not happen, and underflow occurs only if the final result deserves it."
	fcount "0"
	rcount "0"
name "iconTextButton"
	desc "This control supports up to 3 icon images and 4 different display styles. The icon image displayed is the one that best fits the current size of the control given its current style. This command creates an iconTextButton that can be displayed with different icons, with or without accomanying text label."
	fcount "32"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "command c"
		fdesc "Command executed when the control is pressed. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "doubleClickCommand dcc"
		fdesc "Command executed when the control is double clicked. "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "highlightImage hi"
		fdesc "Highlight image displayed while the cursor is over the control. Image size must be the same as the image specified with the  -i/image  flag. This is a Windows only flag. "
	fnames "image i"
		fdesc "If you are not providing images with different sizes then you may use this flag for the control's image. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "This control supports three icons.  The icon that best fits the current size of the control will be displayed. "
	fnames "imageOverlayLabel iol"
		fdesc "A short string (5 characters) label that will be displayed  on top of the image. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "The text that appears in the control. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "marginHeight mh"
		fdesc "The number of pixels above and below the control content. The default value is 1 pixel. "
	fnames "marginWidth mw"
		fdesc "The number of pixels on either side of the control content. The default value is 1 pixel. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "selectionImage si"
		fdesc "Image displayed while the control is selected. Image size must be the same as the image specified with the  -i/image flag. This is a Windows only flag. "
	fnames "style st"
		fdesc "The draw style of the control.  Valid styles are "iconOnly", "textOnly", "iconAndTextHorizontal" and "iconAndTextVertical". "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "iconTextCheckBox"
	desc "This control supports up to 3 icon images and 4 different display styles. The icon image displayed is the one that best fits the current size of the control given its current style. This command creates an iconTextCheckBox."
	fcount "34"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed when the control's state is changed. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "highlightImage hi"
		fdesc "Highlight image displayed while the cursor is over the control. Image size must be the same as the image specified with the  -i/image  flag. This is a Windows only flag. "
	fnames "image i"
		fdesc "If you are not providing images with different sizes then you may use this flag for the control's image. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "This control supports three icons.  The icon that best fits the current size of the control will be displayed. "
	fnames "imageOverlayLabel iol"
		fdesc "A short string (5 characters) label that will be displayed  on top of the image. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "The text that appears in the control. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "marginHeight mh"
		fdesc "The number of pixels above and below the control content. The default value is 1 pixel. "
	fnames "marginWidth mw"
		fdesc "The number of pixels on either side of the control content. The default value is 1 pixel. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "offCommand ofc"
		fdesc "Command executed when the control is turned off. "
	fnames "onCommand onc"
		fdesc "Command executed when the control is turned on. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "selectionImage si"
		fdesc "Image displayed while the control is selected. Image size must be the same as the image specified with the  -i/image flag. This is a Windows only flag. "
	fnames "style st"
		fdesc "The draw style of the control.  Valid styles are "iconOnly", "textOnly", "iconAndTextHorizontal" and "iconAndTextVertical". "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "value v"
		fdesc "Sets or returns the state of the control. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "iconTextRadioButton"
	desc "This control supports up to 3 icon images and 4 different display styles. The icon image displayed is the one that best fits the current size of the control given its current style. This command creates a iconTextRadioButton that is added to the most recently created iconTextRadioCollection unless the -cl/cluster flag is used."
	fcount "35"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed when the control's state is changed. "
	fnames "collection cl"
		fdesc "To explicitly add the control to the specified collection. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "highlightImage hi"
		fdesc "Highlight image displayed while the cursor is over the control. Image size must be the same as the image specified with the  -i/image  flag. This is a Windows only flag. "
	fnames "image i"
		fdesc "If you are not providing images with different sizes then you may use this flag for the control's image. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "This control supports three icons.  The icon that best fits the current size of the control will be displayed. "
	fnames "imageOverlayLabel iol"
		fdesc "A short string (5 characters) label that will be displayed  on top of the image. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "The text that appears in the control. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "marginHeight mh"
		fdesc "The number of pixels above and below the control content. The default value is 1 pixel. "
	fnames "marginWidth mw"
		fdesc "The number of pixels on either side of the control content. The default value is 1 pixel. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "offCommand ofc"
		fdesc "Command executed when the control is turned off. "
	fnames "onCommand onc"
		fdesc "Command executed when the control is turned on. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "select sl"
		fdesc "Will set this button as the selected one. "
	fnames "selectionImage si"
		fdesc "Image displayed while the control is selected. Image size must be the same as the image specified with the  -i/image flag. This is a Windows only flag. "
	fnames "style st"
		fdesc "The draw style of the control.  Valid styles are "iconOnly", "textOnly", "iconAndTextHorizontal" and "iconAndTextVertical". "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "iconTextRadioCollection"
	desc "This command creates a cluster for iconTextRadioButtons. Clusters will be parented to the current default layout if no parent is specified with the -p/parent flag. As children of the layout they will be deleted when the layout is deleted. Clusters may also span more than one window if the -g/global flag is used. In this case the cluster has no parent so must be explicitly deleted with the 'deleteUI' command."
	fcount "6"
	fnames "collectionItemArray cia"
		fdesc "Returns a string list giving the long names of all the items in this collection. "
	fnames "disableCommands dcm"
		fdesc "Allows a particular iconTextRadioButton in the collection to  be selected without invoking the commands attached to  the -cc/changeCommand, -onc/onCommand, or -ofc/offCommand flags. This flag is only meaningful when used in conjuction with  the -edit and -select flags. "
	fnames "global gl"
		fdesc "Set the collection to have no parent layout.  If the collection has a parent layout then it will be deleted with that layout, otherwise if it is specified to be global it must be explicitly deleted. "
	fnames "numberOfCollectionItems nci"
		fdesc "Returns the number of items that are in this collection. "
	fnames "parent p"
		fdesc "Set the specified layout to be the parent layout of the cluster. "
	fnames "select sl"
		fdesc "Select the specified collection item.  If queried will return the name of the currently selected collection item. "
	rcount "0"
name "iconTextStaticLabel"
	desc "This control supports up to 3 icon images and 4 different display styles. The icon image displayed is the one that best fits the current size of the control given its current style. This command creates an iconTextStaticLabel."
	fcount "28"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "image i"
		fdesc "If you are not providing images with different sizes then you may use this flag for the control's image. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "This control supports three icons.  The icon that best fits the current size of the control will be displayed. "
	fnames "imageOverlayLabel iol"
		fdesc "A short string (5 characters) label that will be displayed  on top of the image. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "The text that appears in the control. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "marginHeight mh"
		fdesc "The number of pixels above and below the control content. The default value is 1 pixel. "
	fnames "marginWidth mw"
		fdesc "The number of pixels on either side of the control content. The default value is 1 pixel. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "style st"
		fdesc "The draw style of the control.  Valid styles are "iconOnly", "textOnly", "iconAndTextHorizontal" and "iconAndTextVertical". "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "ikHandle"
	desc "The handle command is used to create, edit, and query a handle within Maya. The standard edit (-e) and query (-q) flags are used for edit and query functions. If there are 2 joints selected and neither -startJoint nor -endEffector flags are not specified, then the handle will be created from the selected joints. If a single joint is selected and neither -startJoint nor -endEffector flags are specified, then the handle will be created with the selected joint as the end-effector and the start joint will be the top of the joint chain containing the end effector. The default values.... Refer to full documentation"
	fcount "28"
	fnames "autoPriority ap"
		fdesc "Specifies that this handle's priority is assigned automatically.  The assigned priority will be based on the hierarchy distance from the root of the skeletal chain to the start joint of the handle. "
	fnames "connectEffector ce"
		fdesc "This option is set to true as default, meaning that end-effector translate is connected with the endJoint translate.  "
	fnames "createCurve ccv"
		fdesc "Specifies if a curve should automatically be created for the ikSplineHandle. "
	fnames "createRootAxis cra"
		fdesc "Specifies if a root transform should automatically be created above the joints affected by the ikSplineHandle.   This option is used to prevent the root flipping singularity  on a motion path. "
	fnames "curve c"
		fdesc "Specifies the curve to be used by the ikSplineHandle. "
	fnames "disableHandles dh"
		fdesc "set given handles to full fk (ikBlend attribute = 0.0) "
	fnames "enableHandles eh"
		fdesc "set given handles to full ik (ikBlend attribute = 1.0) "
	fnames "endEffector ee"
		fdesc "Specifies the end-effector of the handle's joint chain. The end effector may be specified with a joint or an end-effector.  If a joint is specified, an end-effector will be created at the same position as the joint and this new end-effector will be used as the end-effector. "
	fnames "exists ex"
		fdesc "Indicates if the specified handle exists or not. "
	fnames "forceSolver fs"
		fdesc "Forces the solver to be used everytime. It could also be known as animSticky. So, after you set the first key the handle is sticky. "
	fnames "jointList jl"
		fdesc "Returns the list of joints that the handle is manipulating. "
	fnames "name n"
		fdesc "Specifies the name of the handle. "
	fnames "numSpans ns"
		fdesc "Specifies the number of spans in the automatically generated curve of the ikSplineHandle. "
	fnames "parentCurve pcv"
		fdesc "Specifies if the curve should automatically be parented to the parent of the first joint affected by the ikSplineHandle. "
	fnames "positionWeight pw"
		fdesc "Specifies the position/orientation weight of a handle. This is used to compute the "distance" between the goal position and the end-effector position.  A positionWeight of 1.0 computes the distance as the distance between positions only and ignores the orientations.  A positionWeight of 0.0 computes the distance as the distance between the orientations only and ignores the positions.  A positionWeight of 0.5 attempts to weight the distances equally but cannot actually compute this due to unit differences. Because there is no way to add linear units and angular units. "
	fnames "priority p"
		fdesc "Sets the priority of the handle.  Logically, all handles with a lower number priority are solved before any handles with a higher numbered priority.  (All handles of priority 1 are solved before any handles of priority 2 and so on.)  Handle priorities must be ] 0. "
	fnames "rootOnCurve roc"
		fdesc "Specifies if the root is locked onto the curve of the ikSplineHandle. "
	fnames "rootTwistMode rtm"
		fdesc "Specifies if the twist mode of the ikSplineHandle is compatible with Power Animator.   "
	fnames "setupForRPsolver srp"
		fdesc "If the flag is set and ikSolver is ikRPsolver, call RPRotateSetup for the new ikHandle. It is for ikRPsolver only. "
	fnames "simplifyCurve scv"
		fdesc "Specifies if the ikSplineHandle curve should be simplified. "
	fnames "snapCurve snc"
		fdesc "Specifies if the curve should automatically snap to the first joint affected by the ikSplineHandle. "
	fnames "snapHandleFlagToggle shf"
		fdesc "Specifies that the handle position should be snapped to the end-effector position if the end-effector is moved by the user.  Setting this flag on allows you to use forward kinematics to pose or adjust your skeleton and then to animate it with inverse kinematics. "
	fnames "snapHandleToEffector see"
		fdesc "All handles are immediately moved so that the handle position and orientation matches the end-effector position and orientation. "
	fnames "solver sol"
		fdesc "Specifies the solver.  The complete list of available solvers may not be known until run-time because some of the solvers may be implemented as plug-ins.  Currently the only valid solver are ikRPsolver, ikSCsolver and ikSplineSolver. "
	fnames "startJoint sj"
		fdesc "Specifies the start joint of the handle's joint chain. "
	fnames "sticky s"
		fdesc "Specifies that this handle is "sticky".  Sticky handles are solved when the skeleton is being manipulated interactively.  If a character has sticky feet, the solver will attempt to keep them in the same position as the user moves the character's root.  If they were not sticky, they would move along with the root. "
	fnames "twistType tws"
		fdesc "Specifies the type of interpolation to be used by the ikSplineHandle.  The interpolation options are "linear", "easeIn", "easeOut", and "easeInOut". "
	fnames "weight w"
		fdesc "Specifies the handles weight in error calculations.  The weight only applies when handle goals are in conflict and cannot be solved simultaneously.  When this happens, a solution is computed that weights the "distance" from each goal to the solution by the handle's weight and attempts to minimize this value.  The weight must be ]= 0. "
	rcount "13"
		rname "connectJoint"
		rname "insertJoint"
		rname "ikSystemInfo"
		rname "jointDisplayScale"
		rname "joint"
		rname "jointCluster"
		rname "removeJoint"
		rname "ikHandleDisplayScale"
		rname "ikSolver"
		rname "ikSystem"
		rname "jointLattice"
		rname "mirrorJoint"
		rname "removeJoint"
name "ikHandleCtx"
	desc "The ikHandle context command (ikHandleCtx) updates parameters of ikHandle tool. The options for the tool will be set to the flags that the user specifies."
	fcount "23"
	fnames "autoPriorityH apH"
		fdesc "Specifies that this handle's priority is assigned  automatically. C: The default is off. Q: When queried, this flag returns an int. "
	fnames "createCurve ccv"
		fdesc "Specifies if a curve should be automatically created for the ikSplineHandle. The flag is ignored in the ikHandleCtx. C: The default is on.  Q: When queried, this flag returns an int. "
	fnames "createRootAxis cra"
		fdesc "Specifies if a root transform should automatically  be created above the joints affected by the ikSplineHandle. This option is used to prevent the  root flipping singularity on a motion path. This flag is ignored in the ikHandleCtx. C: The default is off.  Q: When queried, this flag returns an int.  "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "forceSolverH fsH"
		fdesc "Specifies if the ikSolver is enabled for the ikHandle. C: The default is on.  Q: When queried, this flag returns an int. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "numSpans ns"
		fdesc "Specifies the number of spans in the automatically generated  curve of the ikSplineHandle. This flag is ignored in the  ikHandleCtx. C: The default is 1.  Q: When queried, this flag returns an int. "
	fnames "parentCurve pcv"
		fdesc "Specifies if the curve should automatically be parented to the parent of the first joint affected by the ikSplineHandle. The  flag is ignored in the ikHandleCtx. C: The default is on.  Q: When queried, this flag returns an int. "
	fnames "poWeightH pwH"
		fdesc "Specifies the position/orientation weight of the  ikHandle. C: The default is 1. Q: When queried, this flag returns a float. "
	fnames "priorityH pH"
		fdesc "Specifies the priority of the ikHandle. C: The default is 1. Q: When queried, this flag returns an int. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rootOnCurve roc"
		fdesc "Specifies if the root is locked onto the curve of the ikSplineHandle. This flag is ignored in the ikHandleCtx.  C: The default is on.  Q: When queried, this flag returns an int. "
	fnames "rootTwistMode rtm"
		fdesc "Specifies if the root twist mode of the  ikSplineHandle is compatible with Power Animator. This flag is ignored in the ikHandleCtx.  C: The default is off.  Q: When queried, this flag returns an int. "
	fnames "simplifyCurve scv"
		fdesc "Specifies if the ikSplineHandle curve should be simplified. This flag is ignored in the ikHandleCtx. C: The default is on.  Q: When queried, this returns an int. "
	fnames "snapCurve snc"
		fdesc "Specifies if the curve should automatically snap  to the first joint affected by the ikSplineHandle. This flag is  ignored in the ikHandleCtx. C: The default is off.  Q: When queried, this flag returns an int. "
	fnames "snapHandleH snH"
		fdesc "Specifies if the ikHandle snapping is on. C: The default is on. Q: When queried, this flag returns an int. "
	fnames "solverTypeH stH"
		fdesc "Lists what ikSolver is being used. The  ikSplineSolver may not be selected. To use an ikSplineSolver use the ikSplineHandleCtx command.  C: The default solver is the default set by the user preferences. Q: When queried, this flag returns a string. "
	fnames "stickyH sH"
		fdesc "Specifies if the ikHandle is sticky or not. Valid strings are "sticky" and "off". C: The default is "off". Q: When queried, this flag returns a string. "
	fnames "twistType tws"
		fdesc "Specifies the type of interpolation to be used by the  ikSplineHandle. This flag is ignored in the ikHandleCtx.  The interpolation options are "linear", "easeIn", "easeOut", and  "easeInOut".  C: The default is "linear".  Q: When queried, this flag returns a string. "
	fnames "weightH wH"
		fdesc "Specifies the weight of the ikHandle. C: The default is 1. Q: When queried, this flag returns a float. "
	rcount "0"
name "ikHandleDisplayScale"
	desc "This action modifies and queries the current display size of ikHandle. The default display scale is 1.0."
	fcount "0"
	rcount "0"
name "ikSolver"
	desc "The ikSolver command is used to set the attributes for an IK Solver or create a new one. The standard edit (-e) and query (-q) flags are used for edit and query functions."
	fcount "4"
	fnames "epsilon ep"
		fdesc "max error "
	fnames "maxIterations mxi"
		fdesc "Sets the max iterations for a solution "
	fnames "name n"
		fdesc "Name of solver "
	fnames "solverType st"
		fdesc "valid solverType (only ikSystem knows what is valid) for creation of a new solver (required) "
	rcount "13"
		rname "connectJoint"
		rname "insertJoint"
		rname "ikSystemInfo"
		rname "ikHandle"
		rname "jointDisplayScale"
		rname "joint"
		rname "jointCluster"
		rname "removeJoint"
		rname "ikHandleDisplayScale"
		rname "ikSystem"
		rname "jointLattice"
		rname "mirrorJoint"
		rname "removeJoint"
name "ikSplineHandleCtx"
	desc "The ikSplineHandle context command (ikSplineHandleCtx) updates parameters of ikSplineHandle tool. The options for the tool will be set to the flags the user specifies."
	fcount "23"
	fnames "autoPriorityH apH"
		fdesc "Specifies that this handle's priority is assigned automatically. C: The default is off. Q: When queried, this flag returns an int. "
	fnames "createCurve ccv"
		fdesc "Specifies if a curve should be automatically created for the ikSplineHandle.  C: The default is on.  Q: When queried, this flag returns an int. "
	fnames "createRootAxis cra"
		fdesc "Specifies if a root transform should automatically be created above the joints affected by the ikSplineHandle.  This option is used to prevent the root flipping singularity on a motion path.  C: The default is off.  Q: When queried, this flag returns an int.  "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "forceSolverH fsH"
		fdesc "Specifies if the ikSolver is enabled for the ikHandle. C: The default is on.  Q: When queried, this flag returns an int. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "numSpans ns"
		fdesc "Specifies the number of spans in the automatically generated curve of the ikSplineHandle.  C: The default is 1.  Q: When queried, this flag returns an int. "
	fnames "parentCurve pcv"
		fdesc "Specifies if the curve should automatically be parented to the parent of the first joint affected by the ikSplineHandle.  C: The default is on.  Q: When queried, this flag returns an int. "
	fnames "poWeightH pwH"
		fdesc "Specifies the position/orientation weight of the  ikHandle. C: The default is 1. Q: When queried, this flag returns a float. "
	fnames "priorityH pH"
		fdesc "Specifies the priority of the ikHandle. C: The default is 1. Q: When queried, this flag returns an int. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rootOnCurve roc"
		fdesc "Specifies if the root is locked onto the curve of the ikSplineHandle.  C: The default is on.  Q: When queried, this flag returns an int. "
	fnames "rootTwistMode rtm"
		fdesc "Specifies if the root twist mode of the ikSplineHandle is compatible with Power Animator.  C: The default is off.  Q: When queried, this flag returns an int. "
	fnames "simplifyCurve scv"
		fdesc "Specifies if the ikSplineHandle curve should be simplified.  C: The default is on.  Q: When queried, this returns an int. "
	fnames "snapCurve snc"
		fdesc "Specifies if the curve should automatically snap to the first joint affected by the ikSplineHandle.  C: The default is off.  Q: When queried, this flag returns an int. "
	fnames "snapHandleH snH"
		fdesc "Specifies if the ikHandle snapping is on. This flag is ignored for the ikSplineSolver. C: The default is on. Q: When queried, this flag returns an int. "
	fnames "solverTypeH stH"
		fdesc "Lists what ikSolver is being used. For the  ikSplineContext the solver can only be the ikSplineSolver and this flag is ignored.  C: The default solver is the ikSplineSolver. Q: When queried, this flag returns a string. "
	fnames "stickyH sH"
		fdesc "Specifies if the ikHandle is sticky or not. Valid strings are "sticky" and "off". This flag is ignored for the ikSplineSolver. C: The default is "off". Q: When queried, this flag returns a string. "
	fnames "twistType tws"
		fdesc "Specifies the type of interpolation to be used by the ikSplineHandle.  The interpolation options are "linear", "easeIn", "easeOut", and "easeInOut". C: The default is "linear".  Q: When queried, this flag returns a string. "
	fnames "weightH wH"
		fdesc "Specifies the weight of the ikHandle. This flag is  ignored in the ikSplineHandleCtx. C: The default is 1. Q: When queried, this flag returns a float. "
	rcount "0"
name "ikSystem"
	desc "The ikSystem command is used to set the global snapping flag for handles and set the global solve flag for solvers. The standard edit (-e) and query (-q) flags are used for edit and query functions."
	fcount "8"
	fnames "allowRotation ar"
		fdesc "Set true to allow rotation of an ik handle with keys set on translation. "
	fnames "autoPriority ap"
		fdesc "set autoPriority for all ikHandles "
	fnames "autoPriorityMC apm"
		fdesc "set autoPriority for all multiChain handles "
	fnames "autoPrioritySC aps"
		fdesc "set autoPriority for all singleChain handles "
	fnames "list ls"
		fdesc "returns the solver execution order when in query mode(list of strings) changes execution order when in edit mode (int old position, int new position) "
	fnames "snap sn"
		fdesc "Set global snapping "
	fnames "solve sol"
		fdesc "Set global solve "
	fnames "solverTypes st"
		fdesc "returns a list of valid solverTypes ( query only ) "
	rcount "13"
		rname "connectJoint"
		rname "insertJoint"
		rname "ikSystemInfo"
		rname "ikHandle"
		rname "jointDisplayScale"
		rname "joint"
		rname "jointCluster"
		rname "removeJoint"
		rname "ikHandleDisplayScale"
		rname "ikSolver"
		rname "jointLattice"
		rname "mirrorJoint"
		rname "removeJoint"
name "ikSystemInfo"
	desc "This action modifies and queries the current ikSystem controls."
	fcount "1"
	fnames "globalSnapHandle gsh"
		fdesc "If this flag is off, all ikHandles will not be snapped. "
	rcount "13"
		rname "connectJoint"
		rname "insertJoint"
		rname "ikHandle"
		rname "jointDisplayScale"
		rname "joint"
		rname "jointCluster"
		rname "removeJoint"
		rname "ikHandleDisplayScale"
		rname "ikSolver"
		rname "ikSystem"
		rname "jointLattice"
		rname "mirrorJoint"
		rname "removeJoint"
name "ikfkDisplayMethod"
	desc "IkfkDisplayMethod is NOT undoable , queryable , and editable . The ikfkDisplayMethod command is used to specify how ik/fk blending should be shown."
	fcount "1"
	fnames "display d"
		fdesc "Specify how ik/fk blending should be shown. Possible choices are "none" (do not display any blending), "ik" (only show ik),"fk" (only show fk), and "ikfk" (show both ik and fk). "
	rcount "2"
		rname "jointDisplayScale"
		rname "ikHandleDisplayScale"
name "image"
	desc "This command creates a static image for non-xpm files. Any image file format supported by the file texture node is supported by this command."
	fcount "20"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "image i"
		fdesc "Sets the image given the file name. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "imfPlugins"
	desc "ImfPlugins is NOT undoable , queryable , and NOT editable . This command queries all the available imf plugins for its name, keyword or image file extension. Only one of the attributes (name, keyword or extension) can be queried at a time. If no flags are specified, this command returns a list of all available plugin names."
	fcount "6"
	fnames "extension ext"
		fdesc "image file extension "
	fnames "keyword key"
		fdesc "imf keyword "
	fnames "pluginName pn"
		fdesc "imf plugin name "
	fnames "writeSupport ws"
		fdesc "write operation is supported "
	fnames "readSupport rs"
		fdesc "read operation is supported "
	fnames "multiFrameSupport mfs"
		fdesc "multi frame IO is supported "
	rcount "0"
name "importComposerCurves"
	desc "Pops up file browser. Parses composer file and looks for curves. If if finds any curves it will create maya animation curves with the same name as the composer curves."
	fcount "0"
	rcount "0"
name "inheritTransform"
	desc "This command toggles the inherit state of an object. If this flag is off the object will not inherit transformations from its parent. In other words transformations applied to the parent node will not affect the object and it will act as though it is under the world. If the -p flag is specified then the object's transformation will be modified to compensate when changing the inherit flag so the object will not change its world-space location."
	fcount "3"
	fnames "preserve p"
		fdesc "preserve the objects world-space position by modifying the object(s) transformation matrix. "
	fnames "query q"
		fdesc "query the inherit state for the given object(s). returns boolean when used. "
	fnames "toggle tgl"
		fdesc "toggle the inherit state for the given object(s) (default if no flags are given) -on turn on inherit state for the given object(s) -off turn off inherit state for the given object(s) "
	rcount "0"
name "insertJoint"
	desc "This command will insert a new joint under the given or selected joint. If the given joint has child joints, they will be reparented under the new inserted joint. The given joint(or selected joint) should not have skin attached. The command works on the selected joint. No options or flags are necessary."
	fcount "0"
	rcount "0"
name "insertJointCtx"
	desc "The command will create an insert joint context. The insert joint tool inserts joints into an existing chain of joints."
	fcount "6"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "insertKeyCtx"
	desc "This command creates a context which may be used to insert keys within the graph editor."
	fcount "9"
	fnames "breakdown bd"
		fdesc "Specifies whether or not to create breakdown keys "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "insertKnotCurve"
	desc "The insertKnotCurve command inserts knots into a curve given a list of parameter values. The number of knots to add at each parameter value and whether the knots are added or complemented can be specified. The name of the curve is returned. If construction history is on, the name of the resulting dependency node is also returned. An edit point will appear where you insert the knot. Also, the number of spans and CVs in the curve will increase in the area where the knot is inserted. You can insert up to "degree" knots at a curve parameter that isn't.... Refer to full documentation"
	fcount "12"
	fnames "addKnots add"
		fdesc "Whether to add knots or complement.  Complement means knots will be added to reach the specified number of knots. Default:  true "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "insertBetween ib"
		fdesc "If set to true, and there is more than one parameter value specified, the knots will get inserted at equally spaced intervals between the given parameter values, rather than at the parameter values themselves. Default:  false "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "numberOfKnots nk"
		fdesc "How many knots to insert.  At any point on the curve, there can be a maximum of "degree" knots. Default:  1 "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "parameter p"
		fdesc "Parameter value(s) where knots are added Default:  0.0 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	rcount "0"
name "insertKnotSurface"
	desc "The insertKnotSurface command inserts knots (aka isoparms) into a surface given a list of parameter values. The number of knots to add at each parameter value and whether the knots are added or complemented can be specified. The name of the surface is returned and if history is on, the name of the resulting dependency node is also returned. You must specify one, none or all number of knots with the "-nk" flag. eg. if you specify none, then the default (one) knot will be added at each specified parameter value. If you specify one "-nk" value then that number.... Refer to full documentation"
	fcount "13"
	fnames "addKnots add"
		fdesc "Whether to add knots or complement.  Complement means knots will be added to reach the specified number of knots. Default:  true "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "direction d"
		fdesc "Direction in which to insert knot: 0 - V direction, 1 - U direction Default:  1 "
	fnames "insertBetween ib"
		fdesc "If set to true, and there is more than one parameter value specified, the knots will get inserted at equally spaced intervals between the given parameter values, rather than at the parameter values themselves. Default:  false "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "numberOfKnots nk"
		fdesc "How many knots to insert Default:  1 "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "parameter p"
		fdesc "Parameter value(s) where knots are added Default:  0.0 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	rcount "0"
name "instance"
	desc "Instancing is a way of making the same object appear twice in the scene. This is accomplished by creation of a new transform node that points to an exisiting object. Changes to the transform are independent but changes to the "instanced" object affect all instances since the node is shared. If no objects are given, then the selected list is instanced. When an object is instanced a new transform node is created that points to the selected object. The smart transform feature allows instance to transform newly instanced objects based on previous transformations between instances. Example: Instance an object and.... Refer to full documentation"
	fcount "3"
	fnames "leaf lf"
		fdesc "Instances leaf-level objects. Acts like duplicate except leaf-level objects are instanced. "
	fnames "name n"
		fdesc "Name to give new instance "
	fnames "smartTransform st"
		fdesc "Transforms instances item based on movements between transforms "
	rcount "0"
name "instancer"
	desc "Instancer is undoable , queryable , and editable . This command is used to create a instancer node and set the proper attributes in the node."
	fcount "16"
	fnames "name n"
		fdesc "This flag sets or queries the name of the instancer node. "
	fnames "object obj"
		fdesc "This flag indicates which objects will be add/removed from the list of instanced objects.  The flag is used in conjuction with the -add and -remove flags.  If neither of these flags is specified on the command line then -add is assumed. "
	fnames "objectPosition op"
		fdesc "This flag queries the given objects position.  This object can be any instanced object or sub-object. "
	fnames "objectRotation or"
		fdesc "This flag queries the given objects rotation.  This object can be any instanced object or sub-object. "
	fnames "objectScale os"
		fdesc "This flag queries the given objects scale.  This object can be any instanced object or sub-object. "
	fnames "addObject a"
		fdesc "This flag indicates that objects specified by the -object flag will be added to the instancer node as instanced objects. "
	fnames "removeObject rm"
		fdesc "This flag indicates that objects specified by the -object flag will be removed from the instancer node as instanced objects. "
	fnames "cycle c"
		fdesc "This flag sets or queries the cycle attribute for the instancer node. The options are "none" or "sequential".  The default is "none". "
	fnames "cycleStep cs"
		fdesc "This flag sets or queries the cycle step attribute for the instancer node.  This attribute indicates the size of the step in frames or seconds (see cycleStepUnit). "
	fnames "cycleStepUnits csu"
		fdesc "This flag sets or queries the cycle step unit attribute for the instancer node.  The options are "frames" or "seconds".  The default is "frames". "
	fnames "index i"
		fdesc "This flag is used to query the name of the ith instanced object. "
	fnames "levelOfDetail lod"
		fdesc "This flag sets or queries the level of detail of the instanced objects.  The options are "geometry", "boundingBox", "boundingBoxes".  The default is "geometry". "
	fnames "rotationOrder ro"
		fdesc "This flag specifies the rotation order associated with the rotation flag.  The options are XYZ, XZY, YXZ, YZX, ZXY, or ZYX.  By default the attribute is XYZ. "
	fnames "rotationUnits ru"
		fdesc "This flag specifies the rotation units associated with the rotation flag.  The options are degrees or radians.  By default the attribute is degrees. "
	fnames "valueName vn"
		fdesc "This flag is used to query the value(s) of the array associated with the given name.  If the -index flag is used in conjuction with this flag then the ith value will be returned.  Otherwise, the entire array will be returned. "
	fnames "pointDataSource pds"
		fdesc "This flag is used to query the source node supply the data for the input points. "
	rcount "0"
name "intField"
	desc "Create a field control that accepts only integer values and is bound by a minimum and maximum value. An invisible slider is attached to the field and accessed by holding down the Ctrl modifier key while pressing one of the mouse buttons. Dragging the invisible slider to the right with the middle mouse button increases the field value by the amount specified with the -s/step flag, while dragging to the left decreases the value by the same amount. The left and right mouse buttons apply a factor of 0.1 and 10 to the step value."
	fcount "28"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed when the value changes.  This command is not invoked when the value changes via the  -v/value  flag. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dragCommand dc"
		fdesc "Command executed when the value changes by dragging the invisible slider. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "editable ed"
		fdesc "The edit state of the field.  By default, this flag is set to true and the field value may be changed by typing into it. If false then the field is 'read only' and can not be typed into. The value of the field can always be changed with the  -v/value  flag regardless of the state of the  -ed/editable  flag. "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "enterCommand ec"
		fdesc "Command executed when the keypad 'Enter' key is pressed. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "maxValue max"
		fdesc "Upper limit of the field. "
	fnames "minValue min"
		fdesc "Lower limit of the field. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "receiveFocusCommand rfc"
		fdesc "Command executed when the field receives focus. "
	fnames "step s"
		fdesc "Increment for the invisible slider.  The field value will change by this amount when the invisible slider is dragged. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "value v"
		fdesc "Value of the field. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "intFieldGrp"
	desc "This command creates a pre-packaged collection of label text and editable integer fields. The label text is optional and one to four fields can be created. All of the group commands position their individual controls in columns starting at column 1. The layout of each control (ie. column) can be customized using the -cw/columnWidth , -co/columnOffset , -cat/columnAttach , -cal/columnAlign , and -adj/adjustableColumn flags. By default, columns are left aligned with no offset and are 100 pixels wide. Only one column in any group can be adjustable."
	fcount "64"
	fnames "adjustableColumn adj"
		fdesc "Specifies which column has an adjustable size that changes with the sizing of the layout.  The column value is a 1-based index.  You may also specify 0 to turn off the previous adjustable column. "
	fnames "adjustableColumn2 ad2"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly two columns.  "
	fnames "adjustableColumn3 ad3"
		fdesc "Specifies that the column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly three columns.  "
	fnames "adjustableColumn4 ad4"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly four columns.  "
	fnames "adjustableColumn5 ad5"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly five columns.  "
	fnames "adjustableColumn6 ad6"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly six columns.  "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command string executed when the value of any of the fields changes. "
	fnames "columnAlign cal"
		fdesc "Arguments are : column number, alignment type. Possible alignments are: left | right | center.  Specifies alignment type for the specified column. "
	fnames "columnAlign2 cl2"
		fdesc "Sets the text alignment of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign3 cl3"
		fdesc "Sets the text alignment for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign4 cl4"
		fdesc "Sets the text alignment for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign5 cl5"
		fdesc "Sets the text alignment for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign6 cl6"
		fdesc "Sets the text alignment for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "center". "
	fnames "columnAttach cat"
		fdesc "Arguments are : column number, attachment type, and offset. Possible attachments are: left | right | both.  Specifies column attachment types and offets. "
	fnames "columnAttach2 ct2"
		fdesc "Sets the attachment type of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach3 ct3"
		fdesc "Sets the attachment type for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach4 ct4"
		fdesc "Sets the attachment type for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach5 ct5"
		fdesc "Sets the attachment type for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach6 ct6"
		fdesc "Sets the attachment type for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "both". "
	fnames "columnOffset2 co2"
		fdesc "This flag is used in conjunction with the -columnAttach2 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the two columns.  The offsets applied are based on the attachments  specified with the -columnAttach2 flag.  Ignored if there is not exactly two columns.  "
	fnames "columnOffset3 co3"
		fdesc "This flag is used in conjunction with the -columnAttach3 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the three columns.  The offsets applied are based on the attachments  specified with the -columnAttach3 flag.  Ignored if there is not exactly three columns.  "
	fnames "columnOffset4 co4"
		fdesc "This flag is used in conjunction with the -columnAttach4 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the four columns.  The offsets applied are based on the attachments  specified with the -columnAttach4 flag.  Ignored if there is not exactly four columns.  "
	fnames "columnOffset5 co5"
		fdesc "This flag is used in conjunction with the -columnAttach5 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the five columns.  The offsets applied are based on the attachments  specified with the -columnAttach5 flag.  Ignored if there is not exactly five columns.  "
	fnames "columnOffset6 co6"
		fdesc "This flag is used in conjunction with the -columnAttach6 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the six columns.  The offsets applied are based on the attachments  specified with the -columnAttach6 flag.  Ignored if there is not exactly six columns.  "
	fnames "columnWidth cw"
		fdesc "Arguments are : column number, column width. Sets the width of the specified column where the first parameter specifies the column (1 based index) and the second parameter specifies the width. "
	fnames "columnWidth1 cw1"
		fdesc "Sets the width of the first column.  Ignored if there is not  exactly one column. "
	fnames "columnWidth2 cw2"
		fdesc "Sets the column widths of both columns.  Ignored if there is not exactly two columns. "
	fnames "columnWidth3 cw3"
		fdesc "Sets the column widths for all 3 columns.  Ignored if there is not exactly 3 columns. "
	fnames "columnWidth4 cw4"
		fdesc "Sets the column widths for all 4 columns.  Ignored if there is not exactly 4 columns. "
	fnames "columnWidth5 cw5"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "columnWidth6 cw6"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dragCommand dc"
		fdesc "Command string executed when dragging the invisible slider in any of the fields. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "enable1 en1"
		fdesc "No Description"
	fnames "enable2 en2"
		fdesc "No Description"
	fnames "enable3 en3"
		fdesc "No Description"
	fnames "enable4 en4"
		fdesc "Enable state for the respective field. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "extraLabel el"
		fdesc "If present on creation this specifies that there will be an extra label in the group.  Sets the string to be label text to the right of fields. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "If present on creation this specifies that there will be a label to the left of the fields.  Sets the string to be the label text. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfFields nf"
		fdesc "Set the number of fields on creation.  One to four fields are available.  The default is one field. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rowAttach rat"
		fdesc "Arguments are : attachment type, offset. Possible attachments are: top | bottom | both.  Specifies attachment types  and offsets for the entire row.   "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "value v"
		fdesc "Values for all fields. "
	fnames "value1 v1"
		fdesc "No Description"
	fnames "value2 v2"
		fdesc "No Description"
	fnames "value3 v3"
		fdesc "No Description"
	fnames "value4 v4"
		fdesc "Value for the respective field. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "intScrollBar"
	desc "Create a scroll bar control that accepts only integer values and is bound by a minimum and maximum value. The scroll bar displays a marker indicating the current value of the scroll bar relative to it's minimum and maximum values. Click and drag the marker or on the scroll bar itself to change the current value."
	fcount "27"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed when the value changes.  This command is not invoked when the value changes via the -v/value flag. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dragCommand dc"
		fdesc "Command executed when the value changes by dragging the scroll bar's value marker. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "horizontal hr"
		fdesc "Orientation of the scroll bar.  This flag is true by default  which corresponds to a horizontally oriented scroll bar. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "largeStep ls"
		fdesc "Larger increment for the scroll bar, ie. the increment used when the press is between the arrow button and the thumb. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "maxValue max"
		fdesc "Upper limit of the scroll bar. "
	fnames "minValue min"
		fdesc "Lower limit of the scroll bar. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "step s"
		fdesc "Smaller increment for the scroll bar, ie. the increment used when the arrow buttons are pressed. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "value v"
		fdesc "Value of the scroll bar. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "intSlider"
	desc "Create a slider control that accepts only integer values and is bound by a minimum and maximum value. The slider displays a marker indicating the current value of the slider relative to it's minimum and maximum values. Click and drag the marker or on the slider itself to change the current value."
	fcount "26"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed when the value changes.  This command is not invoked when the value changes via the -v/value flag. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dragCommand dc"
		fdesc "Command executed when the value changes by dragging the slider's value marker. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "horizontal hr"
		fdesc "Orientation of the slider.  This flag is true by default  which corresponds to a horizontally oriented slider. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "maxValue max"
		fdesc "Upper limit of the slider. "
	fnames "minValue min"
		fdesc "Lower limit of the slider. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "step s"
		fdesc "On Irix and Linux the step value represents the amount the value will increase or decrease when you click either side of the slider. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "value v"
		fdesc "Value of the slider. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "intSliderGrp"
	desc "This command creates a pre-packaged collection of controls containing a label text, an integer field and an integer slider. The text and field controls are optional. Editing or querying the field range values has no effect if the -f/field flag was not specified when the group was created. This group also allows you to enter values into the field outside of the slider range which is limited by the -min/minValue and -max/maxValue flags. To do this, use the -fmn/fieldMinValue and -fmx/fieldMaxValue flags to specify a greater range of values. Note that the command will not allow you to specify a.... Refer to full documentation"
	fcount "63"
	fnames "adjustableColumn adj"
		fdesc "Specifies which column has an adjustable size that changes with the sizing of the layout.  The column value is a 1-based index.  You may also specify 0 to turn off the previous adjustable column. "
	fnames "adjustableColumn2 ad2"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly two columns.  "
	fnames "adjustableColumn3 ad3"
		fdesc "Specifies that the column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly three columns.  "
	fnames "adjustableColumn4 ad4"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly four columns.  "
	fnames "adjustableColumn5 ad5"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly five columns.  "
	fnames "adjustableColumn6 ad6"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly six columns.  "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "The command string executed when the value of the slider changes.  It will be executed only once after a drag of the slider. "
	fnames "columnAlign cal"
		fdesc "Arguments are : column number, alignment type. Possible alignments are: left | right | center.  Specifies alignment type for the specified column. "
	fnames "columnAlign2 cl2"
		fdesc "Sets the text alignment of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign3 cl3"
		fdesc "Sets the text alignment for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign4 cl4"
		fdesc "Sets the text alignment for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign5 cl5"
		fdesc "Sets the text alignment for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign6 cl6"
		fdesc "Sets the text alignment for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "center". "
	fnames "columnAttach cat"
		fdesc "Arguments are : column number, attachment type, and offset. Possible attachments are: left | right | both.  Specifies column attachment types and offets. "
	fnames "columnAttach2 ct2"
		fdesc "Sets the attachment type of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach3 ct3"
		fdesc "Sets the attachment type for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach4 ct4"
		fdesc "Sets the attachment type for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach5 ct5"
		fdesc "Sets the attachment type for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach6 ct6"
		fdesc "Sets the attachment type for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "both". "
	fnames "columnOffset2 co2"
		fdesc "This flag is used in conjunction with the -columnAttach2 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the two columns.  The offsets applied are based on the attachments  specified with the -columnAttach2 flag.  Ignored if there is not exactly two columns.  "
	fnames "columnOffset3 co3"
		fdesc "This flag is used in conjunction with the -columnAttach3 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the three columns.  The offsets applied are based on the attachments  specified with the -columnAttach3 flag.  Ignored if there is not exactly three columns.  "
	fnames "columnOffset4 co4"
		fdesc "This flag is used in conjunction with the -columnAttach4 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the four columns.  The offsets applied are based on the attachments  specified with the -columnAttach4 flag.  Ignored if there is not exactly four columns.  "
	fnames "columnOffset5 co5"
		fdesc "This flag is used in conjunction with the -columnAttach5 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the five columns.  The offsets applied are based on the attachments  specified with the -columnAttach5 flag.  Ignored if there is not exactly five columns.  "
	fnames "columnOffset6 co6"
		fdesc "This flag is used in conjunction with the -columnAttach6 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the six columns.  The offsets applied are based on the attachments  specified with the -columnAttach6 flag.  Ignored if there is not exactly six columns.  "
	fnames "columnWidth cw"
		fdesc "Arguments are : column number, column width. Sets the width of the specified column where the first parameter specifies the column (1 based index) and the second parameter specifies the width. "
	fnames "columnWidth1 cw1"
		fdesc "Sets the width of the first column.  Ignored if there is not  exactly one column. "
	fnames "columnWidth2 cw2"
		fdesc "Sets the column widths of both columns.  Ignored if there is not exactly two columns. "
	fnames "columnWidth3 cw3"
		fdesc "Sets the column widths for all 3 columns.  Ignored if there is not exactly 3 columns. "
	fnames "columnWidth4 cw4"
		fdesc "Sets the column widths for all 4 columns.  Ignored if there is not exactly 4 columns. "
	fnames "columnWidth5 cw5"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "columnWidth6 cw6"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dragCommand dc"
		fdesc "The command string executed repeatedly during a drag of the slider. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "extraLabel el"
		fdesc "If present on creation this specifies that there will be an extra label appearing after the slider.  Sets the string to be the text for the extra label. "
	fnames "field f"
		fdesc "If true on creation the group will have an editable int field present that reflects the value of the slider. "
	fnames "fieldMaxValue fmx"
		fdesc "Maximum value that may be entered in the field.  This  value may be set to any value greater than  the  -max/maxValue  flag.  By default, it is equal to the  -max/maxValue  flag. "
	fnames "fieldMinValue fmn"
		fdesc "Minimum value that may be entered in the field.  This  value may be set to any value less than  the  -min/minValue  flag.  By default, it is equal to the  -min/minValue  flag. "
	fnames "fieldStep fs"
		fdesc "Increment for the field. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "If present on creation the group will have static text. Returns a string on query. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "maxValue max"
		fdesc "Sets the maximum value for both the slider and the field. "
	fnames "minValue min"
		fdesc "Sets the minimum value for both the slider and the field. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rowAttach rat"
		fdesc "Arguments are : attachment type, offset. Possible attachments are: top | bottom | both.  Specifies attachment types  and offsets for the entire row.   "
	fnames "sliderStep ss"
		fdesc "On Irix and Linux the slider step value represents the  amount the value will increase or decrease when you click either side of the slider. "
	fnames "step s"
		fdesc "Increment for both the slider and field. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "value v"
		fdesc "Value of the group. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "interToUI"
	desc "Takes a string in interCaps form, and returns a "UI" string. Allows things that are called something like graphEditor to be shown to the user as "Graph Editor"."
	fcount "0"
	rcount "0"
name "internalVar"
	desc "This command returns the values of internal variables. No modification of these variables is supported."
	fcount "8"
	fnames "userAppDir uad"
		fdesc "Return the user application directory. "
	fnames "userBitmapsDir ubd"
		fdesc "Return the user bitmaps prefs directory. "
	fnames "userMarkingMenuDir umm"
		fdesc "Return the user marking menu directory. "
	fnames "userPrefDir upd"
		fdesc "Return the user preference directory. "
	fnames "userScriptDir usd"
		fdesc "Return the user script directory. "
	fnames "userShelfDir ush"
		fdesc "Return the user shelves directory. "
	fnames "userTmpDir utd"
		fdesc "Return a temp directory.  Will check for TMPDIR environment variable, otherwise will return the current directory. "
	fnames "userWorkspaceDir uwd"
		fdesc "Return the user workspace directory (also known as the projects directory). "
	rcount "0"
name "intersect"
	desc "The intersect command creates a curve on surface where all surfaces intersect with each other. By default, the curve on surface is created for both surfaces. However, by using the -fs flag, only the first surface will have a curve on surface. Also, the intersection curve can be created as a 3D curve rather than a curve on surface."
	fcount "10"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "set option to create curve-on-surface as a 3D curve only or as a curve-on-surface (default) "
	fnames "firstSurface fs"
		fdesc "creates a curve-on-surface on the first surface only or on all surfaces (default) "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "tolerance tol"
		fdesc "Tolerance to fit to. Default:  0.01 "
	rcount "3"
		rname "curveOnSurface"
		rname "projectCurve"
		rname "duplicateCurve"
name "iprEngine"
	desc "Command to create or edit an iprEngine. A iprEngine is an object that watches for changes to shading networks and automatically reshades to generate an up-to-date image."
	fcount "27"
	fnames "copy cp"
		fdesc "Copies the deep raster file, as well as its related files, to the  new location. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "estimatedMemory mem"
		fdesc "Displays the estimated memory being used by IPR. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "iprImage ipr"
		fdesc "Specify the ipr image to use. "
	fnames "motionVectorFile mvf"
		fdesc "Returns the name of the motion vector file used by IPR. "
	fnames "object obj"
		fdesc "The objects to be tuned. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "region r"
		fdesc "The coordinates of the region to be tuned. The integers are in the sequence        or x1,y2  x2,y2 "
	fnames "relatedFiles rel"
		fdesc "Returns the names for the related files, e.g, the non-glow-non-blur image, the motion vector file, and the depth-map files. "
	fnames "releaseIprImage rii"
		fdesc "The ipr image should be released and  memory should	be freed. "
	fnames "resolution res"
		fdesc "The width and height of the ipr file. "
	fnames "scanlineIncrement sli"
		fdesc "Set the scanline increment percentage.  If the height of the region being update is 240 pixels, and the scanlineIncrement is 10% then the image will refresh blocks of 24 scanlines. "
	fnames "showProgressBar spb"
		fdesc "Show progress bar during tuning. "
	fnames "startTuning st"
		fdesc "An ipr image has been specified and now changes  to shading	networks should force an image to be  produced. "
	fnames "stopTuning spt"
		fdesc "Tuning should cease but ipr image should not be closed. "
	fnames "underPixel up"
		fdesc "Get list of objects under a pixel. "
	fnames "update u"
		fdesc "Force an update. "
	fnames "updateDepthOfField udf"
		fdesc "Force a refresh of depth-of-field. "
	fnames "updateLightGlow ulg"
		fdesc "Automatically update when light glow changes. "
	fnames "updateMotionBlur umb"
		fdesc "Automatically update when 2.5D motion blur changes. "
	fnames "updatePort up"
		fdesc "The name of the port that is to be updated when pixel values are recomputed.  (not currently supported) "
	fnames "updateShaderGlow usg"
		fdesc "Automatically update when shader glow changes. "
	fnames "updateShading us"
		fdesc "Automatically update shading. "
	fnames "updateShadowMaps usm"
		fdesc "Force the shadow maps to be generated and an update to occur. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "isAnimCurve"
	desc "Determines whether or not the specified object is an animCurve (i.e. its nodeType is one of animCurveTL, animCurveTA, animCurveTU, animCurveTT, animCurveUL, animCurveUA, animCurveUU or animCurveUT)."
	fcount "0"
	rcount "0"
name "isConnected"
	desc "The isConnected command is used to check if two plugs are connected in the dependency graph. The return value is false if they are not and true if they are."
	fcount "1"
	fnames "iuc ignoreUnitConversion"
		fdesc "In looking for connections, skip past unit conversion nodes. srcPlug Specifies the source plug to check for connection. dstPlug Specifies the destination plug to check for connection. "
	rcount "3"
		rname "connectionInfo"
		rname "listConnections"
		rname "connectAttr"
name "isDirty"
	desc "The isDirty command is used to check if a plug is dirty. connected in the dependency graph. The return value is 0 if it is not and 1 if it is. If more than one plug is specified then the result is the logical "or" of all objects (ie. returns 1 if *any* of the plugs are dirty)."
	fcount "2"
	fnames "connection c"
		fdesc "Check the connection of the plug (default). "
	fnames "datablock d"
		fdesc "Check the datablock entry for the plug. "
	rcount "6"
		rname "isConnected"
		rname "objExists"
		rname "nodeType"
		rname "objectType"
		rname "attributeQuery"
		rname "getClassification"
name "isParentOf"
	desc "This procedure returns true if $parent is a DAG parent of the specified DAG object, and false otherwise. See also firstParentOf()."
	fcount "0"
	rcount "0"
name "isTrue"
	desc "This commmand returns the state of the named condition. If the condition is true, it returns 1. Otherwise it returns 0."
	fcount "0"
	rcount "0"
name "isValidObjectName"
	desc "Return true if the string is a valid object name. A valid object name begins with a letter and is followed letters, digits, or underscores. Spaces are not allowed."
	fcount "0"
	rcount "0"
name "isValidString"
	desc "Return true if the string is valid according to the regular expression argument. Use "([a-zA-Z]+)([a-zA-Z0-9_])*" as the regular expression for strings that must begin with a letter and is followed by letters, digits, or underscores (no spaces allowed). Examples of valid strings are: "Name", "New_Name", and "Name1". Use "([a-zA-Z]+)([a-zA-Z0-9_ ])*" as the regular expression for strings that must begin with a letter and is followed by letters, digits, underscores, or spaces. Examples of valid strings are: "Name", "New Name", and "Name 1". Use "^[0-9][0-9][0-9](\\\.)[0-9][0-9][0-9](\\\.)[0-9][0-9][0-9][0-9]$" as the regular expression for strings that are 10 digit phone numbers. Periods must follow the.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "isValidUiName"
	desc "Return true if the string is a valid user interface name. A valid user interface name begins with a letter and is followed letters, digits, underscores or spaces."
	fcount "0"
	rcount "0"
name "isolateSelect"
	desc "This command turns on/off isolate select mode in a specified modeling view. Isolate select mode is a display mode where the currently selected objects are added to a list and only those objects are displayed in the view. It allows for selective viewing of specific objects and object components."
	fcount "7"
	fnames "addDagObject ado"
		fdesc "Add the specified object to the set of objects to be displayed in the view. "
	fnames "addSelected as"
		fdesc "Add the currently active objects to the set of objects to be displayed in the view. "
	fnames "loadSelected ls"
		fdesc "Replace the objects being displayed with the currently active objects. "
	fnames "removeSelected rs"
		fdesc "Remove the currently active objects to the set of objects to be displayed in the view. "
	fnames "state s"
		fdesc "Turns isolate select mode on/off. "
	fnames "update u"
		fdesc "Update the view's list of objects due to a change to the set of objects to be displayed. "
	fnames "viewedObjects vo"
		fdesc "Returns the name (if any) of the objectSet which contains the list of objects visible in the view if isolate select mode is on. If isolate select mode is off, an empty string is returned. "
	rcount "0"
name "itemFilter"
	desc "This command creates a named itemFilter object. This object can be attached to selectionConnection objects, or to editors, in order to filter the item lists going through them. Using union, intersection and difference filters, complex composite filters can be created."
	fcount "24"
	fnames "byBin bk"
		fdesc "The filter will only pass items whose bin list  contains the given string as a bin name.    This is a multi-use flag. If more than one occurance of this flag is used in a single command, the filter will accept a node if it matches at least one of the given bins (in other words, a union or logical or  of all given bins. "
	fnames "byName bn"
		fdesc "The filter will only pass items whose names match the given regular expression string.  This string can contain the special characters * and ?.  '?' matches any one character, and '*' matches any substring. "
	fnames "byScript bs"
		fdesc "The filter will run a MEL script named by the given string on each item name.  Items will pass the filter if the script returns a non-zero value. The script name string must be the name of a proc whose signature is: global proc int procName( string $name ) Note that if -secondScript is also used, it will always take precidence. "
	fnames "byType bt"
		fdesc "The filter will only pass items whose typeName matches the given string.  The typeName of an object can be found using the  nodeType  command.  This is a multi-use flag. If more than one occurance of this flag is used in a single command, the filter will accept a node if it matches at least one of the given types (in other words, a union or logical or  of all given types. "
	fnames "category cat"
		fdesc "A string for categorizing the filter. "
	fnames "classification cls"
		fdesc "Internal use only.  Indicates whether the filter is a built-in  or user filter. The string argument is one of "builtIn" | "user" | "other". "
	fnames "clearByBin cbk"
		fdesc "This flag will clear any existing bins associated with this filter. "
	fnames "clearByType cbt"
		fdesc "This flag will clear any existing typeNames associated with this filter. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "difference di"
		fdesc "The filter will consist of the set difference of two other filters, whose names are the given strings. Items will pass this filter if and only if they pass the first filter but not the second filter. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "intersect in"
		fdesc "The filter will consist of the intersection of two other filters, whose names are the given strings. Items will pass this filter if and only if they pass both of the contained filters. "
	fnames "listBuiltInFilters lbf"
		fdesc "Returns an array of all item filters with classification "builtIn". "
	fnames "listOtherFilters lof"
		fdesc "Returns an array of all item filters with classification "other". "
	fnames "listUserFilters luf"
		fdesc "Returns an array of all item filters with classification "user". "
	fnames "negate neg"
		fdesc "This flag can be used to cause the filter to invert itself, and reverse what passes and what fails. "
	fnames "parent p"
		fdesc "Optional.  If specified, the filter's life-span is linked to that of the parent.  When the parent goes out of scope, so does the filter.  If not specified, the filter will exist until explicitly deleted. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "secondScript ss"
		fdesc "Can be used in conjunction with the -bs flag.  The second script is for filtering whole lists at once, rather than individually.  Its signature must be: global proc string[] procName( string[] $name ) It should take in a list of items, and return a filtered list of items. "
	fnames "text t"
		fdesc "Defines an annotation string to be stored with the filter "
	fnames "union un"
		fdesc "The filter will consist of the union of two other filters, whose names are the given strings. Items will pass this filter if they pass at least one of the contained filters. "
	fnames "uniqueNodeNames unn"
		fdesc "Returns unique node names to script filters so there are no naming  conflicts. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "itemFilterAttr"
	desc "This command creates a named itemFilterAttr object. This object can be attached to to editors, in order to filter the attributes going through them. Using union and intersection filters, complex composite filters can be created."
	fcount "20"
	fnames "byName bn"
		fdesc "The filter will only pass items whose names match the given regular expression string.  This string can contain the special characters * and ?.  '?' matches any one character, and '*' matches any substring. "
	fnames "byNameString bns"
		fdesc "The filter will only pass items whose names match the given string. This is a multi-use flag which allows the user to specify several strings. The filter will pass items that match any of the strings. "
	fnames "byScript bs"
		fdesc "The filter will run a MEL script named by the given string on each  attribute name.  Attributes will pass the filter if the script  returns a non-zero value. The script name string must be the name of a proc whose signature is: global proc int procName( string $nodeName string $attrName ) "
	fnames "classification cls"
		fdesc "Internal use only.  Indicates whether the filter is a built-in  or user filter. The string argument is one of "builtIn" | "user" | "other". "
	fnames "hasCurve hc"
		fdesc "The filter will only pass attributes that are driven by animation curves. "
	fnames "hasExpression he"
		fdesc "The filter will only pass attributes that are driven by expressions "
	fnames "hidden h"
		fdesc "The filter will only pass attributes that are hidden to the user "
	fnames "intersect in"
		fdesc "The filter will consist of the intersection of two other filters, whose names are the given strings. Attributes will pass this filter if and only if they pass both of the contained filters. "
	fnames "keyable k"
		fdesc "The filter will only pass attributes that are keyable "
	fnames "listBuiltInFilters lbf"
		fdesc "Returns an array of all attribute filters with classification "builtIn". "
	fnames "listOtherFilters lof"
		fdesc "Returns an array of all attribute filters with classification "other". "
	fnames "listUserFilters luf"
		fdesc "Returns an array of all attribute filters with classification "user". "
	fnames "negate neg"
		fdesc "This flag can be used to cause the filter to invert itself, and reverse what passes and what fails. "
	fnames "parent p"
		fdesc "This flag is no longer supported. "
	fnames "readable r"
		fdesc "The filter will only pass attributes that are readable (outputs) "
	fnames "scaleRotateTranslate srt"
		fdesc "The filter will show only SRT attributes: scale, rotate, translate and their children "
	fnames "secondScript ss"
		fdesc "Can be used in conjunction with the -bs flag.  The second script is for filtering whole lists at once, rather than individually.  Its signature must be: global proc string[] procName( string[] $nodeName string[] $attrName ) It should take in a list of attributes, and return a filtered list of attributes. "
	fnames "text t"
		fdesc "Defines an annotation string to be stored with the filter "
	fnames "union un"
		fdesc "The filter will consist of the union of two other filters, whose names are the given strings. Attributes will pass this filter if they pass at least one of the contained filters. "
	fnames "writable w"
		fdesc "The filter will only pass attributes that are writable (inputs) "
	rcount "0"
name "itemFilterRender"
	desc "This command creates a named renderTypeFilter object. This object can be attached to selectionConnection objects, or to editors, in order to filter the renderType lists going through them. Using union and intersection filters, complex composite filters can be created."
	fcount "40"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "anyTextures at"
		fdesc "Pass texture objects if set to true.  Value is false by default.  To get all objects that are not textures then set this flag to true and use the  -neg/negate  flag to invert the result. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "category cat"
		fdesc "A string for categorizing the filter. "
	fnames "classification cls"
		fdesc "Internal use only.  Indicates whether the filter is a built-in  or user filter. The string argument is one of "builtIn" | "user" | "other". "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exclusiveLights exl"
		fdesc "Pass exclusive light objects if set to true.  Value is false by default.  To get all objects that are not exclusive lights then set this flag to true and use the  -neg/negate  flag to invert the result. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "lightSets ls"
		fdesc "Pass light set objects if set to true.  Value is false by default.  To get all objects that are not light sets then set this flag to true and use the  -neg/negate  flag to invert the result. "
	fnames "lights l"
		fdesc "Pass light objects if set to true.  Value is false by default.  To get all objects that are not lights then set this flag to true and use the  -neg/negate  flag to invert the result. "
	fnames "linkedLights ll"
		fdesc "Pass linked light objects if set to true.  Value is false by default.  To get all objects that are not linked lights then set this flag to true and use the  -neg/negate  flag to invert the result. "
	fnames "listBuiltInFilters lbf"
		fdesc "Returns an array of all item filters with classification "builtIn". "
	fnames "listOtherFilters lof"
		fdesc "Returns an array of all item filters with classification "other". "
	fnames "listUserFilters luf"
		fdesc "Returns an array of all item filters with classification "user". "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "negate neg"
		fdesc "This flag can be used to cause the filter to invert itself, and reverse what passes and what fails. "
	fnames "nonExclusiveLights nxl"
		fdesc "Pass non-exclusive light objects if set to true.  Value is  false by default.  To get all objects that are not non-exclusive lights then set this flag to true and use the  -neg/negate  flag  to invert the result. "
	fnames "nonIlluminatingLights nil"
		fdesc "Pass non-illuminating light objects if set to true.  Value is  false by default.  To get all objects that are not non-illuminating lights then set this flag to true and use the  -neg/negate  flag  to invert the result. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "postProcess pp"
		fdesc "Pass post process objects if set to true.  Value is false by default.  To get all objects that are not post processes then set this flag to true and use the  -neg/negate  flag to invert the result. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "renderUtilityNode run"
		fdesc "Pass render utility node objects if set to true.  Value is false by default.  To get all objects that are not render utility nodes then set this flag to true and use the  -neg/negate  flag to invert the result. "
	fnames "renderableObjectSets ros"
		fdesc "Pass renderable object sets if set to true.  Value is  false by default.  To get all objects that are not renderable object sets then set this flag to true and use the  -neg/negate  flag  to invert the result. "
	fnames "shaders s"
		fdesc "Pass shader objects if set to true.  Value is false by default.  To get all objects that are not shaders then set this flag to true and use the  -neg/negate  flag to invert the result. "
	fnames "text t"
		fdesc "Defines an annotation string to be stored with the filter "
	fnames "textures2d t2d"
		fdesc "Pass 2D texture objects if set to true.  Value is false by default.  To get all objects that are not 2D textures then set this flag to true and use the  -neg/negate  flag to invert the result. "
	fnames "textures3d t3d"
		fdesc "Pass 3D texture objects if set to true.  Value is false by default.  To get all objects that are not 3D textures then set this flag to true and use the  -neg/negate  flag to invert the result. "
	fnames "texturesProcedural tp"
		fdesc "Pass procedural texture objects if set to true.  Value is  false by default.  To get all objects that are not procedural textures then set this flag to true and use the  -neg/negate  flag  to invert the result. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "itemFilterType"
	desc "This command queries a named itemFilter object. This object can be attached to selectionConnection objects, or to editors, in order to filter the item lists going through them. Using union and intersection filters, complex composite filters can be created."
	fcount "7"
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "text t"
		fdesc "Defines an annotation string to be stored with the filter "
	fnames "type typ"
		fdesc "Query the type of the filter object. Possible return values are: itemFilter, attributeFilter, renderFilter, or unknownFilter. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "joint"
	desc "The joint command is used to create, edit, and query, joints within Maya. (The standard edit(-e) and query(-q) flags are used for edit and query functions). If the object is not specified, the currently selected object (dag object) will be used. Multiple objects are allowed only for the edit mode. The same edit flags will be applied on all the joints selected, except for -p without -r (set joint position in the world space). An ik handle in the object list is equivalent to the list of joints the ik handle commands. When -ch/children is present, all the child joints.... Refer to full documentation"
	fcount "31"
	fnames "absolute a"
		fdesc "The joint center position is in absolute world coordinates. (This is the default.) "
	fnames "angleX ax"
		fdesc "Set the x-axis angle. When queried, this flag returns a float. "
	fnames "angleY ay"
		fdesc "Set the y-axis angle. When queried, this flag returns a float. "
	fnames "angleZ az"
		fdesc "Set the z-axis angle. When queried, this flag returns a float. "
	fnames "assumePreferredAngles apa"
		fdesc "Meaningful only in the edit mode. It sets the joint angles to the corresponding preferred angles. "
	fnames "automaticLimits al"
		fdesc "Meaningful only in edit mode. It sets the joint to appropriate hinge joint with joint limits. It modifies the joint only if (a) it connects exactly to two joints (one parent, one child), (b) it does not lie on the line drawn between the two connected joints, and the plane it forms with the two connected joints is perpendicular to one of its rotation axes. "
	fnames "children ch"
		fdesc "It tells the command to apply all the edit options not only to the selected joints, but also to their descendent joints in the DAG. "
	fnames "component co"
		fdesc "Use with the -position switch to position the joint relative to its parent (like -relative) but to compute new positions for all children joints so their world coordinate positions do not change. "
	fnames "degreeOfFreedom dof"
		fdesc "Specifies the degrees of freedom for the IK. Valid strings consist of non-duplicate letters from x, y, and z. The letters in the string indicate what rotations are to be used by IK. The order a letter appear in the string does not matter. Examples are x, yz, xyz. When queried, this flag returns a string. Modifying dof will change the locking state of the corresponding rotation attributes. The rule is: if an rotation is turned into a dof, it will be unlocked if it is currently locked. When it is turned into a non-dof, it will be locked if it is not currently locked. "
	fnames "exists ex"
		fdesc "Does the named joint exist? When queried, this flag returns a boolean. "
	fnames "limitSwitchX lsx"
		fdesc "Use the limit the x-axis rotation? When queried, this flag returns a boolean. "
	fnames "limitSwitchY lsy"
		fdesc "Use the limit the y-axis rotation? When queried, this flag returns a boolean. "
	fnames "limitSwitchZ lsz"
		fdesc "Use the Limit the z-axis rotation? When queried, this flag returns a boolean. "
	fnames "limitX lx"
		fdesc "Set lower and upper limits on the x-axis of rotation.  Also turns on the joint limit. When queried, this flag returns 2 floats. "
	fnames "limitY ly"
		fdesc "Set lower and upper limits on the y-axis of rotation.  Also turns on the joint limit. When queried, this flag returns 2 floats. "
	fnames "limitZ lz"
		fdesc "Set lower and upper limits on the z-axis of rotation.  Also turns on the joint limit. When queried, this flag returns 2 floats. "
	fnames "name n"
		fdesc "Specifies the name of the joint. When queried, this flag returns a string. "
	fnames "orientJoint oj"
		fdesc "The argument can be one of the following strings: xyz, yzx, zxy, zyx, yxz, xzy, none. It modifies the joint orientation and scale orientation so that the axis indicated by the first letter in the argument will be aligned with the vector from this joint to its first child joint. For example, if the argument is "xyz", the x-axis will point towards the child joint. The alignment of the remaining two joint orient axes are  dependent on whether or not the -sao/-secondaryAxisOrient flag is used. If the -sao flag is used, see the documentation for that flag for how the remaining axes are aligned. In the absence of a user specification for the secondary axis orientation, the rotation axis indicated by the last letter in the argument will be aligned with the vector perpendicular to first axis and the vector from this joint to its parent joint. The remaining axis is aligned according the right hand rule. If the argument is "none", the joint orientation will be set to zero and its effect to the hierarchy below will be offset by modifying the scale orientation. The flag will be ignored if: A. the joint has non-zero rotations when the argument is not "none". B. the joint does not have child joint, or the distance to the child joint is zero when the argument is not "none". C. either flag -o or -so is set. "
	fnames "orientation o"
		fdesc "The joint orientation. When queried, this flag returns 3 floats. "
	fnames "position p"
		fdesc "Specifies the position of the center of the joint. This position may be relative to the joint's parent or in absolute world coordinates (see -r and -a below). When queried, this flag returns 3 floats. "
	fnames "relative r"
		fdesc "The joint center position is relative to the joint's parent. "
	fnames "rotationOrder roo"
		fdesc "The rotation order of the joint. The argument can be one of the following strings: xyz, yzx, zxy, zyx, yxz, xzy. "
	fnames "scale s"
		fdesc "Scale of the joint. When queried, this flag returns 3 floats. "
	fnames "scaleCompensate sc"
		fdesc "It sets the scaleCompenstate attribute of the joint to the given argument. When this is true, the scale of the parent joint will be compensated before any rotation of this joint is applied, so that the bone to the joint is scaled but not the bones to its child joints. When queried, this flag returns an boolean. "
	fnames "scaleOrientation so"
		fdesc "Set the orientation of the coordinate axes for scaling. When queried, this flag returns 3 floats. "
	fnames "secondaryAxisOrient sao"
		fdesc "The argument can be one of the following strings: xup, xdown, yup, ydown, zup, zdown, none. This flag is used in conjunction with the -oj/orientJoint flag. It specifies the scene axis that the second axis should align with. For example, a flag combination of  "-oj yzx -sao yup" would result in the y-axis pointing down the bone, the z-axis oriented with the scene's positive y-axis, and the x-axis oriented according to the right hand rule. "
	fnames "setPreferredAngles spa"
		fdesc "Meaningful only in the edit mode. It sets the preferred angles to the current joint angles. "
	fnames "stiffnessX stx"
		fdesc "Set the stiffness (from 0 to 100.0) for x-axis. When queried, this flag returns a float. "
	fnames "stiffnessY sty"
		fdesc "Set the stiffness (from 0 to 100.0) for y-axis. When queried, this flag returns a float. "
	fnames "stiffnessZ stz"
		fdesc "Set the stiffness (from 0 to 100.0) for z-axis. When queried, this flag returns a float. "
	fnames "zeroScaleOrient zso"
		fdesc "It sets the scale orientation to zero and compensate the change by modifing the translation and joint orientation for joint or rotation for general transform of all its child transformations. The flag will be ignored if the flag -so is set. "
	rcount "13"
		rname "connectJoint"
		rname "insertJoint"
		rname "ikSystemInfo"
		rname "ikHandle"
		rname "jointDisplayScale"
		rname "jointCluster"
		rname "removeJoint"
		rname "ikHandleDisplayScale"
		rname "ikSolver"
		rname "ikSystem"
		rname "jointLattice"
		rname "mirrorJoint"
		rname "removeJoint"
name "jointCluster"
	desc "The joint cluster command adds high-level controls to manage the cluster percentage values on a bound skin around a joint. It corresponds roughly to the PowerAnimator character builder fxnality. JointClusters are one way to create smooth bending behaviour on skin when joints rotate. . a CVs/vertices between Joint1 and aaaaa (aboveBound) receive only translation/rotation/scale from Joint1. CVs vertices between aaaa and bbbb transition between translation/rotatation/scale from Joint1 and Joint2. CV2 beyand bbbbb (below bound) receive only translation/ rotation scale from Joint3."
	fcount "9"
	fnames "aboveBound ab"
		fdesc "Specifies the where the drop-off begins in the direction of the bone above the joint. A value of 100 indicates the entire length of the bone. The default value is 10. "
	fnames "aboveCluster ac"
		fdesc "Returns the name of the cluster associated with the bone above this joint. "
	fnames "aboveDropoffType adt"
		fdesc "Specifies the type of percentage drop-off in the direction of the bone above this joint. Default is linear. "
	fnames "aboveValue av"
		fdesc "Specifies the drop-off percentage of the joint cluster in the direction of the bone above the cluster. A value of 100 indicates the entire length of the bone. The default value is 50. "
	fnames "belowBound bb"
		fdesc "Specifies where the drop-off ends in the  direction of the bone below the joint. A value of 100 indicates the entire length of the bone. The default value is 10. "
	fnames "belowCluster bc"
		fdesc "Returns the name of the cluster associated with this joint. "
	fnames "belowDropoffType bdt"
		fdesc "Specifies the type of type of percentage drop-off in the direction of the bone below this joint. Default is linear. "
	fnames "belowValue bv"
		fdesc "Specifies the drop-off percentage of the joint cluster in the direction of the joint below the cluster. A value of 100 indicates the entire length of the bone. The default value is 50. "
	fnames "joint j"
		fdesc "Specifies the joint that the cluster should act about. "
	rcount "13"
		rname "connectJoint"
		rname "insertJoint"
		rname "ikSystemInfo"
		rname "ikHandle"
		rname "jointDisplayScale"
		rname "joint"
		rname "removeJoint"
		rname "ikHandleDisplayScale"
		rname "ikSolver"
		rname "ikSystem"
		rname "jointLattice"
		rname "mirrorJoint"
		rname "removeJoint"
name "jointCtx"
	desc "The joint context command (jointCtx) updates the parameters of the joint tool. The options for the tool will be set by the flags the user specifies."
	fcount "23"
	fnames "autoJointOrient ajo"
		fdesc "Specifies the joint orientation. Valid string choices are permutations of the axes; "none", "xyz", "yzx", "zxy", "xzy", "yxz",  "zyx". The first letter determines which axis is aligned with the  bone. C: The default is "xyz". Q: When queried, this flag returns a string. "
	fnames "autoPriorityH apH"
		fdesc "Specifies if the ikHandle's priority is assigned  automatically. C: The default is off. Q: When queried, this flag returns an int. "
	fnames "createIKHandle ikh"
		fdesc "Enables the joint tool to create an ikHandle when the tool is completed. C: The default is off. Q: When queried, this flag returns an int. "
	fnames "degreeOfFreedomJ dJ"
		fdesc "Specifies the degrees of freedom for all of the joints created by the tool. Valid string choices are the free axes; "x", "y", "z", "xy", "xz", "yz", "xyz", and "none". C: The default is "xyz". Q: When queried, this flag returns a string. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "forceSolverH fsH"
		fdesc "Specifies if the ikSolver for the ikHandle is enabled. C: The default is on. Q: When queried, this flag returns an int. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "jointAutoLimits jal"
		fdesc "Automatically computes the joint limits based on the  kind of joint created.  C: The default is off. Q: When queried, this flag returns an int. "
	fnames "jointOrientationJ joJ"
		fdesc "Sets the orientation of the joints created by the tool. If autoJointOrient in on, these values will be ignored. C: The default is 0 0 0. Q: When queried, this flag returns an array of three floats. "
	fnames "poWeightH pwH"
		fdesc "Specifies the position/orientation weight of the ikHandle. C: The default is 1. Q: When queried, this flag returns a float. "
	fnames "priorityH pH"
		fdesc "Specifies the priority of the ikHandle. C: The default is on. Q: When queried, this flag returns an int. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "scaleCompensateJ scJ"
		fdesc "Specifies if scale compensate is enabled. C: The default is on. Q: When queried, this flag returns an int. "
	fnames "scaleJ sJ"
		fdesc "Sets the scale for the joints created by the tool. C: The default is 1 1 1. Q: When queried, this flag returns an array of three floats. "
	fnames "scaleOrientationJ soJ"
		fdesc "Sets the current value for the scale orientation. If autoJointOrient in on, these values will be ignored. C: The default is 0 0 0. Q: When queried, this flag returns an array of three floats. "
	fnames "secondaryAxisOrient sao"
		fdesc "Specifies the orientation of the secondary rotate axis. Valid string choices are: "xup", "xdown", "yup", "ydown", "zup", "zdown", "none". "
	fnames "snapHandleH snH"
		fdesc "Sepcifies if snapping is enabled for the ikHandle.  C: The default is on. Q: When queried, this flag returns an int. "
	fnames "solverTypeH stH"
		fdesc "Sets the name of the solver to use with the ikHandle.  C: The default is the solver set to the default in the user  preferences. Q: When queried, this flag returns a string. "
	fnames "stickyH sH"
		fdesc "Specifies if the ikHandle is sticky or not. If "sticky" is  passed then the ikHandle will be sticky. If "off" is used then  ikHandle stickiness will be turned off. C: The default is "off". Q: When queried, this flag returns a string. "
	fnames "weightH wH"
		fdesc "Specifies the weight of the ikHandle. The weight is  relative to the other ikHandles in the scene. C: The default is 1. Q: When queried, this flag returns a float. "
	rcount "0"
name "jointDisplayScale"
	desc "This action modifies and queries the current display size of skelton joints. The joint display size is controlled by a scale factor; scale factor 1 puts the display size to its default, which is 1 in diameter. With the plain format, the float argument is the factor with respect to the default size. When -a/absolute is used, the float argument refers to the actual diameter of the joint display size."
	fcount "2"
	fnames "absolute a"
		fdesc "Interpret the float argument as the actual display size as opposed to the scale factor. "
	fnames "ikfk ik"
		fdesc "Set the display size of ik/fk skeleton joints. "
	rcount "13"
		rname "connectJoint"
		rname "insertJoint"
		rname "ikSystemInfo"
		rname "ikHandle"
		rname "joint"
		rname "jointCluster"
		rname "removeJoint"
		rname "ikHandleDisplayScale"
		rname "ikSolver"
		rname "ikSystem"
		rname "jointLattice"
		rname "mirrorJoint"
		rname "removeJoint"
name "jointLattice"
	desc "This command creates/edits/queries a jointLattice deformer. The name of the created/edited object is returned. Usually you would make use of this functionality through the higher level flexor command."
	fcount "21"
	fnames "after af"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node after the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "before bf"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node before the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "creasing cr"
		fdesc "Affects the bulging of lattice points on the inside of the bend.  Positive/negative values cause the points to bulge outwards/inwards. Default value is 0.0. When queried, this flag returns a float. "
	fnames "deformerTool dt"
		fdesc "Returns the name of the deformer tool objects (if any) as string string ... "
	fnames "exclusive ex"
		fdesc "Puts the deformation set in a deform partition. "
	fnames "frontOfChain foc"
		fdesc "This command is used to specify that the new deformer  node should be placed ahead (upstream) of existing deformer and skin nodes in the shape's history (but not ahead of existing tweak nodes). The input to the deformer will be the upstream shape rather than the visible downstream shape, so the behavior of this flag is the most intuitive if the downstream deformers are in their reset (hasNoEffect) position when the new deformer is added. "
	fnames "geometry g"
		fdesc "The specified object will be added to the list of objects being deformed by this deformer object, unless the -rm flag is also specified. When queried, this flag returns string string string ... "
	fnames "ignoreSelected is"
		fdesc "Tells the command to not deform objects on the current selection list "
	fnames "joint j"
		fdesc "Specifies the joint which will be used to drive the bulging behaviours. "
	fnames "lengthIn li"
		fdesc "Affects the location of lattice points on the parent bone.  Positive/negative values cause the points to move away/towards the joint. Changing this parameter also modifies the regions affected by the creasing, rounding and width parameters. Default value is 0.0. When queried, this flag returns a float. lengthOut float Affects the location of lattice points on the child bone. Positive/negative values cause the points to move away/towards the joint. Changing this parameter also modifies the regions affected by the creasing, rounding and width parameters. Default value is 0.0. When queried, this flag returns a float. "
	fnames "lowerBindSkin lb"
		fdesc "Specifies the node which is performing the bind skin operation on the geometry associated with the lower bone. "
	fnames "lowerTransform lt"
		fdesc "Specifies which dag node is being used to rigidly transform the lower part of the lattice which this node is going to deform. If this flag is not specified an identity matrix will be assumed. "
	fnames "name n"
		fdesc "Used to specify the name of the node being created "
	fnames "prune pr"
		fdesc "Removes any points not being deformed by the deformer in  its current configuration from the deformer set. "
	fnames "remove rm"
		fdesc "Specifies that objects listed after the -g flag should be removed from this deformer. "
	fnames "rounding ro"
		fdesc "Affects the bulging of lattice points on the outside of the bend. Positive/negative values cause the points to bulge outwards/inwards. Default value is 0.0. When queried, this flag returns a float. "
	fnames "split sp"
		fdesc "Branches off a new chain in the dependency graph instead of inserting/appending the deformer into/onto an existing chain. "
	fnames "upperBindSkin ub"
		fdesc "Specifies the node which is performing the bind skin operation on the geometry associated with the upper bone. "
	fnames "upperTransform ut"
		fdesc "Specifies which dag node is being used to rigidly transform the upper part of the lattice which this node is going to deform. If this flag is not specified an identity matrix will be assumed. "
	fnames "widthLeft wl"
		fdesc "Affects the bulging of lattice points on the left side of the bend. Positive/negative values cause the points to bulge outwards/inwards. Default value is 0.0. When queried, this flag returns a float. "
	fnames "widthRight wr"
		fdesc "Affects the bulging of lattice points on the right side of the bend. Positive/negative values cause the points to bulge outwards/inwards. Default value is 0.0. When queried, this flag returns a float. "
	rcount "13"
		rname "connectJoint"
		rname "insertJoint"
		rname "ikSystemInfo"
		rname "ikHandle"
		rname "jointDisplayScale"
		rname "joint"
		rname "jointCluster"
		rname "removeJoint"
		rname "ikHandleDisplayScale"
		rname "ikSolver"
		rname "ikSystem"
		rname "mirrorJoint"
		rname "removeJoint"
name "keyTangent"
	desc "This command operates on a keyset. A keyset is defined as a group of keys within a specified time range on one or more animation curves. The animation curves comprising a keyset depend on the value of the "-animation" flag: keysOrObjects : 1) any active keys, when no target objects or -attribute flags appear on the command line, or 2) all animation curves connected to all keyframable attributes of objects specified as the command line's targetList, when there are no active keys. keys : Only act on active keys or tangents. If there are no active keys or tangents, don't.... Refer to full documentation"
	fcount "22"
	fnames "absolute a"
		fdesc "Changes to tangent positions are NOT relative to the current position. "
	fnames "animation an"
		fdesc "Where this command should get the animation to act on.  Valid values are "objects," "keys," and "keysOrObjects" Default: "keysOrObjects."  (See Description for details.) "
	fnames "attribute at"
		fdesc "List of attributes to select "
	fnames "controlPoints cp"
		fdesc "This flag explicitly specifies whether or not to include the control points of a shape (see "-s" flag) in the list of attributes. Default: false.   (Not valid for "pasteKey" cmd.) "
	fnames "float f"
		fdesc "value uniquely representing a non-time-based key (or key range) on a time-based animCurve.  Valid floatRange include single values (-f 10) or a string with a lower and upper bound, separated by a colon (-f "10:20") "
	fnames "global g"
		fdesc "Required for all operations on the global tangent type. The global tangent type is used by the setKeyframe command when tangent types have not been specifically applied.  It is also used when keys are set from the menu. The only flags that can appear on a keyTangent command with the -g/global flag are -itt/inTangentType, -ott/ outTangentType and -wt/weightedTangents. "
	fnames "hierarchy hi"
		fdesc "Hierarchy expansion options.  Valid values are "above," "below," "both," and "none."  (Not valid for "pasteKey" cmd.) "
	fnames "inAngle ia"
		fdesc "New value for the angle of the in-tangent. Returns a float[] when queried. "
	fnames "inTangentType itt"
		fdesc "Specify the in-tangent type.  Valid values are "spline," "linear," "fast," "slow," "flat," "step," "fixed," and  "clamped." Returns a string[] when queried. "
	fnames "inWeight iw"
		fdesc "New value for the weight of the in-tangent. Returns a float[] when queried. "
	fnames "includeUpperBound iub"
		fdesc "When the -t/time or -f/float flags represent a range of keys, this flag determines whether the keys at the  upper bound of the range are included in the keyset. Default value: true.  This flag is only valid when the argument to the -t/time flag is a time range with a lower and upper bound.  (When used with the "pasteKey"  command, this flag refers only to the time range of the target curve that is replaced, when using options such as "replace," "fitReplace," or "scaleReplace."  This  flag has no effect on the curve pasted from the clipboard.) "
	fnames "index in"
		fdesc "index of a key on an animCurve "
	fnames "lock l"
		fdesc "Lock a tangent so in and out tangents move together.   Returns an int[] when queried. "
	fnames "outAngle oa"
		fdesc "New value for the angle of the out-tangent. Returns a float[] when queried. "
	fnames "outTangentType ott"
		fdesc "Specify the out-tangent type.  Valid values are "spline," "linear," "fast," "slow," "flat," "step," "fixed,"  and "clamped." Returns a string[] when queried. "
	fnames "outWeight ow"
		fdesc "New value for the weight of the out-tangent. Returns a float[] when queried. -ix float New value for the x-component of the in-tangent. This is a unit independent representation of the tangent  component. Returns a float[] when queried. -ox float New value for the x-component of the out-tangent. This is a unit independent representation of the tangent  component. Returns a float[] when queried. -iy float New value for the y-component of the in-tangent. This is a unit independent representation of the tangent  component. Returns a float[] when queried. -oy float New value for the y-component of the out-tangent. This is a unit independent representation of the tangent  component. Returns a float[] when queried. "
	fnames "relative r"
		fdesc "Changes to tangent positions are relative to the  current position. "
	fnames "shape s"
		fdesc "Consider attributes of shapes below transforms as well, except "controlPoints".  Default: true.   (Not valid for "pasteKey" cmd.) "
	fnames "stepAttributes sa"
		fdesc "The setKeyframe command will automatically set tangents for boolean and enumerated attributes to step.  This flag mirrors this behavior for the keyTangent command.  When set to false, tangents for these attributes will not be edited.  When set to true (the default) tangents for these attributes will be edited. "
	fnames "time t"
		fdesc "time uniquely representing a key (or key range) on a time-based animCurve.  Valid timeRanges include single values (-t 10) or a string with a lower and upper bound, separated by a colon (-t "10:20") "
	fnames "weightLock wl"
		fdesc "Lock the weight of a tangent so it is fixed.   Returns an int[] when queried. Note: weightLock is only obeyed within the graph editor.  It is not obeyed when -inWeight/-outWeight are issued from a command. "
	fnames "weightedTangents wt"
		fdesc "Specify whether or not the tangents on the animCurve are weighted Note: switching a curve from weightedTangents true to false and back to true again will not preserve fixed tangents properly. Use undo instead. "
	rcount "10"
		rname "copyKey"
		rname "cutKey"
		rname "pasteKey"
		rname "snapKey"
		rname "keyframe"
		rname "keyframeStats"
		rname "keyframeOutliner"
		rname "scaleKey"
		rname "setInfinity"
		rname "findKeyframe"
name "keyframe"
	desc "This command operates on a keyset. A keyset is defined as a group of keys within a specified time range on one or more animation curves. The animation curves comprising a keyset depend on the value of the "-animation" flag: keysOrObjects : 1) any active keys, when no target objects or -attribute flags appear on the command line, or 2) all animation curves connected to all keyframable attributes of objects specified as the command line's targetList, when there are no active keys. keys : Only act on active keys or tangents. If there are no active keys or tangents, don't.... Refer to full documentation"
	fcount "23"
	fnames "absolute a"
		fdesc "Move amounts are absolute. "
	fnames "adjustBreakdowns abd"
		fdesc "When false, moving keys will not preserve breakdown timing, when true (the default) breakdowns will be adjusted to preserve their timing relationship. "
	fnames "animation an"
		fdesc "Where this command should get the animation to act on.  Valid values are "objects," "keys," and "keysOrObjects" Default: "keysOrObjects."  (See Description for details.) "
	fnames "attribute at"
		fdesc "List of attributes to select "
	fnames "breakdown bd"
		fdesc "Sets the breakdown state for the key.  Returns an integer.  Default is false.  The breakdown state of a key cannot be set in the same command as it is moved (i.e., via  the -tc or -fc flags). "
	fnames "controlPoints cp"
		fdesc "This flag explicitly specifies whether or not to include the control points of a shape (see "-s" flag) in the list of attributes. Default: false.   (Not valid for "pasteKey" cmd.) "
	fnames "eval ev"
		fdesc "Returns the value(s) of the animCurves when evaluated (without regard to input connections) at the times given by the -t/time or -f/float flags.  Cannot be used in combination with other query flags, and  cannot be used with time ranges (-t "5:10").   When no -t or -f flags appear on the command line, the evals are queried at the current time.  Query returns a float[]. "
	fnames "float f"
		fdesc "value uniquely representing a non-time-based key (or key range) on a time-based animCurve.  Valid floatRange include single values (-f 10) or a string with a lower and upper bound, separated by a colon (-f "10:20") "
	fnames "floatChange fc"
		fdesc "How much (with -relative) or where (with -absolute)  to move keys (on non-time-input animation curves) along the x (float) axis. Returns float[] when queried. "
	fnames "hierarchy hi"
		fdesc "Hierarchy expansion options.  Valid values are "above," "below," "both," and "none."  (Not valid for "pasteKey" cmd.) "
	fnames "includeUpperBound iub"
		fdesc "When the -t/time or -f/float flags represent a range of keys, this flag determines whether the keys at the  upper bound of the range are included in the keyset. Default value: true.  This flag is only valid when the argument to the -t/time flag is a time range with a lower and upper bound.  (When used with the "pasteKey"  command, this flag refers only to the time range of the target curve that is replaced, when using options such as "replace," "fitReplace," or "scaleReplace."  This  flag has no effect on the curve pasted from the clipboard.) "
	fnames "index in"
		fdesc "index of a key on an animCurve "
	fnames "indexValue iv"
		fdesc "Query-only flag that returns an int for the key's index. "
	fnames "keyframeCount kc"
		fdesc "Returns an int for the number of keys found for the targets.  "
	fnames "lastSelected lsl"
		fdesc "When used in queries, this flag returns requested values for the last selected key. "
	fnames "name n"
		fdesc "Returns the names of animCurves of specified nodes,  attributes or keys. "
	fnames "option o"
		fdesc "Valid values are "move," "insert," "over," and "segmentOver." "
	fnames "relative r"
		fdesc "Move amounts are relative to a key's current position. "
	fnames "selected sl"
		fdesc "When used in queries, this flag returns requested values for any active keys.   "
	fnames "shape s"
		fdesc "Consider attributes of shapes below transforms as well, except "controlPoints".  Default: true.   (Not valid for "pasteKey" cmd.) "
	fnames "time t"
		fdesc "time uniquely representing a key (or key range) on a time-based animCurve.  Valid timeRanges include single values (-t 10) or a string with a lower and upper bound, separated by a colon (-t "10:20") "
	fnames "timeChange tc"
		fdesc "How much (with -relative) or where (with -absolute)  to move keys (on time-input animation curves) along the x (time) axis.  Returns float[] when queried. "
	fnames "valueChange vc"
		fdesc "How much (with -relative) or where (with -absolute)  to move keys along the y (value) axis. Returns float[] when queried. "
	rcount "10"
		rname "copyKey"
		rname "cutKey"
		rname "pasteKey"
		rname "snapKey"
		rname "keyframeStats"
		rname "keyframeOutliner"
		rname "scaleKey"
		rname "setInfinity"
		rname "keyTangent"
		rname "findKeyframe"
name "keyframeOutliner"
	desc "This command creates/edits/queries a keyframe outliner control."
	fcount "21"
	fnames "animCurve ac"
		fdesc "Name of the animation curve for which to display keyframes. "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "display dsp"
		fdesc "narrow | wide What columns to display.  When "narrow", time and value will be displayed, when "wide" tangent information will be displayed as well "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "10"
		rname "copyKey"
		rname "cutKey"
		rname "pasteKey"
		rname "snapKey"
		rname "keyframe"
		rname "keyframeStats"
		rname "scaleKey"
		rname "setInfinity"
		rname "keyTangent"
		rname "findKeyframe"
name "keyframeRegionCurrentTimeCtx"
	desc "This command creates a context which may be used to change current time within the keyframe region of the dope sheet editor."
	fcount "8"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "keyframeRegionDirectKeyCtx"
	desc "This command creates a context which may be used to directly manipulate keyframes within the dope sheet editor."
	fcount "9"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "option o"
		fdesc "move | insert | over | segmentOver Specifies the keyframe -option to use "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "keyframeRegionDollyCtx"
	desc "This command can be used to create a dolly context for the dope sheet editor."
	fcount "8"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "keyframeRegionInsertKeyCtx"
	desc "This command creates a context which may be used to insert keys within the keyframe region of the dope sheet editor."
	fcount "9"
	fnames "breakdown bd"
		fdesc "Specifies whether or not to create breakdown keys "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "keyframeRegionMoveKeyCtx"
	desc "This command creates a context which may be used to move keyframes within the keyframe region of the dope sheet editor."
	fcount "9"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "option o"
		fdesc "move | insert | over | segmentOver Specifies the keyframe -option to use "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "keyframeRegionScaleKeyCtx"
	desc "This command creates a context which may be used to scale keyframes within the keyframe region of the dope sheet editor."
	fcount "10"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "scaleSpecifiedKeys ssk"
		fdesc "Determines if only the specified keys should be scaled. If false, the non-selected keys will be adjusted during the scale. The default is true. "
	fnames "type typ"
		fdesc "rect | manip Specifies the type of scale manipulator to use "
	rcount "0"
name "keyframeRegionSelectKeyCtx"
	desc "This command creates a context which may be used to select keyframes within the keyframe region of the dope sheet editor."
	fcount "8"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "keyframeRegionSetKeyCtx"
	desc "This command creates a context which may be used to set keys within the keyframe region of the dope sheet editor."
	fcount "9"
	fnames "breakdown bd"
		fdesc "Specifies whether or not to create breakdown keys "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "keyframeRegionTrackCtx"
	desc "This command can be used to create a track context for the dope sheet editor."
	fcount "8"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "keyframeStats"
	desc "All of the group commands position their individual controls in columns starting at column 1. The layout of each control (ie. column) can be customized using the -cw/columnWidth , -co/columnOffset , -cat/columnAttach , -cal/columnAlign , and -adj/adjustableColumn flags. By default, columns are left aligned with no offset and are 100 pixels wide. Only one column in any group can be adjustable. This command creates/edits/queries a keyframe stats control."
	fcount "54"
	fnames "adjustableColumn adj"
		fdesc "Specifies which column has an adjustable size that changes with the sizing of the layout.  The column value is a 1-based index.  You may also specify 0 to turn off the previous adjustable column. "
	fnames "adjustableColumn2 ad2"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly two columns.  "
	fnames "adjustableColumn3 ad3"
		fdesc "Specifies that the column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly three columns.  "
	fnames "adjustableColumn4 ad4"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly four columns.  "
	fnames "adjustableColumn5 ad5"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly five columns.  "
	fnames "adjustableColumn6 ad6"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly six columns.  "
	fnames "animEditor ae"
		fdesc "The name of the animation editor which is associated with the control "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "columnAlign cal"
		fdesc "Arguments are : column number, alignment type. Possible alignments are: left | right | center.  Specifies alignment type for the specified column. "
	fnames "columnAlign2 cl2"
		fdesc "Sets the text alignment of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign3 cl3"
		fdesc "Sets the text alignment for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign4 cl4"
		fdesc "Sets the text alignment for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign5 cl5"
		fdesc "Sets the text alignment for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign6 cl6"
		fdesc "Sets the text alignment for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "center". "
	fnames "columnAttach cat"
		fdesc "Arguments are : column number, attachment type, and offset. Possible attachments are: left | right | both.  Specifies column attachment types and offets. "
	fnames "columnAttach2 ct2"
		fdesc "Sets the attachment type of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach3 ct3"
		fdesc "Sets the attachment type for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach4 ct4"
		fdesc "Sets the attachment type for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach5 ct5"
		fdesc "Sets the attachment type for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach6 ct6"
		fdesc "Sets the attachment type for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "both". "
	fnames "columnOffset2 co2"
		fdesc "This flag is used in conjunction with the -columnAttach2 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the two columns.  The offsets applied are based on the attachments  specified with the -columnAttach2 flag.  Ignored if there is not exactly two columns.  "
	fnames "columnOffset3 co3"
		fdesc "This flag is used in conjunction with the -columnAttach3 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the three columns.  The offsets applied are based on the attachments  specified with the -columnAttach3 flag.  Ignored if there is not exactly three columns.  "
	fnames "columnOffset4 co4"
		fdesc "This flag is used in conjunction with the -columnAttach4 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the four columns.  The offsets applied are based on the attachments  specified with the -columnAttach4 flag.  Ignored if there is not exactly four columns.  "
	fnames "columnOffset5 co5"
		fdesc "This flag is used in conjunction with the -columnAttach5 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the five columns.  The offsets applied are based on the attachments  specified with the -columnAttach5 flag.  Ignored if there is not exactly five columns.  "
	fnames "columnOffset6 co6"
		fdesc "This flag is used in conjunction with the -columnAttach6 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the six columns.  The offsets applied are based on the attachments  specified with the -columnAttach6 flag.  Ignored if there is not exactly six columns.  "
	fnames "columnWidth cw"
		fdesc "Arguments are : column number, column width. Sets the width of the specified column where the first parameter specifies the column (1 based index) and the second parameter specifies the width. "
	fnames "columnWidth1 cw1"
		fdesc "Sets the width of the first column.  Ignored if there is not  exactly one column. "
	fnames "columnWidth2 cw2"
		fdesc "Sets the column widths of both columns.  Ignored if there is not exactly two columns. "
	fnames "columnWidth3 cw3"
		fdesc "Sets the column widths for all 3 columns.  Ignored if there is not exactly 3 columns. "
	fnames "columnWidth4 cw4"
		fdesc "Sets the column widths for all 4 columns.  Ignored if there is not exactly 4 columns. "
	fnames "columnWidth5 cw5"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "columnWidth6 cw6"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "precision pre"
		fdesc "Controls the number of digits to the right of the decimal point that will be displayed for float-valued channels. Default is 3.  Queried, returns an int. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rowAttach rat"
		fdesc "Arguments are : attachment type, offset. Possible attachments are: top | bottom | both.  Specifies attachment types  and offsets for the entire row.   "
	fnames "timeAnnotation tan"
		fdesc "Annotate the time field with an extra string value. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "valueAnnotation van"
		fdesc "Annotate the value field with an extra string value. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "10"
		rname "copyKey"
		rname "cutKey"
		rname "pasteKey"
		rname "snapKey"
		rname "keyframe"
		rname "keyframeOutliner"
		rname "scaleKey"
		rname "setInfinity"
		rname "keyTangent"
		rname "findKeyframe"
name "lassoContext"
	desc "Creates a context to perform selection via a "lasso". Use for irregular selection regions, where the "marquee-style" select of the "selectContext" is inappropriate."
	fcount "8"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "lattice"
	desc "This command creates a lattice deformer that will deform the selected objects. If the object centered flag is used, the initial lattice will fit around the selected objects. The lattice will be selected when the command is completed. The lattice deformer has an associated base lattice. Only objects which are contained by the base lattice will be deformed by the lattice."
	fcount "21"
	fnames "after af"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node after the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "before bf"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node before the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "commonParent cp"
		fdesc "Group the base lattice and the deformed lattice under a common transform. This means that you can resize the lattice without affecting the deformation by resizing the common transform. "
	fnames "deformerTool dt"
		fdesc "Returns the name of the deformer tool objects (if any) as string string ... "
	fnames "divisions dv"
		fdesc "Set the number of lattice slices in x, y, z. Default is 2, 5, 2. When queried, this flag returns float float float. When you change the number of divisions, any tweaking or animation of lattice points must be redone. "
	fnames "dualBase db"
		fdesc "Create a special purpose ffd deformer node which accepts 2 base lattices. The default is off which results in the creation of a normal ffd deformer node.  Intended for internal usage only. "
	fnames "exclusive ex"
		fdesc "Puts the deformation set in a deform partition. "
	fnames "freezeMapping fm"
		fdesc "The base position of the geometries points is fixed at the time this flag is set.  When mapping is frozen, moving the geometry with respect to the lattice will not cause the deformation to be recomputed. "
	fnames "frontOfChain foc"
		fdesc "This command is used to specify that the new deformer  node should be placed ahead (upstream) of existing deformer and skin nodes in the shape's history (but not ahead of existing tweak nodes). The input to the deformer will be the upstream shape rather than the visible downstream shape, so the behavior of this flag is the most intuitive if the downstream deformers are in their reset (hasNoEffect) position when the new deformer is added. "
	fnames "geometry g"
		fdesc "The specified object will be added to the list of objects being deformed by this deformer object, unless the -rm flag is also specified. When queried, this flag returns string string string ... "
	fnames "ignoreSelected is"
		fdesc "Tells the command to not deform objects on the current selection list "
	fnames "latticeReset lr"
		fdesc "Reset the lattice to match its base position. This will undo any deformations that the lattice is causing. The lattice will only deform points that are enclosed within the lattice's reset (base) position. "
	fnames "ldivisions ldv"
		fdesc "Set the number of local lattice slices in x, y, z. "
	fnames "name n"
		fdesc "Used to specify the name of the node being created "
	fnames "objectCentered oc"
		fdesc "Centers the lattice around the selected object(s) or components. Default is off which centers the lattice at the origin. "
	fnames "outsideFalloffDistance ofd"
		fdesc "Set the falloff distance used when the setting for transforming points outside of the base lattice is set to 2. The distance value is a positive number which specifies the size of the falloff distance as a multiple of the base lattice size, thus a value of 1.0 specifies that only points up to the base lattice width/height/depth away are transformed. A value of 0.0 is equivalent to an outsideLattice value of 0 (i.e. no points outside the base lattice are transformed). A huge value is equivalent to transforming an outsideLattice value of 1 (i.e. all points are transformed). "
	fnames "outsideLattice ol"
		fdesc "Set the mode describing how points outside the base lattice are transformed. 0 (the default) specifies that no outside points are transformed. 1 specifies that all outside points are transformed, and 2 specifies that only those outside points which fall within the "falloff distance" (see the -ofd/outsideFalloffDistance flag) are transformed. When querying, the current setting for the lattice is returned. "
	fnames "prune pr"
		fdesc "Removes any points not being deformed by the deformer in  its current configuration from the deformer set. "
	fnames "remove rm"
		fdesc "Specifies that objects listed after the -g flag should be removed from this deformer. "
	fnames "removeTweaks rt"
		fdesc "Remove any lattice deformations caused by moving lattice points. Translations/rotations and scales on the lattice itself are not removed. "
	fnames "split sp"
		fdesc "Branches off a new chain in the dependency graph instead of inserting/appending the deformer into/onto an existing chain. "
	rcount "7"
		rname "cluster"
		rname "sculpt"
		rname "deformer"
		rname "flexor"
		rname "wire"
		rname "wrinkle"
		rname "percent"
name "latticeDeformKeyCtx"
	desc "This command creates a context which may be used to deform key frames with lattice manipulator. This context only works in the graph editor."
	fcount "12"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "ev envelope"
		fdesc "Specifies the influence of the lattice.  "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "lc latticeColumns"
		fdesc "Specifies the number column points the lattice contains. "
	fnames "lr latticeRows"
		fdesc "Specifies the number of rows the lattice contains.  "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "slp scaleLatticePts"
		fdesc "Specifies if the selected lattice points should scale  around the pick point. If this value is false the  the default operation is 'move' "
	rcount "0"
name "launch"
	desc "Launch the appropriate application to open the document specified. This command works only on the Macintosh and Windows platforms."
	fcount "3"
	fnames "movie mov"
		fdesc "A movie file. The only acceptable movie file formats are MPEG, Quicktime, and Windows Media file. The file's name must end with .mpg, .mpeg, .wmv, .mov, or .qt. "
	fnames "pdfFile pdf"
		fdesc "A PDF (Portable Document Format) document. The file's name must end with .pdf. "
	fnames "webPage web"
		fdesc "A web page. "
	rcount "0"
name "layerButton"
	desc "Creates a layer bar button widget. This widget contains both the name of the layer to which it refers and a color swatch indicating it's color assignment. It is used primarily in the construction of the layerBar and layer Editor window, being the widget used for each layer in the respective lists."
	fcount "34"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "color cl"
		fdesc "Layer color, specified with normalized real numbers in R, G, B space. "
	fnames "command c"
		fdesc "Set the command to call on a single click. "
	fnames "current cr"
		fdesc "Set this button to display as the current layer.  The current layer is the one which the user has the option of adding all newly created objects into.   NB: Setting the layer button to this state has no effect on the actual current layer. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "doubleClickCommand dcc"
		fdesc "Set the command to call on a double click. "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "identification id"
		fdesc "This is the integer identification number associated with the layer. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "Label text for the button. "
	fnames "labelWidth lw"
		fdesc "Query the width of the label part so as to determine if button clicks are in the label part or the colour swatch part. "
	fnames "layerState ls"
		fdesc "Describes the state of the layer.  This may be one of normal, template, or reference. "
	fnames "layerVisible lv"
		fdesc "Indicates whether the layer is visible or invisible. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "name n"
		fdesc "Name of the layer. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "renameCommand rc"
		fdesc "Set the command to call when the layer gets renamed. "
	fnames "select s"
		fdesc "Set this button to display as a selected layer. "
	fnames "transparent t"
		fdesc "Indicate whether the layer color is visible or transparent. "
	fnames "typeCommand tc"
		fdesc "Command that is called when the type indicator of the layer button is pressed. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "visibleCommand vc"
		fdesc "Command that is called when the visibility indicator of the layer button is pressed. "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "3"
		rname "createDisplayLayer"
		rname "editDisplayLayerGlobals"
		rname "editDisplayLayerMembers"
name "layeredShaderPort"
	desc "This command creates a 3dPort that displays an image representing the layered shader node specified."
	fcount "22"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "node n"
		fdesc "Specifies the name of the newLayeredShader  node this port will represent. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "selectedColorControl scc"
		fdesc "Specifies the name of the UI-control that  represents the currently selected layer's color. "
	fnames "selectedTransparencyControl stc"
		fdesc "Specifies the name of the UI-control that  represents the currently selected layer's transparency. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "layeredTexturePort"
	desc "This command creates a 3dPort that displays an image representing the layered texture node specified."
	fcount "24"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "node n"
		fdesc "Specifies the name of the newLayeredTexture  node this port will represent. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "selectedAlphaControl sac"
		fdesc "Specifies the name of the UI-control that  represents the currently selected layer's alpha. "
	fnames "selectedBlendModeControl sbc"
		fdesc "Specifies the name of the UI-control that  represents the currently selected layer's blend mode. "
	fnames "selectedColorControl scc"
		fdesc "Specifies the name of the UI-control that  represents the currently selected layer's color. "
	fnames "selectedIsVisibleControl svc"
		fdesc "Specifies the name of the UI-control that  represents the currently selected layer's visibility. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "layout"
	desc "This command allows you to edit or query the properties of any layout."
	fcount "21"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "childArray ca"
		fdesc "Returns a string array of the names of the layout's  immediate children. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfChildren nch"
		fdesc "Returns in an int the number of immediate children of the layout. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "lightList"
	desc "Add/Remove a relationship between an object and the current light. Soon to be replaced by the connect-attribute command."
	fcount "2"
	fnames "add add"
		fdesc "add object(s) to light list. "
	fnames "remove rm"
		fdesc "remove object(s) to light list. "
	rcount "9"
		rname "ambientLight"
		rname "lightListEditor"
		rname "directionalLight"
		rname "lightListPanel"
		rname "spotLight"
		rname "exclusiveLightCheckBox"
		rname "lightlink"
		rname "spotLightPreviewPort"
		rname "pointLight"
name "lightListEditor"
	desc "This command created a light list editor. A light lister displays the lights that are illuminating the selected objects. As the active list changes, the information displayed in the light-lister changes. You can add relationships by selecting a light and the object and pressing "ADD". Or you can drag-and-drop the light from a UI like the outliner onto the light lister. You can remove relationships by selecting the lights in the editor and pressing "REMOVE"."
	fcount "5"
	fnames "allShadingGroups asg"
		fdesc "Specifies if the editor is listing all of the  shading groups. "
	fnames "mode m"
		fdesc "Specifies the operating mode for the editor. Valid values are: lightLists | shadingLists. "
	fnames "multipleSelection ms"
		fdesc "Specifies if the editor is listing all of the relevant things on the active list. "
	fnames "remove r"
		fdesc "If the editor is in light list mode, this will unlink the selected lights to the shading groups selected in the editor.  If in shading group mode, will unassign the currently selected renderable objects from the shading group selected in the editor. "
	fnames "singleSelection ss"
		fdesc "Specifies if the editor is listing only one item  on the active list.  Using this listing technique the frame will be opened automatically and single clicks of rows in the editor will result in membership changes. "
	rcount "9"
		rname "ambientLight"
		rname "directionalLight"
		rname "lightListPanel"
		rname "spotLight"
		rname "exclusiveLightCheckBox"
		rname "lightlink"
		rname "spotLightPreviewPort"
		rname "pointLight"
		rname "lightList"
name "lightListPanel"
	desc "This command created a light list panel. A light list panel has a light list editor (see the command lightListEditor). It displays the lights that are illuminating the selected objects. As the active list changes, the information displayed in the light-lister changes."
	fcount "0"
	rcount "0"
name "lightlink"
	desc "This command is used to make, break and query light linking relationships between lights/sets of lights and objects/sets of objects. If no make, break or query flag is specified and both lights and objects flags are present, the make flag is assumed to be specified. If no make, break or query flag is specified and only one of the lights and objects flags is present, the query flag is assumed to be specified. You can specify as many lights and objects as you like, using the multiuse -light and -object flags. A better way to perform light linking is to.... Refer to full documentation"
	fcount "9"
	fnames "break b"
		fdesc "The presence of this flag on the command indicates that the command is being invoked to break links between lights and renderable objects. "
	fnames "hierarchy h"
		fdesc "When querying, specifies whether the result should include the hierarchy of transforms above shapes linked to the queried  light/object. The transforms considered part of the hierarchy do not include the transform immediately above the shape. Default  is true. "
	fnames "light l"
		fdesc "The argument to the light flag specifies a node to be used by the command in performing the action as if the node is a light. This is a multiuse flag -- many light nodes can be specified in  a single invocation of the lightlink command.  "
	fnames "make m"
		fdesc "The presence of this flag on the command indicates that the command is being invoked to make links between lights and renderable objects. "
	fnames "object o"
		fdesc "The argument to the object flag specifies a node to be used by the command in performing the action as if the node is an object. This is a multiuse flag -- many object nodes can be specified in  a single invocation of the lightlink command.  "
	fnames "query q"
		fdesc "The presence of this flag on the command indicates that the command is being invoked to query the current status of  lights and renderable objects with respect to light linking. "
	fnames "sets set"
		fdesc "When querying, specifies whether the result should include sets linked to the queried light/object. Default is true. "
	fnames "shapes shp"
		fdesc "When querying, specifies whether the result should include shapes linked to the queried light/object. Default is true. "
	fnames "transforms t"
		fdesc "When querying, specifies whether the result should include transforms immediately above shapes linked to the queried  light/object. Default is true. "
	rcount "9"
		rname "ambientLight"
		rname "lightListEditor"
		rname "directionalLight"
		rname "lightListPanel"
		rname "spotLight"
		rname "exclusiveLightCheckBox"
		rname "spotLightPreviewPort"
		rname "pointLight"
		rname "lightList"
name "lineIntersection"
	desc "Returns the intersection point of two 3D lines. Each line is described by a 3D point and direction."
	fcount "0"
	rcount "0"
name "linstep"
	desc "This command returns a floating point value between zero and one representing what percentage of the distance between the first and second arguments is represented by the third argument. The first and second arguments represent minimum and maximum values respectively. If the third argument is less than the minimum, the command returns zero. If the third argument is greater than the maximimum value, the command returns one."
	fcount "0"
	rcount "0"
name "listAnimatable"
	desc "This command list the animatable attributes of a node. Command flags allow filtering by the current manipulator, or node type."
	fcount "3"
	fnames "manip m"
		fdesc "Return only those attributes affected by the current manip. If there is no manip active and any other flags are specified, output is the same as if the "-manip" flag were not present. "
	fnames "manipHandle mh"
		fdesc "Return only those attributes affected by the current manip handle. If there is no manip handle active and any other flags are specified, output is the same as if the "-manipHandle" flag were not present. "
	fnames "type typ"
		fdesc "Instead of returning attributes, Return the types of nodes that  are currently animatable. "
	rcount "0"
name "listAttr"
	desc "This command lists the attributes of a node. If no flags are specified all attributes are listed."
	fcount "19"
	fnames "array a"
		fdesc "only list array (not multi) attributes "
	fnames "changedSinceFileOpen cfo"
		fdesc "Only list the attributes that have been changed  since the file they came from was opened. Typically useful only for objects/attributes coming from referenced files. "
	fnames "connectable c"
		fdesc "only show connectable attributes "
	fnames "hasData hd"
		fdesc "list only attributes that have data (all attributes except for message attributes) "
	fnames "keyable k"
		fdesc "only show attributes that can be keyframed "
	fnames "leaf lf"
		fdesc "Only list the leaf-level name of the attribute. controlPoints[44].xValue would be listed as "xValue". "
	fnames "locked l"
		fdesc "list only attributes which are locked "
	fnames "multi m"
		fdesc "list each currently existing element of a multi-attribute "
	fnames "output o"
		fdesc "List only the attributes which are numeric or which are compounds of numeric attributes. "
	fnames "read r"
		fdesc "list only attributes which are readable "
	fnames "readOnly ro"
		fdesc "List only the attributes which are readable and not writable. "
	fnames "scalar s"
		fdesc "only list scalar numerical attributes "
	fnames "scalarAndArray sa"
		fdesc "only list scalar and array attributes "
	fnames "shortNames sn"
		fdesc "list short attribute names (default is to list long names) "
	fnames "string st"
		fdesc "List only the attributes that match the other criteria AND match the string(s) passed from this flag "
	fnames "unlocked u"
		fdesc "list only attributes which are unlocked "
	fnames "userDefined ud"
		fdesc "list user-defined (dynamic) attributes "
	fnames "visible v"
		fdesc "only show visible or non-hidden attributes "
	fnames "write w"
		fdesc "list only attributes which are writable "
	rcount "7"
		rname "addAttr"
		rname "getAttr"
		rname "setAttr"
		rname "connectAttr"
		rname "disconnectAttr"
		rname "attributeInfo"
		rname "attributeQuery"
name "listCameras"
	desc "Command to list all cameras. If no flags are given, both perspective and orthographic cameras will be displayed. This command returns an array of camera names. When the transform name uniquely identifies the camera it is used, otherwise the shape name will be returned."
	fcount "2"
	fnames "orthographic o"
		fdesc "Display all orthographic cameras. "
	fnames "perspective p"
		fdesc "Display all perspective cameras. "
	rcount "15"
		rname "camera"
		rname "cameraView"
		rname "dolly"
		rname "lookThru"
		rname "orbit"
		rname "roll"
		rname "track"
		rname "tumble"
		rname "viewCamera"
		rname "viewClipPlane"
		rname "viewFit"
		rname "viewHeadOn"
		rname "viewLookAt"
		rname "viewPlace"
		rname "viewSet"
name "listConnections"
	desc "ListConnections is NOT undoable , NOT queryable , and NOT editable . This command returns a list of all attributes/objects of a specified type that are connected to the given object(s). If no objects are specified then the command lists the connections on selected nodes."
	fcount "8"
	fnames "connections c"
		fdesc "If true, return both attributes involved in the connection. The one on the specified object is given first.  Default false. "
	fnames "destination d"
		fdesc "Give the attributes/objects that are on the "destination" side of connection to the given object.  Default true. "
	fnames "exactType et"
		fdesc "When set to true, -t/type only considers node of this exact type. Otherwise, derived types are also taken into account. "
	fnames "plugs p"
		fdesc "If true, return the connected attribute names; if false, return the connected object names only.  Default false; "
	fnames "shapes sh"
		fdesc "Actually return the shape name instead of the transform when the shape is "selected".  Default false. "
	fnames "skipConversionNodes scn"
		fdesc "If true, skip over unit conversion nodes and return the node connected to the conversion node on the other side.  Default false. "
	fnames "source s"
		fdesc "Give the attributes/objects that are on the "source" side of connection to the given object.  Default true. "
	fnames "type t"
		fdesc "If specified, only take objects of a specified type. "
	rcount "7"
		rname "connectAttr"
		rname "connectionInfo"
		rname "disconnectAttr"
		rname "getAttr"
		rname "isConnected"
		rname "listAttr"
		rname "setAttr"
name "listDeviceAttachments"
	desc "This command lists the current set of device attachments. The listing is in the form of the commands required to recreate them. This includes both attachments and device mappings."
	fcount "7"
	fnames "attribute at"
		fdesc "specify the attribute attachments to list "
	fnames "axis ax"
		fdesc "specify the axis attachments to list "
	fnames "clutch c"
		fdesc "List only attachment clutched with this button "
	fnames "device d"
		fdesc "specify which device attachments to list "
	fnames "file f"
		fdesc "Specify the name of the file to write out device attachments.   "
	fnames "selection sl"
		fdesc "This flag list only attachments on selection "
	fnames "write w"
		fdesc "Write out device attachments to a file specified by the -f flag, is set.  If -f is not set, it'll write out to a file named for the device. "
	rcount "13"
		rname "assignInputDevice"
		rname "getModifiers"
		rname "recordAttr"
		rname "attachDeviceAttr"
		rname "setAttrMapping"
		rname "detachDeviceAttr"
		rname "listInputDeviceAxes"
		rname "setInputDeviceMapping"
		rname "devicePanel"
		rname "listInputDeviceButtons"
		rname "unassignInputDevice"
		rname "getInputDeviceRange"
		rname "listInputDevices"
name "listHistory"
	desc "This command traverses backwards or forwards in the graph from the specified node and returns all of the nodes whose construction history it passes through. The construction history consists of connections to specific attributes of a node defined as the creators and results of the node's main data, eg. the curve for a Nurbs Curve node. For information on history connections through specific plugs use the "listConnections" command first to find where the history begins then use this command on the resulting node."
	fcount "8"
	fnames "allGraphs ag"
		fdesc "By default, the traversal will remain in the current graph. If this flag is set to true, the traversal will descend into subgraphs, and ascend into parent graphs. "
	fnames "breadthFirst bf"
		fdesc "The breadth first traversal will return the closest nodes in the traversal first. The depth first traversal will follow a complete path away from the node, then return to any other paths from the node. Default is depth first. "
	fnames "future f"
		fdesc "List the future instead of the history. "
	fnames "groupLevels gl"
		fdesc "The node names are grouped depending on the level.  > 1 is the lead, the rest are grouped with it. "
	fnames "interestLevel il"
		fdesc "If this flag is set, only nodes whose historicallyInteresting attribute value is not less than the value will be listed. The historicallyInteresting attribute is 0 on nodes which are not of interest to non-programmers.  1 for the TDs, 2 for the users. "
	fnames "leaf lf"
		fdesc "If transform is selected, show history for its leaf shape. Default is true. "
	fnames "levels lv"
		fdesc "Levels deep to traverse. Setting the number of levels to 0 means do all levels. All levels is the default. "
	fnames "pruneDagObjects pdo"
		fdesc "If this flag is set, prune at dag objects. "
	rcount "2"
		rname "listConnections"
		rname "listRelatives"
name "listInputDeviceAxes"
	desc "This command lists all of the axes of the specified input device."
	fcount "0"
	rcount "0"
name "listInputDeviceButtons"
	desc "This command lists all of the buttons of the specified input device."
	fcount "0"
	rcount "0"
name "listInputDevices"
	desc "This command lists all input devices that maya knows about."
	fcount "0"
	rcount "0"
name "listMenuAnnotation"
	desc "This script finds all of the menus in the main window and loops through all of their menu items listing the annotations. It creates a file called menuAnnotationListing.txt."
	fcount "0"
	rcount "0"
name "listNodeTypes"
	desc "No Description."
	fcount "1"
	fnames "exclude ex"
		fdesc "Nodes that satisfies this exclude classification will be filtered out. "
	rcount "0"
name "listRelatives"
	desc "This command lists parents and children of DAG objects. The flags -c/children, -ad/allDescendents, -s/shapes, -p/parent and -ap/allParents are mutually exclusive. Only one can be used in a command. When listing parents of objects directly under the world, the command will return an empty parent list. Listing parents of objects directly under a shape (underworld objects) will return their containing shape node in the list of parents. Listing parents of components of objects will return the object. When listing children, shape nodes will return their underworld objects in the list of children. Listing children of components of objects returns nothing. The.... Refer to full documentation"
	fcount "9"
	fnames "allDescendents ad"
		fdesc "Returns all the children, grand-children etc. of this dag node.  If a descendent is instanced, it will appear only once on the list returned. Note that it lists grand-children before children. "
	fnames "allParents ap"
		fdesc "Returns all the parents of this dag node. Normally, this  command only returns the parent corresponding to the first  instance of the object "
	fnames "children c"
		fdesc "List all the children of this dag node (default). "
	fnames "fullPath f"
		fdesc "Return full pathnames instead of object names. "
	fnames "noIntermediate ni"
		fdesc "No intermediate objects "
	fnames "parent p"
		fdesc "Returns the parent of this dag node "
	fnames "path pa"
		fdesc "Return a proper object name that can be passed to other commands. "
	fnames "shapes s"
		fdesc "List all the children of this dag node that are shapes (ie, not transforms) "
	fnames "type typ"
		fdesc "List all relatives of the specified type. This flag may appear on the command line multiple times. "
	rcount "0"
name "listSets"
	desc "The listSets command is used to get a list of all the sets an object belongs to. To get sets of a specific type for an object use the type flag as well. To get a list of all sets in the scene then don't use an object in the command line but use one of the flags instead."
	fcount "4"
	fnames "allSets as"
		fdesc "Returns all sets in the scene. "
	fnames "extendToShape ets"
		fdesc "When requesting a transform's sets also walk down to the shape immediately below it for its sets. "
	fnames "object o"
		fdesc "Returns all sets which this object is a member of. "
	fnames "type t"
		fdesc "Returns all sets in the scene of the given type: 1 - all rendering sets 2 - all deformer sets "
	rcount "1"
		rname "sets"
name "listTransforms"
	desc "This procedure returns an array of all the parents of the objects returned by the use of the 'ls' command."
	fcount "0"
	rcount "0"
name "listUnselected"
	desc "Lists the top transform for all DAG objects that are not selected."
	fcount "0"
	rcount "0"
name "listerEditor"
	desc "Lister is a command which creates a lister Editor, placeable in any layout. It's solely a UI command, intended to be used to create, edit and query listers. All configuration of an individual lister is done through this command, as well as all actions (filtering, content, highlighting, expand/compress, un/displaying, etc)."
	fcount "52"
	fnames "addObject a"
		fdesc "add the named object to the lister as a root cell (flag can be used multiple times with the same command) "
	fnames "ascendingSort as"
		fdesc "set the direction of the sort; true is smallest to largest,  false is largest to smallest. "
	fnames "clearHighlight chl"
		fdesc "Unhighlight everything; empty the highlight list. "
	fnames "column c"
		fdesc "set the lister to be columnar; cells will be organized in columns instead of rows. "
	fnames "compress cm"
		fdesc "compress the given node name (flag can be used many times in a single command) "
	fnames "compressAll ca"
		fdesc "compress all visiblie nodes (if possible) "
	fnames "control ctl"
		fdesc "Query only. Returns the top level control for this editor. Usually used for getting a parent to attach popup menus. CAUTION: editors may not have controls at times.  This flag can return "NONE" if no control is present. "
	fnames "copyFrom cf"
		fdesc "copy the state and contents of a named lister into another "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "displayList dl"
		fdesc "List by name all root cells in the multilister (query only flag) "
	fnames "docTag dtg"
		fdesc "Attaches a tag to the maya editor. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "expand exp"
		fdesc "expand the given node name  (flag can be used multiple times with the same command) "
	fnames "expandAll ea"
		fdesc "expand all showing nodes  (if possible) "
	fnames "filter f"
		fdesc "Specifies the name of a filter to be placed on this editor. This filters the information coming onto the main list of the editor. "
	fnames "filterConstant fc"
		fdesc "set whether or not the lister checks every new object created against the filter. "
	fnames "findFirst ff"
		fdesc "Set the top row of the lister to the first occurrance  of the given object "
	fnames "findNext fn"
		fdesc "Set the top row of the lister to the next occurrance of the given object - if the object doesn't occur before the end of the table, start from the top "
	fnames "forceMainConnection fmc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. This is a variant of the -mainListConnection flag in that it will force a change even when the connection is locked. This flag is used to reduce the overhead when using the -unlockMainConnection , -mainListConnection, -lockMainConnection flags in immediate  succession. "
	fnames "highlight hl"
		fdesc "highlight all occurrances of the given cell.  The instance that is the root of a network showing in the lister will highlight differently than instances which are part of a network.   (flag can be used multiple times with the same command) "
	fnames "highlightConnection hlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its highlight list.  Not all editors have a highlight list.  For those who do, it is sort of a secondary selection list. "
	fnames "inSelectMode ism"
		fdesc "set the lister to select (true) or highlight (false) "
	fnames "lockMainConnection lck"
		fdesc "Locks the current list of objects within the mainConnection, so that only those objects are displayed within the editor. Further changes to the original mainConnection are ignored. "
	fnames "mainListConnection mlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. "
	fnames "newCellPlacement ncp"
		fdesc "Dictate where newly displayed cells are found: either the 'head' or 'tail' of the list, or automatically sorted  ('autosort') or 'replace' what is currently shown with  what's given in each new action. "
	fnames "panel pnl"
		fdesc "Specifies the panel that the editor belongs to.  By default if an editor is created in the create callback of a scripted panel it will belong to that panel.  If an editor doesn't belong to a panel it will be deleted when the window that it is in is deleted. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this editor. This flag will only have an effect if the editor is currently un-parented. "
	fnames "placeText pt"
		fdesc "determines placement of text in all cells. Choices: 'below', 'right', and 'none' "
	fnames "primitive pri"
		fdesc "change the primitive on the specified lister items to one of the following: 'sphere', 'cone', 'cube', 'cylinder' "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "reFilter rf"
		fdesc "if the filter isn't constantly applied, refilter the lister "
	fnames "reSort rs"
		fdesc "if the lister is not auto sorting, reorder the root cells. "
	fnames "recallCompressed rc"
		fdesc "compressed cells remember which of their descendants are expanded "
	fnames "recallHidden rh"
		fdesc "hidden cells remember which of their descendants are expanded "
	fnames "releaseCommand rcd"
		fdesc "attach a command to happen after each mouse release in a lister "
	fnames "reload rl"
		fdesc "Flush the currently held contents of the lister and reload from the model using the current configuration (filter, sorting, etc.) "
	fnames "remove rm"
		fdesc "remove the named object from the lister if it is present as a root cell (flag can be used multiple times with the same command) "
	fnames "replaceHighlight rhl"
		fdesc "replace the multiLister highlight list with the given (flag can be used multiple times with the same command) "
	fnames "selectionConnection slc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its own selection list.  As the user selects things in this editor, they will be selected in the selectionConnection object.  If someone else changes the object, the editor will update to show the change. "
	fnames "showSetMembers ssm"
		fdesc "configure the lister to either show (1) or hide (0) shader group's geometry when expanded. "
	fnames "showShaderChildren ssc"
		fdesc "configure the lister to either show (1) or hide (0) shader shader children of shader groups.  This will only have an effect if the shaders group has exactly one shader connected to one of its shading ports : surface, volume, image, displacement.  If there are multiple shaders, they will all be shown regardless of this flag. "
	fnames "sortType st"
		fdesc "input the type of sort: 'alphabetical,' 'nodeType' or any  custom sorting MEL function.  The format for the MEL function:   where $objName is any Maya object.  The func must returns true if $obj1 goes before  the second or false if the second is equal to or comes before the first. "
	fnames "stateString sts"
		fdesc "Query only flag.  Returns the MEL command that will edit an editor to match the current editor state. The returned command string uses the string variable $editorName in place of a specific name. "
	fnames "thumbnailSize ts"
		fdesc "specify the size of the thumbnail: 'small,' 'medium,' and 'large' "
	fnames "thumbnailType tt"
		fdesc "specify the object name first, and then the thumbnail  rendering type: 'surface,' 'displacement,' 'image,' 'volume,' 'light' "
	fnames "toggleHighlight thl"
		fdesc "toggle the multilister highlight with the given items (flag can be used multiple times with the same command) "
	fnames "unHighlight uhl"
		fdesc "unhighlight all occurrances of the given cell (flag can be used multiple times with the same command) "
	fnames "unParent up"
		fdesc "Specifies that the editor should be removed from its layout. This cannot be used with query. "
	fnames "unlockMainConnection ulk"
		fdesc "Unlocks the mainConnection, effectively restoring the original mainConnection (if it is still available), and dynamic updates. "
	fnames "updateMainConnection upd"
		fdesc "Causes a locked mainConnection to be updated from the orginal mainConnection, but preserves the lock state. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "loadFluid"
	desc "LoadFluid is undoable , queryable , and editable . A command to set builtin fluid attributes such as Density, Velocity, etc for individual grid cells or for all cells in the grid. (Note that setting force is an alternate way of setting velocity at one time step - it does not load and reapply the force each timestep. FIX: need a world space option as well?."
	fcount "3"
	fnames "initialConditions ic"
		fdesc "load initial conditions cache "
	fnames "currentTime ct"
		fdesc "load current frame of playback cache "
	fnames "frame f"
		fdesc "load specified frame of playback cache "
	rcount "0"
name "loadNewShelf"
	desc "This procedure opens a shelf file and loads the shelf into the current session. The shelf will be saved in the users shelf directory. NOTE: The file must be along the script path to be found."
	fcount "0"
	rcount "0"
name "loadPlugin"
	desc "Load plug-ins into Maya. The parameter(s) to this command are either the names or pathnames of plugin files. The convention for naming plugins is to use a .so extension on IRIX and a .mll extension on NT. MAYA_PLUG_IN_PATH will be searched looking for a file with the given name. If you specified the plug-in without an extension, the appropriate one for the platform will be automatically appended. When the plug-in is loaded, the name used in Maya's internal plug-in registry for the plug-in information will be the file name with the extension removed. For example, if you load the plugin.... Refer to full documentation"
	fcount "5"
	fnames "addCallback ac"
		fdesc "Add a procedure to be called after a plugin is loaded. The procedure should have the following signature: global proc procedureName(string $pluginName). "
	fnames "allPlugins a"
		fdesc "Cause all plugins in the search path specified in MAYA_PLUG_IN_PATH to be loaded. "
	fnames "name n"
		fdesc "Set a user defined name for the plugins that are loaded.  If the name is already taken, then a number  will be added to the end of the name to make it unique. "
	fnames "quiet qt"
		fdesc "Don't print a warning if you attempt to load a plug-in that is already loaded. "
	fnames "removeCallback rc"
		fdesc "Removes a procedure which was previously added  with -addCallback. "
	rcount "3"
		rname "pluginInfo"
		rname "openMayaPref"
		rname "unloadPlugin"
name "loadPrefObjects"
	desc "This command loads preference dependency nodes from "userPrefObjects.ma", if it exists, from the user preference directory."
	fcount "0"
	rcount "0"
name "lockNode"
	desc "LockNode is undoable , queryable , and NOT editable . Locks or unlocks one or more dependency nodes. A locked node is restricted in the following ways: It may not be deleted. It may not be renamed. Its parenting may not be changed. Attributes may not be added to or removed from it. Locked attributes may not be unlocked. Unlocked attributes may not be locked. Note that an unlocked attribute of a locked node may still have its value set, or connections to it made or broken. For more information on attribute locking, see the setAttr command. If no node.... Refer to full documentation"
	fcount "2"
	fnames "ignoreComponents ic"
		fdesc "Normally, the presence of a component in the list of objects to be locked will cause the command to fail with an error. But if this flag is supplied then components will be silently ignored. "
	fnames "lock l"
		fdesc "Specifies the new lock state for the node. The default is true. "
	rcount "7"
		rname "delete"
		rname "group"
		rname "instance"
		rname "parent"
		rname "rename"
		rname "setAttr"
		rname "ungroup"
name "loft"
	desc "This command computes a skinned (lofted) surface passing through a number of NURBS curves. There must be at least two curves present. The NURBS curves may be surface isoparms, curve on surfaces, trimmed edges or polygon edges."
	fcount "16"
	fnames "autoReverse ar"
		fdesc "If set to true, the direction of the curves for the loft is computed automatically.  If set to false, the values of the multi-use reverse flag are used instead. Default:  true "
	fnames "close c"
		fdesc "If set to true, the resulting surface will be closed (periodic) with the start (end) at the first curve.  If set to false, the surface will remain open. Default:  false "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "createCusp cc"
		fdesc "Multi-use flag; each occurence of the flag refers to the matching curve in the loft operation; if the flag is set the particular profile will have a cusp (tangent break) in the resulting surface. Default:  false "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "degree d"
		fdesc "The degree of the resulting surface Default:  3 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "reverse r"
		fdesc "Multi-use flag; each occurence of the flag refers to the matching curve in the loft operation; if the flag is set the particular curve will be reversed before being used in the loft operation. Default:  false "
	fnames "reverseSurfaceNormals rsn"
		fdesc "If set, the surface normals on the output NURBS surface will be reversed.  This is accomplished by swapping the U and V parametric directions. Default:  false "
	fnames "sectionSpans ss"
		fdesc "The number of surface spans between consecutive curves in the loft. Default:  1 "
	fnames "uniform u"
		fdesc "If set to true, the resulting surface will have uniform parameterization in the loft direction.  If set to false, the parameterization will be chord length. Default:  false "
	rcount "1"
		rname "multiProfileBirailSurface"
name "log"
	desc "The log function returns the natural log (ln) of its argument x . Also available: log1p : Returns log(1 + x ). log10 : Returns the log base 10 of its argument. To obtain a number raised to a power use the "^" operator."
	fcount "0"
	rcount "0"
name "lookThru"
	desc "This command sets a particular camera to look through in a view. This command may also be used to view the negative z axis of lights or other DAG objects. The standard camera tools can then be used to place the object. Note: if there are multiple objects under the transform selected, cameras and lights take precedence."
	fcount "3"
	fnames "farClip fc"
		fdesc "Used when setting clip planes for a new look thru camera, will not affect the attributes of an existing camera. Clip values must come before shape or view. "
	fnames "nearClip nc"
		fdesc "No Description"
	fnames "query q"
		fdesc "Get the name of the camera in the view. "
	rcount "15"
		rname "camera"
		rname "cameraView"
		rname "dolly"
		rname "listCameras"
		rname "orbit"
		rname "roll"
		rname "track"
		rname "tumble"
		rname "viewCamera"
		rname "viewClipPlane"
		rname "viewFit"
		rname "viewHeadOn"
		rname "viewLookAt"
		rname "viewPlace"
		rname "viewSet"
name "ls"
	desc "The ls command returns the names (and optionally the type names) of objects in the scene. The most common use of ls is to filter or match objects based on their name (using wildcards) or based on their type. By default ls will match any object in the scene but it can also be used to filter or list the selected objects when used in conjunction with the -selection flag. If type names are requested, using the -showType flag, they will be interleaved with object names so the result will be pairs of object, type values."
	fcount "41"
	fnames "allPaths ap"
		fdesc "List all paths to nodes in DAG. This flag only works if  -dag  is also specified or if an object name is supplied. "
	fnames "assemblies as"
		fdesc "List top level transform Dag objects "
	fnames "cameras ca"
		fdesc "List camera shapes. "
	fnames "dagObjects dag"
		fdesc "List Dag objects of any type. If object name arguments are passed to the command then this flag will list all Dag objects below the specified object(s). "
	fnames "dependencyNodes dep"
		fdesc "List dependency nodes. (including Dag objects) "
	fnames "exactType et"
		fdesc "List all objects of the specified type, but  not  objects that are descendents of that type. This flag can appear multiple times on the command line. Note: the type passed to this flag is the same type name returned from the -showType flag.  This flag cannot be used in conjunction with the -type flag. "
	fnames "flatten fl"
		fdesc "Flattens the returned list of objects so that each component is identified individually. "
	fnames "geometry g"
		fdesc "List geometric Dag objects. "
	fnames "ghost gh"
		fdesc "List ghosting objects. "
	fnames "head hd"
		fdesc "This flag  specifies the maximum number of elements to be  returned from the beginning of the list of items. Note: each	type flag will return at most this many items so if multiple type flags are specified then the number of items returned can be greater than this amount. "
	fnames "hilite hl"
		fdesc "List objects that are currently hilited for component selection. "
	fnames "intermediateObjects io"
		fdesc "List only intermediate dag nodes. "
	fnames "invisible iv"
		fdesc "List only invisible dag nodes. "
	fnames "leaf lf"
		fdesc "List all leaf nodes in Dag. This flag is a modifier and must be used in conjunction with the -dag flag. "
	fnames "lights lt"
		fdesc "List light shapes. "
	fnames "live lv"
		fdesc "List objects that are currently live. "
	fnames "long l"
		fdesc "Return full path names for Dag objects. By default the shortest unique name is returned. "
	fnames "materials mat"
		fdesc "List materials or shading groups. "
	fnames "noIntermediate ni"
		fdesc "List only non intermediate dag nodes. "
	fnames "nodeTypes nt"
		fdesc "Lists all registered node types. "
	fnames "objectsOnly o"
		fdesc "When this flag is set only object names will be returned and components/attributes will be ignored. "
	fnames "partitions pr"
		fdesc "List partitions. "
	fnames "planes pl"
		fdesc "List construction plane shapes. "
	fnames "readOnly ro"
		fdesc "Lists objects that cannot be deleted.  "
	fnames "recursive r"
		fdesc "When set to true, this command will look for name matches  in all namespaces. When set to false, this command will only look for matches in namespaces that are requested (e.g. by specifying a name containing the ':'... "ns1:pSphere1"). "
	fnames "renderGlobals rg"
		fdesc "List render globals. "
	fnames "renderQualities rq"
		fdesc "List named render qualities. "
	fnames "renderResolutions rr"
		fdesc "List render resolutions. "
	fnames "renderSetups rs"
		fdesc "Alias for  -renderGlobals . "
	fnames "selection sl"
		fdesc "List objects that are currently selected. "
	fnames "sets set"
		fdesc "List sets. "
	fnames "shapes s"
		fdesc "List shape objects. "
	fnames "shortNames sn"
		fdesc "Return short attribute names. By default long attribute names are returned. "
	fnames "showType st"
		fdesc "List the type of each object after its name. "
	fnames "tail tl"
		fdesc "This flag specifies the maximum number of elements to be returned from the end of the list of items. Note: each	type flag will return at most this many items so if multiple type flags are specified then the number of items returned can be greater than this amount "
	fnames "templated tm"
		fdesc "List only templated dag nodes. "
	fnames "textures tex"
		fdesc "List textures. "
	fnames "transforms tr"
		fdesc "List transform objects. "
	fnames "type typ"
		fdesc "List all objects of the specified type. This flag can appear multiple times on the command line. Note: the type passed to this flag is the same type name returned from the -showType flag. Note: some selection items in Maya do not have a specific object/data type associated with them and will return "untyped" when listed with this flag.  This flag cannot be used in conjunction with the -exactType flag. "
	fnames "untemplated ut"
		fdesc "List only un-templated dag nodes. "
	fnames "visible v"
		fdesc "List only visible dag nodes. "
	rcount "0"
name "lsThroughFilter"
	desc "List all objects in the world that pass a given filter."
	fcount "0"
	rcount "0"
name "lsType"
	desc "Return object names of the given type. The end of the return array is marked with the special string " " for two reasons. There is no way to return an empty array, and the array values are not cleared from call to call. This means that values from a previous call will be returned on the next call."
	fcount "0"
	rcount "0"
name "lsUI"
	desc "This command returns the names of UI objects."
	fcount "15"
	fnames "cmdTemplates ct"
		fdesc "UI command templates created using ELF UI commands. "
	fnames "collection col"
		fdesc "Control collections created using ELF UI commands. "
	fnames "contexts ctx"
		fdesc "Tool contexts created using ELF UI commands. "
	fnames "controlLayouts cl"
		fdesc "Control layouts created using ELF UI commands [e.g. formLayouts, paneLayouts, etc.] "
	fnames "controls ctl"
		fdesc "Controls created using ELF UI commands. [e.g. buttons, checkboxes, etc] "
	fnames "editors ed"
		fdesc "All currently existing editors. "
	fnames "head hd"
		fdesc "The parameter specifies the maximum number of elements to be returned from the beginning of the list of items. (Note: each flag will return at most this many items so if multiple flags are specified then the number of items returned will be greater than the value specified). "
	fnames "long l"
		fdesc "Use long pathnames instead of short non-path names. "
	fnames "menuItems mi"
		fdesc "Menu items created using ELF UI commands. "
	fnames "menus m"
		fdesc "Menus created using ELF UI commands. "
	fnames "panels p"
		fdesc "All currently existing panels. "
	fnames "radioMenuItemCollections rmc"
		fdesc "Menu item collections created using ELF UI commands. "
	fnames "tail tl"
		fdesc "The parameter specifies the maximum number of elements to be returned from the end of the list of items. (Note: each flag will return at most this many items so if multiple flags are specified then the number of items returned will be greater than the value specified). "
	fnames "type typ"
		fdesc "List all objects of a certain type specified by the string argument. For example, "window", "menu", "control", or "controlLayout". "
	fnames "windows wnd"
		fdesc "Windows created using ELF UI commands. "
	rcount "0"
name "Mayatomr"
	desc "This mel command provides access to most functionalities of mental ray for maya plugin including .mi file export, preview and batch rendering, network rendering and shader management. General purpose flags -v/-verbosity -prj/-project -ur/-updateRayrc -ai/-addIncludes -al/-addLinks -rl/-removeLinks -ll/-listLinks -a/-active -fe/-fragmentExport -fcd/-fragmentChildDag -fem/-fragmentMaterials -fis/-fragmentIncomingShdrs &nbsp</td> &nbsp</td> &nbsp</td> Rendering flags -pv/-preview -r/-render -cam/-camera -prv/-previousView -rg/-region -rr/-regionRect -x/-xResolution -y/-yResolution -log/-logFile -rt/-renderThreads Network Rendering flags : used with other rendering flags -rnm/-renderNoMaster -rns/-renderNoSlaves -uh/-updateHosts -ah/-addHosts -rh/-removeHosts -lh/-listHosts &nbsp</td> &nbsp</td> &nbsp</td> &nbsp</td> mental ray IPR flags -imr/-immediateModeRender -pt/-pauseTuning -rg/-region -rr/-regionRect -q/-query Export flags -mi/-miStream -f/-file -pf/-perframe -pad/-padframe -tab/-tabstop -e/-echo -bin/-binary -xf/-exportFilter -xfs/-exportFilterString -xsf/-exportStartFile -rtf/-relativeTextureFileName."
	fcount "42"
	fnames "active a"
		fdesc "General option. Translate active scene elements only to create the final scene.  This includes just selected geometry, together with all shading nodes  that these objects reference, all lights and render camera(s).  This ensures that always a renderable scene is generated. This mode can be combined with the export filter. Default: translate whole scene "
	fnames "addHosts ah"
		fdesc "Network rendering option. Add the given machine name to the host list. (Attach the given host.) Must be used after mental ray is properly initialized; after an image is rendered for example. Use with care. "
	fnames "addIncludes ai"
		fdesc "General option. Include the specified .mi file interactively.  Must be used after mental ray is properly initialized; after an image is rendered for example. Use with care. "
	fnames "addLinks al"
		fdesc "General option. Links the specified shader library interactively.  Must be used after mental ray is properly initialized; after an image is rendered for example. Use with care. "
	fnames "binary bin"
		fdesc "Export option. Export binary .mi format (write binary vectors in object definitions). Default: off, write ascii format "
	fnames "camera cam"
		fdesc "Rendering option. Use this camera as the render camera for preview rendering. Default: render globals camera "
	fnames "echo e"
		fdesc "Export option. Export scene to .mi file by sending scene data to builtin mental ray  and executing its echo command. Default: off "
	fnames "exportFilter xf"
		fdesc "Export option. This allows to remove certain types of mental ray entities from exported .mi files.  The integer argument is basically a bitmap where each bit represents a single filter entry.  This is the complete list: 	 "
	fnames "exportFilterString xfs"
		fdesc "Export option. Set the export filter using a string argument  where every character in the string marks the corresponding bit position in the above pattern. Default: no filter "
	fnames "exportStartFile xsf"
		fdesc "Export option. Include the currently used startup file maya.rayrc into the exported .mi file.  Startup file statements need not be given again from within the scene file (via custom text) in this case Default: off "
	fnames "file f"
		fdesc "Export option. Set the file name and path for .mi export or .mi echo. Default: untitled "
	fnames "fragmentChildDag fcd"
		fdesc "General option. In fragment mode, additionally translate any child DAG graph of transform nodes found in the current selection. Default: translate just the selected object/instance "
	fnames "fragmentExport fe"
		fdesc "General option. Enable fragment .mi file export.  This just translates the selected nodes of any supported type.  Further options allow to extend the translation to consider related or connected nodes as well, see below.  This mode allows to create .mi files that only contain the intended piece of information,  which usually results in non-renderable .mi files.  Note, for a geometric object, the export will always contain both the object and its instance,  regardless if just the shape node or its parent transform is selected. Default: translate whole scene "
	fnames "fragmentIncomingShdrs fis"
		fdesc "General option. In fragment mode, additionally translate shading nodes which are connected to nodes found in the current selection (driving nodes). Default: ignore connections "
	fnames "fragmentMaterials fem"
		fdesc "General option. In fragment mode, additionally translate attached materials for shape/transform nodes found in the current selection. Default: ignore attached materials "
	fnames "immediateModeRender imr"
		fdesc "(Q) Rendering option. Interactive rendering only. Begins/stops mental ray immediate mode render (IPR). Can be followed by -pt/-pauseTuning, -rg/-region, -rr/-regionRect. If comes with query flag -q, returns true if mental ray IPR is running, false otherwise. Only a subset of options will be accepted if mental ray IPR is turned on. "
	fnames "init ini"
		fdesc "General option. Perform the initialization steps again for the integrated renderer, including loading startup files and redoing custom link and include commands. Use with care. "
	fnames "listHosts lh"
		fdesc "Network rendering option. List machine names in the host list. Must be used after mental ray is properly initialized; after an image is rendered for example. Use with care. "
	fnames "listLinks ll"
		fdesc "General option. List shader libraries currently linked. Must be used after mental ray is properly initialized; after an image is rendered for example. Use with care. "
	fnames "logFile log"
		fdesc "Rendering option. Write mental ray render messages to a file called 'mentalray.log' located in the current directory. Additionally, these messages are still written to the output or parent shell window. "
	fnames "miStream mi"
		fdesc "Export option. Export scene to .mi file. Default: off "
	fnames "padframe pad"
		fdesc "Export option. Set frame number padding (fixed field width) used to generate file name extensions  during per-frame .mi file export of animations. Default: 0, no padding "
	fnames "pauseTuning pt"
		fdesc "Rendering option. Used with -imr. Pause/resume mental ray IPR. If paused, attribute changes still update the internal database. "
	fnames "perframe pf"
		fdesc "Export option. Controls per-frame .mi file export of animations.  Supported values are: 0 (single .mi file containing the whole animation, exploiting incremental changes),  values greater 0 export one .mi file per frame not using incremental changes,  with different naming scheme: 1 (name.ext.#), 2 (name.#.ext), 3 (name.#). Default: 0 "
	fnames "preview pv"
		fdesc "Rendering option. Perform preview rendering with integrated mental ray. Only for interactive rendering. (Not for batch rendering) Cannot be specified with -r/-render. Default: off	 "
	fnames "previousView prv"
		fdesc "Rendering option. Use render camera from a previous run for preview rendering, if no explicit camera has been given on the same command line. Default: first renderable camera found in the scene "
	fnames "project prj"
		fdesc "General option. Set the project root directory to be used by the plug-in.  Affects the default output directory as well as  handling of file references in project subdirectories  not addressed with full file path, like textures. Default: none for file export, default project directory for preview "
	fnames "region rg"
		fdesc "Rendering option. Preview render only the current region rectangle of the Maya render window. Default: render whole image "
	fnames "regionRect rr"
		fdesc "Rendering option. If region is enabled this sets a custom rectangular region for preview rendering.  The four integer values specify the left, bottom, right, and top bounds, in this order. Default: render window region "
	fnames "relativeTextureFileName rtf"
		fdesc "Export option. If on, texture file names in the exported .mi file will not contain project root in the path. Default: off "
	fnames "removeHosts rh"
		fdesc "Network rendering option. Remove the given machine name from the host list. (Detach the given host.) Must be used after mental ray is properly initialized; after an image is rendered for example. Use with care. "
	fnames "removeLinks rl"
		fdesc "General option. Unlink the specified shader library interactively.  Must be used after mental ray is properly initialized; after an image is rendered for example. Use with care. "
	fnames "render r"
		fdesc "Rendering option. Performs rendering in batch mode. Cannot be specified with -pv/-preview. "
	fnames "renderNoMaster rnm"
		fdesc "Network rendering option. If given it allows to render almost everything on slave machines, thus reducing the workload on the master machine (where Maya is running).  "
	fnames "renderNoSlaves rns"
		fdesc "Network rendering option. If given it allows to render almost everything on the master machine (where Maya is running), thus reducing the workload on the slave machines.  "
	fnames "renderThreads rt"
		fdesc "Rendering option. It allows to reduce the number of render threads used in mental ray for the current rendering. Accepts values from 1 to 4. Default: 4 "
	fnames "tabstop tab"
		fdesc "Export option. Set the number of space characters used to indent lines in the .mi files. Default: 4 "
	fnames "updateHosts uh"
		fdesc "Network rendering option. Reload the maya.rayhosts file and update the list of host machines (slave machines) accordingly. Must be used after mental ray is properly initialized; after an image is rendered for example. Use with care. "
	fnames "updateRayrc ur"
		fdesc "General option. Reload maya.rayrc file to reinitialize mental ray. Use with care. "
	fnames "verbosity v"
		fdesc "General option. Set the plug-in and mental ray message verbosity level.  The value can range from 0 to 6, setting the verbosity to  none, fatal, error, warning, info, progress, and details, respectively.  Default: render globals settings (warning level) "
	fnames "xResolution x"
		fdesc "Rendering option. Set the output image x resolution for preview rendering. Default: render globals image width "
	fnames "yResolution y"
		fdesc "Rendering option. Set the output image y resolution for preview rendering. Default: render globals image height "
	rcount "1"
		rname "convertLightmap"
name "mag"
	desc "This command returns the magnitude (or length) of its argument."
	fcount "0"
	rcount "0"
name "makeIdentity"
	desc "The makeIdentity command is a quick way to reset the selected transform and all of its children down to the shape level by the identity transformation. You can also specify which of transform, rotate or scale is applied down from the selected transform. The identity transformation means: translate = 0, 0, 0 rotate = 0, 0, 0 scale = 1, 1, 1 shear = 1, 1, 1 If a transform is a joint, then the "translate" attribute may not be 0, but will be used to position the joints so that they preserve their world space positions. The translate flag.... Refer to full documentation"
	fcount "6"
	fnames "apply a"
		fdesc "If this flag is true, the accumulated transforms are applied to the shape after the transforms are made identity, such that the world space positions of the transforms pivots are preserved, and the shapes do not move. The default is false. "
	fnames "jointOrient jo"
		fdesc "If this flag is set, the joint orient on joints will be reset to align with worldspace. "
	fnames "normal n"
		fdesc "If this flag is set to 1, the normals on polygonal objects will be frozen.  This flag is valid only when the -apply flag is on. If this flag is set to 2, the normals on polygonal objects will be frozen only if its a non-rigid transformation matrix. ie, a transformation that does not contain shear, skew or  non-proportional scaling. The default behaviour is not to freeze normals. "
	fnames "rotate r"
		fdesc "If this flag is true, only the rotation is applied to the shape. The rotation will be changed to 0, 0, 0.   If neither translate nor rotate nor scale flags are specified,  then all (t, r, s) are applied. "
	fnames "scale s"
		fdesc "If this flag is true, only the scale is applied to the shape. The scale factor will be changed to 1, 1, 1. If neither translate nor rotate nor scale flags are specified,  then all (t, r, s) are applied. "
	fnames "translate t"
		fdesc "If this flag is true, only the translation is applied to the shape. The translation will be changed to 0, 0, 0.   If neither translate nor rotate nor scale flags are specified,  then all (t, r, s)  are applied.  (Note: the translate flag is not  meaningful when applied to joints, since joints are made to preserve  their world space position.  This flag will have no effect on joints.) "
	rcount "0"
name "makeLive"
	desc "This commmand makes an object live. A live object defines the surface on which to create objects and to move object relative to. Only construction planes, nurbs surfaces and polygon meshes can be made live. The makeLive command expects one of these types of objects as an explicit argument. If no argument is explicitly specified, then there are a number of default behaviours based on what is currently active. The command will fail if there is more than one object active or the active object is not one of the valid types of objects. If there is nothing active, the.... Refer to full documentation"
	fcount "1"
	fnames "none n"
		fdesc "If the -n/none flag, the live object will become dormant. Use of this flag causes any arguments to be ignored. "
	rcount "0"
name "makePaintable"
	desc "MakePaintable is undoable , queryable , and NOT editable . Make attributes of nodes paintable to Attribute Paint Tool. This command is used to register new attributes to the Attribute Paint tool as paintable. Once registered the attributes will be recognized by the Attribute Paint tool and the user will be able to paint them. makePaintable [flags] nodeType attributeName."
	fcount "8"
	fnames "activate ac"
		fdesc "Activate / deactivate the given paintable attribute. Used to filter out some nodes in the attribute paint tool. "
	fnames "activateAll aca"
		fdesc "Activate / deactivate all the registered paintable attributes. Used to filter out some nodes in the attribute paint tool. "
	fnames "altAttribute aa"
		fdesc "Define an alternate attribute which will also receive the same values. There can be multiple such flags. "
	fnames "attrType at"
		fdesc "Paintable attribute type. Supported types: intArray, doubleArray, vectorArray, multiInteger, multiFloat, multiDouble, multiVector. "
	fnames "clearAll ca"
		fdesc "Removes all paintable attribute definitions. "
	fnames "remove rm"
		fdesc "Make the attribute not paintable any more. "
	fnames "shapeMode sm"
		fdesc "This flag controls how Artisan correlates the paintable node to a corresponding shape node.  It is used for attributes of type multi of multi, where the first multi dimension corresponds to the shape index (i.e. cluster nodes). At present, only one value of this flag is supported: "deformer". By default this flag is an empty string, which means that there is a direct indexing (no special mapping required) of the attribute with respect to vertices on the shape. "
	fnames "uiName ui"
		fdesc "UI name. Default is the attribute name. "
	rcount "7"
		rname "artAttrCtx"
		rname "artAttrPaintVertexCtx"
		rname "artFluidAttrCtx"
		rname "artPuttyCtx"
		rname "artSelectCtx"
		rname "artSetPaintCtx"
		rname "artUserPaintCtx"
name "makeRoll"
	desc "Creates an expression that simulates rolling an object on the ground. The rotation of the specified object is set based on the change in position from the last time the expression was evaluated. The start rotation values(for frame 1) are initially cached in dynamic attributes added to the object: startRotX,Y and Z. Look under the extra attributes block in the attribute editor to change these values. Note that one should keyframe the X and Z position of the object to animate, but not key the rotate values because the expression sets these using rotate commands. When the animation is satisfactory.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "makeSingleSurface"
	desc "This command performs a stitch and tessellate operation."
	fcount "21"
	fnames "chordHeight cht"
		fdesc "Chord height is the absolute distance in OBJECT space which the center of a polygon edge can deviate from the actual center of the surface span. Only used if Format is General and if useChordHeight is true. Default:  0.1 "
	fnames "chordHeightRatio chr"
		fdesc "Chord height ratio is the ratio of the chord length of a surface span to the chord height.  (This is a length to height ratio). 0 is a very loose fit. 1 is a very tight fit. (See also description of chord height.) Always used if Format is Standard Fit.  Otherwise, only used if Format is General and useChordHeightRatio is true. Default:  0.1 "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off "
	fnames "delta d"
		fdesc "3D delta. Only used if Format is Standard Fit. Default:  0.1 "
	fnames "edgeSwap es"
		fdesc "Edge swap.  This attribute enables an algorithm which determines the optimal method with which to tessellate a quadrilateral into triangles. Only used if Format is General. Default:  false "
	fnames "format f"
		fdesc "Format: 0 - Triangle Count, 1 - Standard Fit, 2 - General, 3 - CVs Default:  1 "
	fnames "fractionalTolerance ft"
		fdesc "Fractional tolerance. Only used if Format is Standard Fit. Default:  0.01 "
	fnames "matchNormalDir mnd"
		fdesc "Only used when the format is CVs.  Order the cvs so that the normal matches the direction of the original surface if set to true. Default:  false "
	fnames "minEdgeLength mel"
		fdesc "Minimal edge length. Only used if Format is Standard Fit. Default:  0.001 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "normalizeTrimmedUVRange ntr"
		fdesc "This attribute is only applicable when a trimmed NURBS surface is used as the input surface. When true, the UV texture coordinates on the trimmed input surface are normalized and applied to the output surface as they are for the untrimmed version of the input surface. (The texture coordinates on the entire untrimmed surface are mapped to the entire output surface.) When false, the UV texture coordinates on the trimmed input surface are applied to the output surface as they are for the trimmed input surface.  (Only the texture coordinates visible on the trimmed input surface are mapped to the output surface.) Default:  true "
	fnames "object o"
		fdesc "Create the result, or just the dependency node  To make a single poly surface from a bunch of surfaces makeSingleSurface nurbsPlane1 nurbsPlane2 nurbsPlane3 "
	fnames "polygonCount pc"
		fdesc "The number of polygons to produce. Only used if Format is Triangle Count. Default:  200 "
	fnames "polygonType pt"
		fdesc "Polygon type: 0 - Triangles, 1 - Quads Default:  0 "
	fnames "stitchTolerance st"
		fdesc "Stitch tolerance. Default:  0.1 "
	fnames "uNumber un"
		fdesc "Initial number of isoparms in U.  Used in conjunction with the uType attribute. Only used if Format is General. Default:  3 "
	fnames "uType ut"
		fdesc "Initial U type tessellation criteria (3 types). Type 0 - Per surface # of isoparms in 3D.  This type places a specific number of iso-parametric subdivision lines across the surface, equally spaced in 3D space. Type 1 - Per surface # of isoparms.  This type places a specific number of iso-parametric subdivision lines across the surface, equally spaced in parameter space. Type 2 - Per span # of isoparms.  This type places a specific number of iso-parametric subdivision lines across each surface span, equally spaced in parameter space. (This is the closest option to the PowerAnimator/Studio tessellation parameters.) This attribute is only used if Format is General. Default:  3 "
	fnames "useChordHeight uch"
		fdesc "True means use chord height. Only used if Format is General. Default:  false "
	fnames "useChordHeightRatio ucr"
		fdesc "True means use chord height ratio. Default:  true "
	fnames "vNumber vn"
		fdesc "Initial number of isoparms in V.  Used in conjunction with the vType attribute. Only used if Format is General. Default:  3 "
	fnames "vType vt"
		fdesc "Initial V type tessellation criteria (3 types). See description for the uType attribute. Only used if Format is General. Default:  3 "
	rcount "0"
name "makebot"
	desc "The makebot command takes an image file and produces a block ordered texture (BOT) file, to be used for texture caching. If a relative pathname is specified for the input image file, project management rules apply. If a relative pathname is specified for the output BOT file, project management rules apply and gets put into the sourceImages directory."
	fcount "6"
	fnames "checkdepends c"
		fdesc "the BOT file should only be generated if it doesn't already exists, or if it is older than the source file "
	fnames "checkres r"
		fdesc "the BOT file should only be generated if its resolution (maximum of width and height) is larger than the minimum value specified by the argument "
	fnames "input i"
		fdesc "input image file "
	fnames "nooverwrite nov"
		fdesc "If -c and/or -r indicate that the BOT file should be generated but if already exists, then this flag will prevent the file from being overwritten "
	fnames "output o"
		fdesc "output BOT file "
	fnames "verbose v"
		fdesc "Makebot will provide feedback if this flag is specified "
	rcount "0"
name "manipMoveContext"
	desc "This command can be used to create, edit, or query a move manip context. Note that the flags -s, -sv, -sr, -scr, -slp, -slf control the global behaviour of all move manip context. Changing one context independently is not allowed. Changing a context's behaviour using the above flags, will change all existing move manip context."
	fcount "11"
	fnames "activeHandle ah"
		fdesc "Values can be: 0 - X axis handle is active 1 - Y axis handle is active 2 - Z axis handle is active 3 - Center handle (all 3 axes) is active (default) "
	fnames "activeHandleNormal ahn"
		fdesc "0 - U axis handle is active 1 - V axis handle is active 2 - N axis handle is active ( default ) 3 - Center handle (all 3 axes) is active applicable only when the manip mode is 3. "
	fnames "interactiveUpdate iu"
		fdesc "Value can be : true or false. This flag value is valid only if the mode is 3 i.e. move vertex normal. "
	fnames "mode m"
		fdesc "Translate mode  0 - Object Space 1 - Local Space 2 - World Space (default) 3 - Move Along Vertex Normal 4 - Move Along Rotation Axis "
	fnames "position p"
		fdesc "Returns the current position of the manipulator "
	fnames "snap s"
		fdesc "Value can be : true or false. Enable/Disable the discrete move. If set to true, the move manipulator of all the  move contexts would snap at discrete points along the active handle during mouse drag.  The  interval between the points can be controlled using the 'snapValue' flag. "
	fnames "snapComponentsRelative scr"
		fdesc "Value can be : true or false. If true, while snapping a group of CVs/Vertices, the relative spacing between them will be preserved. If false, all the CVs/Vertices will be snapped to the target point  (is used during grid snap(hotkey 'x'), and point snap(hotkey 'v')) Depress the 'x' key before click-dragging the manip handle and check to see the behaviour of moving a bunch of CVs, with this flag ON and OFF. "
	fnames "snapLiveFaceCenter slf"
		fdesc "Value can be : true or false. If true, while moving on the live polygon object, the  move manipulator will snap to the face centers of the object. "
	fnames "snapLivePoint slp"
		fdesc "Value can be : true or false. If true, while moving on the live polygon object, the  move manipulator will snap to the vertices of the object. "
	fnames "snapRelative sr"
		fdesc "Value can be : true or false. Applicable only when the snap is enabled. If true, the snapValue is treated relative to the original position before moving.   If false, the snapValue is treated relative to the world origin. NOTE:	If in local/object Space Mode,  the snapRelative should be ON. Absolute discrete move is not supported in local/object mode. "
	fnames "snapValue sv"
		fdesc "Applicable only when the snap is enabled. The manipulator of all move contexts would move in  steps of 'snapValue' "
	rcount "0"
name "manipMoveLimitsCtx"
	desc "Create the context for the translate limits manip."
	fcount "8"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "manipOptions"
	desc "Changes the global manipulator parameters."
	fcount "8"
	fnames "forceRefresh fr"
		fdesc "Force a refresh if there is any deferred evaluation. "
	fnames "handleSize hs"
		fdesc "Sets the maximum handles size in pixels, for small handles "
	fnames "linePick lp"
		fdesc "Set the width of picking zone for long handles "
	fnames "lineSize ls"
		fdesc "Set the width of long handles (drawn as lines) "
	fnames "pointSize ps"
		fdesc "Set the size of points (used to display previous states) "
	fnames "refreshMode rm"
		fdesc "Set the global refresh mode. "
	fnames "relative r"
		fdesc "All values are interpreted as multiplication factors instead of final values. "
	fnames "scale s"
		fdesc "Global scaling factor of all manipulators "
	rcount "0"
name "manipRotateContext"
	desc "This command can be used to create, edit, or query a rotate manip context."
	fcount "3"
	fnames "activeHandle ah"
		fdesc "Values can be: 0 - X axis handle is active 1 - Y axis handle is active 2 - Z axis handle is active 3 - View rotation handle (outer ring) is active (default) "
	fnames "mode m"
		fdesc "Arcball mode (0 - Object Space (default), 1 - World Space) "
	fnames "position p"
		fdesc "Returns the current position of the manipulator "
	rcount "0"
name "manipRotateLimitsCtx"
	desc "Create the context for the rotate limits manip."
	fcount "8"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "manipScaleContext"
	desc "This command can be used to create, edit, or query a scale manip context."
	fcount "2"
	fnames "activeHandle ah"
		fdesc "Values can be: 0 - X axis handle is active 1 - Y axis handle is active 2 - Z axis handle is active 3 - Center handle (all axes) is active (default) "
	fnames "position p"
		fdesc "Returns the current position of the manipulator "
	rcount "0"
name "manipScaleLimitsCtx"
	desc "Create the context for the scale limits manip."
	fcount "8"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "marker"
	desc "The marker command creates one or two markers, on a motion path curve, at the specified time and location. One can specify "-pm -om" option to create both, a position marker and an orientation marker. Since there is only one keyframe for each marker of the same type, no more than one marker of the same type with the same time value can exist. The default marker type is the position marker. The default time is the current time."
	fcount "9"
	fnames "attach a"
		fdesc "This flag specifies to attach the selected 3D position markers to their parent geometry. "
	fnames "detach d"
		fdesc "This flag specifies to detach the selected position markers from their parent geometry to the 3D space. "
	fnames "frontTwist ft"
		fdesc "This flag specifies the amount of twist angle about the front vector for the marker. Default is 0. When queried, this flag returns a  angle . "
	fnames "orientationMarker om"
		fdesc "This flag specifies creation of an orientation marker. Default is not set.. When queried, this flag returns a  boolean . "
	fnames "positionMarker pm"
		fdesc "This flag specifies creation of a position marker. Default is set. When queried, this flag returns a  boolean . "
	fnames "sideTwist st"
		fdesc "This flag specifies  the amount of twist angle about the side vector for the marker. Default is 0. When queried, this flag returns a  angle . "
	fnames "time t"
		fdesc "This flag specifies the time for the marker. Default is the current time. When queried, this flag returns a  time . "
	fnames "upTwist ut"
		fdesc "This flag specifies  the amount of twist angle about the up vector for the marker. Default is 0. When queried, this flag returns a  angle . "
	fnames "valueU u"
		fdesc "This flag specifies the location of the position marker w.r.t. the parent geometry u parameterization. Default is the value at current time. When queried, this flag returns a  linear . "
	rcount "0"
name "match"
	desc "Returns the portion of the second string argument which matches the regular expression in the first string argument. If there is no match the empty string ("") is returned. Regular expressions are a standard syntax for specifying search patterns. This reference page acts as a brief overview of regular expressions. Regular expressions are strings that contain special characters which define matching criteria. The simplest expression is just a string (see example 1 below). The basic building blocks of a regular expression are as follows: . matches any single character * match zero or more occurances of the preceeding expression +.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "max"
	desc "Returns thelarger of the two floating point arguments."
	fcount "0"
	rcount "0"
name "memory"
	desc "Used to query essential statistics on memory availability and usage."
	fcount "12"
	fnames "freeMemory fr"
		fdesc "Returns size of free memory "
	fnames "heapMemory he"
		fdesc "Returns size of memory heap "
	fnames "pageFaults pf"
		fdesc "Returns number of page faults "
	fnames "pageReclaims pr"
		fdesc "Returns number of page reclaims "
	fnames "physicalMemory phy"
		fdesc "Returns size of physical memory "
	fnames "summary sum"
		fdesc "Returns summary of memory usage "
	fnames "swapFree swf"
		fdesc "Returns size of free swap "
	fnames "swapLogical swl"
		fdesc "Returns size of logical swap "
	fnames "swapMax swm"
		fdesc "Returns maximum swap size  "
	fnames "swapPhysical swp"
		fdesc "Returns size of physical swap "
	fnames "swapVirtual swv"
		fdesc "Returns size of virtual swap "
	fnames "swaps sw"
		fdesc "Returns number of swaps "
	rcount "0"
name "menu"
	desc "This command creates a new menu and adds it to the default window's menubar if no parent is specified. The menu can be enabled/disabled. Note that this command may also be used on menu objects created using the command menuItem -sm/subMenu true ."
	fcount "14"
	fnames "allowOptionBoxes aob"
		fdesc "Indicate whether the menu will be able to support option box menu items.  An error results if an option box item is added to a menu that doesn't allow them.  This flag may be queried and must be specified when the popup menu is created.  The default value is false. "
	fnames "deleteAllItems dai"
		fdesc "Delete all the items in this menu. "
	fnames "docTag dt"
		fdesc "Attaches a tag to the menu. "
	fnames "enable en"
		fdesc "Enables/disables the menu. "
	fnames "familyImage fi"
		fdesc "The filename of the icon associated with the menu. This icon will be used if a menu item does not have an icon image defined. "
	fnames "helpMenu hm"
		fdesc "Indicates that this menu is the help menu and will be the right most menu in the menu bar. On Unix systems the help menu is also right justified in the menu bar. "
	fnames "itemArray ia"
		fdesc "Return string array of the menu item names. "
	fnames "label l"
		fdesc "The text that is displayed for the menu.  If no label is supplied then the menuName will be used. "
	fnames "mnemonic mn"
		fdesc "Set the Alt key to post that menu.  The character specified must match the case of its corresponding character in the menu item text, but selection from the keyboard is case insensitive. "
	fnames "numberOfItems ni"
		fdesc "Return number of items in the menu. "
	fnames "parent p"
		fdesc "Specify the window that the menu will appear in. "
	fnames "postMenuCommand pmc"
		fdesc "Specify a script to be executed when the menu is about to be shown. "
	fnames "postMenuCommandOnce pmo"
		fdesc "Indicate the  -pmc/postMenuCommand  should only be invoked once.  Default value is false, ie. the  -pmc/postMenuCommand  is invoked every time the menu is shown. "
	fnames "tearOff to"
		fdesc "Makes the menu tear-off-able. "
	rcount "0"
name "menuBarLayout"
	desc "Create a layout containing a menu bar. The menu bar will appear and behave similar to any menu bar created with the 'window -menuBar true' command. Menus may be created with a menuBarLayout as their parent. Child controls are simply positioned to fill the menuBarLayout area beneath the menu bar consequently, some other layout should be used as the immediate child."
	fcount "24"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "childArray ca"
		fdesc "Returns a string array of the names of the layout's  immediate children. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "menuArray ma"
		fdesc "Return a string array containing the names of the menus in the layout's menu bar. "
	fnames "menuBarVisible mbv"
		fdesc "Visibility of the menu bar. "
	fnames "numberOfChildren nch"
		fdesc "Returns in an int the number of immediate children of the layout. "
	fnames "numberOfMenus nm"
		fdesc "Return the number of menus attached to the layout's menu bar. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "menuEditor"
	desc "A menuEditor displays the contents of a popup menu and allows the menu's items to be edited. Menu items are represented by labelled icons which can be dragged around within the editor to change the menu's layout. Various objects can be dragged and dropped into the menuEditor to create new menu items: toolButtons from the shelf or toolbox, shelfButtons from the shelf, iconTextButtons with attached commands, and scripts from the command window. When editing a Marking Menu, the radial menu items correspond to 8 icons arranged in a circle within the menuEditor. Overflow items in the Marking Menu (or linear.... Refer to full documentation"
	fcount "43"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "cellHeight ch"
		fdesc "The height of the icons in the menuEditor. "
	fnames "cellWidth cw"
		fdesc "The width of the icons in the menuEditor. "
	fnames "cellWidthHeight cwh"
		fdesc "The width and height of the icons in the menuEditor. "
	fnames "checkBoxPresent cbp"
		fdesc "This controls whether a menu item has a check box or not. The arguments are a flag indicating presence, followed by the position of the menu item. This flag is ignored if the menu item is a submenu item. If queried, an array of booleans is returned containing all the flags. The first 8 entries of the array correspond to radial items (in order, "N", "NE", ... "NW"), and all later entries correspond to overflow (or linear) menu items. "
	fnames "checkBoxState cbs"
		fdesc "The state of the check box associated with a menu item. The arguments are a flag indicating state, followed by the position of the menu item. This flag is ignored if the menu item does not have a check box. If queried, an array of booleans is returned containing all the flags. The first 8 entries of the array correspond to radial items (in order, "N", "NE", ... "NW"), and all later entries correspond to overflow (or linear) menu items. "
	fnames "childArray ca"
		fdesc "Returns a string array of the names of the layout's  immediate children. "
	fnames "command c"
		fdesc "The command or script executed by a menu item. The arguments are the command string or script name, followed by the  position of the menu item. This flag is ignored if the menu item is  a submenu item or a separator item. If queried, an array of strings is returned containing all the commands. The first 8 entries of the array correspond to radial items (in  order, "N", "NE", ... "NW"), and all later entries correspond to  overflow (or linear) menu items. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "delete d"
		fdesc "Deletes the menu item at the given position, removing it from  the menu.  If the menu item has a submenu, and a sub-menuEditor is  open and attached to it, then the sub-menuEditor's window and all its child menuEditor windows will be closed recursively. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "iconMenuCallback imc"
		fdesc "This is the name of a MEL callback procedure that is called to  create the popup menus attached to icons in the menuEditor.  The  callback is called once for each newly created icon, and once each  time an icon is moved within the menuEditor.  Popup menus created  by the callback should contain commands for editing the menu item  associated with the icon.  Operations accessible through the menu  should include deletion of the item, editing of the  item's label/command/image/checkbox/optionbox, creation of a submenu,  and popping up a sub-menuEditor. The arguments to the callback must match this form: callbackProc(string $menuEditorName, string $parentIconName, string $menuTitle, string $radialPosition, int $overflowRow); The popup menu's parent should be $parentIconName. Note that when a sub-menuEditor is created, this flag need not be  re-specified as it adopts a default value equal to the value of  its parent menuEditor's -imc/iconMenuCallback flag. "
	fnames "image i"
		fdesc "The filename of the icon associated with a menu item. This icon is displayed by the menuEditor to represent the menu item. The arguments are the icon filename, followed by the position of the menu item. If queried, an array of strings is returned containing all the icon filenames. The first 8 entries of the array correspond to radial items (in order, "N", "NE", ... "NW"), and all later entries correspond to overflow (or linear) menu items. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "The label of a menu item. The arguments are the label text, followed by the position of the  menu item. If queried, an array of strings is returned containing  all the labels. The first 8 entries of the array correspond to radial items (in order, "N", "NE", ... "NW"), and all later entries correspond to overflow (or linear) menu items. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "menuItemTypes mit"
		fdesc "This is a query only flag.  Returns an array of strings indicating the type of contents in each cell of the menuEditor.  Cells can be "vacant", or may contain a regular menu "item", or a "separator", or a "submenu" item.  In each case, the corresponding string is returned. The first 8 entries of the array correspond to radial items (in order, "N", "NE", ... "NW"), and all later entries correspond to overflow (or linear) menu items. "
	fnames "numberOfChildren nch"
		fdesc "Returns in an int the number of immediate children of the layout. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "optionBoxCommand obc"
		fdesc "The command or script executed by a menu item's associated option box item. The arguments are the command string or script name, followed by the position of the menu item. This flag is ignored if the menu item does not have an associated option box item. If queried, an array of strings is returned containing all the commands. The first 8 entries of the array correspond to radial items (in order, "N", "NE", ... "NW"), and all later entries correspond to overflow (or linear) menu items. "
	fnames "optionBoxPresent obp"
		fdesc "This controls whether a menu item has an associated option box item or not. The arguments are a flag indicating presence, followed by the position of the menu item. This flag is ignored if the menu item is a submenu item. If queried, an array of booleans is returned containing all the flags. The first 8 entries of the array correspond to radial items (in order, "N", "NE", ... "NW"), and all later entries correspond to overflow (or linear) menu items. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "radioButtonPresent rbp"
		fdesc "This controls whether a menu item has a radio button or not. The arguments are a flag indicating presence, followed by the position of the menu item. This flag is ignored if the menu item is a submenu item. If queried, an array of booleans is returned containing all the flags. The first 8 entries of the array correspond to radial items (in order, "N", "NE", ... "NW"), and all later entries correspond to overflow (or linear) menu items. "
	fnames "radioButtonState rbs"
		fdesc "The state of the radio button associated with a menu item. The arguments are a flag indicating state, followed by the position of the menu item. This flag is ignored if the menu item does not have a radio button. If queried, an array of booleans is returned containing all the flags. The first 8 entries of the array correspond to radial items (in order, "N", "NE", ... "NW"), and all later entries correspond to overflow (or linear) menu items. "
	fnames "separator sp"
		fdesc "In edit mode this adds a separator to the menuEditor at the  specified position. The parameters are the radialPosition and the  overflowRow. If queried, an array of booleans is returned indicating  if the item is a separator item. The first 8 entries of the array  correspond to radial items (in order, "N", "NE", ... "NW"), and all later entries correspond to overflow (or linear) menu items. "
	fnames "style st"
		fdesc "This is the style of icons within the menuEditor. Valid styles are "iconOnly", "textOnly", "iconAndTextHorizontal"  and "iconAndTextVertical". "
	fnames "subMenuAt sma"
		fdesc "Creates a submenu item at the given position.  A submenu item  created within the radial portion of a menu will overwrite whatever  item (if any) is currently at the given position. A submenu item  created within the overflow (linear) portion of a menu will be  inserted before the item currently at the given position. "
	fnames "subMenuEditorWindow sew"
		fdesc "The name of the window which contains a sub-menuEditor.  Only use  when creatitg a sub-menuEditor. This window will automatically be  closed if a parent menuEditor is closed or if a parent menu item is deleted. "
	fnames "subMenuEditorsOpen seo"
		fdesc "This is a query only flag.  Returns an array of booleans, each of which indicates if a sub-menuEditor is open and attached to the menu item in a particular cell.  One boolean is returned for each cell in the menuEditor, even if the cell is vacant or contains a non-submenu item (false will be returned in both these cases).  Only when a cell contains a submenu item can true possibily be returned. The first 8 entries of the array correspond to radial items (in order, "N", "NE", ... "NW"), and all later entries correspond to overflow (or linear) menu items. "
	fnames "subMenuOf smo"
		fdesc "Attaches a sub-menuEditor to its parent menuEditor.  Only use when  creatitg a sub-menuEditor. The arguments are the name of the parent menuEditor, followed by the position of a submenu item  within the parent. A submenu item must already exist within the parent  at the given position. A submenu item cannot have multiple  sub-menuEditors attached to it. "
	fnames "topLevelMenu tlm"
		fdesc "The popup menu to attach to the editor.  All editing operations  performed in the editor (i.e. inserting/deleting/moving an item) will  be immediately reflected in this menu. This flag is ignored if the  editor is a sub-menuEditor.  The editor will update gracefully if the  value of the flag is changed from its initial value. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "menuItem"
	desc "This command creates/edits/queries menu items."
	fcount "38"
	fnames "allowOptionBoxes aob"
		fdesc "In the case of submenu items this flag specifies whether the submenu will be able to support option box menu items.  An error results if an option box item is added to a menu that doesn't allow them.  This flag may be queried and must be specified when the submenu item is created.  This flag is ignored for non-submenu items.  The default value is false. "
	fnames "altModifier alt"
		fdesc "No Description"
	fnames "annotation ann"
		fdesc "Annotate the menu item with an extra string value. "
	fnames "boldFont bld"
		fdesc "Specify if text should be bold. Only supported in menus  which use the marking menu implementation.  Default is false for Windows, and true for all other platforms. "
	fnames "checkBox cb"
		fdesc "Creates a check box menu item.  Argument specifies the check box value. "
	fnames "collection cl"
		fdesc "To explicitly add a radio menu item to a collection. "
	fnames "command c"
		fdesc "Attaches a command/script that will be executed when the item is selected. Note this command is not executed when the menu item is in an  optionMenu  control. "
	fnames "commandModifier cmd"
		fdesc "Specify this flag if the command modifier is part of the accelerator sequence.  This is only available on systems which have a separate command key. "
	fnames "ctrlModifier ctl"
		fdesc "Specify this flag if the Cntl modifier is part of the accelerator sequence. "
	fnames "data da"
		fdesc "Attaches a piece of user-defined data to the menu item. "
	fnames "divider d"
		fdesc "Creates a divider menu item. "
	fnames "docTag dt"
		fdesc "Attaches a tag to the menu item. "
	fnames "dragDoubleClickCommand ddc"
		fdesc "If the menu item is put on the shelf then this command will be invoked when the corresponding shelf object is double clicked. "
	fnames "dragMenuCommand dmc"
		fdesc "If the menu item is put on the shelf then this command will be invoked when the corresponding shelf object is clicked. "
	fnames "echoCommand ec"
		fdesc "Specify whether the action attached with the  -c/command  flag should echo to the command output areas when invoked. This flag is false by default and must be specified with the  -c/command  flag. "
	fnames "enable en"
		fdesc "Enable state for the menu item.  A disabled menu item is dimmed and unresponsive.  An enabled menu item is selectable and has normal appearance. "
	fnames "enableCommandRepeat ecr"
		fdesc "This flag only affects menu items to which a command can be attached.  Specify true and the command may be repeated by executing the command  repeatLast .  This flag is true by default for all items except for option box items. "
	fnames "familyImage fi"
		fdesc "Get the filename of the family icon associated with the menu. The family icon will be used for the shelf unless an icon is specified with the -image flag. "
	fnames "image i"
		fdesc "The filename of the icon associated with the menu item.  If the menu containing the menu item is being edited with a menuEditor widget, then the menuEditor will use this icon to represent the menu item. This icon will be displayed on the shelf when the menu item is placed there. "
	fnames "imageOverlayLabel iol"
		fdesc "Specify a short (5 character) text string to be overlayed on top of the icon associated with the menu item. This is primarily a mechanism for differentiating menu items that are using a Family icon due to the fact that an icon image had not been explicitly defined. The image overlay label will not be used if an icon image is defined for the menu item. "
	fnames "insertAfter ia"
		fdesc "Specify After which item the new one will be placed. If this flag is not specified, item is added at the end of the menu. Use the empty string "" to insert before the first  item of the menu. WARNING: This flag is known to cause problems with tear off menus. It is recommended that you do not use it with menus that are tear off enabled. In other words, the parent menu should not have its -to/tearOff flag set. "
	fnames "isCheckBox icb"
		fdesc "Returns true if the item is a check box item. "
	fnames "isOptionBox iob"
		fdesc "Returns true if the item is an option box item. "
	fnames "isRadioButton irb"
		fdesc "Returns true if the item is a radio button item. "
	fnames "italicized it"
		fdesc "Specify if text should be italicized. Only supported in menus which use the marking menu implementation.  Default is false. "
	fnames "keyEquivalent ke"
		fdesc "Specify the accelerator character.  This character is combined with the modifier keys specified with the  -alt/altModifier ,  -opt/optionModifier ,  -ctl/ctlModifier , -cmd/commandModifier  and  -sh/shiftModifier  to form the complete accelerator sequence that you can type to  execute the menu item.  Note that only regular menu items, radio menu items and check box menu items can have an accelerator.   "
	fnames "label l"
		fdesc "The text that appears in the item. "
	fnames "mnemonic mn"
		fdesc "Set the Alt key to activate that item. The character specified must match the case of its corresponding  character in the menu item text, but selection from the keyboard  is case insensitive. "
	fnames "optionBox ob"
		fdesc "Indicates that the menu item will be an option box item.  This item will appear to the right of the preceeding menu item. "
	fnames "optionModifier opt"
		fdesc "Specify this flag if the Alt (or option) modifier is part of the accelerator sequence. "
	fnames "parent p"
		fdesc "Specify the menu that the item will appear in. "
	fnames "postMenuCommand pmc"
		fdesc "Specify a script to be executed when the submenu is about to be shown. "
	fnames "postMenuCommandOnce pmo"
		fdesc "Indicate the  -pmc/postMenuCommand  should only be invoked once.  Default value is false, ie. the  -pmc/postMenuCommand  is invoked everytime the sub menu is shown. "
	fnames "radialPosition rp"
		fdesc "The radial position of the menu item if it is in a Marking Menu.  Radial positions are given in the form of a cardinal direction, and may be "N", "NW", "W", "SW", "S", "SE", "E" or "NE". "
	fnames "radioButton rb"
		fdesc "Creates a radio button menu item.  Argument specifies the radio button value. "
	fnames "shiftModifier sh"
		fdesc "Specify this flag if the Shift modifier is part of the accelerator sequence. "
	fnames "subMenu sm"
		fdesc "Indicates that the item will have a submenu.  Subsequent menuItems will be added to the submenu  until  setParent -menu  is called.  Note that a submenu item creates a menu object and consequently the  menu  command may be used on the submenu item. "
	fnames "tearOff to"
		fdesc "For the case where the menu item is a sub menu this flag will  make the sub menu tear-off-able. Note that this flag has no  effect on the other menu item types. "
	rcount "0"
name "menuItemToShelf"
	desc "Creates a button on the current shelf that, when pressed, will act like selecting the specified menu item."
	fcount "0"
	rcount "0"
name "messageLine"
	desc "This command creates a message line where tool feedback is shown."
	fcount "19"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "min"
	desc "Returns the smaller of the two floating point arguments."
	fcount "0"
	rcount "0"
name "minimizeApp"
	desc "This command minimizes (iconifies) all of the application's windows into a single desktop icon. To restore the application click on the desktop icon."
	fcount "0"
	rcount "0"
name "mirrorJoint"
	desc "This command will duplicate a branch of the skeleton from the selected joint symmetrically about a plane in world space. There are three mirroring modes(xy-, yz-, xz-plane)."
	fcount "5"
	fnames "mirrorBehavior mb"
		fdesc "The mirrorBehavior flag is used to specify that when performing the mirror, the joint orientation axes should be mirrored such that equal rotations on the original and mirrored joints will place the skeleton in a mirrored position (symmetric across the mirroring plane). Thus, animation curves from the original joints can be copied to the mirrored side to produce a similar (but symmetric) behavior. When mirrorBehavior is not specified, the joint orientation on the mirrored side will be identical to the source side. "
	fnames "mirrorXY mxy"
		fdesc "mirror skeleton from the selected joint about xy-plane in world space. "
	fnames "mirrorXZ mxz"
		fdesc "mirror skeleton from the selected joint about xz-plane in world space. "
	fnames "mirrorYZ myz"
		fdesc "mirror skeleton from the selected joint about yz-plane in world space. "
	fnames "searchReplace sr"
		fdesc "After performing the mirror, rename the new joints by searching the name for the first specified string and replacing it with the second specified string. "
	rcount "13"
		rname "connectJoint"
		rname "insertJoint"
		rname "ikSystemInfo"
		rname "ikHandle"
		rname "jointDisplayScale"
		rname "joint"
		rname "jointCluster"
		rname "removeJoint"
		rname "ikHandleDisplayScale"
		rname "ikSolver"
		rname "ikSystem"
		rname "jointLattice"
		rname "removeJoint"
name "modelCurrentTimeCtx"
	desc "This command creates a context which may be used to change current time within the model views."
	fcount "9"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "percent per"
		fdesc "Percent of the screen space that represents the full time slider range (default is 50%) "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "modelEditor"
	desc "Create, edit or query a model editor. Note that some of the flags of this command may have different settings for normal mode and for interactive/playback mode. For example, a modelEditor can be set to use shaded mode normally, but to use wireframe during playback for greater speed. Some flags also support having defaults set so that new model editors will be created with those settings."
	fcount "95"
	fnames "activeOnly ao"
		fdesc "Sets whether only active objects should appear shaded in shaded display. "
	fnames "activeView av"
		fdesc "Sets this model editor to be the active view.  Returns true if successful.  On query this flag will return whether the view is the active view. "
	fnames "addObjects aob"
		fdesc "This flag causes the objects contained within the selection connection to be added to the list of objects visible in the view (if viewSelected is true). "
	fnames "addSelected as"
		fdesc "This flag causes the currently active objects to be added to the list of objects visible in the view (if viewSelected is true). "
	fnames "allObjects alo"
		fdesc "Turn on/off the display of all objects for the view of the model editor. This excludes NURBS CVs and Hulls and grids. "
	fnames "backfaceCulling bfc"
		fdesc "Turns on or off backface culling for the whole view.  This  setting overrides the culling settings of individual objects.  All objects draw in the view will be backface culled.  When backface culling is turned on, surfaces becomes invisible in areas where the  normal is pointing away from the camera. "
	fnames "bufferMode bm"
		fdesc "Sets the graphic buffer mode.  Possible values are "single" or  "double". "
	fnames "bumpResolution brz"
		fdesc "Set the resolution for "baked" bump map textures when using the hardware renderer. The default value is 512, 512 respectively. "
	fnames "camera cam"
		fdesc "Change or query the name of the camera in model editor. "
	fnames "cameraName cn"
		fdesc "Set the name of the panel's camera transform and shape. The shape name is computed by appending the string "Shape" to the transform name. This flag may not be queried. "
	fnames "cameras ca"
		fdesc "Turn on/off the display of cameras for the view of the model editor. "
	fnames "colorMap cm"
		fdesc "Queries the color map style for the model panel.  Possible  values are "colorIndex" and "rgb". "
	fnames "colorResolution crz"
		fdesc "Set the resolution for "baked" color textures when using the hardware renderer. The default value is 256, 256 respectively. "
	fnames "control ctl"
		fdesc "Query only. Returns the top level control for this editor. Usually used for getting a parent to attach popup menus. CAUTION: editors may not have controls at times.  This flag can return "NONE" if no control is present. "
	fnames "controlVertices cv"
		fdesc "Turn on/off the display of NURBS CVs for the view of the model editor. "
	fnames "cullingOverride cov"
		fdesc "Set whether to override the culling attributes on objects when using  the hardware renderer. The options are: "none" : Use the culling object attributes per object. "doubleSided" : Force all objects to be double sided. "singleSided": Force all objects to be single sided. The default value is "none". "
	fnames "default d"
		fdesc "Causes this command to modify the default value of this setting. Newly created model editors will inherit the values.  This flag may be used with the -interactive to set default interactive settings. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "deformers df"
		fdesc "Turn on/off the display of deformer objects for the view of the model editor. "
	fnames "dimensions dim"
		fdesc "Turn on/off the display of dimension objects for the view of the model editor. "
	fnames "displayAppearance da"
		fdesc "Sets the display appearance of the model panel.  Possible values are "wireframe", "points", "boundingBox", "smoothShaded", "flatShaded".  This flag may be used with the -interactive and -default flags.  Note that only "wireframe", "points", and "boundingBox" are valid for the interactive mode. "
	fnames "displayLights dl"
		fdesc "Sets the lighting for shaded mode.  Possible values are "selected", "active", "all", "default", "none". "
	fnames "displayTextures dtx"
		fdesc "Turns on or off display of textures in shaded mode "
	fnames "docTag dtg"
		fdesc "Attaches a tag to the maya editor. "
	fnames "dynamics dy"
		fdesc "Turn on/off the display of dynamics objects for the view of the model editor. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "filter f"
		fdesc "Specifies the name of a filter to be placed on this editor. This filters the information coming onto the main list of the editor. "
	fnames "fluids fl"
		fdesc "Turn on/off the display of fluids for the view of the model editor. "
	fnames "fogColor fcl"
		fdesc "The color used for hardware fogging. "
	fnames "fogDensity fdn"
		fdesc "Determines the density of hardware fogging. "
	fnames "fogEnd fen"
		fdesc "The end location of hardware fogging. "
	fnames "fogMode fmd"
		fdesc "This determines the drop-off mode for fog. The possibilities are: "linear" : linear drop-off "exponent" : exponential drop-off "exponent2" : squared exponential drop-off "
	fnames "fogSource fsc"
		fdesc "Set the type of fog algorithm to use.	If the argument is "fragment" (default) then fog is computed per pixel. If the argument is "coordinate" then if the geometry has specified vertex fog coordinates, and the OpenGL extension for vertex fog is supported by the graphics system, then fog is computed per vertex. "
	fnames "fogStart fst"
		fdesc "The start location of hardware fogging. "
	fnames "fogging fg"
		fdesc "Set whether hardware fogging is enabled or not. "
	fnames "follicles fo"
		fdesc "Turn on/off the display of follicles for the view of the model editor. "
	fnames "forceMainConnection fmc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. This is a variant of the -mainListConnection flag in that it will force a change even when the connection is locked. This flag is used to reduce the overhead when using the -unlockMainConnection , -mainListConnection, -lockMainConnection flags in immediate  succession. "
	fnames "grid gr"
		fdesc "Turn on/off the display of the grid for the view of the model editor. "
	fnames "hairSystems hs"
		fdesc "Turn on/off the display of hairSystems for the view of the model editor. "
	fnames "handles ha"
		fdesc "Turn on/off the display of select handles for the view of the model editor. "
	fnames "highlightConnection hlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its highlight list.  Not all editors have a highlight list.  For those who do, it is sort of a secondary selection list. "
	fnames "hulls hu"
		fdesc "Turn on/off the display of NURBS hulls for the view of the model editor. "
	fnames "ikHandles ikh"
		fdesc "Turn on/off the display of ik handles and end effectors for the view of the model editor. "
	fnames "interactive i"
		fdesc "Causes this command to modify the interactive refresh settings of the view.  In this way it is possible to change the behavior of the model editor during playback for improved performance. "
	fnames "joints j"
		fdesc "Turn on/off the display of joints for the view of the model editor. "
	fnames "lights lt"
		fdesc "Turn on/off the display of lights for the view of the model editor. "
	fnames "locators lc"
		fdesc "Turn on/off the display of locator objects for the view of the model editor. "
	fnames "lockMainConnection lck"
		fdesc "Locks the current list of objects within the mainConnection, so that only those objects are displayed within the editor. Further changes to the original mainConnection are ignored. "
	fnames "lowQualityLighting lql"
		fdesc "Set whether to use "low quality lighting" when using the  hardware renderer. The default value is false. "
	fnames "mainListConnection mlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. "
	fnames "maxConstantTransparency mct"
		fdesc "Sets the maximum constant transparency.  Setting this value remaps  constant transparency values from the range [0.0, 1.0] to the range  [0.0, maxConstantTransparency].  All transparency values are shifted linearly to the new range, so a fully transparency object (transparency 1.0) would  appear with a transparency of maxConstantTransparency in the viewport,  allowing highly transparent objects to be made visible.  This flag only affects constant (non-textured) transparent objects. "
	fnames "nurbsCurves nc"
		fdesc "Turn on/off the display of nurbs curves for the view of the model editor. "
	fnames "nurbsSurfaces ns"
		fdesc "Turn on/off the display of nurbs surfaces for the view of the model editor. "
	fnames "occlusionCulling ocl"
		fdesc "Set whether to enable occlusion culling testing when using the hardware renderer. The default value is false. "
	fnames "panel pnl"
		fdesc "Specifies the panel that the editor belongs to.  By default if an editor is created in the create callback of a scripted panel it will belong to that panel.  If an editor doesn't belong to a panel it will be deleted when the window that it is in is deleted. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this editor. This flag will only have an effect if the editor is currently un-parented. "
	fnames "pivots pv"
		fdesc "Turn on/off the display of transform pivots for the view of the model editor. "
	fnames "planes pl"
		fdesc "Turn on/off the display of sketch planes for the view of the model editor. "
	fnames "polymeshes pm"
		fdesc "Turn on/off the display of polygon meshes for the view of the model editor. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "removeSelected rs"
		fdesc "This flag causes the currently active objects to be removed from the list of objects visible in the view (if viewSelected is true). "
	fnames "rendererName rnm"
		fdesc "Set the renderer used for the 3d modeling viewport. The options are: "base_OpenGL_Renderer" : The default OpenGL based renderer. "hwRender_OpenGL_Renderer" : The high quality hardware renderer. The default is "base_OpenGL_Renderer". The high quality renderer is only supported on certain hardware configurations. See the hardware qualification charts for more details. "
	fnames "selectionConnection slc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its own selection list.  As the user selects things in this editor, they will be selected in the selectionConnection object.  If someone else changes the object, the editor will update to show the change. "
	fnames "setSelected ss"
		fdesc "This flag causes the currently active objects to be the only objects visible in the view (if viewSelected is true). "
	fnames "shadows sdw"
		fdesc "Turn on/off the display of hardware shadows in shaded mode. "
	fnames "smoothWireframe swf"
		fdesc "Turns on or off smoothing of wireframe lines and points "
	fnames "sortTransparent st"
		fdesc "This flag turns on/off sorting of transparent objects during shaded mode refresh. Normally, objects are sorted according to their origin in camera space but when this flag is turned off they will be drawn according to their (depth-first traversal) order in the scene graph. This is a global flag that affects all model editors. "
	fnames "stateString sts"
		fdesc "Query only flag.  Returns the MEL command that will edit an editor to match the current editor state. The returned command string uses the string variable $editorName in place of a specific name. "
	fnames "strokes str"
		fdesc "Turn on/off the display of Paint Effects strokes for the view "
	fnames "subdivSurfaces sds"
		fdesc "Turn on/off the display of subdivision surfaces for the view of the model editor. "
	fnames "textureAnisotropic ta"
		fdesc "Set whether to perform anisotropic texture filtering. Will work only if the anisotropic texture filtering extension is supported in OpenGL on the graphics system.  "
	fnames "textureDisplay td"
		fdesc "Set the type of blending to use for textures. The blend is performed between the destination fragment and the texture fragment. The source is usually the material color. Argument options are: "modulate" : multiply the destination and texture fragment "decal" : overwrite the destination with the texture fragment "
	fnames "textureHighlight th"
		fdesc "Set whether to show specular hilighting when the display is in shaded textured mode. "
	fnames "textureMaxSize tms"
		fdesc "Set maximum texture size for hardware texturing.  The integer value must be a power of 2.  Recommended values are 128 or 256.  If the value specified is larger than the OpenGL maximim textures size for the graphics hardware it will be clamped to the OpenGL size.  If many large textures are used in a scene reducing this value improves performance.  On Impact texture memory is pinned in RAM so using large textures can cause reliability and performance problems. Again reducing this value will help. Software rendering does not use this value. "
	fnames "textureMemoryUsed tmu"
		fdesc "Returns the total number of bytes used by all texture maps.  This is typicly width*height*channels for all texture objects in the scene If the texture is mip mapped all mip map levels are included in the total though not never more than two level will be in use at one time "
	fnames "textureSampling ts"
		fdesc "Set the type of sampling to be used for texture display. The argument can be either: 1 : means to perform point sample 2 : means to perform bilinear interpolation (default) "
	fnames "textures tx"
		fdesc "Turn on/off the display of texture objects for the view "
	fnames "transpInShadows tis"
		fdesc "Set whether to enable display of transparency in shadows when  using the hardware renderer. The default value is false. "
	fnames "transparencyAlgorithm tal"
		fdesc "Set the transparency algorithm used when using the hardware renderer. The options are: "frontAndBackCull" : Two pass front and back culling technique. "perPolygonSort" : Draw transparent polygons in back-to-front order technique. The default value is "frontAndBackCull". "
	fnames "twoSidedLighting tsl"
		fdesc "Turns on or off two sided lighting.  This may be used with  the -default flag. "
	fnames "unParent up"
		fdesc "Specifies that the editor should be removed from its layout. This cannot be used with query. "
	fnames "unlockMainConnection ulk"
		fdesc "Unlocks the mainConnection, effectively restoring the original mainConnection (if it is still available), and dynamic updates. "
	fnames "updateColorMode ucm"
		fdesc "Using this flag tells the model panel to check which color  mode it should be in, and to switch accordingly.  This flag may be used to update a model panel after a camera image plane has been added or removed. "
	fnames "updateMainConnection upd"
		fdesc "Causes a locked mainConnection to be updated from the orginal mainConnection, but preserves the lock state. "
	fnames "useBaseRenderer ubr"
		fdesc "Set whether to use the "base" renderer when using the hardware renderer and in "interactive display mode" (-useInteractiveMode) The default value is false. "
	fnames "useColorIndex uci"
		fdesc "Sets whether the model panel will attempt to use color index mode when possible.  Color index mode can provide a performance increase for point, bounding box, and wireframe display modes. This may be used with the -default flag. "
	fnames "useInteractiveMode ui"
		fdesc "Turns on or off the use of the special interaction settings during playback.  This flag may be used with the -default flag. "
	fnames "useRGBImagePlane ip"
		fdesc "Sets whether the model panel will be forced into RGB mode  when there is an image plane attached to the panel's camera.  "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "viewObjects vo"
		fdesc "Returns the name (if any) of the objectSet which contains the list of objects visible in the view if viewSelected is true and the list of objects being displayed does  not  come from the active list. "
	fnames "viewSelected vs"
		fdesc "This flag turns on/off viewing of selected objects. When the flag is set to true, the currently active objects are captured and used as the list of objects to view. "
	fnames "wireframeBackingStore wbs"
		fdesc "Sets whether a backing store is used to optimization the drawing of active objects. This mode can provide a performance increase in wireframe mode for certain scenes. "
	fnames "wireframeOnShaded wos"
		fdesc "Sets whether the model panel will draw the wireframe on all shaded objects (if true) or only for active objects (if false). "
	fnames "xray xr"
		fdesc "Turns on or off Xray mode.  This may be used with the -default flag. "
	rcount "0"
name "modelPanel"
	desc "This command creates a panel consisting of a model editor. See the modelEditor command documentation for more information."
	fcount "21"
	fnames "camera cam"
		fdesc "Query or edit the camera in a modelPanel. "
	fnames "control ctl"
		fdesc "Returns the top level control for this panel. Usually used for getting a parent to attach popup menus. CAUTION: panels may not have controls at times.  This flag can return "" if no control is present. "
	fnames "copy cp"
		fdesc "Makes this panel a copy of the specified panel.  Both panels must be of the same type. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Attaches a tag to the maya panel. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "init in"
		fdesc "Initializes the panel's default state.  This is usually done automatically on file -new and file -open. "
	fnames "isUnique iu"
		fdesc "Returns true if only one instance of this panel type is allowed. "
	fnames "label l"
		fdesc "Specifies the user readable label for the panel. "
	fnames "menuBarVisible mbv"
		fdesc "Controls whether the menu bar for the panel is displayed. "
	fnames "modelEditor me"
		fdesc "This flag returns the name of the model editor contained by the panel. "
	fnames "needsInit ni"
		fdesc "(Internal) On Edit will mark the panel as requiring initialization. Query will return whether the panel is marked for initialization.  Used during file -new and file -open. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this panel. "
	fnames "popupMenuProcedure pmp"
		fdesc "Specifies the procedure called for building the panel's popup menu(s). The default value is "buildPanelPopupMenu". "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "replacePanel rp"
		fdesc "Will replace the specifed panel with this panel.  If the target panel is within the same layout it will perform a swap. "
	fnames "tearOff to"
		fdesc "Will tear off this panel into a separate window with a paneLayout as the parent of the panel. When queried this flag will return if the panel has been torn off into its own window. "
	fnames "tearOffCopy toc"
		fdesc "Will create this panel as a torn of copy of the specified source panel. "
	fnames "unParent up"
		fdesc "Specifies that the panel should be removed from its layout. This (obviously) cannot be used with query. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "movIn"
	desc "Imports a .mov file into animation curves connected to the listed attributes. The attribute must be writable, since an animation curve will be created and connected to the attribute. If an animation curve already is connected to the attribute, the imported data is pasted onto that curve. The starting time used for the .mov file importation is the current time when the command is executed. Valid attribute types are numeric attributes; time attributes; linear attributes; angular attributes; compound attributes made of the types listed previously; and multi attributes composed of the types listed previously. If an unsuppoted attribute type is.... Refer to full documentation"
	fcount "2"
	fnames "file f"
		fdesc "The name of the .mov file. If no extension is used, a .mov will be  added. "
	fnames "startTime st"
		fdesc "The default start time for importing the .mov file is the  current time. The startTime option sets the starting time for the .mov data in the current time unit. "
	rcount "9"
		rname "applyTake"
		rname "filter"
		rname "recordDevice"
		rname "defineDataServer"
		rname "writeTake"
		rname "defineVirtualDevice"
		rname "movOut"
		rname "enableDevice"
		rname "readTake"
name "movOut"
	desc "Exports a .mov file from the listed attributes. Valid attribute types are numeric attributes; time attributes; linear attributes; angular attributes; compound attributes made of the types listed previously; and multi attributes composed of the types listed previously. Length, angle, and time values will be written to the file in the user units. If an unsupported attribute type is requested, the action will fail. The .mov file may be read back into Maya using the movIn command."
	fcount "4"
	fnames "comment c"
		fdesc "If true, the attributes written to the .mov file will be listed in a commented section at the top of the .mov file. The default is  false. "
	fnames "file f"
		fdesc "The name of the .mov file. If no extension is used, a .mov will be  added. "
	fnames "precision pre"
		fdesc "Sets the number of digits to the right of the decimal place in the .mov file. C: The default is 6. "
	fnames "time t"
		fdesc "The time range to save as a .mov file. The default is the current time range. "
	rcount "9"
		rname "applyTake"
		rname "filter"
		rname "recordDevice"
		rname "defineDataServer"
		rname "movIn"
		rname "writeTake"
		rname "defineVirtualDevice"
		rname "enableDevice"
		rname "readTake"
name "move"
	desc "The move command is used to change the positions of geometric objects. The default behaviour, when no objects or flags are passed, is to do a absolute move on each currently selected object in the world space. The value of the coordinates are interpreted as being defined in the current linear unit unless the unit is explicitly mentioned. When using -objectSpace there are two ways to use this command. If numbers are typed without units then the internal values of the object are set to these values. If, on the other hand a unit is specified then the internal value.... Refer to full documentation"
	fcount "16"
	fnames "absolute a"
		fdesc "Perform an absolute operation. "
	fnames "localSpace ls"
		fdesc "Move in local space "
	fnames "moveX x"
		fdesc "Move in X direction "
	fnames "moveXY xy"
		fdesc "Move in XY direction "
	fnames "moveXYZ xyz"
		fdesc "Move in all directions (default) "
	fnames "moveXZ xz"
		fdesc "Move in XZ direction "
	fnames "moveY y"
		fdesc "Move in Y direction "
	fnames "moveYZ yz"
		fdesc "Move in YZ direction "
	fnames "moveZ z"
		fdesc "Move in Z direction "
	fnames "objectSpace os"
		fdesc "Move in object space "
	fnames "parameter p"
		fdesc "Move in parametric space "
	fnames "relative r"
		fdesc "Perform a operation relative to the object's current position  "
	fnames "rotatePivotRelative rpr"
		fdesc "Move relative to the object's rotate pivot point. "
	fnames "scalePivotRelative spr"
		fdesc "Move relative to the object's scale pivot point. "
	fnames "worldSpace ws"
		fdesc "Move in world space "
	fnames "worldSpaceDistance wd"
		fdesc "Move is specified in world space units "
	rcount "3"
		rname "xform"
		rname "rotate"
		rname "scale"
name "moveIKtoFK"
	desc "Script for moving the selected ik handle or object connected to and ik handle to the location of the associated fk joint."
	fcount "0"
	rcount "0"
name "moveKeyCtx"
	desc "This command creates a context which may be used to move keyframes within the graph editor."
	fcount "10"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "moveFunction mf"
		fdesc "linear | power | constant. Specifies how the keys are dragged. The default move type is constant where all keys move the same amount as controlled by user movement. Power provides a fall-off function where the center of the drag moves the most and the keys around the drag move less. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "option o"
		fdesc "move | insert | over | segmentOver Specifies the keyframe -option to use "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "moveVertexAlongDirection"
	desc "The command moves the selected vertex ( control vertex ) in the specified unit direction by the given magnitude. The vertex(ices) may also be moved in the direction of unit normal ( -n flag ). For NURBS surface vertices the direction of movement could also be either in tangent along U or tangent along V. The flags -n, -u, -v and -d are mutually exclusive, ie. the selected vertices can be all moved in only -n or -u or -v or -d."
	fcount "6"
	fnames "direction d"
		fdesc "move the vertex along the direction as specified. The direction is normalized. "
	fnames "magnitude m"
		fdesc "move by the specified magnitude in the direction vector. "
	fnames "normalDirection n"
		fdesc "move components in the direction of normal by the given magnitude at  the respective components. The normal is 'normalized'. "
	fnames "uDirection u"
		fdesc "move components in the direction of tangent along U at the respective components where appropriate. The flag is ignored for polygons, NURBS curves. The u direction is normalized. "
	fnames "uvNormalDirection uvn"
		fdesc "move in the triad space [u,v,n] at the respective components by the specified displacements. The flag is ignored for polygons, NURBS curves.  "
	fnames "vDirection v"
		fdesc "move components in the direction of tangent along V at the respective components where appropriate. The flag is ignored for polygons, NURBS curves. "
	rcount "0"
name "multiProfileBirailSurface"
	desc "The cmd creates a railed surface by sweeping the profile "curve1" to profile "curve2", profile "curve2" to profile "curve3" and so on along the two rail curves "rail1", "rail2". There must be atleast 3 profile curves followed by the two rail curves. The profile curves must intersect the two rail curves. The constructed may be made tangent continuous to the first and last profile using the flags -tp1, -tp2 provided the profiles are surface curves i.e. isoparms, curve on surface or trimmed edge."
	fcount "10"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "tangentContinuityProfile1 tp1"
		fdesc "Tangent continuous across the first profile. The profile must be a surface curve. Default:  false "
	fnames "tangentContinuityProfile2 tp2"
		fdesc "Tangent continuous across the last profile. The profile must be a surface curve. Default:  false "
	rcount "2"
		rname "singleProfileBirailSurface"
		rname "doubleProfileBirailSurface"
name "mute"
	desc "Mute is undoable , queryable , and editable . The mute command is used to disable and enable playback on a channel. When a channel is muted, it retains the value that it was at prior to being muted."
	fcount "1"
	fnames "disable d"
		fdesc "Disable muting on the channels "
	rcount "1"
		rname "setKeyframe"
name "nameCommand"
	desc "This command creates a nameCommand object. Each nameCommand object can be connected to a hotkey. Thereafter, the nameCommand's command string will be executed whenever the hotkey is pressed (or released, as specified by the user)."
	fcount "6"
	fnames "annotation ann"
		fdesc "A description of the command. "
	fnames "command c"
		fdesc "The command that is executed when the nameCommand is invoked. "
	fnames "data1 da1"
		fdesc "No Description"
	fnames "data2 da2"
		fdesc "No Description"
	fnames "data3 da3"
		fdesc "These are optional, user-defined data strings that are attached to the nameCommand object.  They can be edited or queried using the assignCommand command. "
	fnames "default d"
		fdesc "Indicate that this name command is a default command. Default name commands will not be saved to preferences. "
	rcount "0"
name "nameField"
	desc "This command creates an editable field that can be linked to the name of a Maya object. The field will always show the name of the object."
	fcount "23"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "This command is executed when the field text is changed by the user. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "nameChangeCommand ncc"
		fdesc "This command is executed when the name of the node changes. NOTE: this will be executed when the node name changes, whether or not the name-change originated with the user typing into the field.  If you want to attach a command to be executed when the user types into the field, use the -cc/changeCommand flag. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "object o"
		fdesc "Attaches the field to the named dage object, so that the field will always display the object's name. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "receiveFocusCommand rfc"
		fdesc "Command executed when the field receives focus. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "namespace"
	desc "This command allows a namespace to be created or set or removed. A namespace is a simple grouping of objects under a given name. Namespaces are primarily used to resolve name-clash issues in Maya, where a new object has the same name as an existing object (from importing a file, for example). Using namespaces, you can have two objects with the same name, as long as they are contained in differenct namespaces. Namespaces are reminiscent of hierarchical structures like file systems where namespaces are analogous to directories and objects are analogous to files. The colon (':') character is the separator.... Refer to full documentation"
	fcount "5"
	fnames "addNamespace add"
		fdesc "Create a new namespace with the given name. "
	fnames "exists ex"
		fdesc "Returns true if the specified namespace exists, false if not. "
	fnames "parent p"
		fdesc "Used with the -add/-addNamespace to specifiy the parent of the new namespace. "
	fnames "removeNamespace rm"
		fdesc "Deletes the given namespace.  The namespace must be empty for it to be deleted. "
	fnames "setNamespace set"
		fdesc "Sets the current namespace.	 "
	rcount "1"
		rname "namespaceInfo"
name "namespaceInfo"
	desc "This command displays information about the current namespace. A namespace is a simple grouping of objects under a given name. Each item in a namespace can then be identified by its own name, along with what namespace it belongs to. Namespaces can contain other namespaces like sets, with the restriction that all namespaces are disjoint. Namespaces are primarily used to resolve name-clash issues in Maya, where a new object has the same name as an existing object (from importing a file, for example). Using namespaces, you can have two objects with the same name, as long as they are contained.... Refer to full documentation"
	fcount "5"
	fnames "currentNamespace cur"
		fdesc "Display the name of the current namespace. "
	fnames "listNamespace ls"
		fdesc "List the contents of the current namespace. "
	fnames "listOnlyDependencyNodes lod"
		fdesc "List all dependency nodes in the current namespace. "
	fnames "listOnlyNamespaces lon"
		fdesc "List all namespaces in the current namespace. "
	fnames "parent p"
		fdesc "Display the parent of the current namespace. "
	rcount "1"
		rname "namespace"
name "newPanelItems"
	desc "This action builds menu items to create new panels. You must provide the name of the menu that the items are to be added to."
	fcount "0"
	rcount "0"
name "newton"
	desc "A Newton field pulls an object towards the exerting object with force dependent on the exerting object's mass, using Newton's universal law of gravitation. The transform is the associated dependency node. Use connectDynamic to cause the field to affect a dynamic object. If fields are created, this command returns the names of each of the fields. If a field was queried, the results of the query are returned. If a field was edited, the field name is returned. If object names are provided or the active selection list is non-empty, the command creates a field for every object in the.... Refer to full documentation"
	fcount "7"
	fnames "attenuation att"
		fdesc "Attentuation rate of field  "
	fnames "magnitude m"
		fdesc "Strength of field.  "
	fnames "maxDistance mxd"
		fdesc "Maximum distance at which field is exerted.  -1 indicates that the field has no maximum distance.  "
	fnames "minDistance mnd"
		fdesc "Minimum distance at which field is exerted.  Distance is in the denominator of the field force equation. Setting md to a small positive number avoids bizarre behavior when the distance gets extremely small. "
	fnames "name n"
		fdesc "name of field  "
	fnames "perVertex pv"
		fdesc "Per-vertex application. If this flag is set true, then each  individual point (CV, particle, vertex,etc.) of the chosen object  exerts an identical copy of the force field. If this flag is set to  false, then the froce is exerted only from the geometric center of the set of points.  "
	fnames "position pos"
		fdesc "Position in space where you want to place a field. The newton then emanates from this position in space rather  than from an object. Note that you can both use -pos  (creating a field at a position) and also provide object names.  "
	rcount "3"
		rname "particle"
		rname "connectDynamic"
		rname "addDynamic"
name "nodeIconButton"
	desc "This command creates a button that can be displayed with different icons, with or without a text label. If the button is drag and dropped onto other controls (ie. HyperShade), the command will be executed and the return string will be used as the name of a dropped node. This control supports up to 3 icon images and 4 different display styles. The icon image displayed is the one that best fits the current size of the control given its current style."
	fcount "29"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "command c"
		fdesc "Command executed when the control is pressed. The command should return a string which will be used to facilitate node drag and drop. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "image i"
		fdesc "If you are not providing images with different sizes then you may use this flag for the control's image. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "This control supports three icons.  The icon that best fits the current size of the control will be displayed. "
	fnames "imageOverlayLabel iol"
		fdesc "A short string (5 characters) label that will be displayed  on top of the image. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "The text that appears in the control. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "marginHeight mh"
		fdesc "The number of pixels above and below the control content. The default value is 1 pixel. "
	fnames "marginWidth mw"
		fdesc "The number of pixels on either side of the control content. The default value is 1 pixel. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "style st"
		fdesc "The draw style of the control.  Valid styles are "iconOnly", "textOnly", "iconAndTextHorizontal" and "iconAndTextVertical". "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "nodeOutliner"
	desc "The nodeOutliner command creates, edits and queries an outline control that shows dependency nodes and their attributes. Compound attributes are further expandable to show their children. Additional configure flags allow multi selection, customizable commands to issue upon selection, and showing connections (and connectability) to a single input attribute. There are also the abilities to add/remove/replace nodes through the command line interface, and drag/add. In some configurations, dragging a connected attribute of a node will load the node at the other end of the connection. There is a right mouse button menu and a flag to attach a command to it.... Refer to full documentation"
	fcount "22"
	fnames "addCommand ac"
		fdesc "(E) Command executed when the node outliner adds something. Uses substitution of the term %node for whatever is added, eg,  if you want to print the object added, the command should be  "print(\"%node \\n\")" "
	fnames "addObject a"
		fdesc "add the given object to the display "
	fnames "connectivity c"
		fdesc "(E) Takes an attribute argument ("nodeName.attributeName") ; dims any attributes  that can't connect to the given, and highlights any attributes already connected "
	fnames "currentSelection cs"
		fdesc "Retruns a string array containing what is currently selected "
	fnames "lastMenuChoice lmc"
		fdesc "Returns the text of the most recent menu selection. "
	fnames "menuCommand mc"
		fdesc "Attaches the given command to each item in the popup menu. "
	fnames "menuMultiOption mmo"
		fdesc "(E) Sets whether a menu option labelled "next available" will appear as the first option on any multi-attribute's right mouse button menu.  Defaults to True. "
	fnames "multiSelect ms"
		fdesc "(E) Allow multiSelect; more than one thing to be selected at a time "
	fnames "noConnectivity nc"
		fdesc "Reset the node outliner to not show any connectivity, ie, redraw all rows normally. "
	fnames "nodesDisplayed nd"
		fdesc "Returns a string array containing the list of nodes showing in the node Outliner  "
	fnames "pressHighlightsUnconnected phu"
		fdesc "(E) Sets whether clicking on an unconnected plug will select it or not.  Default is True. "
	fnames "remove rm"
		fdesc "remove the given object from the display "
	fnames "removeAll rma"
		fdesc "remove all objects from the display "
	fnames "replace rpl"
		fdesc "(E) replace what's displayed with the given objects "
	fnames "selectCommand sc"
		fdesc "(E) Command issued by selecting.  Different from -c in that a this command will only be issued if something is selected. "
	fnames "showConnectedOnly sco"
		fdesc "(E) show (true) or hide (false) only attributes that are connected matching input/output criteria "
	fnames "showHidden sh"
		fdesc "(E) show (true) or hide (false) UI invisible attributes that match the input/output criteria "
	fnames "showInputs si"
		fdesc "(E) show only UI visible attributes that can be connected to "
	fnames "showNonConnectable snc"
		fdesc "(E) show (true) or hide (false) non connectable attributes that match the input/output criteria "
	fnames "showNonKeyable snk"
		fdesc "(E) show (true) or hide (false) non keyframeable (animatable) attributes that match the input/output criteria "
	fnames "showOutputs so"
		fdesc "(E) show only UI visible attributes that can be connected from "
	fnames "showReadOnly sro"
		fdesc "(E) show only read only attributes attributes that can be connected from "
	rcount "0"
name "nodePreset"
	desc "NodePreset is NOT undoable , NOT queryable , and NOT editable . Command to save and load preset settings for a node. This command allows you to take a snapshot of the values of all attributes of a node and save it to disk as a preset with user specified name. Later the saved preset can be loaded and applied onto a different node of the same type. The end result is that the node to which the preset is applied takes on the same values as the node from which the preset was generated had at the time of.... Refer to full documentation"
	fcount "6"
	fnames "save sv"
		fdesc "Saves the current settings of the node specified by the first argument to a preset of the name specified by the second argument. If a preset for that node with that name already exists, it will be overwritten with no warning. You can use the -exists flag to check if the preset already exists. If an attribute of the node is the destination of a connection, the value of the attribute will not be written as part of the preset. "
	fnames "load ld"
		fdesc "Sets the settings of the node specified by the first argument according to the preset specified by the second argument. Any attributes on the node which are the destinations of connections or whose children (multi children or compound children) are destinations of connections will not be changed by the preset. "
	fnames "delete del"
		fdesc "Deletes the existing preset for the node specified by the first argument with the name specified by the second argument. "
	fnames "list ls"
		fdesc "Lists the names of all presets which can be loaded onto the specified node. "
	fnames "exists ex"
		fdesc "Returns true if the node specified by the first argument already has a preset with a name specified by the second argument. This flag can be used to check if the user is about to overwrite an existing preset and thereby provide the user with an opportunity to choose a different name. "
	fnames "isValidName ivn"
		fdesc "Returns true if the name consists entirely of valid characters for a preset name. Returns false if not. Because the preset name will become part of a file name and part of a MEL procedure name, some characters must be disallowed. Only alphanumeric characters and underscore are valid characters for the preset name. "
	rcount "0"
name "nodeType"
	desc "This command returns an identifying string that is unique to the class of the node. This can be useful for seeing if two nodes are of the same type."
	fcount "0"
	rcount "0"
name "noise"
	desc "The noise functions return values of a noise field in one, two, and three dimensions. The dnoise command returns the gradient of the noise field in three dimensions."
	fcount "0"
	rcount "0"
name "nonLinear"
	desc "This command creates a functional deformer of the specified type that will deform the selected objects. The deformer consists of three nodes: The deformer driver that gets connected to the history of the selected objects, the deformer handle transform that controls position and orientation of the axis of the deformation and the deformer handle that maintains the deformation parameters. The type of the deformer handle shape created depends on the specified type of the deformer. The deformer handle will be positioned at the center of the selected objects' bounding box and oriented to match the orientation of the leading object.... Refer to full documentation"
	fcount "16"
	fnames "after af"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node after the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "autoParent ap"
		fdesc "Parents the deformer handle under the selected object's  transform. This flag is valid only when a single object  is selected.   "
	fnames "before bf"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node before the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "commonParent cp"
		fdesc "Creates a new transform and parents the selected object and the deformer handle under it.  This flag is valid only when a single object is selected.  "
	fnames "curvature cur"
		fdesc "No Description"
	fnames "defaultScale ds"
		fdesc "Sets the scale of the deformation handle to 1.  By default the deformation handle is scaled to the match the largest dimension of the selected objects' bounding box.  [deformerFlags] The attributes of the deformer handle shape  can be set upon creation, edited and queried as normal flags using either the long or the short attribute name.  e.g.  "
	fnames "deformerTool dt"
		fdesc "Returns the name of the deformer tool objects (if any) as string string ... "
	fnames "exclusive ex"
		fdesc "Puts the deformation set in a deform partition. "
	fnames "frontOfChain foc"
		fdesc "This command is used to specify that the new deformer  node should be placed ahead (upstream) of existing deformer and skin nodes in the shape's history (but not ahead of existing tweak nodes). The input to the deformer will be the upstream shape rather than the visible downstream shape, so the behavior of this flag is the most intuitive if the downstream deformers are in their reset (hasNoEffect) position when the new deformer is added. "
	fnames "geometry g"
		fdesc "The specified object will be added to the list of objects being deformed by this deformer object, unless the -rm flag is also specified. When queried, this flag returns string string string ... "
	fnames "ignoreSelected is"
		fdesc "Tells the command to not deform objects on the current selection list "
	fnames "name n"
		fdesc "Used to specify the name of the node being created "
	fnames "prune pr"
		fdesc "Removes any points not being deformed by the deformer in  its current configuration from the deformer set. "
	fnames "remove rm"
		fdesc "Specifies that objects listed after the -g flag should be removed from this deformer. "
	fnames "split sp"
		fdesc "Branches off a new chain in the dependency graph instead of inserting/appending the deformer into/onto an existing chain. "
	fnames "type typ"
		fdesc "Specifies the type of deformation. The current valid  deformation types are:  bend, twist, squash, flare, sine and wave "
	rcount "1"
		rname "reorderDeformers"
name "normalConstraint"
	desc "Constrain an object's orientation based on the normal of the target surface(s) at the closest point(s) to the object. A normalConstraint takes as input one or more surface shapes (the targets) and a DAG transform node (the object). The normalConstraint orients the constrained object such that the aimVector (in the object's local coordinate system) aligns in world space to combined normal vector. The upVector (again the the object's local coordinate system) is aligned in world space with the worldUpVector. The combined normal vector is a weighted average of the normal vector for each target surface at the point closest to.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "normalize"
	desc "Normalizes a float array of 3 values."
	fcount "0"
	rcount "0"
name "nurbsBoolean"
	desc "This command performs a boolean operation."
	fcount "12"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "nsrfsInFirstShell nsf"
		fdesc "items comprising the first shell. "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "operation op"
		fdesc "Type of Boolean operation. Default:  0 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "smartConnection sc"
		fdesc "items having a boolean operation as history. C : Default is true. "
	fnames "tolerance tlb"
		fdesc "fitting tolerance. Default:  0.01 "
	rcount "0"
name "nurbsCopyUVSet"
	desc "NurbsCopyUVSet is undoable , queryable , and editable . This is only a sample command for debugging purposes, which makes a copy of the implicit st parameterization on a nurbs surface to be the 1st explicit uvset."
	fcount "0"
	rcount "0"
name "nurbsCube"
	desc "The nurbsCube command creates a new NURBS Cube made up of six planes. It creates an unit cube with center at origin by default."
	fcount "22"
	fnames "axis ax"
		fdesc "The primitive's axis "
	fnames "axisX axx"
		fdesc "X of the axis Default:  1 "
	fnames "axisY axy"
		fdesc "Y of the axis Default:  0 "
	fnames "axisZ axz"
		fdesc "Z of the axis Default:  0 "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "degree d"
		fdesc "The degree of the resulting surface. 1 - linear, 2 - quadratic, 3 - cubic, 5 - quintic, 7 - heptic Default:  3 "
	fnames "heightRatio hr"
		fdesc "Ratio of "height" to "width" Default:  1.0 "
	fnames "lengthRatio lr"
		fdesc "Ratio of "length" to "width" Default:  1.0 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "patchesU u"
		fdesc "Number of sections in U Default:  1 "
	fnames "patchesV v"
		fdesc "Number of sections in V Default:  1 "
	fnames "pivot p"
		fdesc "The primitive's pivot point "
	fnames "pivotX px"
		fdesc "X of the pivot Default:  0 "
	fnames "pivotY py"
		fdesc "Y of the pivot Default:  0 "
	fnames "pivotZ pz"
		fdesc "Z of the pivot Default:  0 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "width w"
		fdesc "Width of the object Default:  1.0 "
	rcount "5"
		rname "cone"
		rname "cylinder"
		rname "torus"
		rname "sphere"
		rname "nurbsPlane"
name "nurbsPlane"
	desc "The nurbsPlane command creates a new NURBS Plane and return the name of the new surface. It creates an unit plane with center at origin by default."
	fcount "21"
	fnames "axis ax"
		fdesc "The primitive's axis "
	fnames "axisX axx"
		fdesc "X of the axis Default:  1 "
	fnames "axisY axy"
		fdesc "Y of the axis Default:  0 "
	fnames "axisZ axz"
		fdesc "Z of the axis Default:  0 "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "degree d"
		fdesc "The degree of the resulting surface 1 - linear, 2 - quadratic, 3 - cubic, 5 - quintic, 7 - heptic Default:  3 "
	fnames "lengthRatio lr"
		fdesc "The ratio of "length" to "width" of the plane. Default:  1.0 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "patchesU u"
		fdesc "The number of spans in the U direction. Default:  1 "
	fnames "patchesV v"
		fdesc "The number of spans in the V direction. Default:  1 "
	fnames "pivot p"
		fdesc "The primitive's pivot point "
	fnames "pivotX px"
		fdesc "X of the pivot Default:  0 "
	fnames "pivotY py"
		fdesc "Y of the pivot Default:  0 "
	fnames "pivotZ pz"
		fdesc "Z of the pivot Default:  0 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "width w"
		fdesc "The width of the plane Default:  1.0 "
	rcount "5"
		rname "cone"
		rname "cylinder"
		rname "torus"
		rname "sphere"
		rname "nurbsCube"
name "nurbsSelect"
	desc "NurbsSelect is NOT undoable , NOT queryable , and NOT editable . Performs selection operations on NURBS objects. If any of the border flags is set, then the appropriate borders are selected. Otherwise the current CV selection is used, or all CVs if the surfaces is selected as an object. The growSelection, shrinkSelection, borderSelection flags are then applied in that order. In practice, it is recommended to use one flag at a time, except for the border flags."
	fcount "7"
	fnames "borderSelection bs"
		fdesc "Extract the border of the current CV selection. "
	fnames "bottomBorder bb"
		fdesc "Selects the bottom border of the surface (V=0). "
	fnames "growSelection gs"
		fdesc "Grows the CV selection by the given number of CV "
	fnames "leftBorder lb"
		fdesc "Selects the left border of the surface (U=0). "
	fnames "rightBorder rb"
		fdesc "Selects the right border of the surface (U=MAX). "
	fnames "shrinkSelection ss"
		fdesc "Shrinks the CV selection by the given number of CV "
	fnames "topBorder tb"
		fdesc "Selects the top border of the patches (V=MAX). "
	rcount "1"
		rname "move"
name "nurbsSquare"
	desc "The nurbsSquare command creates a square."
	fcount "20"
	fnames "center c"
		fdesc "The center point of the square. "
	fnames "centerX cx"
		fdesc "X of the center point. Default:  0 "
	fnames "centerY cy"
		fdesc "Y of the center point. Default:  0 "
	fnames "centerZ cz"
		fdesc "Z of the center point. Default:  0 "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "degree d"
		fdesc "The degree of the resulting circle: 1 - linear, 2 - quadratic, 3 - cubic, 5 - quintic, 7 - heptic Default:  3 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "normal nr"
		fdesc "The normal of the plane in which the square will lie. "
	fnames "normalX nrx"
		fdesc "X of the normal direction. Default:  0 "
	fnames "normalY nry"
		fdesc "Y of the normal direction. Default:  0 "
	fnames "normalZ nrz"
		fdesc "Z of the normal direction. Default:  1 "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "sideLength1 sl1"
		fdesc "The length of a side on the square. Default:  1.0 "
	fnames "sideLength2 sl2"
		fdesc "The length of an adjacent side on the square. Default:  1.0 "
	fnames "spansPerSide sps"
		fdesc "The number of spans per side determines the resolution of the square. Default:  1 "
	rcount "0"
name "nurbsToPoly"
	desc "This command tesselates a NURBS surface and produces a polygonal surface. The name of the new polygonal surface is returned. If construction history is ON, then the name of the new dependency node is returned as well."
	fcount "20"
	fnames "chordHeight cht"
		fdesc "Chord height is the absolute distance in OBJECT space which the center of a polygon edge can deviate from the actual center of the surface span. Only used if Format is General and if useChordHeight is true. Default:  0.1 "
	fnames "chordHeightRatio chr"
		fdesc "Chord height ratio is the ratio of the chord length of a surface span to the chord height.  (This is a length to height ratio). 0 is a very loose fit. 1 is a very tight fit. (See also description of chord height.) Always used if Format is Standard Fit.  Otherwise, only used if Format is General and useChordHeightRatio is true. Default:  0.1 "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off "
	fnames "delta d"
		fdesc "3D delta. Only used if Format is Standard Fit. Default:  0.1 "
	fnames "edgeSwap es"
		fdesc "Edge swap.  This attribute enables an algorithm which determines the optimal method with which to tessellate a quadrilateral into triangles. Only used if Format is General. Default:  false "
	fnames "format f"
		fdesc "Format: 0 - Triangle Count, 1 - Standard Fit, 2 - General, 3 - CVs Default:  1 "
	fnames "fractionalTolerance ft"
		fdesc "Fractional tolerance. Only used if Format is Standard Fit. Default:  0.01 "
	fnames "matchNormalDir mnd"
		fdesc "Only used when the format is CVs.  Order the cvs so that the normal matches the direction of the original surface if set to true. Default:  false "
	fnames "minEdgeLength mel"
		fdesc "Minimal edge length. Only used if Format is Standard Fit. Default:  0.001 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "normalizeTrimmedUVRange ntr"
		fdesc "This attribute is only applicable when a trimmed NURBS surface is used as the input surface. When true, the UV texture coordinates on the trimmed input surface are normalized and applied to the output surface as they are for the untrimmed version of the input surface. (The texture coordinates on the entire untrimmed surface are mapped to the entire output surface.) When false, the UV texture coordinates on the trimmed input surface are applied to the output surface as they are for the trimmed input surface.  (Only the texture coordinates visible on the trimmed input surface are mapped to the output surface.) Default:  true "
	fnames "object o"
		fdesc "Create the result, or just the dependency node  "
	fnames "polygonCount pc"
		fdesc "The number of polygons to produce. Only used if Format is Triangle Count. Default:  200 "
	fnames "polygonType pt"
		fdesc "Polygon type: 0 - Triangles, 1 - Quads Default:  0 "
	fnames "uNumber un"
		fdesc "Initial number of isoparms in U.  Used in conjunction with the uType attribute. Only used if Format is General. Default:  3 "
	fnames "uType ut"
		fdesc "Initial U type tessellation criteria (3 types). Type 0 - Per surface # of isoparms in 3D.  This type places a specific number of iso-parametric subdivision lines across the surface, equally spaced in 3D space. Type 1 - Per surface # of isoparms.  This type places a specific number of iso-parametric subdivision lines across the surface, equally spaced in parameter space. Type 2 - Per span # of isoparms.  This type places a specific number of iso-parametric subdivision lines across each surface span, equally spaced in parameter space. (This is the closest option to the PowerAnimator/Studio tessellation parameters.) This attribute is only used if Format is General. Default:  3 "
	fnames "useChordHeight uch"
		fdesc "True means use chord height. Only used if Format is General. Default:  false "
	fnames "useChordHeightRatio ucr"
		fdesc "True means use chord height ratio. Default:  true "
	fnames "vNumber vn"
		fdesc "Initial number of isoparms in V.  Used in conjunction with the vType attribute. Only used if Format is General. Default:  3 "
	fnames "vType vt"
		fdesc "Initial V type tessellation criteria (3 types). See description for the uType attribute. Only used if Format is General. Default:  3 "
	rcount "0"
name "nurbsToPolygonsPref"
	desc "This command sets the values used by the nurbs-to-polygons (or "tesselate") preference. This preference is used by Maya menu items and is saved between Maya sessions. To query any of the flags, use the "-query" flag. For more information on the flags, see the node documentation for the "nurbsTessellate" node."
	fcount "17"
	fnames "chordHeight cht"
		fdesc "No Description"
	fnames "chordHeightRatio chr"
		fdesc "No Description"
	fnames "delta3D d"
		fdesc "No Description"
	fnames "edgeSwap es"
		fdesc "No Description"
	fnames "format f"
		fdesc "No Description"
	fnames "fraction ft"
		fdesc "No Description"
	fnames "merge m"
		fdesc "No Description"
	fnames "mergeTolerance mt"
		fdesc "No Description"
	fnames "minEdgeLen mel"
		fdesc "No Description"
	fnames "polyCount pc"
		fdesc "No Description"
	fnames "polyType pt"
		fdesc "No Description"
	fnames "uNumber un"
		fdesc "No Description"
	fnames "uType ut"
		fdesc "No Description"
	fnames "useChordHeight uch"
		fdesc "No Description"
	fnames "useChordHeightRatio ucr"
		fdesc "No Description"
	fnames "vNumber vn"
		fdesc "No Description"
	fnames "vType vt"
		fdesc "No Description"
	rcount "0"
name "nurbsToSubdiv"
	desc "This command converts a NURBS surface and produces a subd surface. The name of the new subdivision surface is returned. If construction history is ON, then the name of the new dependency node is returned as well."
	fcount "3"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable) "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dep. node (where applicable) "
	rcount "12"
		rname "changeSubdivComponentDisplayLevel"
		rname "querySubdiv"
		rname "subdiv"
		rname "changeSubdivRegion"
		rname "refineSubdivSelectionList"
		rname "subdivCrease"
		rname "createSubdivRegion"
		rname "subdCollapse"
		rname "subdivDisplaySmoothness"
		rname "subdToBlind"
		rname "polyToSubdiv"
		rname "subdToPoly"
name "nurbsViewDirectionVector"
	desc "Get the current camera view direction as a normalized vector. If $onlyOrtho flag is set to true, this is done for the orthogonal cameras only; the perspective cameras get the default up direction returned as the result."
	fcount "0"
	rcount "0"
name "objExists"
	desc "This command simply returns true or false depending on whether an object with the given name exists."
	fcount "0"
	rcount "0"
name "objectCenter"
	desc "This command returns the coordinates of the center of the bounding box of the specified object. If one coordinate only is specified, it will be returned as a float. If no coordinates are specified, an array of floats is returned, containing x, y, and z. If you specify multiple coordinates, only one will be returned."
	fcount "5"
	fnames "global gl"
		fdesc "Return positional values in global coordinates (default). "
	fnames "local l"
		fdesc "Return positional values in local coordinates. "
	fnames "x x"
		fdesc "Return X value only "
	fnames "y y"
		fdesc "Return Y value only "
	fnames "z z"
		fdesc "Return Z value only "
	rcount "0"
name "objectLayer"
	desc "All eligible objects (ie. DAG objects) must be in exactly one layer. This script returns the layer to which the given object belongs."
	fcount "0"
	rcount "0"
name "objectType"
	desc "This command returns the type of elements. Warning: This command is incomplete and may not be supported by all object types."
	fcount "4"
	fnames "isType i"
		fdesc "Returns true if the object is of the specified type.  False otherwise. "
	fnames "tagFromType tgt"
		fdesc "Returns the type tag given a type name. "
	fnames "typeFromTag tpt"
		fdesc "Returns the type name given an integer type tag. "
	fnames "typeTag tt"
		fdesc "Returns an integer tag that is unique for that object type.  Not all object types will have tags.  This is the unique 4-byte value that is used to identify nodes of a given type in the binary file format. "
	rcount "8"
		rname "addAttr"
		rname "aliasAttr"
		rname "deleteAttr"
		rname "getClassification"
		rname "nodeType"
		rname "objExists"
		rname "attributeInfo"
		rname "renameAttr"
name "objectTypeUI"
	desc "This command returns the type of UI element such as button, sliders, etc. A query for a specific object type is also supported."
	fcount "1"
	fnames "isType i"
		fdesc "Returns true|false if the object is of the specified type. "
	rcount "0"
name "obsoleteProc"
	desc "Indicate to the caller that a procedure has been made obsolete in this version of Maya and will not be supported in the next version. Provide a temporary solution for continued use of the obsolete script."
	fcount "0"
	rcount "0"
name "offsetCurve"
	desc "The offset command creates new offset curves from the selected curves. The connecting type for breaks in offsets is off (no connection), circular (connect with an arc) or linear (connect linearly resulting in a sharp corner). If loop cutting is on then any loops in the offset curves are trimmed away. For the default cut radius of 0.0 a sharp corner is created at each intersection. For values greater than 0.0 a small arc of that radius is created at each intersection. The cut radius value is only valid when loop cutting is on. Offsets (for planar curves) are calculated.... Refer to full documentation"
	fcount "23"
	fnames "connectBreaks cb"
		fdesc "Connect breaks method (between gaps): 0 - off, 1 - circular, 2 - linear Default:  2 "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "cutLoop cl"
		fdesc "Do loop cutting? Default:  false "
	fnames "cutRadius cr"
		fdesc "Loop cut radius. Only used if cutLoop attribute is set true. Default:  0.0 "
	fnames "distance d"
		fdesc "Offset distance Default:  1.0 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "normal nr"
		fdesc "Offset plane normal "
	fnames "normalX nrx"
		fdesc "X of the normal Default:  0.0 "
	fnames "normalY nry"
		fdesc "Y of the normal Default:  1.0 "
	fnames "normalZ nrz"
		fdesc "Z of the normal Default:  0.0 "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "parameter p"
		fdesc "parameter value on the curve to use while drawing manipulator on offset history Default:  0.0 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "reparameterize rp"
		fdesc "Do reparameterization? Not advisable to change this value. Default:  false "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "stitch st"
		fdesc "Stitch curve segments together. Not advisable to change this value. Default:  true "
	fnames "subdivisionDensity sd"
		fdesc "Maximum subdivision density per span Default:  5 "
	fnames "tolerance tol"
		fdesc "Tolerance Default:  0.01 "
	fnames "useGivenNormal ugn"
		fdesc "Use the given normal (or, alternativelly, geometry normal) Default:  1 "
	fnames "useParameter up"
		fdesc "use parameter value on the curve while drawing manipulator on offset history Default:  false "
	rcount "1"
		rname "offsetCurveOnSurface"
name "offsetCurveOnSurface"
	desc "The offsetCurveOnSurface command offsets a curve on surface resulting in another curve on surface. The connecting type for breaks in offsets is off (no connection), circular (connect with an arc) or linear (connect linearly resulting in a sharp corner). If loop cutting is on then any loops in the offset curves are trimmed away and a sharp corner is created at each intersection. The subdivisionDensity flag is the maximum number of times the offset object can be subdivided (i.e. calculate the offset until the offset comes within tolerance or the iteration reaches this maximum.) The checkPoints flag sets the number.... Refer to full documentation"
	fcount "15"
	fnames "checkPoints cp"
		fdesc "Checkpoints for fit quality per span. Not advisable to change this value. Default:  3 "
	fnames "connectBreaks cb"
		fdesc "Connect breaks method (between gaps): 0 - off, 1 - circular, 2 - linear Default:  2 "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "cutLoop cl"
		fdesc "Do loop cutting? Default:  false "
	fnames "distance d"
		fdesc "Offset distance Default:  1.0 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "stitch st"
		fdesc "Stitch curve segments together. Not advisable to change this value. Default:  true "
	fnames "subdivisionDensity sd"
		fdesc "Maximum subdivision density per span Default:  5 "
	fnames "tolerance tol"
		fdesc "Tolerance Default:  0.01 "
	rcount "1"
		rname "offsetCurve"
name "offsetSurface"
	desc "The offset command creates new offset surfaces from the selected surfaces. The default method is a surface offset, which offsets relative to the surface itself. The CV offset method offsets the CVs directly rather than the surface, so is usually slightly less accurate but is faster. The offset surface will always have the same degree, number of CVs and knot spacing as the original surface."
	fcount "10"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "distance d"
		fdesc "Offset distance Default:  1.0 "
	fnames "method m"
		fdesc "Offset method 0 - Surface Fit 1 - CV Fit Default:  0 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	rcount "0"
name "openGLExtension"
	desc "OpenGLExtension is NOT undoable , NOT queryable , and NOT editable . Command returns the extension name depending on whether a given OpenGL extension is supported or not. The input is the extension string to the -extension flag. If the -extension flag is not used, or if the string argument to this flag is an empty string than all extension names are returned in a single string. If the extension exists it is not necessary true that the extension is supported. This command can only be used when a modeling view has been created. Otherwise no extensions will have been.... Refer to full documentation"
	fcount "4"
	fnames "extension ext"
		fdesc "Specifies the OpenGL extension to query. "
	fnames "version ver"
		fdesc "Specifies to query the OpenGL version. "
	fnames "renderer rnd"
		fdesc "Specifies to query the OpenGL renderer. "
	fnames "vendor vnd"
		fdesc "Specifies to query the company responsible for the OpenGL implementation. "
	rcount "0"
name "openMayaPref"
	desc "Set or query API preferences."
	fcount "3"
	fnames "errlog el"
		fdesc "toggles whether or not an error log of failed API method calls will be created.  When set to true, a file called "OpenMayaErrorLog" will be created in Maya's current working directory.  Each time an API method fails, a detailed description of the error will be written to the file along with a mini-stack trace that indicates the routine that called the failing method. Defaults to false(off). "
	fnames "lazyLoad lz"
		fdesc "toggles whether or not plugins will be loaded with the RTLD_NOW flag or the RTLD_LAZY flag of dlopen(3C).  If set to true, RTLD_LAZY will be used.  In this mode references to functions that cannot be resolved at load time will not be considered an error.  However, if one of these symbols is actually dereferenced by the plug-in at run time, Maya will crash. Defaults to false(off). "
	fnames "oldPluginWarning ow"
		fdesc "toggles whether or not loadPlugin will generate a warning when plug-ins are loaded that were compiled against an older, and possibly incompatible Maya release. Defaults to true(on). "
	rcount "3"
		rname "loadPlugin"
		rname "pluginInfo"
		rname "unloadPlugin"
name "optionMenu"
	desc "This command creates a popup menu control. The command creates the control and provides its menu. Subsequent calls to the menuItem command will place them in the popup. Note that commands attached to menu items will not get called. Attach any commands via the -cc/changedCommand flag."
	fcount "26"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed when a new item is selected. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "itemListLong ill"
		fdesc "The long names of the menu items. "
	fnames "itemListShort ils"
		fdesc "The short names of the menu items. "
	fnames "label l"
		fdesc "The optional label text to the left of the popup menu. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfItems ni"
		fdesc "The number of menu items. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "select sl"
		fdesc "The current menu item.  The argument and return value is 1-based.  Note that the current menu item can only be set if it is enabled. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "value v"
		fdesc "The text of the current menu item. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "optionMenuGrp"
	desc "All of the group commands position their individual controls in columns starting at column 1. The layout of each control (ie. column) can be customized using the -cw/columnWidth , -co/columnOffset , -cat/columnAttach , -cal/columnAlign , and -adj/adjustableColumn flags. By default, columns are left aligned with no offset and are 100 pixels wide. Only one column in any group can be adjustable. This command creates a pre-packaged collection of label text, option menu and an extra label. Both the label and extra label are optional. Subsequent calls to the menuItem command will place them in the option menu. When adding menu.... Refer to full documentation"
	fcount "58"
	fnames "adjustableColumn adj"
		fdesc "Specifies which column has an adjustable size that changes with the sizing of the layout.  The column value is a 1-based index.  You may also specify 0 to turn off the previous adjustable column. "
	fnames "adjustableColumn2 ad2"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly two columns.  "
	fnames "adjustableColumn3 ad3"
		fdesc "Specifies that the column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly three columns.  "
	fnames "adjustableColumn4 ad4"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly four columns.  "
	fnames "adjustableColumn5 ad5"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly five columns.  "
	fnames "adjustableColumn6 ad6"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly six columns.  "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed when a new item is selected. "
	fnames "columnAlign cal"
		fdesc "Arguments are : column number, alignment type. Possible alignments are: left | right | center.  Specifies alignment type for the specified column. "
	fnames "columnAlign2 cl2"
		fdesc "Sets the text alignment of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign3 cl3"
		fdesc "Sets the text alignment for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign4 cl4"
		fdesc "Sets the text alignment for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign5 cl5"
		fdesc "Sets the text alignment for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign6 cl6"
		fdesc "Sets the text alignment for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "center". "
	fnames "columnAttach cat"
		fdesc "Arguments are : column number, attachment type, and offset. Possible attachments are: left | right | both.  Specifies column attachment types and offets. "
	fnames "columnAttach2 ct2"
		fdesc "Sets the attachment type of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach3 ct3"
		fdesc "Sets the attachment type for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach4 ct4"
		fdesc "Sets the attachment type for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach5 ct5"
		fdesc "Sets the attachment type for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach6 ct6"
		fdesc "Sets the attachment type for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "both". "
	fnames "columnOffset2 co2"
		fdesc "This flag is used in conjunction with the -columnAttach2 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the two columns.  The offsets applied are based on the attachments  specified with the -columnAttach2 flag.  Ignored if there is not exactly two columns.  "
	fnames "columnOffset3 co3"
		fdesc "This flag is used in conjunction with the -columnAttach3 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the three columns.  The offsets applied are based on the attachments  specified with the -columnAttach3 flag.  Ignored if there is not exactly three columns.  "
	fnames "columnOffset4 co4"
		fdesc "This flag is used in conjunction with the -columnAttach4 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the four columns.  The offsets applied are based on the attachments  specified with the -columnAttach4 flag.  Ignored if there is not exactly four columns.  "
	fnames "columnOffset5 co5"
		fdesc "This flag is used in conjunction with the -columnAttach5 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the five columns.  The offsets applied are based on the attachments  specified with the -columnAttach5 flag.  Ignored if there is not exactly five columns.  "
	fnames "columnOffset6 co6"
		fdesc "This flag is used in conjunction with the -columnAttach6 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the six columns.  The offsets applied are based on the attachments  specified with the -columnAttach6 flag.  Ignored if there is not exactly six columns.  "
	fnames "columnWidth cw"
		fdesc "Arguments are : column number, column width. Sets the width of the specified column where the first parameter specifies the column (1 based index) and the second parameter specifies the width. "
	fnames "columnWidth1 cw1"
		fdesc "Sets the width of the first column.  Ignored if there is not  exactly one column. "
	fnames "columnWidth2 cw2"
		fdesc "Sets the column widths of both columns.  Ignored if there is not exactly two columns. "
	fnames "columnWidth3 cw3"
		fdesc "Sets the column widths for all 3 columns.  Ignored if there is not exactly 3 columns. "
	fnames "columnWidth4 cw4"
		fdesc "Sets the column widths for all 4 columns.  Ignored if there is not exactly 4 columns. "
	fnames "columnWidth5 cw5"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "columnWidth6 cw6"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "extraLabel el"
		fdesc "If present on creation this specifies that there will be an extra label to the right of the option menu.  Sets the string to be the extra label text. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "itemListLong ill"
		fdesc "Returns the long names of the items. "
	fnames "itemListShort ils"
		fdesc "Returns the short names of the items. "
	fnames "label l"
		fdesc "If present on creation this specifies that there will be a label to the left of the option menu.  Sets the string to be the label text. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfItems ni"
		fdesc "Returns the number of items. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rowAttach rat"
		fdesc "Arguments are : attachment type, offset. Possible attachments are: top | bottom | both.  Specifies attachment types  and offsets for the entire row.   "
	fnames "select sl"
		fdesc "Selects an item by index.  The first item is 1. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "value v"
		fdesc "Select an item by value.  Also, returns the text of the currently selected item. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "optionVar"
	desc "This command allows you to set and query variables which are persistent between different invocations of Maya. These variables are stored as part of the preferences."
	fcount "14"
	fnames "arraySize as"
		fdesc "returns the size of the array named "string".  If no such variable exists, it returns 0.  If the variable is not an array, it returns 1. "
	fnames "clearArray ca"
		fdesc "If there is an array named "string", it is set to be empty. Empty arrays are not saved. "
	fnames "exists ex"
		fdesc "returns 1 if a variable named "string" exists, 0 otherwise. All other flags will be ignored if this is used. (Query has higher precedence) "
	fnames "floatValue fv"
		fdesc "creates a new variable named "string" with double value "float". If a variable already exists with this name, it is overridden in favour of the new value. (even if the type is different) This is a multi-use flag. "
	fnames "floatValueAppend fva"
		fdesc "adds this value to the end of the array of floats named "string". If no such array exists, one is created.  If there was a float value with this name before, it becomes the first element of the array.  If any other kind of value existed, it is overridden. This is a multi-use flag. "
	fnames "intValue iv"
		fdesc "creates a new variable named "string" with integer value "int". If a variable already exists with this name, it is overridden in favour of the new value. (even if the type is different). This is a multi-use flag. "
	fnames "intValueAppend iva"
		fdesc "adds this value to the end of the array of ints named "string". If no such array exists, one is created.  If there was an int value with this name before, it becomes the first element of the array.  If any other kind of value existed, it is overridden. This is a multi-use flag. "
	fnames "list l"
		fdesc "this returns a list of all the defined variable names.  All other flags will be ignored if this one is used. (Query and exists flags have a higher precedence). "
	fnames "query q"
		fdesc "returns the value of the variable named "string".  All other flags will be ignored if this is used.  If there is no variable of the given name, the integer 0 is returned.  This can return an int, a float, a double, an intArray, a floatArray, or a doubleArray. "
	fnames "remove rm"
		fdesc "removes the variable named "string", if one exists.  This is a multi-use flag.  Note: all removals are done before any value setting, if both the -r and other (-sv, -iv, -fv) flags are used in the same command. "
	fnames "removeFromArray rfa"
		fdesc "removes the element numbered "int" in the array named "string". Everything beyond it then gets shuffled down. "
	fnames "stringValue sv"
		fdesc "creates a new variable named "string1" with string value "string2". If a variable already exists with this name, it is overridden in favour of the new value. (even if the type is different) This is a multi-use flag. "
	fnames "stringValueAppend sva"
		fdesc "adds the value "string2" to the end of the array of strings named "string1". If no such array exists, one is created.  If there was a string value with this name before, it becomes the first element of the array.  If any other kind of value existed, it is overridden. This is a multi-use flag. "
	fnames "version v"
		fdesc "Preferences version number to warn about incompatbile preference files "
	rcount "0"
name "orbit"
	desc "The orbit command revolves the camera(s) horizontally and/or vertically in the perspective window. The rotation axis is with respect to the camera. To revolve horizontally: the rotation axis is the camera up direction vector. To revolve vertically: the rotation axis is the camera left direction vector. When both the horizontal and the vertical angles are supplied on the command line, the camera is firstly revolved horizontally, then revolved vertically. This command may be applied to more than one cameras; objects that are not cameras are ignored. When no camera name supplied on the command line, this command is applied to.... Refer to full documentation"
	fcount "4"
	fnames "horizontalAngle ha"
		fdesc "Angle to revolve horizontally. "
	fnames "pivotPoint pp"
		fdesc "Used as the pivot point in the world space. "
	fnames "rotationAngles ra"
		fdesc "Angle to revolve horizontally and vertically. "
	fnames "verticalAngle va"
		fdesc "Angle to revolve vertically. "
	rcount "15"
		rname "camera"
		rname "cameraView"
		rname "dolly"
		rname "listCameras"
		rname "lookThru"
		rname "roll"
		rname "track"
		rname "tumble"
		rname "viewCamera"
		rname "viewClipPlane"
		rname "viewFit"
		rname "viewHeadOn"
		rname "viewLookAt"
		rname "viewPlace"
		rname "viewSet"
name "orbitCtx"
	desc "This command can be used to create, edit, or query a orbit context."
	fcount "2"
	fnames "localOrbit lo"
		fdesc "Orbit around the camera's center of interest. "
	fnames "orbitScale os"
		fdesc "In degrees of rotation per 100 pixels of cursor drag. "
	rcount "0"
name "orientConstraint"
	desc "Constrain an object's orientation to match the orientation of the target or the average of a number of targets. An orientConstraint takes as input one or more "target" DAG transform nodes to control the orientation of the single "constraint object" DAG transform The orientConstraint orients the constrained object to match the weighted average of the target world space orientations."
	fcount "5"
	fnames "createCache cc"
		fdesc "This flag is used to generate an animation curve that serves as a cache for the constraint. The cache is useful if the constraint has multiple targets and  the constraint's interpolation type is set to "no flip". The "no flip" mode prevents  flipping during playback, but the result is dependent on the previous frame.  Therefore in order to consistently get the same result on a specific frame, a  cache must be generated. This flag creates the cache and sets the constraint's  interpolation type to "cache". If a cache exists already, it will be deleted and  replaced with a new cache. "
	fnames "deleteCache dc"
		fdesc "Delete an existing interpolation cache. "
	fnames "maintainOffset mo"
		fdesc "The offset necessary to preserve the constrained object's initial orientation will be calculated and used as the offset. "
	fnames "offset o"
		fdesc "Sets or queries the value of the offset. Default is 0,0,0. "
	fnames "skip sk"
		fdesc "Specify the axis to be skipped. Valid values are "x", "y", "z" and "none". The default value in create mode is "none". This flag is multi-use. "
	rcount "8"
		rname "aimConstraint"
		rname "geometryConstraint"
		rname "normalConstraint"
		rname "parentConstraint"
		rname "pointConstraint"
		rname "poleVectorConstraint"
		rname "scaleConstraint"
		rname "tangentConstraint"
name "outlinerEditor"
	desc "This command creates an outliner editor which can be used to display a list of objects. WARNING: some flag combinations may not behave as you expect. The command is really intended for internal use for creating the outliner used by the various editors."
	fcount "59"
	fnames "allowMultiSelection ams"
		fdesc "If true then multiple selection will be allowed in the outliner. "
	fnames "alwaysToggleSelect ats"
		fdesc "If true, then clicking on an item in the outliner will select or deselect it without affecting the selection of other items (unless allowMultiSelection is false). If false, clicking on an item in the outliner will replace the current selection with the selected item. "
	fnames "attrFilter af"
		fdesc "Specifies the name of a filter to be placed on this editor. This filters the attributes displayed in the editor. "
	fnames "autoExpand xpd"
		fdesc "This flag specifies whether or not objects that are loaded in should have their attributes automatically expanded "
	fnames "autoSelectNewObjects as"
		fdesc "This flag specifies whether or not new objects added to the outliner should be automatically selected "
	fnames "control ctl"
		fdesc "Query only. Returns the top level control for this editor. Usually used for getting a parent to attach popup menus. CAUTION: editors may not have controls at times.  This flag can return "NONE" if no control is present. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "directSelect ds"
		fdesc "If true then clicking on an item in the outliner will add or remove just that item from the selection connection.  If false then clicking on an item in the outliner causes the selection connection to be reloaded with the currently selected items in the outliner. "
	fnames "displayMode dm"
		fdesc "Affects how the outliner displays when a filter is applied.  List mode is a non-indented flat list.  DAG mode indents to represent the hierarchical structure of the model. "
	fnames "doNotSelectNewObjects dns"
		fdesc "If true this flag specifies that new objects added to the outliner will not be selected, even if they are active "
	fnames "docTag dtg"
		fdesc "Attaches a tag to the maya editor. "
	fnames "dropIsParent dip"
		fdesc "This flag specifies the mode for drag'n'drop. If the flag is true, dropping items will do a reparent; if it is false, dropping will reorder items. By default, the flag is true (parent) "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "editAttrName ean"
		fdesc "This flag specifies whether or not attribute names can be edited. By default double-clicking on an attribute will open the expression editor for that attribute "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "expandConnections xc"
		fdesc "This flag specifies whether or not attributes should be expanded to show their input connections Note: currently the expansion will only show animCurves "
	fnames "expandObjects eo"
		fdesc "This flag specifies whether or not objects that are loaded in should be automatically expanded. "
	fnames "filter f"
		fdesc "Specifies the name of a filter to be placed on this editor. This filters the information coming onto the main list of the editor. "
	fnames "forceMainConnection fmc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. This is a variant of the -mainListConnection flag in that it will force a change even when the connection is locked. This flag is used to reduce the overhead when using the -unlockMainConnection , -mainListConnection, -lockMainConnection flags in immediate  succession. "
	fnames "highlightActive ha"
		fdesc "This flag specifies whether or not the outliner should highlight objects that are active Note: if the outliner is driving the contents of another editor setting highlightActive to true may produce unexpected behavior "
	fnames "highlightConnection hlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its highlight list.  Not all editors have a highlight list.  For those who do, it is sort of a secondary selection list. "
	fnames "highlightSecondary hs"
		fdesc "This flag specifies whether or not the outliner should highlight objects that are contained in the highlightConnection "
	fnames "ignoreDagHierarchy hir"
		fdesc "This flag specifies whether or not DAG objects are displayed in their DAG hierarchy.  Warning: using this flag without some other form of sensible filtering will lead to a very confusing outliner. "
	fnames "isChildSelected ics"
		fdesc "This flag allows you to query if one or more of the children of the specified item is selected in the outliner. The item should be specified using a unique DAG path. Note that if the specified item appears multiple times in the outliner, the result will be true if one or more children of any occurrence of the specified item in the outliner is/are selected. "
	fnames "lockMainConnection lck"
		fdesc "Locks the current list of objects within the mainConnection, so that only those objects are displayed within the editor. Further changes to the original mainConnection are ignored. "
	fnames "longNames ln"
		fdesc "Controls whether long or short attribute names will be used in the interface.  Note that this flag is ignored if the -niceNames flag is set.  Default is short names. Queried, returns a boolean. "
	fnames "mainListConnection mlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. "
	fnames "masterOutliner mst"
		fdesc "This flag is the name of an outliner that this outliner will share the objects and state from. When an outliner is shared, all of its state information comes from, and is applied to, the master outliner. "
	fnames "niceNames nn"
		fdesc "Controls whether the attribute names will be displayed in a more user-friendly, readable way.  When this is on, the longNames flag is ignored.  When this is off, attribute names will be displayed either long or short, according to the longNames flag. Default is on. Queried, returns a boolean. "
	fnames "object obj"
		fdesc "These two flags are used together to get the name of the parent object for the specified object. "
	fnames "panel pnl"
		fdesc "Specifies the panel that the editor belongs to.  By default if an editor is created in the create callback of a scripted panel it will belong to that panel.  If an editor doesn't belong to a panel it will be deleted when the window that it is in is deleted. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this editor. This flag will only have an effect if the editor is currently un-parented. "
	fnames "parentObject po"
		fdesc "No Description"
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "selectCommand sec"
		fdesc "A command to be executed when an item is selected. "
	fnames "selectionConnection slc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its own selection list.  As the user selects things in this editor, they will be selected in the selectionConnection object.  If someone else changes the object, the editor will update to show the change. "
	fnames "setFilter sf"
		fdesc "Specifies the name of a filter which is used to filter which (if any) sets to display. "
	fnames "setsIgnoreFilters sif"
		fdesc "This flag specifies whether or not the filter should be ignored for expanding sets to show set members (default is true). "
	fnames "showAnimCurvesOnly aco"
		fdesc "This flag modifies the showConnected flag.  If showConnected is set to true then this flag will cause display of only those attributes that are connected to an animCurve.  If showConnected is set to false then this flag does nothing. "
	fnames "showAttrValues av"
		fdesc "This flag specifies whether attribute values or attribute names should be displayed. Note: currently only string attributes can have their values displayed "
	fnames "showAttributes atr"
		fdesc "Specifies whether to show attributes or not. "
	fnames "showCompounds cmp"
		fdesc "This flag specifies whether or not compound attributes should be displayed, or just the leaf attributes Note: if showConnected is true, and the compound attribute is connected, it will still be displayed "
	fnames "showConnected con"
		fdesc "This flag modifies the showAttributes flag.  If showAttributes is set to true then this flag will cause display of only those attributes that are connected in the dependency graph. If showAttributes is set to false then this flag does nothing. "
	fnames "showDagOnly dag"
		fdesc "This flag specifies whether all dependency graph objects will be displayed, or just DAG objects. "
	fnames "showLeafs laf"
		fdesc "This flag specifies whether or not leaf attributes should be displayed, or just the compound attributes Note: if showConnected is true, and the leaf attribute is connected, it will still be displayed "
	fnames "showNumericAttrsOnly num"
		fdesc "This flag specifies whether or not all attributes should be displayed, or just numeric attributes Note: if showConnected is true, and the attribute is connected, it will still be displayed "
	fnames "showSelected sc"
		fdesc "If true then the selected items are expanded in the outliner "
	fnames "showSetMembers ssm"
		fdesc "If true then when a set is expanded, the set members will be displayed.  If false, then only other sets will be displayed. "
	fnames "showShapes shp"
		fdesc "Specifies whether to show shapes or not. "
	fnames "showTextureNodesOnly tno"
		fdesc "This flag modifies the showConnected flag. If showConnected is set to true then this flag will cause display of only those attributes that are connected to a texture node.  If showConnected is set to false then this flag does nothing. "
	fnames "showUVAttrsOnly uv"
		fdesc "This flag specifies whether or not all attributes should be displayed, or just uv attributes Note: currently the only attribute which will be displayed is Shape.uvSet.uvSetName "
	fnames "showUnitlessCurves su"
		fdesc "This flag (in combination with -expandConnections) specifies whether or not connection expansion should show unitless animCurves "
	fnames "sortOrder so"
		fdesc "Specify how objects are to be sorted.  Current recognised values are "none" for no sorting and "dagName" to sort DAG objects by name. Notes: a) non-DAG objects are always sorted by nodeType and name. b) when sortOrder is set to "dagName", objects cannot be reordered using drag-and-drop, they can however be reparented "
	fnames "stateString sts"
		fdesc "Query only flag.  Returns the MEL command that will edit an editor to match the current editor state. The returned command string uses the string variable $editorName in place of a specific name. "
	fnames "transmitFilters tf"
		fdesc "This flag specifies how the selectionConnection is populated when attribute filters are enabled.  If this flag is set to true, then all the attributes that pass the filter will be placed on the selectionConnection.  By default this flag is false "
	fnames "unParent up"
		fdesc "Specifies that the editor should be removed from its layout. This cannot be used with query. "
	fnames "unlockMainConnection ulk"
		fdesc "Unlocks the mainConnection, effectively restoring the original mainConnection (if it is still available), and dynamic updates. "
	fnames "updateMainConnection upd"
		fdesc "Causes a locked mainConnection to be updated from the orginal mainConnection, but preserves the lock state. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "outlinerPanel"
	desc "This command creates, edit and queries outliner panels which contain only an outliner editor."
	fcount "20"
	fnames "control ctl"
		fdesc "Returns the top level control for this panel. Usually used for getting a parent to attach popup menus. CAUTION: panels may not have controls at times.  This flag can return "" if no control is present. "
	fnames "copy cp"
		fdesc "Makes this panel a copy of the specified panel.  Both panels must be of the same type. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Attaches a tag to the maya panel. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "init in"
		fdesc "Initializes the panel's default state.  This is usually done automatically on file -new and file -open. "
	fnames "isUnique iu"
		fdesc "Returns true if only one instance of this panel type is allowed. "
	fnames "label l"
		fdesc "Specifies the user readable label for the panel. "
	fnames "menuBarVisible mbv"
		fdesc "Controls whether the menu bar for the panel is displayed. "
	fnames "needsInit ni"
		fdesc "(Internal) On Edit will mark the panel as requiring initialization. Query will return whether the panel is marked for initialization.  Used during file -new and file -open. "
	fnames "outlinerEditor oe"
		fdesc "This flag returns the name of the outliner editor contained by the panel. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this panel. "
	fnames "popupMenuProcedure pmp"
		fdesc "Specifies the procedure called for building the panel's popup menu(s). The default value is "buildPanelPopupMenu". "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "replacePanel rp"
		fdesc "Will replace the specifed panel with this panel.  If the target panel is within the same layout it will perform a swap. "
	fnames "tearOff to"
		fdesc "Will tear off this panel into a separate window with a paneLayout as the parent of the panel. When queried this flag will return if the panel has been torn off into its own window. "
	fnames "tearOffCopy toc"
		fdesc "Will create this panel as a torn of copy of the specified source panel. "
	fnames "unParent up"
		fdesc "Specifies that the panel should be removed from its layout. This (obviously) cannot be used with query. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "overrideModifier"
	desc "This command allows you to assign modifier key behaviour to other parts of the system. For example you can use a hotkey or input device instead of a modifer key to perform the same action. Note that the original modifier key behaviour is not altered in anyway. For example, if you've assigned "Ctrl" key behaviour to the "c" key then the "Ctrl" key will still work as you expect, all you've done is allowed yourself to use the "c" key as an alternative to the "Ctrl" key."
	fcount "3"
	fnames "clear cl"
		fdesc "Don't force any modifier keys. "
	fnames "press p"
		fdesc "Force the following modifier to be pressed. "
	fnames "release r"
		fdesc "Force the following modifier to be released. "
	rcount "0"
name "pairBlend"
	desc "PairBlend is undoable , queryable , and editable . The pairBlend command is used to connect a pairBlend node to connected attributes of a node. The previously existing connections are rewired to input1 of the pairBlend node. The pairBlend node allows a weighted combinations of 2 inputs to be blended together. The pairBlend command can also be used to query the inputs to an existing pairBlend node."
	fcount "4"
	fnames "attribute at"
		fdesc "The name of the attribute(s) which the blend will drive. This flag is required when creating the blend. "
	fnames "input1 i1"
		fdesc "Returns a string array of the node(s) connected to input 1. "
	fnames "input2 i2"
		fdesc "Returns a string array of the node(s) connected to input 2. "
	fnames "node nd"
		fdesc "The name of the node which the blend will drive. This flag is required when creating the blend. "
	rcount "4"
		rname "setKeyframe"
		rname "parentConstraint"
		rname "orientConstraint"
		rname "pointConstraint"
name "palettePort"
	desc "This command creates an array of color cells. It could be used to to store an retrieve some colors you want to manage during your working session."
	fcount "31"
	fnames "actualTotal at"
		fdesc "Set the actual number of palette entries. This number must be greater than zero but not be greater than maximum number of palette entries defined by  the -dimensions flag. "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "This command string will be executed when a color in the  palette is changed. "
	fnames "colorEditable ced"
		fdesc "If true then the user can modify the current index's color "
	fnames "colorEdited ce"
		fdesc "This command string will be executed when a color in the palette is edited. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "dimensions dim"
		fdesc "Set the dimensions of the array. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "editable ed"
		fdesc "If true then the user can change the current color "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "hsvValue hsv"
		fdesc "Set a color for a given cell.  On query return the color of the current cell. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "redraw r"
		fdesc "Forces a redraw of the array "
	fnames "rgbValue rgb"
		fdesc "No Description"
	fnames "setCurCell scc"
		fdesc "Set the current cell in the array to the given index. Returns the current cell when queried. "
	fnames "topDown td"
		fdesc "If this flag is true, it indicates that first entry should appear in top left  as opposed to the bottom left. "
	fnames "transparent t"
		fdesc "Set a given cell to be the transparent color.  A cell value of -1 indicates that no cell is transparent.  On query returns the current transparent cell. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "paneLayout"
	desc "This command creates a pane layout. A pane layout may have any number of children but at any one time only certain children may be visible, as determined by the current layout configuration. For example a horizontally split pane shows only two children, one on top of the other and a visible separator between the two. The separator may be moved to vary the size of each pane. Various other pane configurations are available and all display a moveable separator that define the size of each pane in the layout."
	fcount "35"
	fnames "activeFrameThickness aft"
		fdesc "The thickness of the frame drawn around the active frame. Specify an integer value greater than or equal to 0.   "
	fnames "activePane ap"
		fdesc "The active pane has a colored border surrounding it.  Only one pane may be active at any one time.  Using either of the flags  -ap/activePane 	or  -api/activePaneIndex  will automatically deactivate the previously active pane.  The argument is the full or short name of the child control. "
	fnames "activePaneIndex api"
		fdesc "The active pane index.  The active pane has a colored border surrounding it.  Only one pane may be active at any one time.  Using either of the flags  -ap/activePane or  -api/activePaneIndex  will automatically deactivate the previously active pane.  The argument is an integer value ranging from 1 to 4.  Panes for any particular configuration are numbered clockwise beginning with the pane in the top left corner of the layout.  If any other index is specified then the current active pane is deactivated. "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "childArray ca"
		fdesc "Returns a string array of the names of the layout's  immediate children. "
	fnames "configuration cn"
		fdesc "Set the layout configuration for the panes.  Valid values are: "single", "horizontal2", "vertical2", "horizontal3", "vertical3", "top3", "left3", "bottom3", "right3", "horizontal4", "vertical4", "top4", "left4", "bottom4", "right4", "quad" "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfChildren nch"
		fdesc "Returns in an int the number of immediate children of the layout. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "numberOfVisiblePanes nvp"
		fdesc "Return the number of panes visible for the present configuration. "
	fnames "pane1 p1"
		fdesc "No Description"
	fnames "pane2 p2"
		fdesc "No Description"
	fnames "pane3 p3"
		fdesc "No Description"
	fnames "pane4 p4"
		fdesc "Return the name of the control in the respective pane. "
	fnames "paneSize ps"
		fdesc "The size of a pane in the current pane layout configuration.  The first argument specifies the pane index and is an integer value ranging from 1 to 4.  Panes for any particular configuration are numbered clockwise beginning with the pane in the top left corner of the layout.  The width and height of the pane are specified by the last two arguments.  Both are integer values and they indicate the percentage of the total pane layout size rather that the number of pixels. "
	fnames "paneUnderPointer pup"
		fdesc "Return the name of the child occupying the pane that the pointer is currently over.  An empty string is returned if the pointer is not over a pane. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "separatorMovedCommand smc"
		fdesc "This command executed when the pane separators are moved. "
	fnames "separatorThickness st"
		fdesc "The thickness of the separators between the panes. Specify an integer value greater than 0. This flag has no effect on Windows systems. "
	fnames "setPane sp"
		fdesc "This flag allows you to put a child of this layout in a particular pane.  The first argument is the full or short name of the control.  The second argument is an integer value ranging from 1 to 4.  Panes for any particular configuration are numbered clockwise beginning with the pane in the top left corner of the layout. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "panel"
	desc "This command allows editing or querying properties of any panels. Not all of the common properites of panels can be used with this command. Flags such as -tearOff and -replacePanel require that you use the explicit panel command. The command 'getPanel -typeOf panelName' will return the explicit type of a panel."
	fcount "19"
	fnames "control ctl"
		fdesc "Returns the top level control for this panel. Usually used for getting a parent to attach popup menus. CAUTION: panels may not have controls at times.  This flag can return "" if no control is present. "
	fnames "copy cp"
		fdesc "Makes this panel a copy of the specified panel.  Both panels must be of the same type. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Attaches a tag to the maya panel. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "init in"
		fdesc "Initializes the panel's default state.  This is usually done automatically on file -new and file -open. "
	fnames "isUnique iu"
		fdesc "Returns true if only one instance of this panel type is allowed. "
	fnames "label l"
		fdesc "Specifies the user readable label for the panel. "
	fnames "menuBarVisible mbv"
		fdesc "Controls whether the menu bar for the panel is displayed. "
	fnames "needsInit ni"
		fdesc "(Internal) On Edit will mark the panel as requiring initialization. Query will return whether the panel is marked for initialization.  Used during file -new and file -open. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this panel. "
	fnames "popupMenuProcedure pmp"
		fdesc "Specifies the procedure called for building the panel's popup menu(s). The default value is "buildPanelPopupMenu". "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "replacePanel rp"
		fdesc "Will replace the specifed panel with this panel.  If the target panel is within the same layout it will perform a swap. "
	fnames "tearOff to"
		fdesc "Will tear off this panel into a separate window with a paneLayout as the parent of the panel. When queried this flag will return if the panel has been torn off into its own window. "
	fnames "tearOffCopy toc"
		fdesc "Will create this panel as a torn of copy of the specified source panel. "
	fnames "unParent up"
		fdesc "Specifies that the panel should be removed from its layout. This (obviously) cannot be used with query. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "panelConfiguration"
	desc "This command creates a panel configuration object. Typically you would not call this method command directly. Instead use the Panel Editor. Once a panel configuration is created you can make it appear in the main Maya window by selecting it from any panel's "Panels->Saved Layouts" menu."
	fcount "25"
	fnames "addPanel ap"
		fdesc "Adds the specified panel to the configuration.  Arguments are: isFixed, label string, type string, create string, edit string. "
	fnames "configString cfs"
		fdesc "Specifies the string that arranges the panels. "
	fnames "createStrings cs"
		fdesc "Returns an string array of the panel creation strings. "
	fnames "defaultImage di"
		fdesc "The default image for this configuration. Once the default image is set it may not be changed. If an image is set with the  -i/image flag then it's value will take precedence. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "editStrings es"
		fdesc "Returns an string array of the panel edit strings. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "image i"
		fdesc "The user specified image for this configuration. Use this flag to override the default image. "
	fnames "isFixedState if"
		fdesc "Returns an integer array of whether the panels have fixed states or not. "
	fnames "label l"
		fdesc "Configuration label. "
	fnames "labelStrings ls"
		fdesc "Returns an string array of the panel labels. "
	fnames "numberOfPanels np"
		fdesc "Returns the number of panels in the configuration. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "removeAllPanels rap"
		fdesc "Removes the last panel in the config. "
	fnames "removeLastPanel rlp"
		fdesc "Removes the last panel in the config. "
	fnames "replaceCreateString rcs"
		fdesc "Replaces the specified create string.  The index is 1 based. "
	fnames "replaceEditString res"
		fdesc "Replaces the specified edit string.  The index is 1 based. "
	fnames "replaceFixedState rfs"
		fdesc "Replaces the specified fixed state value (true|false).  The index is 1 based. "
	fnames "replaceLabel rl"
		fdesc "Replaces the specified label.  The index is 1 based. "
	fnames "replacePanel rp"
		fdesc "Replaces the specified panel in the configuration.  Arguments are: index, isFixed, label string, type string, create string, edit string. The index is 1 based. "
	fnames "replaceTypeString rts"
		fdesc "Replaces the specified type string.  The index is 1 based. "
	fnames "sceneConfig sc"
		fdesc "Specifies whether the configuration is associated with the scene. Scene configurations are created when the scene is opened and deleted when the scene is closed. "
	fnames "typeStrings ts"
		fdesc "Returns an string array of the panel types. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "panelHistory"
	desc "This command creates a panel history object. The object is targeted on a particular paneLayout and thereafter notes changes in panel configurations within that paneLayout, building up a history list. The list can be stepped through backwards or forwards."
	fcount "13"
	fnames "back b"
		fdesc "Go back one level on the history list. "
	fnames "clear cl"
		fdesc "Clear the history stack "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "forward f"
		fdesc "Go forward one level on the history list. "
	fnames "historyDepth hd"
		fdesc "Specifies how many levels of history are maintained. "
	fnames "isEmpty ie"
		fdesc "Returns true if there is currently no panel history. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "suspend s"
		fdesc "Specifies whether to suspend or resume updates to the panel history. Useful for chunking a number of changes into one history event. "
	fnames "targetPane tp"
		fdesc "Specifies which paneLayout the history will be maintained for. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "wrap w"
		fdesc "Specifies whether the history will wrap at the end and beginning.  This value is true by default. "
	rcount "0"
name "paramDimContext"
	desc "Command used to register the paramDimCtx tool."
	fcount "0"
	rcount "0"
name "paramDimension"
	desc "This command is used to create a param dimension to display the parameter value of a curve/surface at a specified point on the curve/surface."
	fcount "0"
	rcount "0"
name "paramLocator"
	desc "The command creates a locator in the underworld of a NURBS curve or NURBS surface at the specified parameter value. If no object is specified, then a locator will be created on the first valid selected item (either a curve point or a surface point)."
	fcount "0"
	rcount "0"
name "parent"
	desc "This command parents (moves) objects under a new group, removes objects from an existing group, or adds/removes parents. If the -w flag is specified all the selected or specified objects are parented to the world (unparented first). If the -rm flag is specified then all the selected or specified instances are removed. If there are more than two objects specified all the objects are parented to the last object specified. If the -add flag is specified, the objects are not reparented but also become children of the last object specified. If there is only a single object specified then the.... Refer to full documentation"
	fcount "7"
	fnames "absolute a"
		fdesc "preserve existing world object transformations (overall object transformation is preserved by modifying the objects local transformation) If the object to parent is a joint, it will alter the translation and joint orientation of the joint to preserve the world object transformation if this suffices. Otherwise, a transform will be inserted between the joint and the parent for this purpose. In this case, the transformation inside the joint is not altered. [default] "
	fnames "addObject add"
		fdesc "preserve existing local object transformations but don't reparent, just add the object(s) under the parent. Use -world to add the world as a parent of the given objects. "
	fnames "noConnections nc"
		fdesc "The parent command will normally generate new instanced set connections when adding instances. (ie. make a connection to the shading engine for new instances) This flag supresses this behaviour and is primarily used by the file format. "
	fnames "relative r"
		fdesc "preserve existing local object transformations (relative to the parent node) "
	fnames "removeObject rm"
		fdesc "remove an instance of an object from under the parent. (Note: if there is a single parent then the object is effectively deleted from the scene) Use -world to remove the world as a parent of the given object. "
	fnames "shape s"
		fdesc "The parent command usually only operates on transforms.  Using this flags allows a shape that is specified to be directly parented under the given transform.  This is used to instance a shape node. (ie. "parent -add -shape"	is equivalent to the "instance" command). This flag is primarily used by the file format. "
	fnames "world w"
		fdesc "unparent given object(s) (parent to world)  "
	rcount "2"
		rname "listRelatives"
		rname "group"
name "parentConstraint"
	desc "Constrain an object's position and rotation so that it behaves as if it were a child of the target object(s). In the case of multiple targets, the overall position and rotation of the constrained object is the weighted average of each target's contribution to the position and rotation of the object. A parentConstraint takes as input one or more "target" DAG transform nodes at which to position and rotate the single "constraint object" DAG transform node. The parentConstraint positions and rotates the constrained object at the weighted average of the world space position, rotation and scale target objects."
	fcount "9"
	fnames "createCache cc"
		fdesc "This flag is used to generate an animation curve that serves as a cache for	the constraint. The cache is useful if the constraint  has multiple targets and the constraint's interpolation type is set to "no flip". The "no flip" mode prevents flipping during playback, but the result is dependent on the previous frame. Therefore in  order to consistently get the same result on a specific frame, a  cache must be generated. This flag creates the cache and sets the  constraint's interpolation type to "cache". If a cache exists  already, it will be deleted and replaced with a new cache. "
	fnames "deleteCache dc"
		fdesc "Delete an existing interpolation cache. "
	fnames "maintainOffset mo"
		fdesc "If this flag is specified the position and rotation of the  constrained object will be maintained. "
	fnames "name n"
		fdesc "Sets the name of the constraint node to the specified name.  Default name is  constrainedObjectName_constraintType "
	fnames "remove rm"
		fdesc "removes the listed target(s) from the constraint. "
	fnames "skipRotate sr"
		fdesc "Causes the axis specified not to be considered when constraining rotation.  Valid arguments are "x", "y", "z" and "none". "
	fnames "skipTranslate st"
		fdesc "Causes the axis specified not to be considered when constraining translation.  Valid arguments are "x", "y", "z" and "none". "
	fnames "targetList tl"
		fdesc "Return the list of target objects. "
	fnames "weight w"
		fdesc "Sets the weight value for the specified target(s).  If not given at creation time, the default value of 1.0 is used. "
	rcount "8"
		rname "aimConstraint"
		rname "geometryConstraint"
		rname "normalConstraint"
		rname "orientConstraint"
		rname "pointConstraint"
		rname "poleVectorConstraint"
		rname "scaleConstraint"
		rname "tangentConstraint"
name "particle"
	desc "The particle command creates a new particle object from a list of world space points. If a particle object is created, the command returns the names of the new particle shape and its associated particle object dependency node. If an object was queried, the results of the query are returned. Per particle attributes can be queried using the particleId or the order of the particle in the particle array. If an object was edited, nothing is returned."
	fcount "22"
	fnames "attribute at"
		fdesc "Used in per particle attribute query and edit. Specifies the name of the attribute being queried or edited. "
	fnames "cache ch"
		fdesc "Truns caching on/off for the particle shape. "
	fnames "conserve c"
		fdesc "Conservation of momentum control (between 0 and 1).  Specifies the fraction of the particle shape's existing momentum which is conserved from frame to frame.   A value of 1 (the default) corresponds to true Newtonian physics, in which momentum is conserved. "
	fnames "count ct"
		fdesc "Returns the number of particles in the object. "
	fnames "deleteCache dc"
		fdesc "Deletes the particle shapes cache.  This command is not undoable. "
	fnames "dynamicAttrList dal"
		fdesc "Returns a list of the dynamic attributes in the object. "
	fnames "floatValue fv"
		fdesc "Used only in per particle attribute edit.  Specifies that the edit is of a float attribute and must be followed by the new float value. "
	fnames "gridSpacing grs"
		fdesc "Spacing between particles in the grid. "
	fnames "inherit i"
		fdesc "Inherit this fraction (0-1) of emitting object's velocity.  "
	fnames "jitterBasePoint jbp"
		fdesc "Base point (center point) for jitters.  The command will create one swatch of jitters for each base point.  It will pair up  other flags with base points in the order they are given in the command line.  If not enough instances of the other flags are availble, the last one on the line with be used for all other instances of -jpb. "
	fnames "jitterRadius jr"
		fdesc "Max radius from the center to place the particle instances.  Multi-use. "
	fnames "lowerLeft ll"
		fdesc "Lower left point of grid. "
	fnames "name n"
		fdesc "name of particle object  "
	fnames "numJitters nj"
		fdesc "Number of jitters (instances) per particle.  Multi-use. "
	fnames "order or"
		fdesc "Used in per particle attribute query and edit. Specifies the  zero-based order (index) of the particle whose attribute is being queried  or edited in the  particle array. Querying the value of a per particle attribute  requires the -attribute and -id or -order flags and their arguments to precede the -q flag.  "
	fnames "particleId id"
		fdesc "Used in per particle attribute query and edit. Specifies the  id of the particle whose attribute is being queried or edited.  Querying the value of a per particle attribute  requires the -attribute and -id or -order flags and their arguments to precede the -q flag. "
	fnames "perParticleDouble ppd"
		fdesc "Returns a list of the per-particle double attributes, excluding initial-state, cache, and information-only attributes.  "
	fnames "perParticleVector ppv"
		fdesc "Returns a list of the per-particle vector attributes, excluding initial-state, cache, and information-only attributes.  "
	fnames "position p"
		fdesc "World-space position of each particle. "
	fnames "shapeName sn"
		fdesc "Specify the shape name used for geometry instancing. DO not confuse this with the -n flag which names the particle object. "
	fnames "upperRight ur"
		fdesc "Upper right point of grid. "
	fnames "vectorValue vv"
		fdesc "Used only in per particle attribute edit.  Specifies that the edit is of a vector attribute and must be followed by all three float values for the vector. "
	rcount "16"
		rname "getParticleAttr"
		rname "setParticleAttr"
		rname "addPP"
		rname "dynExport"
		rname "emitter"
		rname "connectDynamic"
		rname "air"
		rname "radial"
		rname "gravity"
		rname "newton"
		rname "drag"
		rname "goal"
		rname "dynExpression"
		rname "emit"
		rname "event"
		rname "collision"
name "particleExists"
	desc "No Description."
	fcount "0"
	rcount "0"
name "particleInstancer"
	desc "ParticleInstancer is undoable , queryable , and editable . This command is used to create a particle instancer node and set the proper attributes in the particle shape and arraies in the instancer node. It will also create the connections needed between the particle shape and the instancer node."
	fcount "27"
	fnames "name n"
		fdesc "This flag sets or queries the name of the instancer node. "
	fnames "object obj"
		fdesc "This flag indicates which objects will be add/removed from the list of instanced objects.  The flag is used in conjuction with the -addObject and -remove flags.  If neither of these flags is specified on the command line then -addObject is assumed. "
	fnames "addObject a"
		fdesc "This flag indicates that objects specified by the -object flag will be added to the instancer node as instanced objects. "
	fnames "removeObject rm"
		fdesc "This flag indicates that objects specified by the -object flag will be removed from the instancer node as instanced objects. "
	fnames "cycle c"
		fdesc "This flag sets or queries the cycle attribute for the instancer node.  The options are "none", "sequential". The default is "none". "
	fnames "cycleStep cs"
		fdesc "This flag sets or queries the cycle step attribute for the instancer node.  This attribute indicates the size of the step in frames or seconds (see cycleStepUnits). "
	fnames "cycleStepUnits csu"
		fdesc "This flag sets or queries the cycle step unit attribute for the instancer node. The options are "frames" or "seconds".  The default is "frames". "
	fnames "index i"
		fdesc "This flag is used to query the name of the ith instanced object. "
	fnames "levelOfDetail lod"
		fdesc "This flag sets or queries the level of detail of the instanced objects.  The options are "geometry", "boundingBox" or "boundingBoxes".  The default is "geometry". "
	fnames "attributeMapping am"
		fdesc "This flag queries the particle attribute mapping list. "
	fnames "aimDirection ad"
		fdesc "This flag sets or queries the particle attribute name to be used for the aim direction of the instanced objects. "
	fnames "aimPosition ap"
		fdesc "This flag sets or queries the particle attribute name to be used for the aim position of the instanced objects. "
	fnames "aimAxis aa"
		fdesc "This flag sets or queries the particle attribute name to be used for the aim axis of the instanced objects. "
	fnames "aimUpAxis aua"
		fdesc "This flag sets or queries the particle attribute name to be used for the aim up axis of the instanced objects. "
	fnames "aimWorldUp awu"
		fdesc "This flag sets or queries the particle attribute name to be used for the aim world up of the instanced objects. "
	fnames "particleAge age"
		fdesc "This flag sets or queries the particle attribute name to be used for the age of the instanced objects. "
	fnames "cycleStartObject sto"
		fdesc "This flag sets or queries the particle attribute name to be used for the cycle start object of the instanced objects. "
	fnames "objectIndex oi"
		fdesc "This flag sets or queries the particle attribute name to be used for the object index of the instanced objects. "
	fnames "position p"
		fdesc "DEFAULT "worldPosition" This flag sets or queries the particle attribute name to be used for the positions of the instanced objects.  By default the attribute is worldPosition. "
	fnames "rotation r"
		fdesc "This flag sets or queries the particle attribute name to be used for the rotation of the instanced objects. "
	fnames "rotationType rt"
		fdesc "This flag sets or queries the particle attribute name to be used for the rotation type of the instanced objects. "
	fnames "rotationOrder ro"
		fdesc "This flag specifies the rotation order associated with the rotation flag.  The options are XYZ, XZY, YXZ, YZX, ZXY, or ZYX.  By default the attribute is XYZ. "
	fnames "rotationUnits ru"
		fdesc "This flag specifies the rotation units associated with the rotation flag.  The options are degrees or radians.  By default the attribute is degrees. "
	fnames "scale sc"
		fdesc "This flag sets or queries the particle attribute name to be used for the scale of the instanced objects. "
	fnames "shear sh"
		fdesc "This flag sets or queries the particle attribute name to be used for the shear of the instanced objects. "
	fnames "visibility vis"
		fdesc "This flag sets or queries the particle attribute name to be used for the visibility of the instanced objects. "
	fnames "instanceId id"
		fdesc "This flag queries the particle attribute name to be used for the id of the instanced objects. "
	rcount "0"
name "particleRenderInfo"
	desc "This action provides information access to the particle render subclasses. These are derived from TdynRenderBase. This action is used primarily by the Attribute Editor to gather information about attributes used for rendering."
	fcount "4"
	fnames "attrList al"
		fdesc "Return the list of attributes used by this render type. "
	fnames "attrListAll ala"
		fdesc "Return a complete list of all render attributes used by the particle object. This also includes the per particle attributes. "
	fnames "name n"
		fdesc "Return the name of the render subclass using the render type. "
	fnames "renderTypeCount rtc"
		fdesc "Return the count of registered render classes for particle. "
	rcount "0"
name "partition"
	desc "This command is used to create, query or add/remove sets to a partition. Without any flags, the command will create a partition with a default name. Any sets which are arguments to the command will be added to the partition. A set can be added to a partition only if none of its members are in any of the other sets in the partition. If the -re/render flag is specified when the partition is created, only 'renderable' sets can be added to the partition. Sets can be added and removed from a partition by using the -addSet or -removeSet flags.... Refer to full documentation"
	fcount "5"
	fnames "addSet add"
		fdesc "Adds the list of sets to the named partition. "
	fnames "name n"
		fdesc "Assigns name to new partition. Valid only for create mode. "
	fnames "query q"
		fdesc "Lists all members of the named partition. "
	fnames "removeSet rm"
		fdesc "Removes the list of sets from the named partition. "
	fnames "render re"
		fdesc "New partition can contain render sets. For use in creation mode only. Default is false.  Can also be used with query flag - returns boolean. "
	rcount "2"
		rname "sets"
		rname "character"
name "pasteKey"
	desc "The pasteKey command pastes curve segment hierarchies from the clipboard onto other objects or curves. If the object hierarchy from which the curve segments were copied or cut does not match the object hierarchy being pasted to, pasteKey will paste as much as it can match in the hierarchy. If animation from only one object is on the clipboard, it will be pasted to each of the target objects. If animation from more than one object is on the clipboard, selection list order determines what animation is pasted to which object. Valid operations include: One attribute to one or more.... Refer to full documentation"
	fcount "16"
	fnames "animation an"
		fdesc "Where this command should get the animation to act on.  Valid values are "objects," "keys," and "keysOrObjects" Default: "keysOrObjects."  (See Description for details.) "
	fnames "attribute at"
		fdesc "List of attributes to select "
	fnames "clipboard cb"
		fdesc "Specifies the clipboard from which animation is pasted. Valid clipboards are "api" and "anim".  The default clipboard is: anim "
	fnames "connect c"
		fdesc "When true, connect the source curve with the destination curve's value at the paste time. (This has the effect of shifting the clipboard curve in value to connect with the destination curve.) False preserves the source curve's original keyframe values. Default is false. "
	fnames "controlPoints cp"
		fdesc "This flag explicitly specifies whether or not to include the control points of a shape (see "-s" flag) in the list of attributes. Default: false.   (Not valid for "pasteKey" cmd.) "
	fnames "copies cp"
		fdesc "The number of times to paste the source curve. "
	fnames "float f"
		fdesc "value uniquely representing a non-time-based key (or key range) on a time-based animCurve.  Valid floatRange include single values (-f 10) or a string with a lower and upper bound, separated by a colon (-f "10:20") "
	fnames "floatOffset fo"
		fdesc "How much to offset the pasted keys in time (for non-time-input animation curves). "
	fnames "hierarchy hi"
		fdesc "Hierarchy expansion options.  Valid values are "above," "below," "both," and "none."  (Not valid for "pasteKey" cmd.) "
	fnames "includeUpperBound iub"
		fdesc "When the -t/time or -f/float flags represent a range of keys, this flag determines whether the keys at the  upper bound of the range are included in the keyset. Default value: true.  This flag is only valid when the argument to the -t/time flag is a time range with a lower and upper bound.  (When used with the "pasteKey"  command, this flag refers only to the time range of the target curve that is replaced, when using options such as "replace," "fitReplace," or "scaleReplace."  This  flag has no effect on the curve pasted from the clipboard.) "
	fnames "index in"
		fdesc "index of a key on an animCurve "
	fnames "option o"
		fdesc "Valid values are "insert", "replace", "replaceCompletely", "merge", "scaleInsert," "scaleReplace", "scaleMerge", "fitInsert", "fitReplace", and "fitMerge". The default paste option is: "insert". "
	fnames "shape s"
		fdesc "Consider attributes of shapes below transforms as well, except "controlPoints".  Default: true.   (Not valid for "pasteKey" cmd.) "
	fnames "time t"
		fdesc "time uniquely representing a key (or key range) on a time-based animCurve.  Valid timeRanges include single values (-t 10) or a string with a lower and upper bound, separated by a colon (-t "10:20") "
	fnames "timeOffset to"
		fdesc "How much to offset the pasted keys in time (for time-input animation curves). "
	fnames "valueOffset vo"
		fdesc "How much to offset the pasted keys in value. "
	rcount "10"
		rname "copyKey"
		rname "cutKey"
		rname "snapKey"
		rname "keyframe"
		rname "keyframeStats"
		rname "keyframeOutliner"
		rname "scaleKey"
		rname "setInfinity"
		rname "keyTangent"
		rname "findKeyframe"
name "pathAnimation"
	desc "The pathAnimation command constructs the necessary graph nodes and their interconnections for a motion path animation. Motion path animation requires a curve and one or more other objects. During the animation, the objects will be moved along the 3D curve or the curveOnSurface. There are two ways to specify the moving objects: by explicitly specifying their names in the command line, or by making the objects selected (interactively, or through a MEL command). Likewise, there are two ways to specify a motion curve: by explicitly specifying the name of the motion curve in the command line (i.e. using the -c.... Refer to full documentation"
	fcount "19"
	fnames "bank b"
		fdesc "If on, enable alignment of the up axis of the moving object(s) to the curvature of the path geometry. Default is false. When queried, this flag returns a  boolean . "
	fnames "bankScale bs"
		fdesc "This flag specifies a factor to scale the amount of bank angle. Default is 1.0 When queried, this flag returns a  float . "
	fnames "bankThreshold bt"
		fdesc "This flag specifies the limit of the bank angle. Default is 90 degrees When queried, this flag returns an  angle . "
	fnames "curve c"
		fdesc "This flag specifies the name of the curve for the path. Default is NONE When queried, this flag returns a  string . "
	fnames "endTimeU etu"
		fdesc "This flag specifies the ending time of the animation for the u parameter. Default is NONE. When queried, this flag returns a  time . "
	fnames "endU eu"
		fdesc "This flag specifies the ending value of the u parameterization for the animation. Default is the end parameterization value of the curve. When queried, this flag returns a  linear . "
	fnames "follow f"
		fdesc "If on, enable alignment of the front axis of the moving object(s). Default is false. When queried, this flag returns a  boolean . "
	fnames "followAxis fa"
		fdesc "This flag specifies which object local axis to be aligned to the tangent of the path curve. Default is y When queried, this flag returns a  string . "
	fnames "fractionMode fm"
		fdesc "If on, evaluation on the path is based on the fraction of length of the path curve. Default is false. When queried, this flag returns a  boolean . "
	fnames "inverseFront if"
		fdesc "This flag specifies whether or not to align the front axis of the moving object(s) to the opposite direction of the tangent vector of the path geometry. Default is false. When queried, this flag returns a  boolean . "
	fnames "inverseUp iu"
		fdesc "This flag specifies whether or not to align the up axis of the moving object(s) to the opposite direction of the normal vector of the path geometry. Default is false. When queried, this flag returns a  boolean . "
	fnames "name n"
		fdesc "This flag specifies the name for the new motion path node. (instead of the default name) When queried, this flag returns a  string . "
	fnames "startTimeU stu"
		fdesc "This flag specifies the starting time of the animation for the u parameter. Default is the the current time. When queried, this flag returns a  time . "
	fnames "startU su"
		fdesc "This flag specifies the starting value of the u parameterization for the animation. Default is the start parameterization value of the curve. When queried, this flag returns a  linear . "
	fnames "upAxis ua"
		fdesc "This flag specifies which object local axis to be aligned a computed up direction. Default is z When queried, this flag returns a  string . "
	fnames "useNormal un"
		fdesc "This flag is now obsolete. Use -wut/worldUpType instead. "
	fnames "worldUpObject wuo"
		fdesc "Set the DAG object to use for worldUpType "object" and  "objectrotation". See -wut/worldUpType for greater detail. The default value is no up object, which is interpreted as world space. "
	fnames "worldUpType wut"
		fdesc "Set the type of the world up vector computation. The worldUpType can have one of 5 values: "scene", "object", "objectrotation", "vector", or "normal". If the value is "scene", the upVector is  aligned with the up axis of the scene and worldUpVector and worldUpObject are ignored.   If the value is "object", the upVector is  aimed as closely as possible to the origin of the space of the worldUpObject and  the worldUpVector is ignored.   If the value is "objectrotation" then the  worldUpVector is interpreted as being in  the coordinate space of the worldUpObject, transformed into world space and the upVector is aligned as  closely as possible to the result. If the value is "vector", the upVector  is aligned with worldUpVector as closely as  possible and worldUpObject is ignored. Finally, if the value is "normal" the upVector is aligned to the path geometry. The default worldUpType is "vector". "
	fnames "worldUpVector wu"
		fdesc "Set world up vector.  This is the vector in world coordinates that up vector should align with.   See -wut/worldUpType for greater detail.   If not given at creation time, the default  value of (0.0, 1.0, 0.0) is used. "
	rcount "0"
name "pause"
	desc "Pause for a specified number of seconds for canned demos or for test scripts to allow user to view results."
	fcount "1"
	fnames "seconds sec"
		fdesc "Pause for the specified number of seconds. "
	rcount "0"
name "pclose"
	desc "This command closes a pipe opened with popen and returns zero on success or not zero if an error occurred."
	fcount "0"
	rcount "0"
name "percent"
	desc "This command sets percent values on members of a weighted node such as a cluster or a jointCluster. With no flags specified the command sets the percent value for selected components of the specified node to the specified percent value. A dropoff from the specified percent value to 0 can be specifed from a point, plane or curve using a dropoff distance around that shape. The percent value can also be added or multiplied with existing percent values of the node components."
	fcount "8"
	fnames "addPercent ap"
		fdesc "Add the percent value specified with the -v flag to the existing percent values "
	fnames "dropoffAxis dax"
		fdesc "Specifies the axis along which to dropoff the percent value, starting from the dropoffPosition. "
	fnames "dropoffCurve dc"
		fdesc "Specifies the curve around which to dropoff the percent value. "
	fnames "dropoffDistance dds"
		fdesc "Specifies the dropoff distance from the point, plane or curve that was specified using the -dp -dax or -dc flags. "
	fnames "dropoffPosition dp"
		fdesc "Specifies the point around which to dropoff the percent value. "
	fnames "dropoffType dt"
		fdesc "Specifies the type of dropoff. Used in conjunction with the -dp, -dax or -dc flags. Default is linear. "
	fnames "multiplyPercent mp"
		fdesc "Multiply the percent value specified with the -v flag with existing percent values "
	fnames "value v"
		fdesc "The percent value to be applied. The default is 1. In query mode, returns an array of doubles corresponding to the weights of the selected object components. "
	rcount "7"
		rname "cluster"
		rname "lattice"
		rname "sculpt"
		rname "deformer"
		rname "flexor"
		rname "wire"
		rname "wrinkle"
name "performanceOptions"
	desc "Sets the global performance options for the application. The options allow the disabling of features such as stitch surfaces or deformers to cut down on computation time in the scene. Performance options that are in effect may be on all the time, or they can be turned on only for interaction. In the latter case, the options will only take effect during UI interaction or playback. Note that none of these performance options will affect rendering."
	fcount "14"
	fnames "clusterResolution cr"
		fdesc "Sets the global cluster resolution.  This value may range between 0.0 (exact calculation) and 10.0 (rough approximation) "
	fnames "disableStitch ds"
		fdesc "Sets the state of stitch surface disablement.  Setting this to "on" suppresses the generation of stitch surfaces. "
	fnames "disableTrimDisplay dt"
		fdesc "Sets the state of trim drawing disablement.  Setting this to "on" suppresses the drawing of surface trims. "
	fnames "latticeResolution lr"
		fdesc "Sets the global lattice resolution.  This value may range between 0.0 (exact calculation) and 1.0 (rough approximation) "
	fnames "passThroughBindSkinAndFlexors pbf"
		fdesc "Sets the state of bind skin and all flexors pass through "
	fnames "passThroughBlendShape pbs"
		fdesc "Sets the state of blend shape deformer pass through "
	fnames "passThroughCluster pc"
		fdesc "Sets the state of cluster deformer pass through "
	fnames "passThroughFlexors pf"
		fdesc "Sets the state of flexor pass through "
	fnames "passThroughLattice pl"
		fdesc "Sets the state of lattice deformer pass through "
	fnames "passThroughPaintEffects pp"
		fdesc "Sets the state of paint effects pass through "
	fnames "passThroughSculpt ps"
		fdesc "Sets the state of sculpt deformer pass through "
	fnames "passThroughWire pw"
		fdesc "Sets the state of wire deformer pass through "
	fnames "useClusterResolution ucr"
		fdesc "Sets the state of cluster deformer global resolution.  This allows clusters to be calculated at a lower resolution. "
	fnames "useLatticeResolution ulr"
		fdesc "Sets the state of lattice deformer global resolution.  This allows lattices to be calculated at a lower resolution. "
	rcount "0"
name "pfxstrokes"
	desc "Pfxstrokes is undoable , queryable , and NOT editable . This command will loop through all the Paint Effects strokes, including pfxHair nodes, and write the current state of all the tubes to a file. For normal stroke nodes tubes must be ON in the brush or there will be no output. For pfxHair nodes there will always be output, but the format is different than for stroke nodes(however one can assign a brush with tubes = ON to a pfxHair node, in which case it will output the same format as strokes). The general file format is ASCII, using.... Refer to full documentation"
	fcount "3"
	fnames "selected sl"
		fdesc "Only loop through the selected strokes. "
	fnames "postCallback pc"
		fdesc "Output information to the file after the Runtime Callback MEL function has been invoked. The default is to output the information prior to the callback. "
	fnames "filename fn"
		fdesc "The output file. "
	rcount "0"
name "pickWalk"
	desc "The pickWalk command allows you to quickly change the selection list relative to the nodes that are currently selected. It is called pickWalk, because it walks from one selection list to another by unselecting what's currently selected, and selecting nodes that are in the specified direction from the currently selected list. If you specify objects on the command line, the pickWalk command will walk from those objects instead of the selected list. If the -type flag is instances, then the left and right direction will walk to the previous or next instance of the same selected dag node."
	fcount "2"
	fnames "direction d"
		fdesc "The direction to walk from the node. The choices are up | down | left | right. up walks to the parent node, down to the child node, and left and right to the sibling nodes. If a CV on a surface is selected, the left and right directions walk in the U parameter direction of the surface, and the up and down directions walk in the V parameter direction. Default is right. "
	fnames "type typ"
		fdesc "The choices are nodes | instances. If type is nodes, then the left and right direction walk to the next dag siblings. If type is instances, the left and right direction walk to the previous or next instance of the same dag node. Default is nodes. "
	rcount "0"
name "picture"
	desc "This command creates a static image."
	fcount "21"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "image i"
		fdesc "Sets the image given the .xpm file name. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "tile tl"
		fdesc "If true, the picture is tiled to fill the picture area. False by default. (Windows only flag) "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "pixelMove"
	desc "The pixelMove command moves objects by what appears as pixel units based on the current view. It takes two integer arguments which specify the direction in screen space an object should appear to move. The vector between the center pixel of the view and the specified offset is mapped to some world space vector which defines the relative amount to move the selected objects. The mapping is dependent upon the view."
	fcount "0"
	rcount "0"
name "planarSrf"
	desc "This command computes a planar trimmed surface given planar boundary curves that form a closed region."
	fcount "11"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "degree d"
		fdesc "The degree of the resulting surface: 1 - linear, 3 - cubic Default:  3 "
	fnames "keepOutside ko"
		fdesc "If true, keep the regions outside the given curves. Default:  false "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "tolerance tol"
		fdesc "The distance tolerance for the cvs of the curves to be in the same plane. Default:  0.01 "
	rcount "0"
name "plane"
	desc "The command creates a sketch plane (also known as a "construction plane") in space. To create an object (such as a NURBS curve, joint chain or polygon) on a construction plane, you need to first make the plane live. See also the makeLive command."
	fcount "6"
	fnames "length l"
		fdesc "The length of plane. "distance" means that this flag can handle values with units. "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "position p"
		fdesc "3D position where the centre of the plane is positioned. "distance" means that this flag can handle values with units. "
	fnames "rotation r"
		fdesc "The rotation of plane. "angle" means that this flag can handle values with units. "
	fnames "size s"
		fdesc "The combined size (size x size) of plane. "distance" means that this flag can handle values with units. "
	fnames "width w"
		fdesc "The width of plane. "distance" means that this flag can handle values with units. "
	rcount "0"
name "play"
	desc "This command starts and stops playback. In order to change the frame range of playback, see the playbackOptions command."
	fcount "6"
	fnames "forward f"
		fdesc "When true, play back the animation from the currentTime to the maximum of the playback range. When false, play back from the currentTime to the minimum of the playback range.  When queried, returns an int. "
	fnames "playSound ps"
		fdesc "Specify whether or not sound should be used during playback "
	fnames "record rec"
		fdesc "enable the recording system and start one playback loop "
	fnames "sound s"
		fdesc "Specify the sound node to be used during playback "
	fnames "state st"
		fdesc "start or stop playing back  "
	fnames "wait w"
		fdesc "Wait till completion before returning control to  command Window. "
	rcount "0"
name "playbackOptions"
	desc "This command sets/queries certain values associated with playback: looping style, start/end times, etc. Only commands modifying the -minTime/maxTime, the -animationStartTime/animationEndTime, or the -by value are undoable."
	fcount "9"
	fnames "animationEndTime aet"
		fdesc "sets the end time of the animation.  Query returns float. "
	fnames "animationStartTime ast"
		fdesc "sets the start time of the animation.  Query returns float. "
	fnames "by by"
		fdesc "Increment between times viewed during playback. (Default 1.0) "
	fnames "framesPerSecond fps"
		fdesc "queries the actual playback rate.  Query returns float. "
	fnames "loop l"
		fdesc "Controls if and how playback repeats.  Valid values are  "once," "continuous," and "oscillate."  Query returns string. "
	fnames "maxTime max"
		fdesc "sets the end of the playback time range.  Query returns float. "
	fnames "minTime min"
		fdesc "sets the start of the playback time range.  Query returns float. "
	fnames "playbackSpeed ps"
		fdesc "sets the desired playback speed.  Query returns float. "
	fnames "view v"
		fdesc "Controls how many modelling views update during playback. Valid values are "all" and "active" .  Query returns string. "
	rcount "0"
name "playblast"
	desc "This command playblasts the current playback range. Sound is optional."
	fcount "18"
	fnames "clearCache cc"
		fdesc "When true, all previous temporary playblast files will be deleted  before the new playblast files are created.  Any playblast files that were explicitly given a name by the user will not be deleted.  All  remaining temporary playblast files will be deleted when the  application quits regardless of whether this flag was set. "
	fnames "completeFilename cf"
		fdesc "When set, this string specifies the exact name of the output image. In contrast with the -f/filename flag, -cf/completeFilename does not append any frame number or extension string at the end of the filename. Additionally, playblast will not delete the image from disk after it is displayed. This flag should not be used in conjunction with -f/filename. "
	fnames "compression c"
		fdesc "IRIX: Specify the compression to use for the movie file. Valid values are "mvc1", "mvc2", "jpeg", "rle", "none". (Default is "mvc2".) NT: If the argument is an empty string ("") a dialog comes up allowing the user to set the codec, data rate, keyframing, compression quality, and codec settings. (This dialog will also come up with `playblast -options`.)  If it is any other value, it is assumed to indicate the 4 byte handler code for the Video for Windows codec to compress the image. "
	fnames "endTime et"
		fdesc "Specify the end time of the playblast.  Default is the end time of the playback range displayed in the Time Slider. Overridden by -frame. "
	fnames "filename f"
		fdesc "The filename to use for the output of this playblast. If the file already exists, a confirmation box will be displayed if playblast is performed interactively.  If playblast is executed from the command line and the file already exists, it will abort. "
	fnames "forceOverwrite fo"
		fdesc "Overwrite existing playblast files which may have the the same name as the one specified with the "-f" flag "
	fnames "format fmt"
		fdesc "The format of the output of this playblast.  Valid values and their meanings: -- "movie" On IRIX, this option outputs SGI's movie format  and sets the default viewing command to "movieplayer". On NT, the output is of type avi and the player is Microsoft Media Player.  The resulting file is named according to the "-f" flag, if specified. -- "image" outputs a sequence of image files and sets the default viewing command to "fcheck".  The image format will be the Output Format specified using Render->RenderGlobals. The resulting   files use the value of the "-f" flag as a prefix, with an appended frame number, as in "myFile.0007.iff" The default value of the -fmt/format flag is "movie". "
	fnames "frame fr"
		fdesc "List of frames to blast. One frame specified per flag. The frames can be specifed in any order but will be output in an ordered sequence. When specified this flag will override any start/end range "
	fnames "height h"
		fdesc "Height of the final image. This value will be clamped if larger than the width of the active window. NT: If not using fcheck, the width and height must each be divisible  by 4. "
	fnames "offScreen os"
		fdesc "When set, this toggle allow playblast to use an offscreen buffer to render the view. This allows playblast to work when the application is iconified, or obscured "
	fnames "options o"
		fdesc "NT only. Brings up a dialog for setting playblast options, and does not run the playblast. "
	fnames "percent p"
		fdesc "Percentage of current view size  to use during blasting. Accepted values are integers between 10 and 100.  All other values are clamped to be within this range.  A value of 25 means 1/4 of the  current view size; a  value of 50  means half the current view size; a value of 100 means full size.  (Default is 50.) "
	fnames "showOrnaments orn"
		fdesc "Sets whether or not model view ornaments (e.g. the axis icon) should be displayed "
	fnames "sound s"
		fdesc "Specify the sound node to be used during playblast "
	fnames "startTime st"
		fdesc "Specify the start time of the playblast.  Default is the start time of the playback range displayed in  the Time Slider. Overridden by -frame. "
	fnames "viewer v"
		fdesc "Specify whether a viewer should be launched for the playblast.  Default is "true".  Runs "fcheck" when -fmt is "image". The player for movie files depends on the OS: NT uses Microsoft Media Player, Irix uses movieplayer. "
	fnames "width w"
		fdesc "Width of the final image. This value will be clamped if larger than the width of the active window. NT: If not using fcheck, the width and height must each be divisible  by 4. "
	fnames "widthHeight wh"
		fdesc "Final image's width and height. Values larger than the dimensions of the active window are clamped. A width and height of 0 means to use the window's current size. NT: If not using fcheck, the width and height must each be divisible  by 4. "
	rcount "0"
name "pluginInfo"
	desc "This command provides access to the plugin registry of the application. It is used mainly to query the characteristics of registered plugins. Plugins automatically become registered the first time that they are loaded."
	fcount "25"
	fnames "apiVersion av"
		fdesc "returns a string containing the version of the API that this plugin was complied with.  See the comments in MTypes.h for the details on how to interpret this value. "
	fnames "autoload a"
		fdesc "sets whether or not this plugin should be loaded every time the application starts up.  Returns a boolean in query mode. "
	fnames "changedCommand cc"
		fdesc "adds a callback that will get executed every time the plugin registry changes.  Any other previously registered callbacks will also get called. "
	fnames "command c"
		fdesc "returns a string array containing the names of all of the commands registered by this plugin. "
	fnames "data d"
		fdesc "returns a string array containing the names of all of the data types registered by this plugin. "
	fnames "dependNode dn"
		fdesc "returns a string array containing the names of all of the nodes registered by this plugin. "
	fnames "device dv"
		fdesc "returns a string array containing the names of all of the devices registered by this plugin. "
	fnames "dragAndDropBehavior ddb"
		fdesc "returns a string array containing the names of all of the drag and drop behaviors registered by this plugin. "
	fnames "iksolver ik"
		fdesc "returns a string array containing the names of all of the ik solvers registered by this plugin. "
	fnames "listPlugins ls"
		fdesc "returns a string array containing all the plugins that are currently loaded. "
	fnames "loadPluginPrefs lpp"
		fdesc "loads the plugin preferences (ie. autoload) from pluginPrefs.mel into Maya. "
	fnames "loaded l"
		fdesc "returns a boolean specifying whether or not the plugin is loaded. "
	fnames "name n"
		fdesc "returns a string containing the internal name by which the plugin is registered.  "
	fnames "path p"
		fdesc "returns a string containing the absolute path name to the plugin. "
	fnames "pluginsInUse pu"
		fdesc "returns a string array containing all the plugins that are currently being used in the scene. "
	fnames "registered r"
		fdesc "returns a boolean specifying whether or not plugin is currently registered with the system. "
	fnames "remove rm"
		fdesc "removes the given plugin's record from the registry. There is no return value. "
	fnames "savePluginPrefs spp"
		fdesc "saves the plugin preferences (ie. autoload) out to pluginPrefs.mel "
	fnames "serviceDescriptions sd"
		fdesc "if there are services in use, then this flag will return a string array containing short descriptions saying what those services are. "
	fnames "tool t"
		fdesc "returns a string array containing the names of all of the tool contexts registered by this plugin. "
	fnames "translator tr"
		fdesc "returns a string array containing the names of all of the file translators registered by this plugin. "
	fnames "unloadOk uo"
		fdesc "returns a boolean that specifies whether or not the plugin can be safely unloaded.  It will return false if the plugin is currently in use.  For example, if the plugin adds a new dependency node type, and an instance of that node type is present in the scene, then this query will return false. "
	fnames "userNamed u"
		fdesc "returns a boolean specifying whether or not the plugin has been assigned a name by the user. "
	fnames "vendor vd"
		fdesc "returns a string containing the vendor of the plugin. "
	fnames "version v"
		fdesc "returns a string containing the version the plugin. "
	rcount "3"
		rname "loadPlugin"
		rname "openMayaPref"
		rname "unloadPlugin"
name "pointConstraint"
	desc "Constrain an object's position to the position of the target object or to the average position of a number of targets. A pointConstraint takes as input one or more "target" DAG transform nodes at which to position the single "constraint object" DAG transform node. The pointConstraint positions the constrained object at the weighted average of the world space position target objects."
	fcount "3"
	fnames "maintainOffset mo"
		fdesc "The offset necessary to preserve the constrained object's initial position will be calculated and used as the offset. "
	fnames "offset o"
		fdesc "Sets or queries the value of the offset. Default is 0,0,0. "
	fnames "skip sk"
		fdesc "Specify the axis to be skipped. Valid values are "x", "y", "z" and "none". During creation, "none" is the default. This flag is multi-use. "
	rcount "8"
		rname "aimConstraint"
		rname "geometryConstraint"
		rname "normalConstraint"
		rname "orientConstraint"
		rname "parentConstraint"
		rname "poleVectorConstraint"
		rname "scaleConstraint"
		rname "tangentConstraint"
name "pointCurveConstraint"
	desc "The command enables direct manipulation of a NURBS curve. It does so by apply a position constraint at the specified parameter location on the NURBS curve. If construction history for the cmd is enabled, a locator is created to enable subsequent interactive manipulation of the curve. The locator position may be key framed or transformed and the "curve1" will try to match the position of the locator."
	fcount "10"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "position p"
		fdesc "The new desired position in space for the nurbs object at the specified parameter space component. If not specified, the position is taken to be the one evaluated at the parameter space component on the nurbs object. "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "weight w"
		fdesc "weight of the lsq constraint. The larger the weight, the least squares constraint is strictly met. "
	rcount "0"
name "pointLight"
	desc "The pointLight command is used to edit the parameters of existing pointLights, or to create new ones. The default behaviour is to create a new pointlight."
	fcount "15"
	fnames "decayRate d"
		fdesc "decay rate of the light (0-no decay, 1-slow, 2-realistic, 3-fast)  "
	fnames "discRadius drs"
		fdesc "radius of the disc around the light  "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags. "
	fnames "exclusive exc"
		fdesc "This flag is obsolete. "
	fnames "intensity i"
		fdesc "intensity of the light (expressed as a percentage)  "
	fnames "name n"
		fdesc "specify the name of the light "
	fnames "position pos"
		fdesc "This flag is obsolete. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the value of the specified flag. "
	fnames "rgb rgb"
		fdesc "color of the light (0-1)  "
	fnames "rotation rot"
		fdesc "This flag is obsolete. "
	fnames "shadowColor sc"
		fdesc "the shadow color  "
	fnames "shadowDither sd"
		fdesc "dither the shadow  "
	fnames "shadowSamples sh"
		fdesc "number of shadow samples.  "
	fnames "softShadow ss"
		fdesc "soft shadow  "
	fnames "useRayTraceShadows rs"
		fdesc "ray trace shadows  "
	rcount "9"
		rname "ambientLight"
		rname "lightListEditor"
		rname "directionalLight"
		rname "lightListPanel"
		rname "spotLight"
		rname "exclusiveLightCheckBox"
		rname "lightlink"
		rname "spotLightPreviewPort"
		rname "lightList"
name "pointMatrixMult"
	desc "This script returns the multiplication of a point and a matrix as an array of 3 doubles: vector * matrix = result Note: The matrix is assumed to be a single dimension array of 16 elements. Remember: That the arrays are 0-based. e.g. [1][0] is matrix[4] element."
	fcount "0"
	rcount "0"
name "pointOnCurve"
	desc "This command returns information for a point on a NURBS curve. If no flag is specified, it assumes -p/position by default."
	fcount "17"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curvatureCenter cc"
		fdesc "Returns the (x,y,z) center of curvature of the specified point on the curve "
	fnames "curvatureRadius cr"
		fdesc "Returns the radius of curvature of the specified point on the curve "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "normal n"
		fdesc "Returns the (x,y,z) normal of the specified point on the curve "
	fnames "normalizedNormal nn"
		fdesc "Returns the (x,y,z) normalized normal of the specified point on the curve "
	fnames "normalizedTangent nt"
		fdesc "Returns the (x,y,z) normalized tangent of the specified point on the curve "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "parameter pr"
		fdesc "The parameter value on curve Default:  (Tdouble)0.0 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "position p"
		fdesc "Returns the (x,y,z) positon of the specified point on the curve "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "tangent t"
		fdesc "Returns the (x,y,z) tangent of the specified point on the curve "
	fnames "turnOnPercentage top"
		fdesc "Whether the parameter is normalized (0,1) or not Default:  (Tboolean)false "
	rcount "0"
name "pointOnSurface"
	desc "This command returns information for a point on a surface. If no flag is specified, this command assumes -p/position by default. If more than one flag is specifed, then a string array is returned."
	fcount "18"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "normal n"
		fdesc "Returns the (x,y,z) normal of the specified point on the surface "
	fnames "normalizedNormal nn"
		fdesc "Returns the (x,y,z) normalized normal of the specified point on the surface "
	fnames "normalizedTangentU ntu"
		fdesc "Returns the (x,y,z) normalized U tangent of the specified point on the surface "
	fnames "normalizedTangentV ntv"
		fdesc "Returns the (x,y,z) normalized V tangent of the specified point on the surface "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "parameterU u"
		fdesc "The U parameter value on surface Default:  (Tdouble)0.0 "
	fnames "parameterV v"
		fdesc "The V parameter value on surface Default:  (Tdouble)0.0 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "position p"
		fdesc "Returns the (x,y,z) positon of the specified point on the surface "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "tangentU tu"
		fdesc "Returns the (x,y,z) U tangent of the specified point on the surface "
	fnames "tangentV tv"
		fdesc "Returns the (x,y,z) V tangent of the specified point on the surface "
	fnames "turnOnPercentage top"
		fdesc "Whether the parameter is normalized (0,1) or not Default:  (Tboolean)false "
	rcount "0"
name "pointPosition"
	desc "This command returns the world or local space position for any type of point object. Valid selection items are: - curve and surface CVs - poly vertices - lattice points - particles - curve and surface edit points - curve and surface parameter points - poly uvs - rotate/scale/joint pivots - selection handles - locators, param locators and arc length locators It works on the selected object or you can specify the object in the command. By default, if no flag is specified then the world position is returned."
	fcount "2"
	fnames "local l"
		fdesc "Return the point in local space coordinates. "
	fnames "world w"
		fdesc "Return the point in world space coordinates. "
	rcount "0"
name "poleVectorConstraint"
	desc "Constrains the poleVector of an ikRPsolve handle to point at a target object or at the average position of a number of targets. An poleVectorConstraint takes as input one or more "target" DAG transform nodes at which to aim pole vector for an IK handle using the rotate plane solver. The pole vector is adjust such that the in weighted average of the world space position target objects lies is the "rotate plane" of the handle."
	fcount "0"
	rcount "0"
name "polyAppend"
	desc "Appends a new face to the selected polygonal object. The first argument must be a border edge. The new face will be automatically closed. Only works with one object selected."
	fcount "7"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int "
	fnames "edge ed"
		fdesc "Adds the given edge of the selected object to the new face. This edge must be a border, which will be then shared by the new face and the neighboring one. The new face is oriented according to the orientation of the given edge(s). "
	fnames "hole hl"
		fdesc "Add a hole. The following points & edges will define a hole. Common flags "
	fnames "name n"
		fdesc "Gives a name to the created node. "
	fnames "point p"
		fdesc "Adds a new point to the new face. Coordinates of free points are given in the local object reference. "
	fnames "subdivision s"
		fdesc "This flag specifies the level of subdivisions. Automatically subdivides new edges into the given number of edges. Existing edges cannot be subdivided. C : Default is 1 (no subdivision). Q: When queried, this flag returns an  int . "
	fnames "texture tx"
		fdesc "Specifies how new faces are mapped.  0 - None; 1 - Normalize; 2 - Unitize C: Default is 0 (no mapping). Q: When queried, this flag returns an  int "
	rcount "12"
		rname "polyAppendVertex"
		rname "polyExtrudeEdge"
		rname "polyExtrudeFacet"
		rname "polyBevel"
		rname "polySplit"
		rname "polySplitVertex"
		rname "polyCreateFacet"
		rname "polySubdivideEdge"
		rname "polySubdivideFacet"
		rname "polyTriangulate"
		rname "polySmooth"
		rname "polyChipOff"
name "polyAppendFacetCtx"
	desc "Create a new context to append facets on polygonal objects."
	fcount "20"
	fnames "activeNodes anq"
		fdesc "Query only: return the active nodes in the tool "
	fnames "append ap"
		fdesc "Allows to switch to polyCreateFacetCtx tool "
	fnames "autoCreate ac"
		fdesc "Auto create the result or wait for the Enter key to create the result "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "immediate im"
		fdesc "Edit only: acts on the object not the tool defaults "
	fnames "isRotateAvailable isr"
		fdesc "tells if the control associated to rotate flag is available. If several edges are already selected and they are not aligned (thus there is no "rotation axis") the rotation is no longer available. "
	fnames "maximumNumberOfPoints mp"
		fdesc "Allows the ability to set a upper bound on the number of points in interactively place before polygon is  created. A value less than 2 will mean that there is no upper bound. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "planarConstraint pc"
		fdesc "allows/avoid new facet to be non-planar. If  on , all new points will be projected onto current facet plane. Selected edges will be checked as well. "
	fnames "previous pv"
		fdesc "Edit only: reset to previously stored values "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "reset rs"
		fdesc "Edit only: reset to default values "
	fnames "rotate r"
		fdesc "rotate current facet around the first edge selected. "
	fnames "subdivision s"
		fdesc "number of sub-edges created for each new edge. Default is 1. "
	fnames "toolNode tnq"
		fdesc "Query only: the node used for tool defaults "
	rcount "0"
name "polyAppendVertex"
	desc "Appends a new face to the selected polygonal object. The direction of the normal is given by the vertex order: the face normal points towards the user when the vertices rotate counter clockwise. Note that holes must be described in the opposite direction. Only works with one object selected."
	fcount "6"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int "
	fnames "hole h"
		fdesc "Add a hole. The following points & edges will define a hole. Common flags "
	fnames "name n"
		fdesc "Gives a name to the created node. "
	fnames "point p"
		fdesc "Adds a new point to the new face. Coordinates of free points are given in the local object reference. "
	fnames "texture tx"
		fdesc "Specifies how new faces are mapped.  0 - None; 1 - Normalize; 2 - Unitize C: Default is 0 (no mapping). Q: When queried, this flag returns an  int "
	fnames "vertex v"
		fdesc "Adds the given vertex of the selected object to the new face. "
	rcount "12"
		rname "polyAppend"
		rname "polyExtrudeEdge"
		rname "polyExtrudeFacet"
		rname "polyBevel"
		rname "polySplit"
		rname "polySplitVertex"
		rname "polyCreateFacet"
		rname "polySubdivideEdge"
		rname "polySubdivideFacet"
		rname "polyTriangulate"
		rname "polySmooth"
		rname "polyChipOff"
name "polyAutoProjection"
	desc "Projects a map onto an object, using several orthogonal projections simultaneously."
	fcount "11"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  integer . "
	fnames "createNewMap cm"
		fdesc "Create a new UV set, as opposed to editing the current one, or the one given by the -uvSetName flag. "
	fnames "layout l"
		fdesc "What layout algorithm should be used: 0 UV pieces are aligned along the U axis. 1 UV pieces are moved in a square shape. "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "optimize o"
		fdesc "Use two different flavors for the cut generation. 0 Every face is assigned to the best plane. This optimizes the map distortion. 1 Small UV pieces are incorporated into larger ones, when the extra distortion introduced is reasonable. This tends to produce fewer UV pieces. "
	fnames "percentageSpace ps"
		fdesc "When layout is set to square, this value is a percentage of  the texture area which is added around each UV piece. It can be  used to ensure each UV piece uses different pixels in the texture. Maximum value is 5 percent. "
	fnames "planes p"
		fdesc "Number of intermediate projections used. Valid numbers  are 4, 5, 6, 8, and 12. C: Default is 6. "
	fnames "scale sc"
		fdesc "How to scale the pieces, after projections: 0 No scale is applied. 1 Uniform scale to fit in unit square. 2 Non proportional scale to fit in unit square. "
	fnames "skipIntersect si"
		fdesc "When on, self intersection of UV pieces are not tested. This makes the projection faster and produces fewer pieces, but may lead to overlaps in UV space. "
	fnames "uvSetName uvs"
		fdesc "Specifies the name of the UV set to edit uvs on. If not  specified will use the current UV set if it exists. When createNewMap is on, the name is used to generate a new unique UV set name. "
	fnames "worldSpace ws"
		fdesc "This flag specifies which reference to use. If "on" : all geometrical values are taken in world reference. If "off" : all geometrical values are taken in object reference. C: Default is "off". Q: When queried, this flag returns an  integer . Common flags "
	rcount "0"
name "polyAverageNormal"
	desc "PolyAverageNormal is undoable , NOT queryable , and NOT editable . Set normals of vertices or vertex-faces to an average value when the vertices within a given threshold. First, it sorts out the containing edges, and set them to be soft, if it is possible, so to let the normals appear to be "merged". The remained components then are sorted into lumps where vertices in each lump are within the given threshold. For all vertices and vertex-faces, set their normals to the average normal in the lump. Selected vertices may or may not on the same object. If objects are.... Refer to full documentation"
	fcount "5"
	fnames "allowZeroNormal azn"
		fdesc "Specifies whether to allow zero normals to be created. By default it is false. If it is false, replaceNormal is needed. "
	fnames "distance d"
		fdesc "Specifies the distance threshold. All vertices within the threshold are considered when computing an average normal. By default it is 0.0. "
	fnames "postnormalize pon"
		fdesc "Specifies whether to normalize the resulting normals. By default it is true. "
	fnames "prenormalize prn"
		fdesc "Specifies whether to normalize the normals before averaging. By default it is true. "
	fnames "replaceNormalXYZ xyz"
		fdesc "If the  allowZeroNormal  is false, this value is used to replace the zero normals. By default it is (1, 0, 0). "
	rcount "4"
		rname "polyNormalPerVertex"
		rname "polyNormal"
		rname "polySetToFaceNormal"
		rname "polySoftEdge"
name "polyAverageVertex"
	desc "Moves the selected vertices of a polygonal object to round its shape. Translate, move, rotate or scale vertices."
	fcount "4"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "iterations i"
		fdesc "Number of rounding steps. "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "worldSpace ws"
		fdesc "This flag specifies which reference to use. If "on" : all geometrical values are taken in world reference. If "off" : all geometrical values are taken in object reference. C: Default is "off". Q: When queried, this flag returns an  int . Common flags "
	rcount "0"
name "polyBevel"
	desc "Bevel edges."
	fcount "9"
	fnames "angleTolerance at"
		fdesc "This flag specifies the angle beyond which additional faces may be inserted to avoid possible twisting of faces. If the bevel produces unwanted faces, try increasing the angle tolerance. C: Default is 5 degrees. Q: When queried, this flag returns a  double . "
	fnames "autoFit af"
		fdesc "Computes a smooth roundness, new faces round off a smooth angle. C: Default is on. Q: When queried, this flag returns an  int . "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "offset o"
		fdesc "This flag specifies the offset distance for the bevelling. C: Default is 0.2. Q: When queried, this flag returns a  float . "
	fnames "offsetAsFraction oaf"
		fdesc "This flag specifies whether the offset is a fraction or an absolute value. If a fraction, the offset can range between 0 and 1, where 1 is the maximum possible offset C: Default is false. Q: When queried, this flag returns an  int . "
	fnames "roundness r"
		fdesc "This flag specifies the roundness of bevel. A roundness of 0 means that all new faces are coplanar. This value is only used if the autoFit value is off. C: Default is 0.5. Q: When queried, this flag returns a  float . "
	fnames "segments sg"
		fdesc "This flag specifies the number of segments used for the bevelling. C: Default is 1. Q: When queried, this flag returns an  int . "
	fnames "worldSpace ws"
		fdesc "This flags specifies the used reference. If on : the offset flag is taken in world reference. If off : the offset flag is taken in object reference (the default). C: Default is off. Q: When queried, this flag returns an  int . Common flags "
	rcount "12"
		rname "polyAppend"
		rname "polyAppendVertex"
		rname "polyExtrudeEdge"
		rname "polyExtrudeFacet"
		rname "polySplit"
		rname "polySplitVertex"
		rname "polyCreateFacet"
		rname "polySubdivideEdge"
		rname "polySubdivideFacet"
		rname "polyTriangulate"
		rname "polySmooth"
		rname "polyChipOff"
name "polyBlindData"
	desc "PolyBlindData is undoable , NOT queryable , and editable . Command creates blindData types (basically creates an instance of TdnPolyBlindData). When used with the query flag, it returns the data types that define this blindData type. This command is to be used create a blindData node *and* to edit the same.. The associationType flag *has* to be specified at all times.. This is because if an instance of the specified BD typeId exists in the history chain but if the associationType is not the same, then a new polyBlindData node is created.. For object level blind data, only the object.... Refer to full documentation"
	fcount "13"
	fnames "associationType at"
		fdesc "Specifies the dataTypes that are part of BlindData node being created. Allowable associations are "object" for any object, and "vertex" "edge" and "face" for mesh objects. Other associations for other geometry types may be added. "
	fnames "binaryData bnd"
		fdesc "Specifies the data type is a binary data value "
	fnames "booleanData bd"
		fdesc "Specifies the data type is a boolean logic value "
	fnames "delete del"
		fdesc "Specifies that this will remove the blind data if found "
	fnames "doubleData dbd"
		fdesc "Specifies the data type is a floating point double value "
	fnames "intData ind"
		fdesc "Specifies the data type is an integer value "
	fnames "longDataName ldn"
		fdesc "Specifies the long name of the data that is being modified by this command. "
	fnames "rescan res"
		fdesc "Enables a rescan of blind data nodes for cached information "
	fnames "reset rst"
		fdesc "Specifies that this command will reset the given attribute to default value "
	fnames "shape sh"
		fdesc "For object association only, apply blind data to the shape(s) below this node instead of the node itself "
	fnames "shortDataName sdn"
		fdesc "Specifies the short name of the data that is being modified by this command. "
	fnames "stringData sd"
		fdesc "Specifies the data type is a string value "
	fnames "typeId id"
		fdesc "Specifies the typeId of the BlindData type being created "
	rcount "2"
		rname "blindDataType"
		rname "polyQueryBlindData"
name "polyBoolOp"
	desc "This command creates a new poly as the result of a boolean operation on input polys : union, intersection, difference. Only for difference, the order of the selected objects is important : result = object1 - object2. If no objects are specified in the command line, then the objects from the active list are used."
	fcount "4"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (where applicable). "
	fnames "operation op"
		fdesc "1=union 2=difference 3=intersection Common flags "
	rcount "2"
		rname "polySeparate"
		rname "polyUnite"
name "polyChipOff"
	desc "Extract facets. Faces can be extracted separately or together, and manipulations can be performed either in world or object space."
	fcount "49"
	fnames "attraction att"
		fdesc "This flag specifies the attraction, related to magnet. C: Default is 0.0. The range is [-2.0, 2.0]. Q: When queried, this flag returns a  float . "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int "
	fnames "duplicate dup"
		fdesc "If "on", facets are duplicated, otherwise original facets are removed. C: Default is "on". Q: When queried, this flag returns an  int . "
	fnames "gravity g"
		fdesc "This flag specifies the gravity vector. C: Default is 0.0 -1.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "gravityX gx"
		fdesc "This flag specifies X for the gravity vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "gravityY gy"
		fdesc "This flag specifies Y for the gravity vector. C: Default is -1.0. Q: When queried, this flag returns a  float . "
	fnames "gravityZ gz"
		fdesc "This flag specifies Z for the gravity vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "keepFacetTogether kft"
		fdesc "This flag specifies how to chip off facets. If "on", facets are pulled together (connected ones stay connected), otherwise they are pulled independentely. C: Default is "on". Q: When queried, this flag returns an  int . "
	fnames "localDirection ld"
		fdesc "This flag specifies the local slant axis (see local rotation). C: Default is 0.0 0.0 1.0. Q: When queried, this flag returns a  float[3] . "
	fnames "localDirectionX ldx"
		fdesc "This flag specifies X for the local slant axis. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localDirectionY ldy"
		fdesc "This flag specifies Y for the local slant axis. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localDirectionZ ldz"
		fdesc "This flag specifies Y for the local slant axis. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "localRotate lr"
		fdesc "This flag specifies the local rotations : (slantRot, slantRoll, twistRot). C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . Local rotation (slantRot, slantRoll, twistRot). "
	fnames "localRotateX lrx"
		fdesc "This flag specifies local rotation X angle (Slant Rot around slantAxis). C: Default is 0.0. The range is [0, 360]. Q: When queried, this flag returns a  float . "
	fnames "localRotateY lry"
		fdesc "This flag specifies local rotation Y angle (Slant Roll of slantAxis). C: Default is 0.0. The range is [0, 180]. Q: When queried, this flag returns a  float . "
	fnames "localRotateZ lrz"
		fdesc "This flag specifies local rotation Z angle (Twist around normal). C: Default is 0.0. The range is [0, 360]. Q: When queried, this flag returns a  float . "
	fnames "localScale ls"
		fdesc "This flag specifies the local scaling vector. C: Default is 1.0 1.0 1.0. Q: When queried, this flag returns a  float[3] . "
	fnames "localScaleX lsx"
		fdesc "This flag specifies X for local scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "localScaleY lsy"
		fdesc "This flag specifies Y for local scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "localScaleZ lsz"
		fdesc "This flag specifies Z for local scaling vector : Flattening. C: Default is 1.0. The range is [0.0, 1.0]. Q: When queried, this flag returns a  float . Dynamic Values "
	fnames "localTranslate lt"
		fdesc "This flag specifies the local translation vector. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "localTranslateX ltx"
		fdesc "This flag specifies the X local translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localTranslateY lty"
		fdesc "This flag specifies the Y local translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localTranslateZ ltz"
		fdesc "This flag specifies the Z local translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "magnX mx"
		fdesc "This flag specifies X for the magnet vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "magnY my"
		fdesc "This flag specifies Y for the magnet vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "magnZ mz"
		fdesc "This flag specifies Z for the magnet vector. C: Default is 0.0. Q: When queried, this flag returns a  float . Common Flags "
	fnames "magnet m"
		fdesc "This flag specifies the magnet vector. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "offset off"
		fdesc "This flag specifies the local offset. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "pivot pvt"
		fdesc "This flag specifies the pivot for scaling and rotation. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "pivotX pvx"
		fdesc "This flag specifies the X pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "pivotY pvy"
		fdesc "This flag specifies the Y pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "pivotZ pvz"
		fdesc "This flag specifies the Z pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . Local Values "
	fnames "random ran"
		fdesc "This flag specifies the random value for all parameters. C: Default is 0.0. The range is [-10.0, 10.0]. Q: When queried, this flag returns a  float . Global Values "
	fnames "rotate ro"
		fdesc "This flag specifies the rotation angles around X, Y, Z. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "rotateX rx"
		fdesc "This flag specifies the rotation angle around X. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "rotateY ry"
		fdesc "This flag specifies the rotation angle around Y. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "rotateZ rz"
		fdesc "This flag specifies the rotation angle around Z. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "scale s"
		fdesc "This flag specifies the scaling vector. C: Default is 1.0 1.0 1.0. Q: When queried, this flag returns a  float[3] . "
	fnames "scaleX sx"
		fdesc "This flag specifies X for scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "scaleY sy"
		fdesc "This flag specifies Y for scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "scaleZ sz"
		fdesc "This flag specifies Z for scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "translate t"
		fdesc "This flag specifies the translation vector. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "translateX tx"
		fdesc "This flag specifies the X translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "translateY ty"
		fdesc "This flag specifies the Y translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "translateZ tz"
		fdesc "This flag specifies the Z translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "weight w"
		fdesc "This flag specifies the weight, related to gravity. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "worldSpace ws"
		fdesc "This flag specifies which reference to use. If "on" : all geometrical values are taken in world reference. If "off" : all geometrical values are taken in object reference. C: Default is "off". Q: When queried, this flag returns an  int . "
	rcount "12"
		rname "polyAppend"
		rname "polyAppendVertex"
		rname "polyExtrudeEdge"
		rname "polyExtrudeFacet"
		rname "polyBevel"
		rname "polySplit"
		rname "polySplitVertex"
		rname "polyCreateFacet"
		rname "polySubdivideEdge"
		rname "polySubdivideFacet"
		rname "polyTriangulate"
		rname "polySmooth"
name "polyClipboard"
	desc "PolyClipboard is undoable , NOT queryable , and NOT editable . The command allows the user to copy and paste certain polygonal attributes to a clipboard. These attributes are: 1) Shader (shading engine) assignment. 2) Texture coordinate (UV) assignment. 3) Color value assignment. Any combination of attributes can be chosen for the copy or paste operation. If the attribute has not been copied to the clipboard, then naturally it cannot be pasted from the clipboard. The copy option will copy the attribute assignments from a single source polygonal dag object or polygon component. If the source does not have the.... Refer to full documentation"
	fcount "6"
	fnames "clear cl"
		fdesc "When used, will mean to clear the specified attribute argument(s). "
	fnames "color clr"
		fdesc "When used, will be to copy or paste color attributes "
	fnames "copy cp"
		fdesc "When used, will mean to copy the specified attribute argument(s). "
	fnames "paste ps"
		fdesc "When used, will mean to paste the specified attribute argument(s). "
	fnames "shader sh"
		fdesc "When used, will be to copy or paste shader attributes "
	fnames "uvCoordinates uv"
		fdesc "When used, will be to copy or paste texture coordinate attributes "
	rcount "13"
		rname "polyProjection"
		rname "polyForceUV"
		rname "untangleUV"
		rname "polyEditUV"
		rname "polyPlanarProjection"
		rname "polyCylindricalProjection"
		rname "polySphericalProjection"
		rname "polyMoveFacetUV"
		rname "polyMoveUV"
		rname "polyMapCut"
		rname "polyMapDel"
		rname "polyMapSew"
		rname "polyUVSet"
name "polyCloseBorder"
	desc "Closes open borders of objects. For each border edge given, a face is created to fill the hole the edge lies on."
	fcount "2"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int "
	fnames "name n"
		fdesc "Name the resulting object. "
	rcount "11"
		rname "polyCollapseEdge"
		rname "polyMergeEdge"
		rname "polyCollapseFacet"
		rname "polyMergeFacet"
		rname "polyMergeVertex"
		rname "polyDelEdge"
		rname "polyDelFacet"
		rname "polyDelVertex"
		rname "polySewEdge"
		rname "polyQuad"
		rname "polyReduce"
name "polyCollapseEdge"
	desc "Turns each selected edge into a point."
	fcount "2"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int "
	fnames "name n"
		fdesc "Name the resulting object. "
	rcount "11"
		rname "polyMergeEdge"
		rname "polyCollapseFacet"
		rname "polyMergeFacet"
		rname "polyMergeVertex"
		rname "polyDelEdge"
		rname "polyDelFacet"
		rname "polyDelVertex"
		rname "polySewEdge"
		rname "polyCloseBorder"
		rname "polyQuad"
		rname "polyReduce"
name "polyCollapseFacet"
	desc "Turns each selected facet into a point."
	fcount "2"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int "
	fnames "name n"
		fdesc "Name the resulting object. "
	rcount "11"
		rname "polyCollapseEdge"
		rname "polyMergeEdge"
		rname "polyMergeFacet"
		rname "polyMergeVertex"
		rname "polyDelEdge"
		rname "polyDelFacet"
		rname "polyDelVertex"
		rname "polySewEdge"
		rname "polyCloseBorder"
		rname "polyQuad"
		rname "polyReduce"
name "polyColorBlindData"
	desc "PolyColorBlindData is undoable , queryable , and editable . This command applies false color to the selected polygonal components and objects, depending on whether or not blind data exists for the selected components (or, in the case of poly objects, dynamic attributes), and, depending on the color mode indicated, what the values are. It is possible to color objects based on whether or not the data exists, if the data matches a specific value or range of values, or grayscale color the data according to what the actual value is in relation to the specified min and max. This command.... Refer to full documentation"
	fcount "33"
	fnames "enableFalseColor efc"
		fdesc "Turns false coloring on or off for all poly objects in the scene "
	fnames "queryMode q"
		fdesc "If on, do not color and return selection as string array instead. Any data that would be colored normally (except for 'no color' and out of range colors) is returned "
	fnames "typeId id"
		fdesc "Specifies the typeId of the BlindData type being created "
	fnames "numIdTypes num"
		fdesc "Specifies how many attrs are in this id type "
	fnames "mode m"
		fdesc "Specifies the mode: 0 : binary - only components and objects that have the data will be colored 1 : discrete value - a value is specified. Data that matches this value will be colored 2 : discrete range - values that fall within the given range will be colored 3 : unsigned set mode - if ( givenValue & actualValue ) then data will be colored 4 : unsigned not set mode - if ( !(givenValue & actualValue) ) then data will be colored 5 : unsigned equal mode - if ( givenValue == actualValue ) then data will be colored 6 : grayscale mode - a min value, max value, min color, max color, below min color, and above max color are given. Data is colored according to how it relates to these values. 7 : as color mode - if the blind data consists of 3 doubles, ranged 0-1, the components are colored as the data specifies "
	fnames "dataType dt"
		fdesc "Specifies the type for this id "
	fnames "attrName n"
		fdesc "Specifies the name of the data that is being examined by this command. "
	fnames "value v"
		fdesc "The value of the data "
	fnames "noColorRed ncr"
		fdesc "Specifies red component of color to use for no data assigned "
	fnames "noColorGreen ncg"
		fdesc "Specifies green component of color to use for no data assigned "
	fnames "noColorBlue ncb"
		fdesc "Specifies blue component of color to use for no data assigned "
	fnames "clashColorRed ccr"
		fdesc "Specifies red component color to use for data which clashes "
	fnames "clashColorGreen ccg"
		fdesc "Specifies green component color to use for data which clashes "
	fnames "clashColorBlue ccb"
		fdesc "Specifies blue component color to use for data which clashes "
	fnames "belowMinColorRed bmr"
		fdesc "Specifies red component of color to use for data that is below min "
	fnames "belowMinColorGreen bmg"
		fdesc "Specifies green component of color to use for data that is below min "
	fnames "belowMinColorBlue bmb"
		fdesc "Specifies blue component of color to use for data that is below min "
	fnames "aboveMaxColorRed amr"
		fdesc "Specifies red component of color to use for data that is above max "
	fnames "aboveMaxColorGreen amg"
		fdesc "Specifies green component of color to use for data that is above max "
	fnames "aboveMaxColorBlue amb"
		fdesc "Specifies blue component of color to use for data that is above max "
	fnames "colorRed cr"
		fdesc "Specifies red component of color to use for given data "
	fnames "colorGreen cg"
		fdesc "Specifies green component of color to use for given data "
	fnames "colorBlue cb"
		fdesc "Specifies blue component of color to use for given data "
	fnames "minColorRed mnr"
		fdesc "Specifies red component of color to use for min value for grayscale "
	fnames "minColorGreen mng"
		fdesc "Specifies green component of color to use for min value for grayscale "
	fnames "minColorBlue mnb"
		fdesc "Specifies blue component of color to use for min value for grayscale "
	fnames "maxColorRed mxr"
		fdesc "Specifies red component of color to use for max value for grayscale "
	fnames "maxColorGreen mxg"
		fdesc "Specifies green component of color to use for max value for grayscale "
	fnames "maxColorBlue mxb"
		fdesc "Specifies blue component of color to use for max value for grayscale "
	fnames "useMin umn"
		fdesc "Specifies whether the min should be used for discrete ranges "
	fnames "minValue mnv"
		fdesc "Specifies the min value for grayscale or discrete range data "
	fnames "maxValue mxv"
		fdesc "Specifies the max value for grayscale or discrete range data "
	fnames "useMax umx"
		fdesc "Specifies whether the max should be used for discrete ranges "
	rcount "0"
name "polyColorPerVertex"
	desc "PolyColorPerVertex is undoable , queryable , and editable . Command associates color(rgb and alpha) with vertices on polygonal objects. When used with the query flag, it returns the color associated with the specified components."
	fcount "8"
	fnames "alpha a"
		fdesc "Specifies the alpha channel of color "
	fnames "colorB b"
		fdesc "Specifies the B channel of color "
	fnames "colorG g"
		fdesc "Specifies the G channel of color "
	fnames "colorR r"
		fdesc "Specifies the R channel of color "
	fnames "colorRGB rgb"
		fdesc "Specifies the RGB channels of color "
	fnames "notUndoable nun"
		fdesc "Execute the command, but without having the command be undoable. This option will greatly improve performance for large numbers of object. This will make the command not undoable regardless of whether undo has been enabled or not. "
	fnames "relative rel"
		fdesc "When used, the color values specified are added relative to the current values. "
	fnames "remove rem"
		fdesc "When used, the color values are removed from the selected or specified objects or components. "
	rcount "1"
		rname "polyGeoSampler"
name "polyCone"
	desc "The cone command creates a new polygonal cone. polyCone -sx 10 -sy 15 -sz 5 -r 20 -h 10; Create a cone, with 10 subdivisions in the X direction, 15 subdivisions in the Y direction and 20 subdivisions in the Z direction, the radius of the cone is 20, the height of the cone is 10. polyCone -n myCone -sx 5 -sy 5 -sz 5; Create a cone, called "myCone", on each direction there are 5 subdivisions."
	fcount "10"
	fnames "axis ax"
		fdesc "This flag specifies the primitive axis used to build the cone. Q: When queried, this flag returns a  float[3] . "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "height h"
		fdesc "This flag specifies the height of the cone. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "name n"
		fdesc "Gives a name to the created cone. "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (where applicable). "
	fnames "radius r"
		fdesc "This flag specifies the radius of the cone. C: Default is 0.5. Q: When queried, this flag returns a  float . "
	fnames "subdivisionsX sx"
		fdesc "This specifies the number of subdivisions in the X direction for the cone. C: Default is 20. Q: When queried, this flag returns an  int . "
	fnames "subdivisionsY sy"
		fdesc "This flag specifies the number of subdivisions in the Y direction for the cone. C: Default is 1. Q: When queried, this flag returns an  int . "
	fnames "subdivisionsZ sz"
		fdesc "This flag specifies the number of subdivisions in the Z direction for the cone. C: Default is 0. Q: When queried, this flag returns an  int . "
	fnames "texture tx"
		fdesc "This flag alows a texture to be applied. C: Default is "on" (uv's are computed). Q: When queried, this flag returns an  int . Common flags "
	rcount "6"
		rname "polyPlane"
		rname "polyTorus"
		rname "polyCylinder"
		rname "polySphere"
		rname "polyCube"
		rname "polyCube"
name "polyCopyUV"
	desc "Copy some UVs from a UV set into another."
	fcount "5"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "createNewMap cm"
		fdesc "This flag when set true will create a new map with a the name passed in, if the map does not already exist. "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "uvSetName uvs"
		fdesc "Specifies name of the output uv set to modify. Default is the  current UV set. "
	fnames "uvSetNameInput uvi"
		fdesc "Specifies name of the input uv set to read the UV description from. Default is the current UV set. "
	rcount "5"
		rname "polyProjection"
		rname "polyPlanarProjection"
		rname "polyCylindricalProjection"
		rname "polySphericalProjection"
		rname "polyUVSet"
name "polyCreateFacet"
	desc "Create a new polygonal object with the specified face, which will be closed. List of arguments must have at least 3 points."
	fcount "6"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "hole hl"
		fdesc "Add a hole. The following points will define a hole. Holes can be defined either clockwise or counterclockwise. Common flags "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "point p"
		fdesc "Adds a new point to the face. Coordinates of points are given in world reference. "
	fnames "subdivision s"
		fdesc "This flag specifies the level of subdivision. Subdivides edges into the given number of edges. C: Default is 1 (no subdivision). Q: When queried, this flag returns an  int . "
	fnames "texture tx"
		fdesc "Specifies how the face is mapped.  0 - None; 1 - Normalize; 2 - Unitize C: Default is 0 (no mapping). Q: When queried, this flag returns an  int "
	rcount "12"
		rname "polyAppend"
		rname "polyAppendVertex"
		rname "polyExtrudeEdge"
		rname "polyExtrudeFacet"
		rname "polyBevel"
		rname "polySplit"
		rname "polySplitVertex"
		rname "polySubdivideEdge"
		rname "polySubdivideFacet"
		rname "polyTriangulate"
		rname "polySmooth"
		rname "polyChipOff"
name "polyCreateFacetCtx"
	desc "Create a new context to create polygonal objects."
	fcount "18"
	fnames "activeNodes anq"
		fdesc "Query only: return the active nodes in the tool "
	fnames "append ap"
		fdesc "Allows to switch to polyAppendFacetCtx tool "
	fnames "autoCreate ac"
		fdesc "Auto create the result or wait for the Enter key to create the result "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "immediate im"
		fdesc "Edit only: acts on the object not the tool defaults "
	fnames "maximumNumberOfPoints mp"
		fdesc "Allows the ability to set a upper bound on the number of points in interactively place before polygon is  created. A value less than 2 will mean that there is no upper bound. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "planarConstraint pc"
		fdesc "allows/avoid new facet to be non-planar. If  on , all new points will be projected onto current facet plane. "
	fnames "previous pv"
		fdesc "Edit only: reset to previously stored values "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "reset rs"
		fdesc "Edit only: reset to default values "
	fnames "subdivision s"
		fdesc "number of sub-edges created for each new edge. Default is 1. "
	fnames "toolNode tnq"
		fdesc "Query only: the node used for tool defaults "
	rcount "0"
name "polyCube"
	desc "The cube command creates a new polygonal cube."
	fcount "11"
	fnames "axis ax"
		fdesc "This flag specifies the primitive axis used to build the cube. Q: When queried, this flag returns a  float[3] . "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "depth d"
		fdesc "This flag specifies the depth of the cube. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "height h"
		fdesc "This flag specifies the height of the cube. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "name n"
		fdesc "Gives a name to the created cube. "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (where applicable). "
	fnames "subdivisionsX sx"
		fdesc "This specifies the number of subdivisions in the X direction for the cube. C: Default is 1. Q: When queried, this flag returns an  int . "
	fnames "subdivisionsY sy"
		fdesc "This flag specifies the number of subdivisions in the Y direction for the cube. C: Default is 1. Q: When queried, this flag returns an  int . "
	fnames "subdivisionsZ sz"
		fdesc "This flag specifies the number of subdivisions in the Z direction for the cube. C: Default is 1. Q: When queried, this flag returns an  int . "
	fnames "texture tx"
		fdesc "This flag alows a specific texture mechanism to be selected, while creating the cube. The valid values are 0, 1 or 2. 0 implies that no texture to be applied.  (No UVs will be generated) 1 implies UVs should be created for the object as a whole.  The cube will be unwrapped and then the texture will be applied after  normalizing the UVs, without distorting the texture.  In the unwrapped cube, the shared edges will have shared UVs. 2 implies UVs are created separately for each of the faces of the cube.    For better understanding of these options, you may have to open the      texture view window C: Default is 1 Common flags "
	fnames "width w"
		fdesc "This flag specifies the width of the cube. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	rcount "5"
		rname "polyPlane"
		rname "polyTorus"
		rname "polyCylinder"
		rname "polySphere"
		rname "polyCone"
name "polyCut"
	desc "This command splits a mesh, or a set of poly faces, along a plane. The position and orientation of the plane can be adjusted using the appropriate flags listed above. In addition, the cut operation can also delete the faces lying on one side of the cutting plane, or extract those faces by an offset amount."
	fcount "21"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). "
	fnames "cutPlaneCenter pc"
		fdesc "This flag specifies the position of the cutting plane. "
	fnames "cutPlaneCenterX pcx"
		fdesc "This flag specifies the X position of the cutting plane. "
	fnames "cutPlaneCenterY pcy"
		fdesc "This flag specifies the Y position of the cutting plane. "
	fnames "cutPlaneCenterZ pcz"
		fdesc "This flag specifies the Z position of the cutting plane. "
	fnames "cutPlaneHeight ph"
		fdesc "This flag specifies the height of the cutting plane. This is used only for displaying the manipulator, and  has no effect on the cut operation.  "
	fnames "cutPlaneRotate ro"
		fdesc "This flag specifies the orientation of the cutting plane. "
	fnames "cutPlaneRotateX rx"
		fdesc "This flag specifies the X rotation of the cutting plane. "
	fnames "cutPlaneRotateY ry"
		fdesc "This flag specifies the Y rotation of the cutting plane. "
	fnames "cutPlaneRotateZ rz"
		fdesc "This flag specifies the Z rotation of the cutting plane. "
	fnames "cutPlaneSize ps"
		fdesc "This flag specifies the size of the cutting plane. This is used only for displaying the manipulator, and  has no effect on the cut operation.   "
	fnames "cutPlaneWidth pw"
		fdesc "This flag specifies the width of the cutting plane. This is used only for displaying the manipulator, and  has no effect on the cut operation.  "
	fnames "cuttingDirection cd"
		fdesc "This flag specifies the direction of the cutting plane. Valid values are "x", "y", "z" A value of "x" will cut the object along the YZ plane cutting through the center of the bounding box. A value of "y" will cut the object along the ZX plane cutting through the center of the bounding box. A value of "z" will cut the object along the XY plane cutting through the center of the bounding box. "
	fnames "deleteFaces df"
		fdesc "This flag specifies if the cut faces should be deleted or not.   "
	fnames "extractFaces ef"
		fdesc "This flag specifies if the cut faces should be extracted or not.   "
	fnames "extractOffset eo"
		fdesc "This flag specifies the offset by which the  cut faces will be extracted.  This flag has no effect when the "extractFaces" is turned off. "
	fnames "extractOffsetX eox"
		fdesc "This flag specifies the offset in X by which the  cut faces will be extracted.  This flag has no effect when the "extractFaces" is turned off. "
	fnames "extractOffsetY eoy"
		fdesc "This flag specifies the offset in Y by which the  cut faces will be extracted.  This flag has no effect when the "extractFaces" is turned off. "
	fnames "extractOffsetZ eoz"
		fdesc "This flag specifies the offset in Z by which the  cut faces will be extracted.  This flag has no effect when the "extractFaces" is turned off. "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "worldSpace ws"
		fdesc "This flag is ignored.  polyCut command always works on  worldSpace. "
	rcount "2"
		rname "polySplit"
		rname "polySubdivideEdge"
name "polyCutCtx"
	desc "Create a new context to cut facets on polygonal objects."
	fcount "0"
	rcount "0"
name "polyCylinder"
	desc "The cylinder command creates a new polygonal cylinder. polyCylinder -sx 10 -sy 15 -sz 5 -h 20; Create a rectangle, with 10 subdivisions in the X direction, 15 subdivisions in the Y direction and 20 subdivisions in the Z direction, the height of the cylinder is 20. polyCylinder -n myCylinder -sx 5 -sy 5 -sz 5; Create a cylinder, called "myCylinder", on each direction there are 5 subdivisions."
	fcount "10"
	fnames "axis ax"
		fdesc "This flag specifies the primitive axis used to build the cylinder. Q: When queried, this flag returns a  float[3] . "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "height h"
		fdesc "This flag specifies the height of the cylinder. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "name n"
		fdesc "Gives a name to the created cylinder. "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (where applicable). "
	fnames "radius r"
		fdesc "This flag specifies the radius of the cylinder. C: Default is 0.5. Q: When queried, this flag returns a  float . "
	fnames "subdivisionsX sx"
		fdesc "This specifies the number of subdivisions in the X direction for the cylinder. C: Default is 20. Q: When queried, this flag returns an  int . "
	fnames "subdivisionsY sy"
		fdesc "This flag specifies the number of subdivisions in the Y direction for the cylinder. C: Default is 1. Q: When queried, this flag returns an  int . "
	fnames "subdivisionsZ sz"
		fdesc "This flag specifies the number of subdivisions in the Z direction for the cylinder. C: Default is 1. Q: When queried, this flag returns an  int . "
	fnames "texture tx"
		fdesc "This flag alows a specific texture mechanism to be selected, while creating the cylinder. The valid values are 0, 1 or 2. 0 implies that no texture to be applied.  (No UVs will be generated) 1 implies UVs should be created for the object as a whole.  The corner UVs on the top/bottom face and the side face of the cylinder will be shared  by the respective faces. 2 implies UVs are created separately for the top, bottom and the side face of the  cylinder.  Also, the side face will have cylindrical mapping, and the top and  bottom faces will have planar mapping.    For better understanding of these options, you may have to open the  	 texture view window C: Default is 2  Common flags "
	rcount "6"
		rname "polyPlane"
		rname "polyTorus"
		rname "polySphere"
		rname "polyCube"
		rname "polyCone"
		rname "polyCube"
name "polyCylindricalProjection"
	desc "Projects a cylindrical map onto an object."
	fcount "25"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "createNewMap cm"
		fdesc "This flag when set true will create a new map with a the name passed in, if the map does not already exist. Common flags "
	fnames "imageCenter ic"
		fdesc "This flag specifies the center point of the 2D model layout. C: Default is 0.5 0.5. Q: When queried, this flag returns a  float[2] . "
	fnames "imageCenterX icx"
		fdesc "This flag specifies X of the center point of the 2D model layout. C: Default is 0.5. Q: When queried, this flag returns a  float . "
	fnames "imageCenterY icy"
		fdesc "This flag specifies Y of the center point of the 2D model layout. C: Default is 0.5. Q: When queried, this flag returns a  float . "
	fnames "imageScale is"
		fdesc "This flag specifies the UV scale : Enlarges or reduces the 2D version of the model in U or V space relative to the 2D centerpoint. C: Default is 1.0 1.0. Q: When queried, this flag returns a  float[3] . "
	fnames "imageScaleU isu"
		fdesc "This flag specifies the U scale : Enlarges or reduces the 2D version of the model in U space relative to the 2D centerpoint. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "imageScaleV isv"
		fdesc "This flag specifies the U scale : Enlarges or reduces the 2D version of the model in V space relative to the 2D centerpoint. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "insertBeforeDeformers ibd"
		fdesc "This flag specifies if the projection node should be inserted before or after deformer nodes already applied to the shape. Inserting the projection after the deformer leads to texture swimming during animation and is most often undesirable. C: Default is on. "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "projectionCenter pc"
		fdesc "This flag specifies the point of origin from which the map is projected. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "projectionCenterX pcx"
		fdesc "This flag specifies the X of the origin's point from which the map is projected. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "projectionCenterY pcy"
		fdesc "This flag specifies the Y of the origin's point from which the map is projected. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "projectionCenterZ pcz"
		fdesc "This flag specifies the Z of the origin's point from which the map is projected. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "projectionScale ps"
		fdesc "This flag specifies the width and the height of the map relative to the 3D projection axis. C: Default is 180.0 1.0. Q: When queried, this flag returns a  float[2] . "
	fnames "projectionScaleU psu"
		fdesc "This flag specifies the width of the map relative to the 3D projection axis : the scale aperture. C: Default is 180.0. The range is [0, 360]. Q: When queried, this flag returns a  float . "
	fnames "projectionScaleV psv"
		fdesc "This flag specifies the height of the map relative to the 3D projection axis : the scale height. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "rotate ro"
		fdesc "This flag specifies mapping's rotate angles. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "rotateX rx"
		fdesc "This flag specifies X for mapping's rotate angles. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "rotateY ry"
		fdesc "This flag specifies Y for mapping's rotate angles. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "rotateZ rz"
		fdesc "This flag specifies Z for mapping's rotate angles. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "rotationAngle ra"
		fdesc "This flag specifies the angle for the rotation. When the angle is positive, then the map rotates counterclockwise on the mapped model, whereas when it is negative then the map rotates lockwise on the mapped model. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "seamCorrect sc"
		fdesc "This flag specifies to perform a seam correction on the mapped faces. "
	fnames "smartFit sf"
		fdesc "This flag specifies if the manipulator should be placed best fitting the object, or be placed on the specified position with the specified transformation values. 	Default is on. "
	fnames "worldSpace ws"
		fdesc "This flag specifies which reference to use. If on : all geometrical values are taken in world reference. If off : all geometrical values are taken in object reference. C: Default is off. Q: When queried, this flag returns an  int . "
	rcount "13"
		rname "polyProjection"
		rname "polyForceUV"
		rname "untangleUV"
		rname "polyEditUV"
		rname "polyPlanarProjection"
		rname "polyClipboard"
		rname "polySphericalProjection"
		rname "polyMoveFacetUV"
		rname "polyMoveUV"
		rname "polyMapCut"
		rname "polyMapDel"
		rname "polyMapSew"
		rname "polyUVSet"
name "polyDelEdge"
	desc "Deletes selected edges, and merges neighboring faces. If deletion leaves winged vertices, they may be deleted as well. Notice : only non border edges can be deleted."
	fcount "3"
	fnames "cleanVertices cv"
		fdesc "If on : delete resulting winged vertices. C: Default is "off". Q: When queried, this flag returns an  int . Common flags "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Name the resulting object. "
	rcount "11"
		rname "polyCollapseEdge"
		rname "polyMergeEdge"
		rname "polyCollapseFacet"
		rname "polyMergeFacet"
		rname "polyMergeVertex"
		rname "polyDelFacet"
		rname "polyDelVertex"
		rname "polySewEdge"
		rname "polyCloseBorder"
		rname "polyQuad"
		rname "polyReduce"
name "polyDelFacet"
	desc "Deletes faces. If the result is split into disconnected pieces, the pieces (so-called shells) are still considered to be one object. Notice : The last face cannot be deleted."
	fcount "2"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Name the resulting object. "
	rcount "11"
		rname "polyCollapseEdge"
		rname "polyMergeEdge"
		rname "polyCollapseFacet"
		rname "polyMergeFacet"
		rname "polyMergeVertex"
		rname "polyDelEdge"
		rname "polyDelVertex"
		rname "polySewEdge"
		rname "polyCloseBorder"
		rname "polyQuad"
		rname "polyReduce"
name "polyDelVertex"
	desc "Deletes vertices. Joins two edges which have a common vertex. The vertices must be connected to exactly two edges (so-called "winged")."
	fcount "2"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Name the resulting object. "
	rcount "11"
		rname "polyCollapseEdge"
		rname "polyMergeEdge"
		rname "polyCollapseFacet"
		rname "polyMergeFacet"
		rname "polyMergeVertex"
		rname "polyDelEdge"
		rname "polyDelFacet"
		rname "polySewEdge"
		rname "polyCloseBorder"
		rname "polyQuad"
		rname "polyReduce"
name "polyDuplicateAndConnect"
	desc "This command duplicates the input polygonal object, connects up the outMesh attribute of the original polygonal shape to the inMesh attribute of the newly created duplicate shape and copies over the shader assignments from the original shape to the new duplicated shape. The command will fail if no objects are selected or sent as argument or if the object sent as argument is not a polygonal object."
	fcount "2"
	fnames "removeOriginalFromShaders ros"
		fdesc "Used to specify if the original object should be removed from the shaders (shadingGroups) that it is a member of. The shader associations will get transferred to the duplicated object, before they are removed from the original. If this flag is specified then the original polygonal object will be drawn in wireframe  mode even if all objects are being drawn in shaded mode.  "
	fnames "renameChildren rc"
		fdesc "rename the children nodes of the hierarchy, to make them unique. "
	rcount "0"
name "polyEditUV"
	desc "PolyEditUV is undoable , queryable , and NOT editable . Command edits uvs on polygonal objects. When used with the query flag, it returns the uv values associated with the specified components."
	fcount "11"
	fnames "angle a"
		fdesc "Specifies the angle value (in degrees) that the uv values are to be rotated by. "
	fnames "pivotU pu"
		fdesc "Specifies the pivot value, in the u direction, about which the scale or rotate is to be performed. "
	fnames "pivotV pv"
		fdesc "Specifies the pivot value, in the v direction, about which the scale or rotate is to be performed. "
	fnames "relative r"
		fdesc "Specifies whether this command is editing the values relative to the currently existing values. Default is true; "
	fnames "rotation rot"
		fdesc "Specifies whether this command is editing the values with rotation values "
	fnames "scale s"
		fdesc "Specifies whether this command is editing the values with scale values "
	fnames "scaleU su"
		fdesc "Specifies the scale value in the u direction. "
	fnames "scaleV sv"
		fdesc "Specifies the scale value in the v direction. "
	fnames "uValue u"
		fdesc "Specifies the value, in the u direction - absolute if relative flag is false.. "
	fnames "uvSetName uvs"
		fdesc "Specifies the name of the uv set to edit uvs on. If not specified will use the current uv set if it exists. "
	fnames "vValue v"
		fdesc "Specifies the value, in the v direction - absolute if relative flag is false.. "
	rcount "13"
		rname "polyProjection"
		rname "polyForceUV"
		rname "untangleUV"
		rname "polyPlanarProjection"
		rname "polyCylindricalProjection"
		rname "polyClipboard"
		rname "polySphericalProjection"
		rname "polyMoveFacetUV"
		rname "polyMoveUV"
		rname "polyMapCut"
		rname "polyMapDel"
		rname "polyMapSew"
		rname "polyUVSet"
name "polyEvaluate"
	desc "Returns the required counts on the specified objects. If no objects are specified in the command line, then the objects from the active list are used. The values are returned in the same order as the flags are set. For user convenience, if no flag is set, then all values are echoed. All flags (except -fmt/format) are in fact query-flags. For user convenience, the -q flag may be ommitted. Some comments for non-formatted output : 3d bounding boxes are returned as 3 couples of floats, 2d ones as 2 couples of floats. if a bounding box is queried and cannot.... Refer to full documentation"
	fcount "21"
	fnames "accurateEvaluation ae"
		fdesc "used to get accurate results for the bounding box computation For objects with large vertex counts, accurate evaluation takes more time "
	fnames "area a"
		fdesc "returns the surface area of the object's faces in local space as a float "
	fnames "boundingBox b"
		fdesc "returns the object's bounding box in 3d space as 6 floats : xmin xmax ymin ymax zmin zmax "
	fnames "boundingBox2d b2"
		fdesc "returns the object's uv bounding box (for the current map if one is not specified) in 2d space as 4 floats : xmin xmax ymin ymax "
	fnames "boundingBoxComponent bc"
		fdesc "returns the bounding box of selected components in 3d space as 6 floats : xmin xmax ymin ymax zmin zmax "
	fnames "boundingBoxComponent2d bc2"
		fdesc "returns the bounding box of selected uv coordinates in 2d space as 4 floats : xmin xmax ymin ymax "
	fnames "displayStats ds"
		fdesc "toggles the display of poly statistics for the active View. All other flags are ignored if this flag is specified (Obsolete - refer to the headsUpDisplay command) "
	fnames "edge e"
		fdesc "returns the number of edges as an int "
	fnames "edgeComponent ec"
		fdesc "returns the object's number of selected edges as an int "
	fnames "face f"
		fdesc "returns the number of faces as an int "
	fnames "faceComponent fc"
		fdesc "returns the object's number of selected faces as an int "
	fnames "format fmt"
		fdesc "used to display the results as an explicit sentence "
	fnames "shell s"
		fdesc "returns the number of shells shells (disconnected pieces) as an int "
	fnames "triangle t"
		fdesc "returns the number of triangles as an int "
	fnames "triangleComponent tc"
		fdesc "returns the number of triangles of selected components as an int "
	fnames "uvComponent uvc"
		fdesc "returns the object's number of selected uv coordinates as an int "
	fnames "uvSetName uvs"
		fdesc "used when querying texture vertices to specify the uv set.  If a uv set is not specified then the current map for the object will be used "
	fnames "uvcoord uv"
		fdesc "returns the number of uv coordinates (for the current map if one is not specified) as an int "
	fnames "vertex v"
		fdesc "returns the number of vertices as an int "
	fnames "vertexComponent vc"
		fdesc "returns the object's number of selected vertices as an int "
	fnames "worldArea wa"
		fdesc "returns the surface area of the object's faces in world space as a float "
	rcount "1"
		rname "polyInfo"
name "polyExtrudeEdge"
	desc "Extrude edges separately or together."
	fcount "39"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "divisions d"
		fdesc "This flag specifies the number of subdivisions. C: Default is 1 Q: When queried, this flag returns an  int . Global Values "
	fnames "inputCurve inc"
		fdesc "This flag specifies the curve to be used as input for extrusion C: The selected edges will be extruded along the curve. It will be useful to set a higher value (greater than 4) for the  '-d/-divisions' flag, to get good results.  The normal of the surface has to be aligned with the direction of the curve.  The extrusion is evenly distributed in the curve's parameter space, and not on  the curve's geometry space "
	fnames "keepFacesTogether kft"
		fdesc "This flag specifies how to extrude edgess. If "on", edges are pulled together (connected ones stay connected), otherwise they are pulled independentely. C: Default is "on". Q: When queried, this flag returns an  int . "
	fnames "localDirection ld"
		fdesc "This flag specifies the local slant axis (see local rotation). C: Default is 0.0 0.0 1.0. Q: When queried, this flag returns a  float[3] . "
	fnames "localDirectionX ldx"
		fdesc "This flag specifies X for the local slant axis. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localDirectionY ldy"
		fdesc "This flag specifies Y for the local slant axis. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localDirectionZ ldz"
		fdesc "This flag specifies Z for the local slant axis. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "localRotate lr"
		fdesc "This flag specifies the local rotations : (slantRot, slantRoll, twistRot). C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . Local rotation (slantRot, slantRoll, twistRot). "
	fnames "localRotateX lrx"
		fdesc "This flag specifies local rotation X angle (Slant Rot around slantAxis). C: Default is 0.0. The range is [0, 360]. Q: When queried, this flag returns a  float . "
	fnames "localRotateY lry"
		fdesc "This flag specifies local rotation Y angle (Slant Roll of slantAxis). C: Default is 0.0. The range is [0, 180]. Q: When queried, this flag returns a  float . "
	fnames "localRotateZ lrz"
		fdesc "This flag specifies local rotation Z angle (Twist around normal). C: Default is 0.0. The range is [0, 360]. Q: When queried, this flag returns a  float . "
	fnames "localScale ls"
		fdesc "This flag specifies the local scaling vector. C: Default is 1.0 1.0 1.0. Q: When queried, this flag returns a  float[3] . "
	fnames "localScaleX lsx"
		fdesc "This flag specifies X for local scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "localScaleY lsy"
		fdesc "This flag specifies Y for local scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "localScaleZ lsz"
		fdesc "This flag specifies Z for local scaling vector : Flattening. C: Default is 1.0. The range is [0.0, 1.0]. Q: When queried, this flag returns a  float . Common flags "
	fnames "localTranslate lt"
		fdesc "This flag specifies the local translation vector. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "localTranslateX ltx"
		fdesc "This flag specifies the X local translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localTranslateY lty"
		fdesc "This flag specifies the Y local translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localTranslateZ ltz"
		fdesc "This flag specifies the Z local translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "pivot pvt"
		fdesc "This flag specifies the pivot for scaling and rotation. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "pivotX pvx"
		fdesc "This flag specifies the X pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "pivotY pvy"
		fdesc "This flag specifies the Y pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "pivotZ pvz"
		fdesc "This flag specifies the Z pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . Local Values "
	fnames "random ran"
		fdesc "This flag specifies the random value for all parameters. C: Default is 0.0. The range is [-10.0, 10.0]. Q: When queried, this flag returns a  float . "
	fnames "rotate ro"
		fdesc "This flag specifies the rotation angles around X, Y, Z. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "rotateX rx"
		fdesc "This flag specifies the rotation angle around X. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "rotateY ry"
		fdesc "This flag specifies the rotation angle around Y. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "rotateZ rz"
		fdesc "This flag specifies the rotation angle around Z. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "scale s"
		fdesc "This flag specifies the scaling vector. C: Default is 1.0 1.0 1.0. Q: When queried, this flag returns a  float[3] . "
	fnames "scaleX sx"
		fdesc "This flag specifies X for scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "scaleY sy"
		fdesc "This flag specifies Y for scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "scaleZ sz"
		fdesc "This flag specifies Z for scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "translate t"
		fdesc "This flag specifies the translation vector. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "translateX tx"
		fdesc "This flag specifies the X translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "translateY ty"
		fdesc "This flag specifies the Y translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "translateZ tz"
		fdesc "This flag specifies the Z translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "worldSpace ws"
		fdesc "This flag specifies which reference to use. If "on" : all geometrical values are taken in world reference. If "off" : all geometrical values are taken in object reference. C: Default is off. Q: When queried, this flag returns an  int . "
	rcount "12"
		rname "polyAppend"
		rname "polyAppendVertex"
		rname "polyExtrudeFacet"
		rname "polyBevel"
		rname "polySplit"
		rname "polySplitVertex"
		rname "polyCreateFacet"
		rname "polySubdivideEdge"
		rname "polySubdivideFacet"
		rname "polyTriangulate"
		rname "polySmooth"
		rname "polyChipOff"
name "polyExtrudeFacet"
	desc "Extrude faces. Faces can be extruded separately or together, and manipulations can be performed either in world or object space."
	fcount "49"
	fnames "attraction att"
		fdesc "This flag specifies the attraction, related to magnet. C: Default is 0.0. The range is [-2.0, 2.0]. Q: When queried, this flag returns a  float . "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "divisions d"
		fdesc "This flag specifies the number of subdivisions. C: Default is 1 Q: When queried, this flag returns an  int . Global Values "
	fnames "gravity g"
		fdesc "This flag specifies the gravity vector. C: Default is 0.0 -1.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "gravityX gx"
		fdesc "This flag specifies X for the gravity vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "gravityY gy"
		fdesc "This flag specifies Y for the gravity vector. C: Default is -1.0. Q: When queried, this flag returns a  float . "
	fnames "gravityZ gz"
		fdesc "This flag specifies Z for the gravity vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "inputCurve inc"
		fdesc "This flag specifies the curve to be used as input for extrusion C: The selected faces will be extruded along the curve. It will be useful to set a higher value (greater than 4) for the  '-d/-divisions' flag, to get good results.  The normal of the surface has to be aligned with the direction of the curve.  The extrusion is evenly distributed in the curve's parameter space, and not on  the curve's geometry space "
	fnames "keepFacetTogether kft"
		fdesc "This flag specifies how to extrude faces. If "on", faces are pulled together (connected ones stay connected and only outside edges form new faces), otherwise they are pulled independently (each edge on selected faces  creates a new face and manipulations are performed on each selected  face separately). C: Default is "on". Q: When queried, this flag returns an  int . "
	fnames "localDirection ld"
		fdesc "This flag specifies the local slant axis (see local rotation). C: Default is 0.0 0.0 1.0. Q: When queried, this flag returns a  float[3] . "
	fnames "localDirectionX ldx"
		fdesc "This flag specifies X for the local slant axis. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localDirectionY ldy"
		fdesc "This flag specifies Y for the local slant axis. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localDirectionZ ldz"
		fdesc "This flag specifies Z for the local slant axis. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "localRotate lr"
		fdesc "This flag specifies the local rotations : (slantRot, slantRoll, twistRot). C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . Local rotation (slantRot, slantRoll, twistRot). "
	fnames "localRotateX lrx"
		fdesc "This flag specifies local rotation X angle (Slant Rot around slantAxis). C: Default is 0.0. The range is [0, 360]. Q: When queried, this flag returns a  float . "
	fnames "localRotateY lry"
		fdesc "This flag specifies local rotation Y angle (Slant Roll of slantAxis). C: Default is 0.0. The range is [0, 180]. Q: When queried, this flag returns a  float . "
	fnames "localRotateZ lrz"
		fdesc "This flag specifies local rotation Z angle (Twist around normal). C: Default is 0.0. The range is [0, 360]. Q: When queried, this flag returns a  float . "
	fnames "localScale ls"
		fdesc "This flag specifies the local scaling vector. C: Default is 1.0 1.0 1.0. Q: When queried, this flag returns a  float[3] . "
	fnames "localScaleX lsx"
		fdesc "This flag specifies X for local scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "localScaleY lsy"
		fdesc "This flag specifies Y for local scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "localScaleZ lsz"
		fdesc "This flag specifies Z for local scaling vector : Flattening. C: Default is 1.0. The range is [0.0, 1.0]. Q: When queried, this flag returns a  float . Dynamic Values "
	fnames "localTranslate lt"
		fdesc "This flag specifies the local translation vector. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "localTranslateX ltx"
		fdesc "This flag specifies the X local translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localTranslateY lty"
		fdesc "This flag specifies the Y local translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localTranslateZ ltz"
		fdesc "This flag specifies the Z local translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "magnX mx"
		fdesc "This flag specifies X for the magnet vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "magnY my"
		fdesc "This flag specifies Y for the magnet vector. C: Default is 0.0. Q: When queried, this flag returns a  float . Common Flags "
	fnames "magnet m"
		fdesc "This flag specifies the magnet vector. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "offset off"
		fdesc "This flag specifies the local offset. Each edge of  each selected face moves towards the inside of the face by  given distance (in local reference). C: Default is 0.0. "
	fnames "pivot pvt"
		fdesc "This flag specifies the pivot for scaling and rotation. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "pivotX pvx"
		fdesc "This flag specifies the X pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "pivotY pvy"
		fdesc "This flag specifies the Y pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "pivotZ pvz"
		fdesc "This flag specifies the Z pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . Local Values "
	fnames "random ran"
		fdesc "This flag specifies the random value for all parameters. C: Default is 0.0. The range is [-10.0, 10.0]. Q: When queried, this flag returns a  float . "
	fnames "rotate ro"
		fdesc "This flag specifies the rotation angles around X, Y, Z. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "rotateX rx"
		fdesc "This flag specifies the rotation angle around X. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "rotateY ry"
		fdesc "This flag specifies the rotation angle around Y. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "rotateZ rz"
		fdesc "This flag specifies the rotation angle around Z. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "scale s"
		fdesc "This flag specifies the scaling vector. C: Default is 1.0 1.0 1.0. Q: When queried, this flag returns a  float[3] . "
	fnames "scaleX sx"
		fdesc "This flag specifies X for scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "scaleY sy"
		fdesc "This flag specifies Y for scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "scaleZ sz"
		fdesc "This flag specifies Z for scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "translate t"
		fdesc "This flag specifies the translation vector. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "translateX tx"
		fdesc "This flag specifies the X translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "translateY ty"
		fdesc "This flag specifies the Y translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "translateZ tz"
		fdesc "This flag specifies the Z translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "weight w"
		fdesc "This flag specifies the weight, related to gravity. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "worldSpace ws"
		fdesc "This flag specifies which reference to use. If "on" : all geometrical values are taken in world reference. If "off" : all geometrical values are taken in object reference. C: Default is off. Q: When queried, this flag returns an  int . "
	rcount "12"
		rname "polyAppend"
		rname "polyAppendVertex"
		rname "polyExtrudeEdge"
		rname "polyBevel"
		rname "polySplit"
		rname "polySplitVertex"
		rname "polyCreateFacet"
		rname "polySubdivideEdge"
		rname "polySubdivideFacet"
		rname "polyTriangulate"
		rname "polySmooth"
		rname "polyChipOff"
name "polyFlipEdge"
	desc "PolyFlipEdge is undoable , queryable , and editable . Command to flip the edges shared by 2 adjacent triangles. When used with the edit flag, new edges can be added to the same node, instead of creating a separate node in the chain."
	fcount "0"
	rcount "0"
name "polyFlipUV"
	desc "Flip (mirror) the UVs (in texture space) of input polyFaces, about either the U or V axis.."
	fcount "7"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  integer . "
	fnames "createNewMap cm"
		fdesc "Create a new UV set, as opposed to editing the current one, or the one given by the uvSetName flag. "
	fnames "flipType ft"
		fdesc "Flip along U or V direction. "
	fnames "insertBeforeDeformers ibd"
		fdesc "This flag specifies if the polyFlipUV node should be inserted before or after deformer nodes already applied to the shape. Inserting the node after the deformer leads to texture swimming during animation and is most often undesirable. C: Default is on. "
	fnames "local l"
		fdesc "Flips in the local space of the input faces. C: Default is on. Q: When queried returns an  int . Common flags "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "uvSetName uvs"
		fdesc "Specifies the name of the UV set to edit uvs on. If not  specified will use the current UV set if it exists. When createNewMap is on, the name is used to generate a new unique UV set name. "
	rcount "0"
name "polyForceUV"
	desc "PolyForceUV is undoable , NOT queryable , and NOT editable . A set of functionalities can be called through this command. The input for this command is a set of faces. Based on the arguments passed, the UVs for these selected faces can be created. Project UVs based on the camera: (UV creation) Based on the current view direction/orientation, the UVs are generated and assigned to the faces. Any previously assigned UV information will be lost. Best Plane Projection: (UV creation) The UVs are computed based on the plane defined by the user, and is applied to the selected faces.... Refer to full documentation"
	fcount "12"
	fnames "cameraProjection cp"
		fdesc "Project the UVs based on the camera position/orientation "
	fnames "createNewMap cm"
		fdesc "Create new map if does not exists "
	fnames "flipHorizontal fh"
		fdesc "OBSOLETE flag.  Use polyFlipUV instead. "
	fnames "flipVertical fv"
		fdesc "OBSOLETE flag.  Use polyFlipUV instead. "
	fnames "global g"
		fdesc "OBSOLETE flag. "
	fnames "local l"
		fdesc "OBSOLETE flag. "
	fnames "normalize nor"
		fdesc "OBSOLETE flag.  Use polyNormalizeUV instead. "
	fnames "numItems ni"
		fdesc "This flag is only used for the  best plane texturing of polygonal faces.  This flag should be followed by a selection list. If not specified, the selected objects will be used (in the order they were selected).  This flag specifies the number of items (leading) in the selection list that should be used for the mapping. The trailing items will be used for computing the plane (See example below).  The  best plane texturing is better suited for using interactively from within its context. You can type "setToolTo polyBestPlaneTexturingContext" in the command window OR (EditPolygons->Texture->BestPlaneTexturing from the Menu) to enter its context. "
	fnames "preserveAspectRatio par"
		fdesc "OBSOLETE flag. "
	fnames "unitize uni"
		fdesc "To unitize the UVs of the selected faces "
	fnames "unshare u"
		fdesc "To unshare tye specified UV "
	fnames "uvSetName uvs"
		fdesc "Specifies name of the uv set to work on "
	rcount "13"
		rname "polyProjection"
		rname "untangleUV"
		rname "polyEditUV"
		rname "polyPlanarProjection"
		rname "polyCylindricalProjection"
		rname "polyClipboard"
		rname "polySphericalProjection"
		rname "polyMoveFacetUV"
		rname "polyMoveUV"
		rname "polyMapCut"
		rname "polyMapDel"
		rname "polyMapSew"
		rname "polyUVSet"
name "polyGeoSampler"
	desc "PolyGeoSampler is undoable , NOT queryable , and editable . This command performs a render sampling of surface color and transparency for each selected vertex or face and stores the sampled data as either the color value, or uses the sampled data to displace the affected vertices or faces by a sampled data value. Transparency is not used for displacement, and displacement is performed along vertex normals. The sampled data value used can be pre-scaled by a user defined amount. Additionally, the normals chosen for sampling can be overridden using a "flat" shading option. This option basically means to always.... Refer to full documentation"
	fcount "17"
	fnames "alphaBlend abl"
		fdesc "When specified, indicates the type of alpha blend to be applied. Options are: "none", "overwrite", "add", "subtract", "multiply", "divide", "average". This option only applies when colors are being set. The default if this argument is not specified is "overwrite". The "none" options to not overwrite the existing value. "
	fnames "averageColor ac"
		fdesc "When used, will mean to force the storage of shared colors for vertex level sampling. By default vertex level sampling stores unshared colors. "
	fnames "clampAlphaMax amx"
		fdesc "When used, will mean to clamp the storage of alpha to a maximum "
	fnames "clampAlphaMin amn"
		fdesc "When used, will mean to clamp the storage of alpha to a minimum "
	fnames "clampRGBMax cmx"
		fdesc "When used, will mean to clamp the storage of RGB color to a maximum "
	fnames "clampRGBMin cmn"
		fdesc "When used, will mean to clamp the storage of RGB color to a minimum "
	fnames "colorBlend cbl"
		fdesc "When specified, indicates the type of color blend to be applied. Options are: "none", "overwrite", "add", "subtract", "multiply", "divide", "average". This option only applies when colors are being set. The default if this argument is not specified is "overwrite". The "none" options to not overwrite the existing value. "
	fnames "computeShadows cs"
		fdesc "When used, shadow maps will be computed, saved, and reused during the sampling process. "
	fnames "displaceGeometry dg"
		fdesc "When used, geometry will be displaced along the normals at the sampling positions, as opposed to storing color values. The default is to store colors. "
	fnames "flatShading fs"
		fdesc "When used, flat shaded sampling will be computed. The default is smooth shading. "
	fnames "ignoreDoubleSided ids"
		fdesc "When specified, the double sided flag will be ignored for prelighting. "
	fnames "lightingOnly lo"
		fdesc "When used, incoming illumination will be computed as opposed to surface color an tranparency "
	fnames "reuseShadows rs"
		fdesc "When used, if shadow maps were previosly computed and saved, then they will be reused during the sampling process. The computeShadows option must be enabled for this option to apply. "
	fnames "sampleByFace bf"
		fdesc "When used, sample will occur at a per face level versus a per vertex level, which is the default behaviour "
	fnames "scaleFactor sf"
		fdesc "When used, will scale the sampled value by the specified amount. The default scale factor is 1.0. Negative values are acceptable for displacement, but not for color values. "
	fnames "shareUV su"
		fdesc "When used, UVs are shared at a vertex when sampled. By default UVs are forced to be unshared. "
	fnames "useLightShadows ul"
		fdesc "When used, will use each lights shadow map options. Otherwise these options will be overrridden when the computeShadows, and/or reusedShadows option is enabled. "
	rcount "1"
		rname "polyColorPerVertex"
name "polyInfo"
	desc "PolyInfo is undoable , NOT queryable , and editable . Command query's topological information on polygonal objects and components. So, the command will require the following to be specified: - selection list to query."
	fcount "10"
	fnames "edgeToFace ef"
		fdesc "Returns the faces that share the specified edge. Requires edges to be selected. "
	fnames "edgeToVertex ev"
		fdesc "Returns the vertices defining an edge. Requires edges to be selected. "
	fnames "faceNormals fn"
		fdesc "Returns face normals of the specified object. If faces are selected the command returns the face normals of selected faces. Else it returns the face normals of all the faces of the object. "
	fnames "faceToEdge fe"
		fdesc "Returns the edges defining a face. Requires faces to be selected. "
	fnames "faceToVertex fv"
		fdesc "Returns the vertices defining a face. Requires faces to be selected. "
	fnames "laminaFaces lf"
		fdesc "Find all lamina faces in the specified objects. "
	fnames "nonManifoldEdges nme"
		fdesc "Find all non-manifold edges in the specified objects. "
	fnames "nonManifoldVertices nmv"
		fdesc "Find all non-manifold vertices in the specified objects. "
	fnames "vertexToEdge ve"
		fdesc "Returns the Edges connected to a vertex. Requires vertices to be selected. "
	fnames "vertexToFace vf"
		fdesc "Returns the faces that share the specified vertex. Requires vertices to be selected. "
	rcount "1"
		rname "polyEvaluate"
name "polyInstallAction"
	desc "Installs/uninstalls several things to help the user to perform the specified action : - pickmask - internal selection constraints - display attributes."
	fcount "6"
	fnames "commandName cn"
		fdesc "return as a string the name of the command previously installed "
	fnames "convertSelection cs"
		fdesc "convert all polys selected in object mode  into their full matching component selection. For example : if a polyMesh is selected, polyInstallAction -cs polyCloseBorder will select all border edges. "
	fnames "installConstraint ic"
		fdesc "C: install selection pickmask and internal constraints for  actionname Q: returns 1 if any internal constraint is set for current action "
	fnames "installDisplay id"
		fdesc "C: install display attributes for  actionname Q: returns 1 if any display is set for current action "
	fnames "uninstallConstraint uc"
		fdesc "uninstall internal constraints previously installed "
	fnames "uninstallDisplay ud"
		fdesc "uninstall display attributes previously installed "
	rcount "3"
		rname "polySelectConstraint"
		rname "polySelectConstraintMonitor"
		rname "polyListComponentConversion"
name "polyLayoutUV"
	desc "Move UVs in the texture plane to avoid overlaps."
	fcount "10"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "flipReversed fr"
		fdesc "If this flag is turned on, the reversed UV pieces are fliped. "
	fnames "layout l"
		fdesc "How to move the UV pieces, after cuts are applied: 0 No move is applied. 1 Layout the pieces along the U axis. 2 Layout the pieces in a square shape. "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "percentageSpace ps"
		fdesc "When layout is set to square, this value is a percentage of  the texture area which is added around each UV piece. It can be  used to ensure each UV piece uses different pixels in the texture. Maximum value is 5 percent. "
	fnames "rotateForBestFit rbf"
		fdesc "If true, rotate horizontal UV pieces by 90 degrees, so that all pieces are vertical. "
	fnames "scale sc"
		fdesc "How to scale the pieces, after move and cuts: 0 No scale is applied. 1 Uniform scale to fit in unit square. 2 Non proportional scale to fit in unit square. "
	fnames "separate se"
		fdesc "Which UV edges should be cut: 0 No cuts. 1 Cut only along folds. 2 Make all necessary cuts to avoid all intersections. "
	fnames "uvSetName uvs"
		fdesc "Specifies the name of the uv set to edit uvs on. If not  specified will use the current uv set if it exists.  "
	fnames "worldSpace ws"
		fdesc "If true, performs the operation in world space coordinates as opposed to local space. "
	rcount "0"
name "polyListComponentConversion"
	desc "This command converts poly components from one or more types to another one or more types, and returns the list of the conversion. It doesn't change anything of the current database."
	fcount "12"
	fnames "border bo"
		fdesc "Indicates that the converted components must be on the border of the selection. If it is not provided, the converted components will be the related ones. "
	fnames "fromEdge fe"
		fdesc "No Description"
	fnames "fromFace ff"
		fdesc "No Description"
	fnames "fromUV fuv"
		fdesc "No Description"
	fnames "fromVertex fv"
		fdesc "No Description"
	fnames "fromVertexFace fvf"
		fdesc "Indicates the component type to convert from. If none of them is provided, it is assumed to be all of them, including poly objects. "
	fnames "internal in"
		fdesc "Indicates that the converted components must be totally envolved by the source components. E.g. a converted face must have all of its surrounding vertices being given. If it is not provided, the converted components will be the related ones. "
	fnames "toEdge te"
		fdesc "No Description"
	fnames "toFace tf"
		fdesc "No Description"
	fnames "toUV tuv"
		fdesc "No Description"
	fnames "toVertex tv"
		fdesc "No Description"
	fnames "toVertexFace tvf"
		fdesc "Indicates the component type to convert to. If none of them is provided, it is assumed to the object. "
	rcount "3"
		rname "polySelectConstraint"
		rname "polyInstallAction"
		rname "polySelectConstraintMonitor"
name "polyMapCut"
	desc "Cut along edges of the texture mapping. The cut edges become map borders."
	fcount "2"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Name the resulting object. "
	rcount "13"
		rname "polyProjection"
		rname "polyForceUV"
		rname "untangleUV"
		rname "polyEditUV"
		rname "polyPlanarProjection"
		rname "polyCylindricalProjection"
		rname "polyClipboard"
		rname "polySphericalProjection"
		rname "polyMoveFacetUV"
		rname "polyMoveUV"
		rname "polyMapDel"
		rname "polyMapSew"
		rname "polyUVSet"
name "polyMapDel"
	desc "Deletes texture coordinates (UVs) from selected faces."
	fcount "2"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Name the resulting object. "
	rcount "13"
		rname "polyProjection"
		rname "polyForceUV"
		rname "untangleUV"
		rname "polyEditUV"
		rname "polyPlanarProjection"
		rname "polyCylindricalProjection"
		rname "polyClipboard"
		rname "polySphericalProjection"
		rname "polyMoveFacetUV"
		rname "polyMoveUV"
		rname "polyMapCut"
		rname "polyMapSew"
		rname "polyUVSet"
name "polyMapSew"
	desc "Sew border edges in texture space. Selected edges must be map borders."
	fcount "2"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Name the resulting object. "
	rcount "13"
		rname "polyProjection"
		rname "polyForceUV"
		rname "untangleUV"
		rname "polyEditUV"
		rname "polyPlanarProjection"
		rname "polyCylindricalProjection"
		rname "polyClipboard"
		rname "polySphericalProjection"
		rname "polyMoveFacetUV"
		rname "polyMoveUV"
		rname "polyMapCut"
		rname "polyMapDel"
		rname "polyUVSet"
name "polyMapSewMove"
	desc "This command can be used to Move and Sew together separate UV pieces along geometric edges. UV pieces that correspond to the same geometric edge, are merged together by moving the smaller piece to the larger one."
	fcount "5"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "limitPieceSize lps"
		fdesc "When on, this flag tells that the face number limit described above should be used. "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "numberFaces nf"
		fdesc "Maximum number of faces in a UV piece. When trying to combine two UV pieces into a single one, the merge operation is rejected if the smaller piece has more faces than the number specified by this flag. This flag is only used when  limitPieceSize  is set to on. "
	fnames "uvSetName uvs"
		fdesc "Specifies the name of the uv set to edit uvs on. If not  specified will use the current uv set if it exists.  Common flags "
	rcount "0"
name "polyMergeEdge"
	desc "Sews two border edges together. The new edge is located either on the first, last, or between both selected edges, depending on the mode. Both edges must belong to the same object, and orientations must match (i.e. normals on corresponding faces must point in the same direction). Edge flags are mandatory."
	fcount "5"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "firstEdge fe"
		fdesc "The number of the first edge to merge. Q: When queried, this flag returns an  int . "
	fnames "mergeMode mm"
		fdesc "This flag specifies how to merge, merge mode : at first edge : 0, in between : 1, at last edge : 2. C: Default is in between. Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "secondEdge se"
		fdesc "The number of the second edge to merge. Q: When queried, this flag returns an  int . "
	rcount "11"
		rname "polyCollapseEdge"
		rname "polyCollapseFacet"
		rname "polyMergeFacet"
		rname "polyMergeVertex"
		rname "polyDelEdge"
		rname "polyDelFacet"
		rname "polyDelVertex"
		rname "polySewEdge"
		rname "polyCloseBorder"
		rname "polyQuad"
		rname "polyReduce"
name "polyMergeEdgeCtx"
	desc "Create a new context to merge edges on polygonal objects."
	fcount "15"
	fnames "activeNodes anq"
		fdesc "Query only: return the active nodes in the tool "
	fnames "autoCreate ac"
		fdesc "Auto create the result or wait for the Enter key to create the result "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "immediate im"
		fdesc "Edit only: acts on the object not the tool defaults "
	fnames "mergeMode mm"
		fdesc "The merge mode. (at first edge : 0, in between : 1, at last edge : 2) Default is in between. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "previous pv"
		fdesc "Edit only: reset to previously stored values "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "reset rs"
		fdesc "Edit only: reset to default values "
	fnames "toolNode tnq"
		fdesc "Query only: the node used for tool defaults "
	rcount "0"
name "polyMergeFacet"
	desc "The second face becomes a hole in the first face. The new holed face is located either on the first, last, or between both selected faces, depending on the mode. Both faces must belong to the same object. Facet flags are mandatory."
	fcount "5"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "firstFacet ff"
		fdesc "The number of the first (outer) face to merge. Q: When queried, this flag returns an  int . "
	fnames "mergeMode mm"
		fdesc "This flag specifies how faces are merged: 0: moves second face to first one 1: moves both faces to average 2: moves first face to second one 3, 4, 5: same as above, except faces are projected but not centred 6: Nothing moves. C: Default is None (6). Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "secondFacet sf"
		fdesc "The number of the second (hole) face to merge. Q: When queried, this flag returns an  int . Common flags "
	rcount "11"
		rname "polyCollapseEdge"
		rname "polyMergeEdge"
		rname "polyCollapseFacet"
		rname "polyMergeVertex"
		rname "polyDelEdge"
		rname "polyDelFacet"
		rname "polyDelVertex"
		rname "polySewEdge"
		rname "polyCloseBorder"
		rname "polyQuad"
		rname "polyReduce"
name "polyMergeFacetCtx"
	desc "Create a new context to merge facets on polygonal objects."
	fcount "15"
	fnames "activeNodes anq"
		fdesc "Query only: return the active nodes in the tool "
	fnames "autoCreate ac"
		fdesc "Auto create the result or wait for the Enter key to create the result "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "immediate im"
		fdesc "Edit only: acts on the object not the tool defaults "
	fnames "mergeMode mm"
		fdesc "The merge mode. (at first facet : 0, in between : 1, at last facet : 2) Default is in between. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "previous pv"
		fdesc "Edit only: reset to previously stored values "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "reset rs"
		fdesc "Edit only: reset to default values "
	fnames "toolNode tnq"
		fdesc "Query only: the node used for tool defaults "
	rcount "0"
name "polyMergeUV"
	desc "Merge UVs of an object based on their distance. UVs are merge only if they belong to the same 3D vertex."
	fcount "4"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "distance d"
		fdesc "This flag specifies the maximum distance to merge UVs. C: Default is 0.0. Q: When queried, this flag returns a  double . "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "uvSetName uvs"
		fdesc "Specifies the name of the uv set to edit uvs on. If not  specified will use the current uv set if it exists.  Common flags "
	rcount "0"
name "polyMergeVertex"
	desc "Merge vertices within a given threshold. Since this allows merging any vertices that lie on the same object it is possible for the resulting geometry to be non-manifold. First, perform comparison of pairs of selected vertices. Pairs that lie within given distance of one another are merged, along with the edge between them. Second, any selected vertices which share an edge are merged if the distance between them is within the specified distance. Unlike Merge Edges, Merge Vertices will perform the merge even if the edges adjoining the vertices do not have matching orientation (i.e. normals of adjacent faces do.... Refer to full documentation"
	fcount "4"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "distance d"
		fdesc "This flag specifies the distance within which vertices will be merged. C: Default is 0.0 (i.e. vertices are coincident). Q: When queried, this flag returns a  double . "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "texture tx"
		fdesc "This flag specifies whether the texture is sewn in addition to the 3d edge C: Default is true. Q: When queried, this flag returns a  boolean . Common Flags "
	rcount "11"
		rname "polyCollapseEdge"
		rname "polyMergeEdge"
		rname "polyCollapseFacet"
		rname "polyMergeFacet"
		rname "polyDelEdge"
		rname "polyDelFacet"
		rname "polyDelVertex"
		rname "polySewEdge"
		rname "polyCloseBorder"
		rname "polyQuad"
		rname "polyReduce"
name "polyMoveEdge"
	desc "Modifies edges of a polygonal object. Translate, move, rotate or scale edges."
	fcount "37"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "localCenter lc"
		fdesc "This flag specifies the local center on the edge : 0 - Middle point, 1 - Start point, 2 - End point. C: Default is 0 (Middle point). Q: When queried, this flag returns an  int . Common flags "
	fnames "localDirection ld"
		fdesc "This flag specifies the X axis for local space.  C: Default is 0.0 0.0 1.0.  Q: When queried, this flag returns a float[3].  "
	fnames "localDirectionX ldx"
		fdesc "This flag specifies X coord of the X axis.  C: Default is 0.0.  Q: When queried, this flag returns a float.  "
	fnames "localDirectionY ldy"
		fdesc "This flag specifies Y coord of the X axis.  C: Default is 0.0.  Q: When queried, this flag returns a float.  "
	fnames "localDirectionZ ldz"
		fdesc "This flag specifies Z coord of the X axis.  C: Default is 1.0.  Q: When queried, this flag returns a float.  "
	fnames "localRotate lr"
		fdesc "This flag specifies the local rotations : (twistRot, slantRot, slantRoll). C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . Local rotation (twistRot, slantRot, slantRoll). "
	fnames "localRotateX lrx"
		fdesc "This flag specifies local rotation X angle (Twist around normal) C: Default is 0.0. The range is [0, 360]. Q: When queried, this flag returns a  float . "
	fnames "localRotateY lry"
		fdesc "This flag specifies local rotation Y angle (Slant Rot around slantAxis).  C: Default is 0.0. The range is [0, 360]. Q: When queried, this flag returns a  float . "
	fnames "localRotateZ lrz"
		fdesc "This flag specifies local rotation Z angle (Slant Roll of slantAxis). C: Default is 0.0. The range is [0, 180]. Q: When queried, this flag returns a  float . "
	fnames "localScale ls"
		fdesc "This flag specifies the local scaling vector. C: Default is 1.0 1.0 1.0. Q: When queried, this flag returns a  float[3] . "
	fnames "localScaleX lsx"
		fdesc "This flag specifies X for local scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "localScaleY lsy"
		fdesc "This flag specifies Y for local scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "localScaleZ lsz"
		fdesc "This flag specifies Z for local scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "localTranslate lt"
		fdesc "This flag specifies the local translation vector. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "localTranslateX ltx"
		fdesc "This flag specifies the local X translation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localTranslateY lty"
		fdesc "This flag specifies the local Y translation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localTranslateZ ltz"
		fdesc "This flag specifies the local Z translation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "pivot pvt"
		fdesc "This flag specifies the pivot for scaling and rotation. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "pivotX pvx"
		fdesc "This flag specifies the X pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "pivotY pvy"
		fdesc "This flag specifies the Y pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "pivotZ pvz"
		fdesc "This flag specifies the Z pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "random ran"
		fdesc "This flag specifies the random value for all parameters. C: Default is 0.0. The range is [-10.0, 10.0]. Q: When queried, this flag returns a  float . Local Values "
	fnames "rotate ro"
		fdesc "This flag specifies the rotation angles around X, Y, Z. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "rotateX rx"
		fdesc "This flag specifies the rotation angle around X. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "rotateY ry"
		fdesc "This flag specifies the rotation angle around Y. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "rotateZ rz"
		fdesc "This flag specifies the rotation angle around Z. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "scale s"
		fdesc "This flag specifies the scaling vector. C: Default is 1.0 1.0 1.0. Q: When queried, this flag returns a  float[3] . "
	fnames "scaleX sx"
		fdesc "This flag specifies X for scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "scaleY sy"
		fdesc "This flag specifies Y for scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "scaleZ sz"
		fdesc "This flag specifies Z for scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "translate t"
		fdesc "This flag specifies the translation vector. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "translateX tx"
		fdesc "This flag specifies the X translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "translateY ty"
		fdesc "This flag specifies the Y translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "translateZ tz"
		fdesc "This flag specifies the Z translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "worldSpace ws"
		fdesc "This flag specifies which reference to use. If on : all geometrical values are taken in world reference. If off : all geometrical values are taken in object reference. C: Default is off. Q: When queried, this flag returns an  int . Global Values "
	rcount "3"
		rname "polyMoveFacet"
		rname "polyMoveVertex"
		rname "polyFlipEdge"
name "polyMoveFacet"
	desc "Modifies facet of a polygonal object. Translate, move, rotate or scale facets."
	fcount "47"
	fnames "attraction att"
		fdesc "This flag specifies the attraction, related to magnet. C: Default is 0.0. The range is [-2.0, 2.0]. Q: When queried, this flag returns a  float . "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "gravity g"
		fdesc "This flag specifies the gravity vector. C: Default is 0.0 -1.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "gravityX gx"
		fdesc "This flag specifies X for the gravity vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "gravityY gy"
		fdesc "This flag specifies Y for the gravity vector. C: Default is -1.0. Q: When queried, this flag returns a  float . "
	fnames "gravityZ gz"
		fdesc "This flag specifies Z for the gravity vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localDirection ld"
		fdesc "This flag specifies the X axis for local space. C: Default is 0.0 0.0 1.0. Q: When queried, this flag returns a  float[3] . "
	fnames "localDirectionX ldx"
		fdesc "This flag specifies X coord of the X axis. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localDirectionY ldy"
		fdesc "This flag specifies Y coord of the X axis. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localDirectionZ ldz"
		fdesc "This flag specifies Z coord of the X axis. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "localRotate lr"
		fdesc "This flag specifies the local rotations : (slantRot, slantRoll, twistRot). C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . Local rotation (slantRot, slantRoll, twistRot). "
	fnames "localRotateX lrx"
		fdesc "This flag specifies local rotation X angle (Slant Rot around slantAxis). C: Default is 0.0. The range is [0, 360]. Q: When queried, this flag returns a  float . "
	fnames "localRotateY lry"
		fdesc "This flag specifies local rotation Y angle (Slant Roll of slantAxis). C: Default is 0.0. The range is [0, 180]. Q: When queried, this flag returns a  float . "
	fnames "localRotateZ lrz"
		fdesc "This flag specifies local rotation Z angle (Twist around normal). C: Default is 0.0. The range is [0, 360]. Q: When queried, this flag returns a  float . "
	fnames "localScale ls"
		fdesc "This flag specifies the local scaling vector. C: Default is 1.0 1.0 1.0. Q: When queried, this flag returns a  float[3] . "
	fnames "localScaleX lsx"
		fdesc "This flag specifies X for local scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "localScaleY lsy"
		fdesc "This flag specifies Y for local scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "localScaleZ lsz"
		fdesc "This flag specifies Z for local scaling vector : Flattening. C: Default is 1.0. The range is [0.0, 1.0]. Q: When queried, this flag returns a  float . Dynamic Values "
	fnames "localTranslate lt"
		fdesc "This flag specifies the local translation vector. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "localTranslateX ltx"
		fdesc "This flag specifies the X local translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localTranslateY lty"
		fdesc "This flag specifies the Y local translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localTranslateZ ltz"
		fdesc "This flag specifies the Z local translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "magnX mx"
		fdesc "This flag specifies X for the magnet vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "magnY my"
		fdesc "This flag specifies Y for the magnet vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "magnZ mz"
		fdesc "This flag specifies Z for the magnet vector. C: Default is 0.0. Q: When queried, this flag returns a  float . Common flags "
	fnames "magnet m"
		fdesc "This flag specifies the magnet vector. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "offset off"
		fdesc "This flag specifies the local offset. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "pivot pvt"
		fdesc "This flag specifies the pivot for scaling and rotation. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "pivotX pvx"
		fdesc "This flag specifies the X pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "pivotY pvy"
		fdesc "This flag specifies the Y pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "pivotZ pvz"
		fdesc "This flag specifies the Z pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . Local Values "
	fnames "random ran"
		fdesc "This flag specifies the random value for all parameters. C: Default is 0.0. The range is [-10.0, 10.0]. Q: When queried, this flag returns a  float . Global Values "
	fnames "rotate ro"
		fdesc "This flag specifies the rotation angles around X, Y, Z. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "rotateX rx"
		fdesc "This flag specifies the rotation angle around X. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "rotateY ry"
		fdesc "This flag specifies the rotation angle around Y. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "rotateZ rz"
		fdesc "This flag specifies the rotation angle around Z. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "scale s"
		fdesc "This flag specifies the scaling vector. C: Default is 1.0 1.0 1.0. Q: When queried, this flag returns a  float[3] . "
	fnames "scaleX sx"
		fdesc "This flag specifies X for scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "scaleY sy"
		fdesc "This flag specifies Y for scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "scaleZ sz"
		fdesc "This flag specifies Z for scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "translate t"
		fdesc "This flag specifies the translation vector. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "translateX tx"
		fdesc "This flag specifies the X translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "translateY ty"
		fdesc "This flag specifies the Y translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "translateZ tz"
		fdesc "This flag specifies the Z translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "weight w"
		fdesc "This flag specifies the weight, related to gravity. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "worldSpace ws"
		fdesc "This flag specifies which reference to use. If on : all geometrical values are taken in world reference. If off : all geometrical values are taken in object reference. C: Default is off. Q: When queried, this flag returns an  int . "
	rcount "3"
		rname "polyMoveVertex"
		rname "polyMoveEdge"
		rname "polyFlipEdge"
name "polyMoveFacetUV"
	desc "Modifies the map by moving all UV values associated with the selected face(s). The UV coordinates of the model are manipulated without changing the vertices of the 3D object."
	fcount "16"
	fnames "axisLen l"
		fdesc "Axis Length vector, used to draw the manip handles. C: Default is 1.0, 1.0 Q: When queried, this flag returns a  float[2] . "
	fnames "axisLenX lx"
		fdesc "Axis Length in X, used to draw the manip handles. C: Default is 1.0 Q: When queried, this flag returns a  float . "
	fnames "axisLenY lx"
		fdesc "Axis Length in Y, used to draw the manip handles. C: Default is 1.0 Q: When queried, this flag returns a  float . "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "pivot pvt"
		fdesc "This flag specifies the pivot for scaling and rotation. C: Default is 0.0 0.0. Q: When queried, this flag returns a  float[2] . "
	fnames "pivotU pvu"
		fdesc "This flag specifies U for the pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "pivotV pvv"
		fdesc "This flag specifies V for the pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "random ran"
		fdesc "This flag specifies the random value for all parameters. C: Default is 0.0. The range is [-10.0, 10.0]. Q: When queried, this flag returns a  float . "
	fnames "rotationAngle ra"
		fdesc "Angle of rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "scale s"
		fdesc "This flag specifies the scaling vector. C: Default is 1.0 1.0. Q: When queried, this flag returns a  float . "
	fnames "scaleU su"
		fdesc "This flag specifies U for the scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "scaleV sv"
		fdesc "This flag specifies V for the scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "translate t"
		fdesc "This flag specifies the translation vector. C: Default is 0.0 0.0. Q: When queried, this flag returns a  float[2] . "
	fnames "translateU tu"
		fdesc "This flag specifies the U translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "translateV tv"
		fdesc "This flag specifies the V translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . Common flags "
	rcount "13"
		rname "polyProjection"
		rname "polyForceUV"
		rname "untangleUV"
		rname "polyEditUV"
		rname "polyPlanarProjection"
		rname "polyCylindricalProjection"
		rname "polyClipboard"
		rname "polySphericalProjection"
		rname "polyMoveUV"
		rname "polyMapCut"
		rname "polyMapDel"
		rname "polyMapSew"
		rname "polyUVSet"
name "polyMoveUV"
	desc "Moves selected UV coordinates in 2D space. As the selected UVs are adjusted, the way the image is mapped onto the object changes accordingly. This command manipulates the UV values without changing the 3D geometry of the object."
	fcount "13"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "pivot pvt"
		fdesc "This flag specifies the pivot for scaling and rotation. C: Default is 0.0 0.0. Q: When queried, this flag returns a  float[2] . "
	fnames "pivotU pvu"
		fdesc "This flag specifies U for the pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "pivotV pvv"
		fdesc "This flag specifies V for the pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "random ran"
		fdesc "This flag specifies the random value for all parameters. C: Default is 0.0. The range is [-10.0, 10.0]. Q: When queried, this flag returns a  float . Common flags "
	fnames "rotationAngle ra"
		fdesc "Angle of rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "scale s"
		fdesc "This flag specifies the scaling vector. C: Default is 1.0 1.0. Q: When queried, this flag returns a  float . "
	fnames "scaleU su"
		fdesc "This flag specifies U for the scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "scaleV sv"
		fdesc "This flag specifies V for the scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "translate t"
		fdesc "This flag specifies the translation vector. C: Default is 0.0 0.0. Q: When queried, this flag returns a  float[2] . "
	fnames "translateU tu"
		fdesc "This flag specifies the U translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "translateV tv"
		fdesc "This flag specifies the V translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	rcount "13"
		rname "polyProjection"
		rname "polyForceUV"
		rname "untangleUV"
		rname "polyEditUV"
		rname "polyPlanarProjection"
		rname "polyCylindricalProjection"
		rname "polyClipboard"
		rname "polySphericalProjection"
		rname "polyMoveFacetUV"
		rname "polyMapCut"
		rname "polyMapDel"
		rname "polyMapSew"
		rname "polyUVSet"
name "polyMoveVertex"
	desc "Modifies vertices of a polygonal object. Translate, rotate or scale vertices in local or world space."
	fcount "28"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "localDirection ld"
		fdesc "This flag specifies the X axis for local space. C: Default is 0.0 0.0 1.0. Q: When queried, this flag returns a  float[3] . "
	fnames "localDirectionX ldx"
		fdesc "This flag specifies X coord for thr X axis. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localDirectionY ldy"
		fdesc "This flag specifies Y coord for thr X axis. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localDirectionZ ldz"
		fdesc "This flag specifies Z coord for thr X axis. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "localTranslate lt"
		fdesc "Local translation vector. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "localTranslateX ltx"
		fdesc "Local translation X coord. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localTranslateY lty"
		fdesc "Local translation Y coord. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "localTranslateZ ltz"
		fdesc "Local translation Z coord : Move along the vertex normal.  C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "pivot pvt"
		fdesc "This flag specifies the pivot for scaling and rotation. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "pivotX pvx"
		fdesc "This flag specifies the X pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "pivotY pvy"
		fdesc "This flag specifies the Y pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "pivotZ pvz"
		fdesc "This flag specifies the Z pivot for scaling and rotation. C: Default is 0.0. Q: When queried, this flag returns a  float . Local Values "
	fnames "random ran"
		fdesc "This flag specifies the random value for all parameters. C: Default is 0.0. The range is [-10.0, 10.0]. Q: When queried, this flag returns a  float . Common flags "
	fnames "rotate ro"
		fdesc "This flag specifies the rotation angles around X, Y, Z. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "rotateX rx"
		fdesc "This flag specifies the rotation angle around X. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "rotateY ry"
		fdesc "This flag specifies the rotation angle around Y. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "rotateZ rz"
		fdesc "This flag specifies the rotation angle around Z. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "scale s"
		fdesc "This flag specifies the scaling vector. C: Default is 1.0 1.0 1.0. Q: When queried, this flag returns a  float[3] . "
	fnames "scaleX sx"
		fdesc "This flag specifies X for scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "scaleY sy"
		fdesc "This flag specifies Y for scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "scaleZ sz"
		fdesc "This flag specifies Z for scaling vector. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "translate t"
		fdesc "This flag specifies the translation vector. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "translateX tx"
		fdesc "This flag specifies the X translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "translateY ty"
		fdesc "This flag specifies the Y translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "translateZ tz"
		fdesc "This flag specifies the Z translation vector. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "worldSpace ws"
		fdesc "This flag specifies which reference to use. If "on" : all geometrical values are taken in world reference. If "off" : all geometrical values are taken in object reference. C: Default is "off". Q: When queried, this flag returns an  int . Global Values "
	rcount "3"
		rname "polyMoveFacet"
		rname "polyMoveEdge"
		rname "polyFlipEdge"
name "polyNormal"
	desc "Control the normals of an object. This command works on faces or polygonal objects."
	fcount "3"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "normalMode nm"
		fdesc "This flag specifies the normal mode.  0: reverse; (This flag is being phased out and is included  for backwards compatibility only.)   1: propagate; (This flag is being phased out and is included  for backwards compatibility only.)   2: conform; (This flag is being phased out and is included  for backwards compatibility only.)   3: reverse and cut; Reverse the normal(s) on the selected face(s). Selected faces are cut along their collective border and a new shell is created. The normals in the new shell are reversed from what they were before the action.  4: reverse and propagate; Reverse the normal(s) on the selected face(s) and propagate this direction to all other faces in the shell. C: Default is 0 (reverse mode).  Q: When queried, this flag returns an  int . Common flags "
	rcount "4"
		rname "polyAverageNormal"
		rname "polyNormalPerVertex"
		rname "polySetToFaceNormal"
		rname "polySoftEdge"
name "polyNormalPerVertex"
	desc "PolyNormalPerVertex is undoable , queryable , and editable . Command associates normal(x, y, z) with vertices on polygonal objects. When used with the query flag, it returns the normal associated with the specified components. However, when queried, the command returns all normals (all vtx-face combinations) on the vertex, regardless of whether they ar shared or not."
	fcount "9"
	fnames "allLocked al"
		fdesc "Queries if all normals on the selected vertices are locked (frozen) or not "
	fnames "deformable def"
		fdesc "DEFAULT  true OBSOLETE flag. This flag will be removed in the next release. "
	fnames "freezeNormal fn"
		fdesc "Specifies that the normal values be frozen (locked) at the current value. "
	fnames "normalX x"
		fdesc "Specifies the x value normal "
	fnames "normalXYZ xyz"
		fdesc "Specifies the xyz values normal "
	fnames "normalY y"
		fdesc "Specifies the y value normal "
	fnames "normalZ z"
		fdesc "Specifies the z value normal "
	fnames "relative rel"
		fdesc "When used, the normal values specified are added relative to the current value. "
	fnames "unFreezeNormal ufn"
		fdesc "Specifies that the normal values that were frozen at the current value be un-frozen (un-locked). "
	rcount "4"
		rname "polyAverageNormal"
		rname "polyNormal"
		rname "polySetToFaceNormal"
		rname "polySoftEdge"
name "polyNormalizeUV"
	desc "Normalizes the UVs of input polyFaces. The existing UVs of the faces are normalized between 0 and 1."
	fcount "7"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  integer . "
	fnames "createNewMap cm"
		fdesc "Create a new UV set, as opposed to editing the current one, or the one given by the uvSetName flag. "
	fnames "insertBeforeDeformers ibd"
		fdesc "This flag specifies if the polyNormalizeUV node should be inserted before or after deformer nodes already applied to the shape. Inserting the node after the deformer leads to texture swimming during animation and is most often undesirable. C: Default is on. "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "normalizeType nt"
		fdesc "Options for normalize. "
	fnames "perspectiveAspectRatio pa"
		fdesc "Scale uniform along u and v. C: Default is on. Q: When queried returns an  int . Common flags "
	fnames "uvSetName uvs"
		fdesc "Specifies the name of the UV set to edit uvs on. If not  specified will use the current UV set if it exists. When createNewMap is on, the name is used to generate a new unique UV set name. "
	rcount "0"
name "polyOptions"
	desc "Changes the global display polygonal attributes."
	fcount "31"
	fnames "activeObjects ao"
		fdesc "Apply user choices for all active objects. "
	fnames "allEdges ae"
		fdesc "Display all edges in solid line. "
	fnames "backCullVertex bcv"
		fdesc "BackCull vertices. "
	fnames "backCulling bc"
		fdesc "Display with no back culling. "
	fnames "colorMaterialChannel cm"
		fdesc "If colorShadedDisplay is true, then determines which material channel to display color per vertex in. The options are: "none" : disable material shading "ambient" : ambient material channel "ambientDiffuse" :  ambient and diffuse material channel "diffuse" :  diffuse material channel "specular" :  specular material channel "emission" :  emission material channel "
	fnames "colorShadedDisplay cs"
		fdesc "Use color per vertex display in shaded mode. "
	fnames "displayBorder db"
		fdesc "Highlight border edge. "
	fnames "displayCenter dc"
		fdesc "Display facet centers. "
	fnames "displayGeometry dg"
		fdesc "Display geometry. "
	fnames "displayItemNumbers din"
		fdesc "Displays item numbers (vertices edges facets uvs) "
	fnames "displayMapBorder dmb"
		fdesc "Highlight map border edge. "
	fnames "displayNormal dn"
		fdesc "Display normals. "
	fnames "displayTriangle dt"
		fdesc "Display triangulation. "
	fnames "displayUVTopology uvt"
		fdesc "Option on UV display to display UVs topologically.  "
	fnames "displayUVs duv"
		fdesc "Display UVs. "
	fnames "displayVertex dv"
		fdesc "Display vertices. "
	fnames "displayWarp dw"
		fdesc "Highlight warped facets. "
	fnames "facet f"
		fdesc "For use with -dn flag. Set the normal display style to facet display. "
	fnames "fullBack fb"
		fdesc "Display with full back culling. "
	fnames "global gl"
		fdesc "Apply user choices for all objects. "
	fnames "hardBack hb"
		fdesc "Backculled hard edges only for backculled faces. "
	fnames "hardEdge he"
		fdesc "Display only hard edges.	 "
	fnames "materialBlend mb"
		fdesc "The options are: "overwrite" "add" "subtract" "multiply" "divide" "average" "modulate2x" "
	fnames "newPolymesh np"
		fdesc "Set component display state of new polymesh objects. "
	fnames "point pt"
		fdesc "For use with -dn flag. Set the normal display style to vertex display. "
	fnames "pointFacet pf"
		fdesc "For use with -dn flag. Set the normal display style to vertex and face display. "
	fnames "relative r"
		fdesc "When this flag is used with flags dealing with size, the value (size) is a multiplication factor : i.e for flags : -sizeNormal, -sizeBorder. When this flag is used with flags dealing with a boolean value, the boolean value is toggled : i.e for flags : displayVertex, displayCenter, displayTriangle, displayBorder, backCullVertex, displayWarp, displayItemNumbers. "
	fnames "sizeBorder sb"
		fdesc "Set the size of the polygonal border edges. "
	fnames "sizeNormal sn"
		fdesc "Set the size of the polygonal normals. "
	fnames "softEdge se"
		fdesc "Display soft edges in dotted lines. "
	fnames "wireBackCulling wbc"
		fdesc "Backculled faces are in wireframe. 	 "
	rcount "0"
name "polyPlanarProjection"
	desc "Projects a map onto an object, using an orthogonal projection. The piece of the map defined from isu, isv, icx, icy area, is placed at pcx, pcy, pcz location."
	fcount "24"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "createNewMap cm"
		fdesc "This flag when set true will create a new map with a the name passed in, if the map does not already exist. Common flags "
	fnames "imageCenter ic"
		fdesc "This flag specifies the center point of the 2D model layout. C: Default is 0.5 0.5. Q: When queried, this flag returns a  float[2] . "
	fnames "imageCenterX icx"
		fdesc "This flag specifies X for the center point of the 2D model layout. C: Default is 0.5. Q: When queried, this flag returns a  float . "
	fnames "imageCenterY icy"
		fdesc "This flag specifies Y for the center point of the 2D model layout. C: Default is 0.5. Q: When queried, this flag returns a  float . "
	fnames "imageScale is"
		fdesc "This flag specifies the UV scale : Enlarges or reduces the 2D version of the model in U or V space relative to the 2D centerpoint. C: Default is 1.0 1.0. Q: When queried, this flag returns a  float[2] . "
	fnames "imageScaleU isu"
		fdesc "This flag specifies the U scale : Enlarges or reduces the 2D version of the model in U space relative to the 2D centerpoint. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "imageScaleV isv"
		fdesc "This flag specifies the V scale : Enlarges or reduces the 2D version of the model in V space relative to the 2D centerpoint. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "insertBeforeDeformers ibd"
		fdesc "This flag specifies if the projection node should be inserted before or after deformer nodes already applied to the shape. Inserting the projection after the deformer leads to texture swimming during animation and is most often undesirable. C: Default is on. "
	fnames "mapDirection md"
		fdesc "This flag specifies the mapping direction. 'x', 'y' and 'z' projects the map along the corresponding axis. 'c' projects along the vurrent camera viewing direction. 'b' projects along the best plane fitting the objects selected. "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "projectionCenter pc"
		fdesc "This flag specifies the origin point from which the map is projected. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "projectionCenterX pcx"
		fdesc "This flag specifies X for the origin point from which the map is projected.  C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "projectionCenterY pcy"
		fdesc "This flag specifies Y for the origin point from which the map is projected.  C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "projectionCenterZ pcz"
		fdesc "This flag specifies Z for the origin point from which the map is projected.  C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "projectionScale ps"
		fdesc "This flag specifies the width and the height of the map relative to the 3D projection axis. C: Default is 1.0 1.0. Q: When queried, this flag returns a  float[2] . "
	fnames "projectionScaleU psu"
		fdesc "This flag specifies the width of the map relative to the 3D projection axis. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "projectionScaleV psv"
		fdesc "This flag specifies the height of the map relative to the 3D projection axis. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "rotate ro"
		fdesc "This flag specifies the mapping rotate angles. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "rotateX rx"
		fdesc "This flag specifies X mapping rotate angle. C: Default is 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "rotateY ry"
		fdesc "This flag specifies Y mapping rotate angle. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "rotateZ rz"
		fdesc "This flag specifies Z mapping rotate angle.  C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "rotationAngle ra"
		fdesc "This flag specifies the rotation angle in the mapping space. When the angle is positive, then the map rotates counterclockwise on the mapped model, whereas when it is negative then the map rotates lockwise on the mapped model. C: Default is 10.0. Q: When queried, this flag returns a  float . "
	fnames "worldSpace ws"
		fdesc "This flag specifies which reference to use. If "on" : all geometrical values are taken in world reference. If "off" : all geometrical values are taken in object reference. C: Default is "off". Q: When queried, this flag returns an  int . "
	rcount "13"
		rname "polyProjection"
		rname "polyForceUV"
		rname "untangleUV"
		rname "polyEditUV"
		rname "polyCylindricalProjection"
		rname "polyClipboard"
		rname "polySphericalProjection"
		rname "polyMoveFacetUV"
		rname "polyMoveUV"
		rname "polyMapCut"
		rname "polyMapDel"
		rname "polyMapSew"
		rname "polyUVSet"
name "polyPlane"
	desc "The mesh command creates a new polygonal plane. polyPlane -sx 10 -sy 15 -w 15 -h 20; Create a mesh (plane), with 10 subdivisions in the X direction, 15 subdivisions in the Y direction, the width of the mesh is 15, the height of the mesh is 20. polyPlane -n myPlane -sx 5 -sy 5; Create a mesh, called "myPlane", on each direction there are 5 subdivisions."
	fcount "9"
	fnames "axis ax"
		fdesc "This flag specifies the primitive axis used to build the plane. Q: When queried, this flag returns a  float[3] . "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "height h"
		fdesc "This flag specifies the height of the plane. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "name n"
		fdesc "Gives a name to the created plane. "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (where applicable). "
	fnames "subdivisionsX sx"
		fdesc "This specifies the number of subdivisions in the X direction for the plane. C: Default is 5. Q: When queried, this flag returns an  int . "
	fnames "subdivisionsY sy"
		fdesc "This flag specifies the number of subdivisions in the Y direction for the plane. C: Default is 5. Q: When queried, this flag returns an  int . "
	fnames "texture tx"
		fdesc "This flag alows a specific texture mechanism to be selected, while creating the plane. The valid values are 0, 1 or 2. 0 implies that no texture to be applied.  (No UVs will be generated) 1 implies the UVs should be normalized.  This will normalize the  U and V direction separately, thereby resulting in distortion of textures  if the plane is not a square. 2 implies UVs are created so that the texture will not be distorted when applied.  The texture lying outside the UV range will be truncated (since that cannot be  squeezed in, without distorting the texture    For better understanding of these options, you may have to open the      texture view window C: Default is 1. "
	fnames "width w"
		fdesc "This flag specifies the width of the plane. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	rcount "6"
		rname "polyTorus"
		rname "polyCylinder"
		rname "polySphere"
		rname "polyCube"
		rname "polyCone"
		rname "polyCube"
name "polyPoke"
	desc "Introduces a new vertex in the middle of the selected face, and connects it to the rest of the vertices of the face."
	fcount "11"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). "
	fnames "localTranslate lt"
		fdesc "translate the new vertex in the local face coordinate. "
	fnames "localTranslateX ltx"
		fdesc "translate the new vertex in the local face coordinate along X. "
	fnames "localTranslateY lty"
		fdesc "translate the new vertex in the local face coordinate along Y. "
	fnames "localTranslateZ ltz"
		fdesc "translate the new vertex in the local face coordinate along Z. "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "translate t"
		fdesc "translate the new vertex in the world space. "
	fnames "translateX tx"
		fdesc "translate the new vertex in the world space along X. "
	fnames "translateY ty"
		fdesc "translate the new vertex in the world space along Y. "
	fnames "translateZ tz"
		fdesc "translate the new vertex in the world space along Z. "
	fnames "worldSpace ws"
		fdesc "This flag specifies if the operation has to be performed in the world space or not. "
	rcount "1"
		rname "polySubdivideFacet"
name "polyProjection"
	desc "PolyProjection is undoable , NOT queryable , and NOT editable . Create a mapping on the selected polygonal faces."
	fcount "22"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable) "
	fnames "createNewMap cm"
		fdesc "Create new map if does not exists "
	fnames "imageCenterX icx"
		fdesc "Specifies the X (U) translation of the projected UVs Default	is 0.5 "
	fnames "imageCenterY icy"
		fdesc "Specifies the Y (V) translation of the projected UVs Default	is 0.5 "
	fnames "imageScaleU isu"
		fdesc "Specifies the U scale factor of the projected UVs Default is 1 "
	fnames "imageScaleV isv"
		fdesc "Specifies the V scale factor of the projected UVs Default is 1 "
	fnames "insertBeforeDeformers ibd"
		fdesc "Specifies if the projection node should be inserted before or after deformer nodes already applied to the shape. Inserting the projection after the deformer leads to texture swimming during animation and is most often undesirable. Default is on. "
	fnames "keepImageRatio kir"
		fdesc "Specifies if the xy scaling in the planar projection has to be uniform.  By setting this flag, the texture aspect ratio is preserved.  This flag is ignored for cylindrical and spherical projections. "
	fnames "mapDirection md"
		fdesc "Specifies the direction of the projection.  By specifying this flag, the projection placement values (pcx, pcy, pcz, rx, ry, rz, psu, psv) are internally computed.  If both this flag and the projection values are specified, the projection values are ignored Valid Values are : X			Projects along the X Axis Y			Projects along the Y Axis Z			Projects along the Z Axis bestPlane	Projects on the best plane fitting the object camera		Projects along the viewing direction Default is bestPlane "
	fnames "projectionCenterX pcx"
		fdesc "Specifies the X coordinate of the center of the projection manipulator "
	fnames "projectionCenterY pcy"
		fdesc "Specifies the Y coordinate of the center of the projection manipulator "
	fnames "projectionCenterZ pcz"
		fdesc "Specifies the Z coordinate of the center of the projection manipulator "
	fnames "projectionScaleU psu"
		fdesc "Specifies the U scale component of the projection manipulator "
	fnames "projectionScaleV psv"
		fdesc "Specifies the V scale component of the projection manipulator "
	fnames "rotateX rx"
		fdesc "Specifies the X-axis rotation of the projection manipulator "
	fnames "rotateY ry"
		fdesc "Specifies the Y-axis rotation of the projection manipulator "
	fnames "rotateZ rz"
		fdesc "Specifies the Z-axis rotation of the projection manipulator "
	fnames "rotationAngle ra"
		fdesc "Specifies the rotation of the projected UVs in the UV space Default is 0 "
	fnames "seamCorrect sc"
		fdesc "Specifies if seam correction has to be done for spherical and cylindrical projections.  This flag is ignored, if the planar projection is specified. "
	fnames "smartFit sf"
		fdesc "Specifies if the projection manipulator has to be placed fitting the object.  Used for cylindrical and spherical projections.  For smart fitting the planar projection, the mapDirection flag has to be used, since there are several options for smart fitting a planar projection. "
	fnames "type t"
		fdesc "Specify the type of mapping to be performed Valid values for the STRING are "planar" "cylindrical" "spherical" Default is planar "
	fnames "uvSetName uvs"
		fdesc "Specifies name of the uv set to work on "
	rcount "13"
		rname "polyForceUV"
		rname "untangleUV"
		rname "polyEditUV"
		rname "polyPlanarProjection"
		rname "polyCylindricalProjection"
		rname "polyClipboard"
		rname "polySphericalProjection"
		rname "polyMoveFacetUV"
		rname "polyMoveUV"
		rname "polyMapCut"
		rname "polyMapDel"
		rname "polyMapSew"
		rname "polyUVSet"
name "polyQuad"
	desc "Merges selected triangles of a polygonal object into four-sided faces."
	fcount "7"
	fnames "angle a"
		fdesc "Angle threshold above which two triangles are not merged. C: Default is 30 degrees. The range is [0.0, 180.0]. Q: When queried, this flag returns a  float . "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "keepGroupBorder kgb"
		fdesc "Keep facet group border : If "on", the borders of selected faces are maintained, otherwise the borders of selected facets may be modified. C: Default is "on". Q: When queried, this flag returns an  int . "
	fnames "keepHardEdges khe"
		fdesc "Keep hard edges : If "on", the hard edges of selected faces are maintained, otherwise they may be deleted between two triangles. C: Default is "on". Q: When queried, this flag returns an  int . "
	fnames "keepTextureBorders ktb"
		fdesc "Keep texture border : If "on", the borders of texture maps are maintained, otherwise the boreders of texture maps may be modified. C: Default is "on". Q: When queried, this flag returns an  int . Common flags "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "worldSpace ws"
		fdesc "This flag specifies which reference to use. If "on" : all geometrical values are taken in world reference. If "off" : all geometrical values are taken in object reference. C: Default is "off". Q: When queried, this flag returns an  int . "
	rcount "11"
		rname "polyCollapseEdge"
		rname "polyMergeEdge"
		rname "polyCollapseFacet"
		rname "polyMergeFacet"
		rname "polyMergeVertex"
		rname "polyDelEdge"
		rname "polyDelFacet"
		rname "polyDelVertex"
		rname "polySewEdge"
		rname "polyCloseBorder"
		rname "polyReduce"
name "polyQueryBlindData"
	desc "PolyQueryBlindData is undoable , NOT queryable , and editable . Command query's blindData associated with particular polygonal components. So, the command will require the following to be specified: - selection list to query Optional are the: - typeId - associationType - longDataName or shortDataName of data being queried. - The actual data being specified. - showComponent flag Note that for object level blind data, the showComponent flag will be ignored. If no components are selected, the assocation flag will be ignored and object level data will be queried."
	fcount "13"
	fnames "associationType at"
		fdesc "Specifies the dataTypes that are part of BlindData node being queried. Allowable associations are "object" for any object, and "vertex" "edge" and "face" for mesh objects. "
	fnames "binaryData bnd"
		fdesc "Specifies the binary string value to search for "
	fnames "booleanData bd"
		fdesc "Specifies the string value to search for "
	fnames "doubleData dbd"
		fdesc "Specifies the double/float value to search for "
	fnames "intData ind"
		fdesc "Specifies the integer value to search for "
	fnames "longDataName ldn"
		fdesc "Specifies the long name of the data that is being queried by this command. "
	fnames "maxValue max"
		fdesc "Specifies the maximum value to search for.  This option will query float, double, and integer types of blind data. "
	fnames "minValue min"
		fdesc "Specifies the minimum value to search for.  This option will query float, double and integer types of blind data. "
	fnames "shortDataName sdn"
		fdesc "Specifies the short name of the data that is being queried by this command. "
	fnames "showComp sc"
		fdesc "The showComponent option controls whether the object.[component].attribute name is output preceeding the actual value.  If the showComponent option is used then the restriction of only returning 1 type of blind data (i.e. one of integer, float, double... is removed, as the return for all are strings. If the association is object and not component, then this option will still cause all the attribute names to be printed "
	fnames "stringData sd"
		fdesc "Specifies the string value to search for "
	fnames "subString ss"
		fdesc "Specifies the substring that should be checked against a STRING type blind data.  If the sub string is found query is successful.  Will not look at non String type blind data elements. "
	fnames "typeId id"
		fdesc "Specifies the typeId of the BlindData type being queried.  If the typeId is not specified, then all of the components that match the query will be output.  The typeId of the elements found will be output if the ShowComponents option is used.  Will be in the format "object.component.attribute::typeId". If the typeId is specifed then the "::typeId" portion will not be output with the ShowComponents option. "
	rcount "2"
		rname "blindDataType"
		rname "polyBlindData"
name "polyReduce"
	desc "Reduce a polygonal object."
	fcount "10"
	fnames "border b"
		fdesc "This flag specifies the degree to which vertices along the geometric border are to be preserved.  It has effect only if the -keepBorder flag is set to false.  A value of 1.0 results in no special effort being made to preserve any border vertices.  A value of 0 results in all border vertices being preserved. C: Default is .5, range is [0,1]. Q: When queried, this flag returns a  float . "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "detail d"
		fdesc "This flag specifies how much of the reduced geometry should be dedicated to preserving regions of high curvature.  A value of 1.0 will result in relatively equal distribution of vertices and faces regardless of curvature. A value of 0 will concentrate the detail in areas of high curvature. This value is ignored when -keepHardEdge is set to false. C: Default is .5, range is [0,1]. Q: When queried, this flag returns a  float . "
	fnames "keepBorder kb"
		fdesc "If true, vertices on border will not be modified. C: Default is false. Q: When queried, this flag returns a  boolean . "
	fnames "keepHardEdge khe"
		fdesc "If true, vertices on hard edges will not be modified. C: Default is false. Q: When queried, this flag returns a  boolean . "
	fnames "keepMapBorder kmb"
		fdesc "If true, vertices on UV border will not be modified. C: Default is false. Q: When queried, this flag returns a  boolean . "
	fnames "line l"
		fdesc "This flag specifies the degree to which "feature lines" (edges joining faces with sharp geometric angles between them) are to be preserved. A value of 1.0 results in no special effort being made to preserve such features.  A value of 0 results in the greatest possible effort to preserve such features. C: Default is .5, range is [0,1]. Q: When queried, this flag returns a  float . "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "percentage p"
		fdesc "This flag specifies what percentage of vertices have to be removed from the original object. C: Default is 100. 0 will remove as many vertices as possible. Q: When queried, this flag returns a  float . "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands). NOTE: This flag is intended for use by the "Reduce" menu item. If 'polyReduce -rpo 0' is executed from the command line, Shader information will not be copied from the original mesh to the result. Common flags "
	rcount "11"
		rname "polyCollapseEdge"
		rname "polyMergeEdge"
		rname "polyCollapseFacet"
		rname "polyMergeFacet"
		rname "polyMergeVertex"
		rname "polyDelEdge"
		rname "polyDelFacet"
		rname "polyDelVertex"
		rname "polySewEdge"
		rname "polyCloseBorder"
		rname "polyQuad"
name "polySelectConstraint"
	desc "Changes the global polygonal selection constraints."
	fcount "43"
	fnames "angle a"
		fdesc "0(off) 1(on). "
	fnames "anglebound ab"
		fdesc "min&max angles. For vertices :	angle between the 2 edges owning the vertex. For edges :		angle between the 2 faces owning the edge.   3D Area : apply on faces only. "
	fnames "border bo"
		fdesc "If true, selection will be extended to all connected border components so that the whole "loop" is selected. "
	fnames "convexity c"
		fdesc "0(off) 1(concave) 2(convex). "
	fnames "disable dis"
		fdesc "Toggles  off  all constraints for all component types, but leaves the other constraint parameters.  This flag may be used together with other ones toggling some constraints  on  : if so, all constraints are disabled first (no matter the position of the -disable flag in the command line) then the specified ones are activated. "
	fnames "dist d"
		fdesc "0(off) 1(to point) 2(to axis) 3(to plane). "
	fnames "distaxis da"
		fdesc "axis. (Normal to the plane in case of distance to plane).   Orientation : apply on vertices, edges, faces. "
	fnames "distbound db"
		fdesc "min&max distances. "
	fnames "distpoint dp"
		fdesc "point. (Axis/plane origin in case of distance to axis/plane). "
	fnames "edgeDistance ed"
		fdesc "Maximum distance (number of edges) to extend the edge selection for "Contiguous Edges" propagate mode. 0 means to ignore the distance constraint.   apply on faces only. "
	fnames "geometricarea ga"
		fdesc "0(off) 1(on). "
	fnames "geometricareabound gab"
		fdesc "min&max areas.   2D (mapped) area : apply on faces only. "
	fnames "holes h"
		fdesc "0(off) 1(holed) 2(non holed). "
	fnames "length l"
		fdesc "0(off) 1(on). "
	fnames "lengthbound lb"
		fdesc "min&max lengths.   Angle : apply on winged vertices, winged edges. "
	fnames "max2dAngle m2a"
		fdesc "Maximum angle between two consecutive edges in the 2d tangent plane for "Contiguous Edges" propagate mode. "
	fnames "max3dAngle m3a"
		fdesc "Maximum angle between two consecutive edges in 3d space for "Contiguous Edges" propagate mode. "
	fnames "mode m"
		fdesc "0(Off) 1(Next) 2(Current&Next) 3(All&Next).  Off : 			no constraints are used at all. Next : 			constraints will be used to filter next selections. Current&Next :	constraints will be aplied on current selection and then used to filter next selections. All&Next :		all items satisfying constraints are selected.   Properties :   apply on vertices, edges, faces. "
	fnames "nonmanifold nm"
		fdesc "0(off) 1(on)   apply on edges only. "
	fnames "order or"
		fdesc "0(off) 1(on). "
	fnames "orderbound orb"
		fdesc "min&max orders. number of owning edges.   Visibility : apply on vertices, edges, faces. "
	fnames "orient o"
		fdesc "0(off) 1(orientation) 2(direction). "
	fnames "orientaxis oa"
		fdesc "axis.   Order (Neighbors): apply on vertices, texture offsets "
	fnames "orientbound ob"
		fdesc "min&max angles. "
	fnames "planarity p"
		fdesc "0(off) 1(non planar) 2(planar). "
	fnames "propagate pp"
		fdesc "0(Off) 1(More) 2(Less) 3(Border) 4(Contiguous Edges). More :		will add current selection border to current selection. Less :		will remove current selection border from current selection. Border :	will keep only current selection border. Contiguous Edges :	Add edges aligned with the current edges selected. The direction and number of edges selected is controlled by the -m2a, -m3a, and -ed flags.   Mode : "
	fnames "random r"
		fdesc "0(off) 1(on). "
	fnames "randomratio rr"
		fdesc "ratio [0,1]. "
	fnames "shell sh"
		fdesc "If true, selection will be extended to all connected components so that the whole piece of object is selected. "
	fnames "size sz"
		fdesc "0(off) 1(triangles) 2(quads) 3(nsided). "
	fnames "smoothness sm"
		fdesc "0(off) 1(hard) 2(smooth).   apply on edges only, when -pp 4. "
	fnames "stateString sts"
		fdesc "Query only flag. Returns the MEL command that would restore all the current settings.   Component type : "
	fnames "textured tx"
		fdesc "0(off) 1(mapped) 2(unmapped). "
	fnames "texturedarea ta"
		fdesc "0(off) 1(Area specified is unsigned) 2(Area specified is signed). "
	fnames "texturedareabound tab"
		fdesc "min&max areas. "
	fnames "textureshared ts"
		fdesc "0(off) 1(on). This option will select any uvs on the currentMap which are shared by more than one vertex   Distance : apply on vertices, edges, faces. "
	fnames "topology tp"
		fdesc "0(off) 1(non triangulatable) 2(lamina) 3(non triangulatable and lamina)   Length : apply on edges only. "
	fnames "type t"
		fdesc "0x0000(none) 0x0001(vertex) 0x8000(edge) 0x0008(face) 0x0010(texture coordinates)   Propagation : "
	fnames "visibility v"
		fdesc "0(off) 1(on). "
	fnames "visibilityangle va"
		fdesc "angle [0,360]. "
	fnames "visibilitypoint vp"
		fdesc "point.   Random : apply on vertices, edges, faces. "
	fnames "where w"
		fdesc "0(off) 1(on border) 2(inside). "
	fnames "wholeSensitive ws"
		fdesc "Tells how to select faces : either  by picking anywhere inside the face (if true)  or by picking on the face center marker (if false). "
	rcount "3"
		rname "polyInstallAction"
		rname "polySelectConstraintMonitor"
		rname "polyListComponentConversion"
name "polySelectConstraintMonitor"
	desc "Manage the window to display/edit the polygonal selection constraint parameters."
	fcount "3"
	fnames "changeCommand cc"
		fdesc "specifies the mel callback to refresh the window "
	fnames "create c"
		fdesc "Specifies the Monitor should be created "
	fnames "delete d"
		fdesc "Specifies that the Monitor should be removed "
	rcount "3"
		rname "polySelectConstraint"
		rname "polyInstallAction"
		rname "polyListComponentConversion"
name "polySeparate"
	desc "This command creates new objects from the given poly. A new object will be created for each section of the mesh that is distinct (no edges connect it to the rest of the mesh). This command can only separate one object at a time."
	fcount "3"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Gives a generic name to the resulting objects. "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (where applicable). "
	rcount "2"
		rname "polyBoolOp"
		rname "polyUnite"
name "polySetToFaceNormal"
	desc "PolySetToFaceNormal is undoable , NOT queryable , and NOT editable . This command takes selected polygonal vertices or vertex-faces and changes their normals. If the option userNormal is used, the new normal values will be the face normals arround the vertices/vertex-faces. Otherwise the new normal values will be default values according to the internal calculation."
	fcount "1"
	fnames "setUserNormal su"
		fdesc "when this flag is presented, user normals will be created on each vertex face and the values will be the face normal value. Otherwise the normal values will be the internal computing results. Default is false. "
	rcount "4"
		rname "polyAverageNormal"
		rname "polyNormalPerVertex"
		rname "polyNormal"
		rname "polySoftEdge"
name "polySewEdge"
	desc "Merge border edges within a given threshold. Perform pair-wise comparison of selected edges. Pairs whose corresponding vertices meet threshold conditions and whose orientations are aligned (i.e. their respective normals point in the same direction) are merged, as are the vertices (in other words, vertices are shared). Resulting mesh may have extra vertices or edges to ensure geometry is valid. Edges must be on the same object to be merged. Default : share only vertices lying exactly at the same place. (polySewEdge -t 0.0)."
	fcount "5"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). C: Default is "on". Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "texture tx"
		fdesc "If true : texture is sewn as well as the 3d edge. C: Default is true. Q: When queried, this flag returns an  int . "
	fnames "tolerance t"
		fdesc "The tolerance to sew edges (edge distance) C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "worldSpace ws"
		fdesc "This flag specifies which reference to use. If "on" : tolerance value is taken in world reference. If "off" : tolerance value is considered  in object reference. C: Default is "off". Q: When queried, this flag returns an  int . "
	rcount "11"
		rname "polyCollapseEdge"
		rname "polyMergeEdge"
		rname "polyCollapseFacet"
		rname "polyMergeFacet"
		rname "polyMergeVertex"
		rname "polyDelEdge"
		rname "polyDelFacet"
		rname "polyDelVertex"
		rname "polyCloseBorder"
		rname "polyQuad"
		rname "polyReduce"
name "polySmooth"
	desc "Smooth a polygonal object. This command works on polygonal objects or faces."
	fcount "8"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "continuity c"
		fdesc "This flag specifies the smoothness parameter. The minimum value of 0.0 specifies that the faces should only be subdivided. Maximum value of 1.0 smooths the faces as much as possible. C: Default is 1.0 Q: When queried, this flag returns a  float . "
	fnames "divisions dv"
		fdesc "This flag specifies the number of recursive smoothing steps. C: Default is 1. Q: When queried, this flag returns an  int . "
	fnames "keepBorder kb"
		fdesc "If on, the border of the object will not move during smoothing operation. C: Default is "on". Q: When queried, this flag returns an  int . "
	fnames "keepHardEdge khe"
		fdesc "If true, vertices on hard edges will not be modified. C: Default is false.  Q: When queried, this flag returns a boolean.  "
	fnames "keepSelectionBorder ksb"
		fdesc "If true, vertices on border of the selection will not be modified. C: Default is false.  Q: When queried, this flag returns a boolean.  "
	fnames "keepTessellation kt"
		fdesc "If true, the object will be tessellated consistently at each frame. If false, non-starlike faces will be triangulated before being subdivided, to avoid self-overlapping faces. C: Default is true.  Q: When queried, this flag returns a boolean.  Common flags "
	fnames "name n"
		fdesc "Name the resulting object. "
	rcount "12"
		rname "polyAppend"
		rname "polyAppendVertex"
		rname "polyExtrudeEdge"
		rname "polyExtrudeFacet"
		rname "polyBevel"
		rname "polySplit"
		rname "polySplitVertex"
		rname "polyCreateFacet"
		rname "polySubdivideEdge"
		rname "polySubdivideFacet"
		rname "polyTriangulate"
		rname "polyChipOff"
name "polySoftEdge"
	desc "Selectively makes edges soft or hard. An edge will be made hard if the angle between two owning faces is sharper (larger) than the smoothing angle. An edge wil be made soft if the angle between two owning facets is flatter (smaller) than the smoothing angle."
	fcount "4"
	fnames "angle a"
		fdesc "Smoothing angle.  C: Default is 30 degrees. Q: When queried, this flag returns a  float . "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "worldSpace ws"
		fdesc "This flag specifies which reference to use. If "on" : all geometrical values are taken in world reference. If "off" : all geometrical values are taken in object reference. C: Default is "off". Q: When queried, this flag returns an  int . Common flags "
	rcount "4"
		rname "polyAverageNormal"
		rname "polyNormalPerVertex"
		rname "polyNormal"
		rname "polySetToFaceNormal"
name "polySphere"
	desc "The sphere command creates a new polygonal sphere. polySphere -sx 10 -sy 15 -r 20; Create a sphere, with 10 subdivisions in the X direction, and 15 subdivisions in the Y direction, the radius of the sphere is 20. polySphere -n mySphere -sx 5 -sy 5; Create a sphere, called "mySphere", on each direction there are 5 subdivisions."
	fcount "8"
	fnames "axis ax"
		fdesc "This flag specifies the primitive axis used to build the sphere. Q: When queried, this flag returns a  float[3] . "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Gives a name to the created sphere. "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (where applicable). "
	fnames "radius r"
		fdesc "This flag specifies the radius of the sphere. C: Default is 0.5. Q: When queried, this flag returns a  float . "
	fnames "subdivisionsX sx"
		fdesc "This specifies the number of subdivisions in the X direction for the sphere. C: Default is 20. Q: When queried, this flag returns an  int . "
	fnames "subdivisionsY sy"
		fdesc "This flag specifies the number of subdivisions in the Y direction for the sphere. C: Default is 20. Q: When queried, this flag returns an  int . "
	fnames "texture tx"
		fdesc "This flag alows a texture to be applied. C: Default is "on" (uv's are computed). Q: When queried, this flag returns an  int . Common flags "
	rcount "6"
		rname "polyPlane"
		rname "polyTorus"
		rname "polyCylinder"
		rname "polyCube"
		rname "polyCone"
		rname "polyCube"
name "polySphericalProjection"
	desc "Projects a spherical map onto an object."
	fcount "25"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "createNewMap cm"
		fdesc "This flag when set true will create a new map with a the name passed in, if the map does not already exist. Common flags "
	fnames "imageCenter ic"
		fdesc "This flag specifies the center point of the 2D model layout. C: Default is 0.5 0.5. Q: When queried, this flag returns a  float[2] . "
	fnames "imageCenterX icx"
		fdesc "This flag specifies X for the center point of the 2D model layout. C: Default is 0.5. Q: When queried, this flag returns a  float . "
	fnames "imageCenterY icy"
		fdesc "This flag specifies Y for the center point of the 2D model layout. C: Default is 0.5. Q: When queried, this flag returns a  float . "
	fnames "imageScale is"
		fdesc "This flag specifies the UV scale : Enlarges or reduces the 2D version of the model in U or V space relative to the 2D centerpoint. C: Default is 1.0 1.0. Q: When queried, this flag returns a  float[2] . "
	fnames "imageScaleU isu"
		fdesc "This flag specifies the U scale : Enlarges or reduces the 2D version of the model in U space relative to the 2D centerpoint. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "imageScaleV isv"
		fdesc "This flag specifies the V scale : Enlarges or reduces the 2D version of the model in V space relative to the 2D centerpoint. C: Default is 1.0. Q: When queried, this flag returns a  float . "
	fnames "insertBeforeDeformers ibd"
		fdesc "This flag specifies if the projection node should be inserted before or after deformer nodes already applied to the shape. Inserting the projection after the deformer leads to texture swimming during animation and is most often undesirable. C: Default is on. "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "projectionCenter pc"
		fdesc "This flag specifies the origin point from which the map is projected. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "projectionCenterX pcx"
		fdesc "This flag specifies X for the origin point from which the map is projected. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "projectionCenterY pcy"
		fdesc "This flag specifies Y for the origin point from which the map is projected. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "projectionCenterZ pcz"
		fdesc "This flag specifies Z for the origin point from which the map is projected. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "projectionScale ps"
		fdesc "This flag specifies the width and the height of the map relative to the 3D projection axis. C: Default is 180.0 90.0. Q: When queried, this flag returns a  float[2] . "
	fnames "projectionScaleU psu"
		fdesc "This flag specifies the width of the map relative to the 3D projection axis : the scale aperture. The range is [0, 360]. C: Default is 180.0. Q: When queried, this flag returns a  float . "
	fnames "projectionScaleV psv"
		fdesc "This flag specifies the height of the map relative to the 3D projection axis : the scale height. C: Default is 90.0. Q: When queried, this flag returns a  float . "
	fnames "rotate ro"
		fdesc "This flag specifies the mapping rotate angles. C: Default is 0.0 0.0 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "rotateX rx"
		fdesc "This flag specifies X mapping rotate angle. C: Default is 0.0. Q: When queried, this flag returns a  float[3] . "
	fnames "rotateY ry"
		fdesc "This flag specifies Y mapping rotate angle. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "rotateZ rz"
		fdesc "This flag specifies Z mapping rotate angle. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "rotationAngle ra"
		fdesc "This flag specifies the rotation angle in the mapping space. When the angle is positive, then the map rotates counterclockwise on the mapped model, whereas when it is negative then the map rotates lockwise on the mapped model. C: Default is 10.0. Q: When queried, this flag returns a  float . "
	fnames "seamCorrect sc"
		fdesc "This flag specifies to perform a seam correction on the mapped faces. "
	fnames "smartFit sf"
		fdesc "This flag specifies if the manipulator should be placed best fitting the object, or be placed on the specified position with the specified transformation values.     Default is on. "
	fnames "worldSpace ws"
		fdesc "This flag specifies which reference to use. If on : all geometrical values are taken in world reference. If off : all geometrical values are taken in object reference. C: Default is off. Q: When queried, this flag returns an  int . "
	rcount "13"
		rname "polyProjection"
		rname "polyForceUV"
		rname "untangleUV"
		rname "polyEditUV"
		rname "polyPlanarProjection"
		rname "polyCylindricalProjection"
		rname "polyClipboard"
		rname "polyMoveFacetUV"
		rname "polyMoveUV"
		rname "polyMapCut"
		rname "polyMapDel"
		rname "polyMapSew"
		rname "polyUVSet"
name "polySplit"
	desc "Split facets/edges of a polygonal object. The first and last arguments must be edges. Intermediate points may lie on either a shared face or an edge which neighbors the previous point."
	fcount "5"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "edgepoint ep"
		fdesc "The given edge is split into two new edges  by inserting a new vertex located the given percentage along the edge. "
	fnames "facepoint fp"
		fdesc "A new vertex is inserted,  lying at the given coordinates inside the given face.   Coordinates are given in the local object space. "
	fnames "name n"
		fdesc "Gives a name to the created node. "
	fnames "subdivision s"
		fdesc "Subdivide new edges into the given number of sections. Edges involving free points won't be subdivided. C: Default is 1 (no subdivision). Q: When queried, this flag returns an  int . Common flags "
	rcount "12"
		rname "polyAppend"
		rname "polyAppendVertex"
		rname "polyExtrudeEdge"
		rname "polyExtrudeFacet"
		rname "polyBevel"
		rname "polySplitVertex"
		rname "polyCreateFacet"
		rname "polySubdivideEdge"
		rname "polySubdivideFacet"
		rname "polyTriangulate"
		rname "polySmooth"
		rname "polyChipOff"
name "polySplitCtx"
	desc "Create a new context to split facets on polygonal objects."
	fcount "19"
	fnames "activeNodes anq"
		fdesc "Query only: return the active nodes in the tool "
	fnames "autoCreate ac"
		fdesc "Auto create the result or wait for the Enter key to create the result "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enablesnap es"
		fdesc "Enable/disable custom magnet snapping to start/middle/end of edge "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "immediate im"
		fdesc "Edit only: acts on the object not the tool defaults "
	fnames "magnetsnap ms"
		fdesc "number of extra magnets to snap onto, regularly spaced along the edge "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "precsnap ps"
		fdesc "precision for custom magnet snapping. Range[0,100]. Value 100 means any click on an edge will snap to either extremities or magnets. "
	fnames "previous pv"
		fdesc "Edit only: reset to previously stored values "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "reset rs"
		fdesc "Edit only: reset to default values "
	fnames "snaptoedge ste"
		fdesc "Enable/disable snapping to edge. If enabled any click in the current face will snap to the closest valid edge. If there is no valid edge, the click will be ignored. NOTE: This is different from magnet snapping, which causes the click to snap to certain points along the edge. "
	fnames "subdivision s"
		fdesc "number of sub-edges to add between 2 consecutive edge points. Default is 1. "
	fnames "toolNode tnq"
		fdesc "Query only: the node used for tool defaults "
	rcount "0"
name "polySplitEdge"
	desc "Split Edges. Splits non-manifold edges so as to make them manifold edges. It creates the minimum number of edges that can be created to make the edge manifold. Resulting mesh may have extra vertices or edges to ensure geometry is valid."
	fcount "2"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Name the resulting object. "
	rcount "0"
name "polySplitVertex"
	desc "Use this command to split one or more vertices. A mesh is made up of one or more faces. The faces are defined by edges which connect vertices together. Typically a face will share vertices and edges with adjacent faces in the same mesh. Sharing vertices and edges helps reduce the amount of memory used by a mesh. It also ensures that when a face is moved, all the connected faces move together. Sometimes you may want to separate a face from its connected faces so that it may be moved in isolation. There are three ways to accomplish this.... Refer to full documentation"
	fcount "7"
	fnames "caching cch"
		fdesc "Toggle caching for all attributes so that no recomputation is needed "
	fnames "constructionHistory ch"
		fdesc "If construction history is on then the polySplitVert node will be inserted into the history chain for the mesh.  If construction history is off then the vertex will be split directly in the mesh.  Note: if the mesh already has construction history then this flag is ignored and the polySplitVert node will be inserted into the history chain "
	fnames "edit e"
		fdesc "Edit the attributes of the specified polySplitVert node "
	fnames "name n"
		fdesc "Name the resulting polySplitVertex node "
	fnames "nodeState nds"
		fdesc "Defines how to evaluate the node. "
	fnames "query q"
		fdesc "Set the command to query the attributes of the specified polySplitVert node "
	fnames "worldSpace ws"
		fdesc "Not used by this command "
	rcount "12"
		rname "polyAppend"
		rname "polyAppendVertex"
		rname "polyExtrudeEdge"
		rname "polyExtrudeFacet"
		rname "polyBevel"
		rname "polySplit"
		rname "polyCreateFacet"
		rname "polySubdivideEdge"
		rname "polySubdivideFacet"
		rname "polyTriangulate"
		rname "polySmooth"
		rname "polyChipOff"
name "polyStraightenUVBorder"
	desc "Move border UVs along a simple curve."
	fcount "7"
	fnames "blendOriginal bo"
		fdesc "Interpolation factor between the target and original UV  shape. When the value is 0, the UVs will exactly fit the target curve. When the value is 1, no UV move.  "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "curvature c"
		fdesc "How curved the UV path will be. 0 is a straight line. When the values is 1, the mid point of the curve will be moved  away from a straight line by 1/2 the length of the UV segment. "
	fnames "gapTolerance gt"
		fdesc "When non 0, Small gaps between UV selection are filled. The integer number represent how many UVs must be traversed to connect togeterh selected pieces. "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "preserveLength pl"
		fdesc "How much we want to respect the UV edge ratios. When the value is 1, we build new UV position along the desired curve, respecting the original UV spacings. When the value is 0, new UVs are equally spaced along the curve.  "
	fnames "uvSetName uvs"
		fdesc "Specifies the name of the uv set to edit uvs on. If not  specified will use the current uv set if it exists.  Common flags "
	rcount "0"
name "polySubdivideEdge"
	desc "Subdivides an edge into two or more subedges. Default : divide edge into two edges of equal length."
	fcount "5"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "divisions dv"
		fdesc "The maximum number of vertices to be inserted in each edge. This number may be reduced if it creates edges shorter than the specified minimum length. C: Default is 1 (divide edges in half). Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "size s"
		fdesc "The minimum length of each subedge created. If the given  subdivision creates edges that are shorter than this length, the number of divisions is changed to respect min length. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	fnames "worldSpace ws"
		fdesc "This flag specifies which reference to use. If "on" : all geometrical values are taken in world reference. If "off" : all geometrical values are taken in object reference. C: Default is "off". Q: When queried, this flag returns an  int . Common flags "
	rcount "12"
		rname "polyAppend"
		rname "polyAppendVertex"
		rname "polyExtrudeEdge"
		rname "polyExtrudeFacet"
		rname "polyBevel"
		rname "polySplit"
		rname "polySplitVertex"
		rname "polyCreateFacet"
		rname "polySubdivideFacet"
		rname "polyTriangulate"
		rname "polySmooth"
		rname "polyChipOff"
name "polySubdivideFacet"
	desc "Subdivides a face into quads or triangles. In quad mode, a center point is introduced at the center of each face and midpoints are inserted on all the edges of each face. New faces (all quadrilaterals) are built by adding edges from the midpoints towards the center. In triangle mode, only the center point is created; new faces (all triangles) are created by connecting the center point to all the existing vertices of the face. Default : one subdivision step in quad mode (polySubdFacet -dv 1 -m 0;)."
	fcount "4"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "divisions dv"
		fdesc "This number specifies how many times to  recursively subdivide the selected faces.   For example, with divisions set to 3 in quad mode, each initial quadrilateral will be recursively subdivided into 4 subfaces 3 times, yielding a total of 4 * 4 * 4 = 64 faces. C: Default is 1. Q: When queried, this flag returns an  int . "
	fnames "mode m"
		fdesc "The subdivision mode.   0: subdivision into quads   1: subdivision into triangles C: Default is 0. Q: When queried, this flag returns an  int . Common flags "
	fnames "name n"
		fdesc "Name the resulting object. "
	rcount "12"
		rname "polyAppend"
		rname "polyAppendVertex"
		rname "polyExtrudeEdge"
		rname "polyExtrudeFacet"
		rname "polyBevel"
		rname "polySplit"
		rname "polySplitVertex"
		rname "polyCreateFacet"
		rname "polySubdivideEdge"
		rname "polyTriangulate"
		rname "polySmooth"
		rname "polyChipOff"
name "polySuperCtx"
	desc "This command creates super contexts to be used with polygon tools. A polySuperCtx will work exactly the same way than a normal super context but will also provide a mechnism which will allow an attached context to know its superContext parent. This will allow to manage dependencies between the attached contexts."
	fcount "2"
	fnames "attach a"
		fdesc "Allows you to attach another context to a super context (If not specified and new superContext will be created) "
	fnames "edit e"
		fdesc "Specifies the name of a context to attach to a superContext. "
	rcount "0"
name "polyToSubdiv"
	desc "This command converts a polygon and produces a subd surface. The name of the new subdivision surface is returned. If construction history is ON, then the name of the new dependency node is returned as well."
	fcount "12"
	fnames "absolutePosition ap"
		fdesc "If true, the possible blind data information that comes from the polygon will be treated as absolute positions of the vertices, instead of the relative offsets.  You most likelly just want to use the default of false, unless you know that the blind data has the absolute positions in it. Default:  false "
	fnames "applyMatrixToResult amr"
		fdesc "If true, the matrix on the input geometry is applied to the object and the resulting geometry will have identity matrix on it.  If false the conversion is done on the local space object and the resulting geometry has the input object's matrix on it. Default:  true "
	fnames "cachedUVs cuv"
		fdesc "Compound attribute that corresponds to uv set of a object It is a multi attribute. The index of the multi has no logical meaning, as indexing is not done by array location but instead by a child attribute (See aUVSetName) "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable) "
	fnames "maxEdgesPerVert me"
		fdesc "The maximum allowed valence for a vertex on the input mesh Default:  32 "
	fnames "maxPolyCount mpc"
		fdesc "The maximum number of polygons accepted on the input mesh. Default:  1000 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dep. node (where applicable) "
	fnames "uvPoints uvp"
		fdesc "This is a cached uv point needed to transfer uv data associated with finer level vertices (when switching between standard editing mode and poly proxy mode. "
	fnames "uvPointsU uvu"
		fdesc "U value of a cached uv point "
	fnames "uvPointsV uvv"
		fdesc "V value of a cached uv point "
	fnames "uvTreatment uvt"
		fdesc "Treatment of Subd UVs when in proxy mode: 0 - preserve Subd UVs 1 - build Subd UVs from Poly UVs 2 - no UVs on Subd Default:  0 "
	rcount "12"
		rname "changeSubdivComponentDisplayLevel"
		rname "querySubdiv"
		rname "subdiv"
		rname "changeSubdivRegion"
		rname "refineSubdivSelectionList"
		rname "subdivCrease"
		rname "createSubdivRegion"
		rname "subdCollapse"
		rname "subdivDisplaySmoothness"
		rname "nurbsToSubdiv"
		rname "subdToBlind"
		rname "subdToPoly"
name "polyTorus"
	desc "The torus command creates a new polygonal torus."
	fcount "10"
	fnames "axis ax"
		fdesc "This flag specifies the primitive axis used to build the torus. Q: When queried, this flag returns a  vector . "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Gives a name to the created torus. "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (where applicable). "
	fnames "radius r"
		fdesc "This flag specifies the radius of the torus. C: Default is 0.5. Q: When queried, this flag returns a  float . "
	fnames "sectionRadius sr"
		fdesc "This flag specifies the section radius of the torus. C: Default is 0.25. Q: When queried, this flag returns a  float . "
	fnames "subdivisionsX sx"
		fdesc "This specifies the number of subdivisions in the X direction for the torus (number of sections). C: Default is 20. Q: When queried, this flag returns an  int . "
	fnames "subdivisionsY sy"
		fdesc "This flag specifies the number of subdivisions in the Y direction for the torus (number of segments per section). C: Default is 20. Q: When queried, this flag returns an  int . "
	fnames "texture tx"
		fdesc "This flag alows a texture to be applied. C: Default is "on" (uv's are computed). Q: When queried, this flag returns an  int . Common flags "
	fnames "twist tw"
		fdesc "This flag specifies the section twist of the torus. C: Default is 0.0. Q: When queried, this flag returns a  float . "
	rcount "6"
		rname "polyPlane"
		rname "polyCylinder"
		rname "polySphere"
		rname "polyCube"
		rname "polyCone"
		rname "polyCube"
name "polyTransfer"
	desc "Transfer information from one polygonal object to another one. Both objects must have identical topology, that is same vertex, edge, and face numbering. The flags specify which of the vertices, UV sets vertex colors, or triangles will be copied."
	fcount "7"
	fnames "alternateObject ao"
		fdesc "Name of the alternate object. "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "triangles t"
		fdesc "When true, the triangulation is copied from the alternate object. This is only useful if the node is the  last operation in the obejct history. Any subsequent operation may change the triangulation. Warning: Copying the triangulation from an object to another may result in rendering artifacts for holed or concave faces. C: Default is "off". Common flags "
	fnames "uvSets uv"
		fdesc "When true, the UV sets are copied from the alternate object. C: Default is "on". "
	fnames "vertexColor vc"
		fdesc "When true, the colors per vertex are copied from the alternate object. C: Default is "off". "
	fnames "vertices v"
		fdesc "When true, the vertices positions are copied from the alternate object. C: Default is "off". "
	rcount "0"
name "polyTriangulate"
	desc "Triangulation breaks polygons down into triangles, ensuring that all faces are planar and non-holed. Triangulation of models can be beneficial in many areas."
	fcount "2"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Name the resulting object. "
	rcount "12"
		rname "polyAppend"
		rname "polyAppendVertex"
		rname "polyExtrudeEdge"
		rname "polyExtrudeFacet"
		rname "polyBevel"
		rname "polySplit"
		rname "polySplitVertex"
		rname "polyCreateFacet"
		rname "polySubdivideEdge"
		rname "polySubdivideFacet"
		rname "polySmooth"
		rname "polyChipOff"
name "polyUVSet"
	desc "PolyUVSet is undoable , queryable , and editable . Command to do the following to uv sets: - delete an existing uv set. - rename an existing uv set. - create a new empty uv set. - copy the values from one uv set to a another pre-existing uv set. - set the current uv set to a pre-existing uv set. - query the current uv set. - set the current uv set to the last uv set added to an object. - query the names of all uv sets."
	fcount "11"
	fnames "allUVSets auv"
		fdesc "This flag when used in in a query will return a list of all of the uv set names "
	fnames "allUVSetsIndices uvn"
		fdesc "This flag when queried will return a list of the logical plug indices of all the uv sets in the sparse uv set array. "
	fnames "copy cp"
		fdesc "This flag when used will result in the copying of the uv set corresponding to name specified with the uvSet flag to the uvset corresponding to the name specified with the newUVSet flag "
	fnames "create cr"
		fdesc "This flag when used will result in the creation of an empty uv set corresponding to the name specified with the uvSet flag. If a uvSet with that name already exists, then no new uv set will be created. "
	fnames "currentLastUVSet luv"
		fdesc "This flag when used will set the current uv set that the object needs to work on, to be the last uv set added to the object. If no uv set exists for the object, then no uv set name will be returned. "
	fnames "currentUVSet cuv"
		fdesc "This flag when used will set the current uv set that the object needs to work on, to be the uv set corresponding to the name specified with the uvSet flag. This does require that a uvSet with the specified name exist. When queried, this returns the current uv set. "
	fnames "delete d"
		fdesc "This flag when used will result in the deletion of the uv set corresponding to the name specified with the uvSet flag. "
	fnames "newUVSet nuv"
		fdesc "Specifies the name that the uv set corresponding to the name specified with the uvSet flag, needs to be renamed to. "
	fnames "projections pr"
		fdesc "This flag when used in a query will return a list of polygon uv projection node names. The order of the list is from most-recently-applied to least-recently-applied. "
	fnames "rename rn"
		fdesc "This flag when used will result in the renaming of the uv set corresponding to the name specified with the uvSet flag to the name specified using the newUVSet flag. "
	fnames "uvSet uvs"
		fdesc "Specifies the name of the uv set that this command needs to work on. This flag has to be specified for this command to do anything meaningful other than query the current uv set. "
	rcount "13"
		rname "polyProjection"
		rname "polyForceUV"
		rname "untangleUV"
		rname "polyEditUV"
		rname "polyPlanarProjection"
		rname "polyCylindricalProjection"
		rname "polyClipboard"
		rname "polySphericalProjection"
		rname "polyMoveFacetUV"
		rname "polyMoveUV"
		rname "polyMapCut"
		rname "polyMapDel"
		rname "polyMapSew"
name "polyUnite"
	desc "This command creates a new poly as an union of a list of polys If no objects are specified in the command line, then the objects from the active list are used."
	fcount "3"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (where applicable). "
	rcount "2"
		rname "polySeparate"
		rname "polyBoolOp"
name "polyWedgeFace"
	desc "Extrude faces about an axis. The axis is the average of all the selected edges. If the edges are not aligned, the wedge may not look intuitive. To separately wedge faces about different wedge axes, the command should be issued as many times as the wedge axes. (as in the second example)."
	fcount "6"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). "
	fnames "divisions d"
		fdesc "This flag specifies the number of subdivisions along the extrusion. "
	fnames "edge ed"
		fdesc "This flag specifies the edgeId, that should be used to perform the wedge about.  Multiple edges can be specified.  The wedge operation is performed about an axis which is the average of all the edges. It is recommended that only colinear edges are  used, otherwise the result may not look intuitive. "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "wedgeAngle wa"
		fdesc "This flag specifies the angle of rotation. "
	fnames "worldSpace ws"
		fdesc "This flag specifies which reference to use. If "on" : all geometrical values are taken in world reference. If "off" : all geometrical values are taken in object reference. C: Default is off. Q: When queried, this flag returns an  int . Common flags "
	rcount "3"
		rname "polyExtrudeFacet"
		rname "polyExtrudeEdge"
		rname "polyChipOff"
name "popen"
	desc "Like fopen, popen opens a file for reading or writing depending on the second mode argument ("r" or "w"). The command is executed using the system function call and a pipe is created from that command's input or output. If popen returns 0 something went wrong. The standard file functions for reading and writing to/from a file may be used on the pipe opened by popen (fprint, fgetword, fgetline etc)."
	fcount "0"
	rcount "0"
name "popupMenu"
	desc "This command creates a popup menu and attaches it to the current control if no parent is specified. The popup menu is posted with the right mouse button by default. Popup menus can be added to any kind of control, however, on some widgets, only the standard menu button (3rd mouse button) can be used to trigger popup menus. This is to meet generally accepted UI guidelines that assign the 3rd mouse button and only this one to popup menus, and also to prevent unexpected behavior of controls like text fields, that expect 1st and 2nd button to be reserved.... Refer to full documentation"
	fcount "30"
	fnames "allowOptionBoxes aob"
		fdesc "Indicate whether the menu will be able to support option box menu items.  An error results if an option box item is added to a menu that doesn't allow them.  This flag may be queried and must be specified when the popup menu is created.  The default value is false. "
	fnames "altModifier alt"
		fdesc "Specify this flag if the Alt modifier must be pressed when posting the popup menu. "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "button b"
		fdesc "Indicate which button posts the popup menu.  Valid values range from 1 to 3 where 1 is the left most button on the mouse. "
	fnames "ctrlModifier ctl"
		fdesc "Specify this flag if the Cntl modifier must be pressed when posting the popup menu. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "deleteAllItems dai"
		fdesc "Delete all the items in this menu. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "itemArray ia"
		fdesc "Return string array of the menu item names. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "markingMenu mm"
		fdesc "Set the marking menu state of this popup menu. "
	fnames "numberOfItems ni"
		fdesc "Return number of items in the menu. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "postMenuCommand pmc"
		fdesc "Specify a script to be executed when the popup menu is about to be shown. "
	fnames "postMenuCommandOnce pmo"
		fdesc "Indicate the  -pmc/postMenuCommand  should only be invoked once.  Default value is false, ie. the  -pmc/postMenuCommand  is invoked every time the popup menu is shown. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "shiftModifier sh"
		fdesc "Specify this flag if the Shift modifier must be pressed when posting the popup menu. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "pose"
	desc "Pose is undoable , queryable , and editable . This command is used to create character poses."
	fcount "3"
	fnames "allPoses ap"
		fdesc "This flag is used to query all the poses in the scene. "
	fnames "apply a"
		fdesc "This flag is used in conjunction with the name flag to specify a pose should be applied to the character. "
	fnames "name n"
		fdesc "In create mode, specify the pose name. In query mode, return a list of all the poses for the character. In apply mode, specify the pose to be applied. "
	rcount "5"
		rname "character"
		rname "clipSchedule"
		rname "pose"
		rname "clipEditor"
		rname "clip"
name "pow"
	desc "Raises the first argument to the power of the second argument and returns the result."
	fcount "0"
	rcount "0"
name "print"
	desc "The print command displays its argument in the Script Editor (or in standard output in batch mode). If the argument is not a string it is converted to one. Float, vector, and matrix arguments are always printed with C format code %.10g. Vectors are formatted with spaces separating components. Matrices are formatted with commas separating elements of a row, and each row begins on a new line. They are surrounded by >. Arrays are formatted with each element on a new line. New lines are not automatically appended to output."
	fcount "0"
	rcount "0"
name "progressBar"
	desc "Creates a progress bar control that graphically fills in as its progress value increases."
	fcount "29"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "beginProgress bp"
		fdesc "Only valid for the main progress bar Shows the main progress bar (normally in the Help Line).  This is normally issued through MEL when a length computation is about to occur. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "endProgress ep"
		fdesc "Only valid for the main progress bar Hides the progress bar. No other flags can be used at the  same time. This is normally issued through  MEL in response to the -ic/isCancelled flag being set or if the progress  value reaches its maximum. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isCancelled ic"
		fdesc "Returns true if the user has tried to cancel the operation. Returns false otherwise. "
	fnames "isInterruptable ii"
		fdesc "Only valid for the main progress bar  Returns true if the isCancelled flag should respond to attempts to cancel the operation. Setting this to true will put make the help  line display message to the user	indicating that they can cancel the  operation. "
	fnames "isMainProgressBar imp"
		fdesc "Determines whether this progressBar is used to show the progress of all basic operations such as Open/Save file. The main progressBar behaves very differently, in that it only shows itself when there is an ongoing basic operation. Defaults to false, and only one progress bar will be recognized as the "main" one. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "maxValue max"
		fdesc "The maximum or "ending" value of the progress indicator. If the progress value is greater than the -max/maxValue, the  progress value will be set to the maximum. Default value is 100. "
	fnames "minValue min"
		fdesc "The minimum or "starting" value of the progress indicator. If the progress value is less than the -min/minValue, the  progress value will be set to the minimum. Default value is 0. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "progress pr"
		fdesc "The amount of progress currently shown on the control. The value will always be between min and max. Default is equal to the minimum when the control is created. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "status st"
		fdesc "Only valid for the main progress bar Sets the contents of the helpLine control when the progressBar is showing. Use this instead of setting the helpLine directly because this will force a graphical refresh before returning. "
	fnames "step s"
		fdesc "Increments the -pr/progress value by the amount specified. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "progressWindow"
	desc "The progressWindow command creates a window containing a status message, a graphical progress gauge, and optionally a "Hit ESC to Cancel" label for interruptable operations. Only one progress window is allowed on screen at a time. While the window is visible, the busy cursor is shown."
	fcount "9"
	fnames "endProgress ep"
		fdesc "Terminates the progress window. No other flags can be used at the same time. This is normally issued through  MEL in response to the -ic/isCancelled flag being set or if the progress  value reaches its maximum. "
	fnames "isCancelled ic"
		fdesc "Returns true if the user has tried to cancel the operation. Returns false otherwise. "
	fnames "isInterruptable ii"
		fdesc "Returns true if the progress window should respond to attempts to cancel the operation. The cancel button is disabled if this is set  to true. "
	fnames "maxValue max"
		fdesc "The maximum or "ending" value of the progress indicator. If the progress value is greater than the -max/maxValue, the  progress value will be set to the maximum. Default value is 100. "
	fnames "minValue min"
		fdesc "The minimum or "starting" value of the progress indicator. If the progress value is less than the -min/minValue, the  progress value will be set to the minimum. Default value is 0. "
	fnames "progress pr"
		fdesc "The amount of progress currently shown on the control. The value will always be between min and max. Default is equal to the minimum when the control is created. "
	fnames "status st"
		fdesc "The status text appearing above the progress gauge. "
	fnames "step s"
		fdesc "Increments the -pr/progress value by the amount specified. "
	fnames "title t"
		fdesc "The window title. "
	rcount "0"
name "projFileViewer"
	desc "This command creates a viewer that lists the project files in the current working directory. The viewer can then be attached to a pane."
	fcount "14"
	fnames "clear cl"
		fdesc "Clear all items. "
	fnames "deselectIndexedItem dii"
		fdesc "Deselect the given index item. "
	fnames "deselectItem di"
		fdesc "Deselect the given item. "
	fnames "displayHidden dh"
		fdesc "Indicates whether hidden files should be displayed or not. "
	fnames "displayMode dm"
		fdesc "Set the display mode. Default is icon. Mode 0 displays as text. Mode 1 displays as large icons. Mode 2 displays as small icons. "
	fnames "doubleClickCommand dcc"
		fdesc "String is a command which is executed on a double click. "
	fnames "forceRefresh fr"
		fdesc "Force the displayed items to be refreshed. "
	fnames "numberOfItem ni"
		fdesc "Return the number of items. "
	fnames "numberOfSelectedItem nsi"
		fdesc "Return the number of selected items. "
	fnames "selectCommand sc"
		fdesc "String is a command which is executed when an item is selected. "
	fnames "selectItem si"
		fdesc "Select the given item. "
	fnames "sortBy sb"
		fdesc "Specifies how the entry should be sorted.  Possible values are "name", "date", and "size". "
	fnames "updateCommand uc"
		fdesc "Specify the update command. "
	fnames "workspace ws"
		fdesc "Specify the workspace that this viewer works on. "
	rcount "0"
name "projectCurve"
	desc "The projectCurve command creates curves on surface where all selected curves project onto the selected surfaces. Projection can be done using the surface normals or the user can specify the vector to project along. Note: the user does not have to specify the curves and surfaces in any particular order in the command line."
	fcount "14"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "direction d"
		fdesc "Direction of projection. Available only if useNormal is false. "
	fnames "directionX dx"
		fdesc "X direction of projection. Default:  0.0 "
	fnames "directionY dy"
		fdesc "Y direction of projection. Default:  0.0 "
	fnames "directionZ dz"
		fdesc "Z direction of projection. Default:  1.0 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "tolerance tol"
		fdesc "Tolerance to fit to. Default:  0.01 "
	fnames "useNormal un"
		fdesc "True if the surface normal is to be used and false if the direction vector should be used instead. Default:  false "
	rcount "3"
		rname "curveOnSurface"
		rname "intersect"
		rname "duplicateCurve"
name "projectTangent"
	desc "The project tangent command is used to align (for tangents) a curve to two other curves or a surface. A surface isoparm may be selected to define the direction (U or V) to align to. The end of the curve must intersect with these other objects. Curvature continuity may also be applied if required. Tangent continuity means the end of the curve is modified to be tangent at the point it meets the other objects. Curvature continuity means the end of the curve is modified to be curvature continuous as well as tangent. If the normal tangent direction is used,.... Refer to full documentation"
	fcount "15"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curvature c"
		fdesc "Curvature continuity is on if true and off otherwise. Default:  false "
	fnames "curvatureScale cs"
		fdesc "Curvature scale applied to curvature of curve to align. Available if curvature option is true. Default:  0.0 "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "ignoreEdges ie"
		fdesc "If false, use the tangents of the trim edge curves if the surface is trimmed. If true, use the tangents of the underlying surface in the U/V directions. Default:  false "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "reverseTangent rt"
		fdesc "Reverse the tangent direction if true and leave it the way it is if false. Default:  false "
	fnames "rotate ro"
		fdesc "Amount by which the tangent of the curve to align will be rotated. Available only if the normal direction (3) is not used for tangentDirection. Default:  0.0 "
	fnames "tangentDirection td"
		fdesc "Tangent align direction type legal values: 1=u direction (of surface or use first curve), 2=v direction (of surface or use second curve), 3=normal direction (at point of intersection). Default:  1 "
	fnames "tangentScale ts"
		fdesc "Tangent scale applied to tangent of curve to align. Default:  1.0 "
	rcount "0"
name "projectionContext"
	desc "Set the context for projection manips."
	fcount "0"
	rcount "0"
name "projectionManip"
	desc "Various commands to set the manipulator to interesting positions."
	fcount "3"
	fnames "fitBBox fb"
		fdesc "Fit the projection manipulator size and position to the shading group bounding box. The orientation is not modified. "
	fnames "projType pt"
		fdesc "Set the projection type to the given value. Projection type values are: - 1 = planar. - 2 = spherical. - 3 = cylindrical. - 4 = ball. - 5 = cubic. - 6 = triplanar. - 7 = concentric. - 8 = camera. "
	fnames "switchType st"
		fdesc "Loop over the allowed types. If the hardware shading is on, it loops over the hardware shadeable types (planar, cylindrical, spherical), otherwise, it loops over all the types. If there is no given value, it loops over the different projection types. "
	rcount "0"
name "promptDialog"
	desc "The promptDialog command creates a modal dialog with a message to the user, a text field in which the user may enter a response, and a variable number of buttons to dismiss the dialog. The dialog is dismissed when the user presses any button or chooses the close item from the window menu. In the case where a button is pressed then the name of the button selected is returned. If the dialog is dismissed via the close item then the string returned is specified by the -ds/dismissString flag. The default behaviour when no arguments are specified is to create.... Refer to full documentation"
	fcount "11"
	fnames "backgroundColor bgc"
		fdesc "The background color of the dialog. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "button b"
		fdesc "Create a button with the given string as it's text. "
	fnames "cancelButton cb"
		fdesc "The cancel button is activated by pressing the escape key. Note that this flag does not create a button, it simply indicates which button created via the  -b/button  flag shall respond to the escape key. "
	fnames "defaultButton db"
		fdesc "The default button is activated by pressing the enter key. Note that this flag does not create a button, it simply indicates which button created via the  -b/button  flag shall respond to the enter key. "
	fnames "dismissString ds"
		fdesc "The string returned when the user selects the 'Close' item from the Window Manager menu.  If this flag is not set then the string "dismiss" is returned. "
	fnames "message m"
		fdesc "The message text appearing in the dialog. "
	fnames "messageAlign ma"
		fdesc "Align the message  left ,  center , or  right . "
	fnames "parent p"
		fdesc "Specify the parent window for the dialog.  The dialog will be centered on this window and raise and lower with it's parent. By default, the dialog is not parented to a particular window and is simply centered on the screen. "
	fnames "scrollableField sf"
		fdesc "By default a single line text field is used in the dialog. Specify true for a multi-line scroll field. "
	fnames "text tx"
		fdesc "The field text. "
	fnames "title t"
		fdesc "The dialog title. "
	rcount "0"
name "propModCtx"
	desc "Controls the proportional move context."
	fcount "15"
	fnames "animCurve ac"
		fdesc "Name of the anim curve to use as a drop-off curve. Only the 0 -> side of the curve will be used and the distance will be mapped to "seconds".  The profile of the curve will be used as the profile for propmod function. "
	fnames "animCurveFalloff acf"
		fdesc "The profile of the curve will be used as the profile for propmod function in  both U and V. This will be scaled in U, V according to the paramters provided. The ratio of the U, V scaling parameters will dictate the footprint of the fuction while the curve itself provides the magnitudes. "
	fnames "animCurveParam acp"
		fdesc "Name of the anim curve to use as a drop-off curve. Only the 0 -> side of the curve will be used and the distance will be mapped to "seconds", where 1 second maps to 0.01 units in parametric space.  "
	fnames "direction d"
		fdesc "Direction along which to compute the distance for the distance based drop-off functions.  The default is (1 1 1) "
	fnames "linear l"
		fdesc "If using linear drop-off function, this is its slope.  The default of -0.1 means the point at the locator moves with it and the point 10 units away doesn't move at all. "
	fnames "linearParam lp"
		fdesc "If using parametric linear drop-off function, these specify one of it's limits, 0 for U, and 1 and V.  "
	fnames "nurbsCurve nc"
		fdesc "Name of the nurbs curve to use as a drop-off curve. The closest point distance would be used as the drop off percentage.  "
	fnames "powerCutoff pc"
		fdesc "If using the power drop-off function, this is its distance cutoff value.  The default is 10.0. "
	fnames "powerCutoffParam pcp"
		fdesc "If using the power drop-off function, these specify one of it's limits, 0 for U, and 1 and V.  The default cutoff is 10.0. "
	fnames "powerDegree pd"
		fdesc "If using the power drop-off function, this is its degree.  The default is 3. "
	fnames "powerDegreeParam pdp"
		fdesc "If using the power drop-off function, this is its degree.  The default is 3. "
	fnames "script s"
		fdesc "The name of the script to use to compute the drop-off. The script takes 6 floats as input - first 3 are the position of the move locator, the next 3 the position of the point to be manipulated.  The script should return a drop-off coefficient which could be negative or zero. "
	fnames "scriptParam sp"
		fdesc "The name of the script to use to compute the drop-off. The script takes 4 floats as input - first 2 are the parametric position of the move locator, the next 2 the parametric position of  the point to be manipulated.  The script should return a drop-off coefficient which could be negative or zero. "
	fnames "type t"
		fdesc "Choose the type for the drop-off function.  Legal values are 1 for linear, 2 for power, 3 for script, 4 for anim curve. The default is 1. "
	fnames "worldspace ws"
		fdesc "Set the space in which the tool works. True for  world space, false for parametric space. "
	rcount "0"
name "propMove"
	desc "Performs a proportional translate, scale or rotate operation on any number of objects. The percentages to rotate, scale or translate by can be specified using either the -p flags or -px, -py, -pz flags. Each selected object must have a corresponding -p or -px, -py, -pz flag. The rotate, scale or translate performed is relative."
	fcount "8"
	fnames "percent p"
		fdesc "The percentage effect that the specified x,y,z has on an object. This flag must be specified once for each object, ie. if there are 4 objects specified, there must be 4 "-p" flags, (otherwise a percentage of 1.0 will be used).  This flag generally has a  range between 0.0 and 1.0, but can be any float value. "
	fnames "percentX px"
		fdesc "The percentage effect that the specified x has on an object. This flag is specified one per object. The value ranges between 0.0 and 1.0, but can be any float value. If the -p flag has been specified, this flag usage is invalid. "
	fnames "percentY py"
		fdesc "The percentage effect that the specified y has on an object. This flag is specified one per object. The value ranges between 0.0 and 1.0, but can be any float value. If the -p flag has been specified, this flag usage is invalid. "
	fnames "percentZ pz"
		fdesc "The percentage effect that the specified z has on an object. This flag is specified one per object. The value ranges between 0.0 and 1.0, but can be any float value. If the -p flag has been specified, this flag usage is invalid. "
	fnames "pivot pi"
		fdesc "Specify the pivot about which a rotation or scale will occur. The change in pivot lasts only as long as the current 'propMove' command, and so must be used in conjunction with one of the above move flags for any effect to be noticeable. "
	fnames "rotate r"
		fdesc "Proportionally rotate each object by the given angles. The rotation values are scaled by the percentage specified by that object's  corresponding "-percent" flag. All angles are in degrees. The rotation is about the pivot specified by the "-pivot" flag, or (0, 0, 0)  if the "-pivot" flag is not present. "
	fnames "scale s"
		fdesc "Proportionally scale each object by the given amounts. The scale values are scaled by the percentage specified by that object's corresponding "-percent" flag. The position and size of each object is measured relative to the pivot specified by the "-pivot" flag, and defaults to each object's individual pivot. In the case of control vertices, or some other object component, the default is the parent object's pivot. "
	fnames "translate t"
		fdesc "Proportionally translate each object by the given amounts. The translation values are scaled by the percentage specified by that object's corresponding "-percent" flag. The "-pivot" flag has no effect on translation. "
	rcount "0"
name "psdExport"
	desc "PsdExport is NOT undoable , queryable , and NOT editable . Writes the Photoshop file layer set into different formats. The output file depth (bit per channel ) can be different from that of the input. If the input is 16 bpc and output is 8 bpc, there will be data loss."
	fcount "9"
	fnames "format for"
		fdesc "Output file format. Any of these keyword: "iff", "sgi", "pic", "tif", "als", "gif", "rla", "jpg" Default is iff. "
	fnames "bytesPerChannel bpc"
		fdesc "Output file depth. Any of these keyword: 0 for choosing depth based on input 1 for 8 bits per channel 2 for 16 bits per channel Default is 0. "
	fnames "outFileName ofn"
		fdesc "Name(with path) of the output file. "
	fnames "psdFileName ifn"
		fdesc "Name(with path) of the input Photoshop file. "
	fnames "layerSetName lsn"
		fdesc "Name of the layer set to output, if not supplied, writes out the Composite image. "
	fnames "layerName lyn"
		fdesc "Name of the layer to output. "
	fnames "alphaChannelIdx aci"
		fdesc "Index of the alpha channel to output, if not supplied, writes out the default alpha channel.  The index is zero based. This is useful to write out specific alpha channels available as "Additional Alpha Channels" of Photoshop. "
	fnames "preMultiplyAlpha pma"
		fdesc "Option to multiply RGB colors with alpha values.  If (r,g,b,a) is the value of pixel, it will be changed to (r*a, g*a, b*a, a) when this flag is used. "
	fnames "emptyLayerSet els"
		fdesc "Option to check if the given layer set is empty or not.  This should be used in query mode and input file name and layer set names should be specified. "
	rcount "0"
name "psdTextureFile"
	desc "Creates a Photoshop file with UVSnap shot image and the layer set names as the input."
	fcount "7"
	fnames "channelRGB chc"
		fdesc "(M) Layer set names, index, red, green and blue values are given as input.  Using this flag, the layers created can be filled with specified  colors.  This is a multi use flag.  The index specifies the placement order of layer sets in the created file. "
	fnames "channels chs"
		fdesc "(M) Layer set names and index are given as input. This is a multi use flag. A layer set with the given name will be created.  The second argument is the index which specifies the placement order of layer sets in the created file. The third argument is a boolean, if "true" a layer  is created inside the layer set , "false" creates an  empty layer set "
	fnames "imageFileName ifn"
		fdesc "Image file name, Layerset name and index.  The image in the file will be  transferred to layer set specified.  The index specifies the placement order of layer sets in the created psd file.  The image file  specified can be in any of the formats supported by maya  (ex. iff, jpg, gif, tif etc.) "
	fnames "psdFileName psf"
		fdesc "PSD file name. "
	fnames "snapShotImageName ssi"
		fdesc "Image file name on the disk containing UV snapshot / reference image. "
	fnames "xResolution xr"
		fdesc "X - resolution of the image.  "
	fnames "yResolution yr"
		fdesc "Y - resolution of the image. "
	rcount "0"
name "putenv"
	desc "The first argument is the name of an environment variable and the second argument is the value to be assigned to it. If the environment variable does not exist it is created. Note that commands exec'd via the "system" command will inherit the environment variables set via "putenv"."
	fcount "0"
	rcount "0"
name "pwd"
	desc "Returns a string representing the path of the current working directory for the application. This starts out as the directory where Maya was launched, but will change in response to chdir commands as well as some file browsing operations. This directory is where system-level commands such as system , fopen , and popen . The working directory is not related to the workspace directories where scene data is stored, and should not be used for accessing or creating scene- or project-specific files."
	fcount "0"
	rcount "0"
name "querySubdiv"
	desc "QuerySubdiv is undoable , NOT queryable , and NOT editable . Queries a subdivision surface based on a set of query parameters and updates the selection list with the results."
	fcount "3"
	fnames "action a"
		fdesc "Specifies the query parameter: 1 = find all tweaked verticies at level 2 = find all sharpened vertices at level 3 = find all sharpened edges at level 4 = find all faces at level If the attribute "level" is not specified then the query is applied to the current component display level. If the attribute level is specified then the query is applied to that level, either absolute or relative to the current level based on the "relative" flag state. "
	fnames "level l"
		fdesc "Specify the level of the subdivision surface on which to perform the operation. "
	fnames "relative r"
		fdesc "If set, level flag refers to the level relative to the current component display level. "
	rcount "12"
		rname "changeSubdivComponentDisplayLevel"
		rname "changeSubdivRegion"
		rname "createSubdivRegion"
		rname "nurbsToSubdiv"
		rname "polyToSubdiv"
		rname "refineSubdivSelectionList"
		rname "subdCollapse"
		rname "subdToBlind"
		rname "subdToPoly"
		rname "subdiv"
		rname "subdivCrease"
		rname "subdivDisplaySmoothness"
name "quit"
	desc "This command is used to exit the application."
	fcount "2"
	fnames "abort a"
		fdesc "Will quit without saving like -force, but will also prevent preferences/hotkeys/colors from being saved.  Use at your own risk. "
	fnames "force f"
		fdesc "If specified, this flag will force a quit without saving or prompting for saving changes. Use at your own risk. "
	rcount "0"
name "rad_to_deg"
	desc "Converts from radians to degrees."
	fcount "0"
	rcount "0"
name "radial"
	desc "A radial field pushes objects directly towards or directly away from it, like a magnet. The transform is the associated dependency node. Use connectDynamic to cause the field to affect a dynamic object. If fields are created, this command returns the names of each of the fields. If a field was queried, the results of the query are returned. If a field was edited, the field name is returned. If object names are provided or the active selection list is non-empty, the command creates a field for every object in the list and calls addDynamic to add it to the.... Refer to full documentation"
	fcount "7"
	fnames "attenuation att"
		fdesc "Attentuation rate of field  "
	fnames "magnitude m"
		fdesc "Strength of field.  "
	fnames "maxDistance mxd"
		fdesc "Maximum distance at which field is exerted.  -1 indicates that the field has no maximum distance.  "
	fnames "name n"
		fdesc "name of field  "
	fnames "perVertex pv"
		fdesc "Per-vertex application. If this flag is set true, then each  individual point (CV, particle, vertex,etc.) of the chosen object  exerts an identical copy of the force field. If this flag is set to  false, then the froce is exerted only from the geometric center of the set of points.  "
	fnames "position pos"
		fdesc "Position in space where you want to place a field. The field then emanates from this position in space rather  than from an object. Note that you can both use -pos  (creating a field at a position) and also provide object names.  "
	fnames "type typ"
		fdesc "Type of radial field (0 - 1).  This controls the algorithm by  which the field is attenuated. Type 1, provided for backward  compatibility, specifies the same algorithm as Alias | Wavefront Dynamation. A value between 0 and 1 yields a linear blend.  "
	rcount "3"
		rname "particle"
		rname "connectDynamic"
		rname "addDynamic"
name "radioButton"
	desc "This command creates a radio button that is added to the most recently created radio collection if the -cl/collection flag is not used."
	fcount "29"
	fnames "align al"
		fdesc "The label alignment.  Alignment values are "left", "right", and "center".  Note that the alignment will only be noticable if the control is wider than the label length. By default, the label is aligned "center". "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed when the radio button's state is changed. "
	fnames "collection cl"
		fdesc "To explicitly add a radio button to a collection of radio buttons specify the name of the radio collection. "
	fnames "data da"
		fdesc "Internal data associated with the radio button. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "editable ed"
		fdesc "The edit state of the radio button.  By default, this flag is set to true and the radio button value may be changed by clicking on it.  If false then the radio button is 'read only' and can not be clicked on. The value of the radio button can always be changed with the  -sl/select  flag regardless of the state of the  -ed/editable  flag. "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "The label text.  The default label is the name of the control. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "offCommand ofc"
		fdesc "Command executed when the radio button is turned off. "
	fnames "onCommand onc"
		fdesc "Command executed when the radio button is turned on. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "recomputeSize rs"
		fdesc "If true then the control will recompute it's size to just fit the size of the label.  If false then the control size will remain fixed as you change the size of the label.  The default value of this flag is true. "
	fnames "select sl"
		fdesc "Select the radio button. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "radioButtonGrp"
	desc "This command creates from one to four radio buttons in a single row. By default the radio buttons will share a single collection, but they can also share the collection of another radio button group. The buttons can also have an optional text label. All of the group commands position their individual controls in columns starting at column 1. The layout of each control (ie. column) can be customized using the -cw/columnWidth , -co/columnOffset , -cat/columnAttach , -cal/columnAlign , and -adj/adjustableColumn flags. By default, columns are left aligned with no offset and are 100 pixels wide. Only one column in.... Refer to full documentation"
	fcount "85"
	fnames "adjustableColumn adj"
		fdesc "Specifies which column has an adjustable size that changes with the sizing of the layout.  The column value is a 1-based index.  You may also specify 0 to turn off the previous adjustable column. "
	fnames "adjustableColumn2 ad2"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly two columns.  "
	fnames "adjustableColumn3 ad3"
		fdesc "Specifies that the column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly three columns.  "
	fnames "adjustableColumn4 ad4"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly four columns.  "
	fnames "adjustableColumn5 ad5"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly five columns.  "
	fnames "adjustableColumn6 ad6"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly six columns.  "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed whenever the group changes state. "
	fnames "changeCommand1 cc1"
		fdesc "No Description"
	fnames "changeCommand2 cc2"
		fdesc "No Description"
	fnames "changeCommand3 cc3"
		fdesc "No Description"
	fnames "changeCommand4 cc4"
		fdesc "Specify a changed state command for each respective radio button. "
	fnames "columnAlign cal"
		fdesc "Arguments are : column number, alignment type. Possible alignments are: left | right | center.  Specifies alignment type for the specified column. "
	fnames "columnAlign2 cl2"
		fdesc "Sets the text alignment of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign3 cl3"
		fdesc "Sets the text alignment for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign4 cl4"
		fdesc "Sets the text alignment for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign5 cl5"
		fdesc "Sets the text alignment for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign6 cl6"
		fdesc "Sets the text alignment for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "center". "
	fnames "columnAttach cat"
		fdesc "Arguments are : column number, attachment type, and offset. Possible attachments are: left | right | both.  Specifies column attachment types and offets. "
	fnames "columnAttach2 ct2"
		fdesc "Sets the attachment type of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach3 ct3"
		fdesc "Sets the attachment type for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach4 ct4"
		fdesc "Sets the attachment type for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach5 ct5"
		fdesc "Sets the attachment type for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach6 ct6"
		fdesc "Sets the attachment type for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "both". "
	fnames "columnOffset2 co2"
		fdesc "This flag is used in conjunction with the -columnAttach2 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the two columns.  The offsets applied are based on the attachments  specified with the -columnAttach2 flag.  Ignored if there is not exactly two columns.  "
	fnames "columnOffset3 co3"
		fdesc "This flag is used in conjunction with the -columnAttach3 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the three columns.  The offsets applied are based on the attachments  specified with the -columnAttach3 flag.  Ignored if there is not exactly three columns.  "
	fnames "columnOffset4 co4"
		fdesc "This flag is used in conjunction with the -columnAttach4 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the four columns.  The offsets applied are based on the attachments  specified with the -columnAttach4 flag.  Ignored if there is not exactly four columns.  "
	fnames "columnOffset5 co5"
		fdesc "This flag is used in conjunction with the -columnAttach5 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the five columns.  The offsets applied are based on the attachments  specified with the -columnAttach5 flag.  Ignored if there is not exactly five columns.  "
	fnames "columnOffset6 co6"
		fdesc "This flag is used in conjunction with the -columnAttach6 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the six columns.  The offsets applied are based on the attachments  specified with the -columnAttach6 flag.  Ignored if there is not exactly six columns.  "
	fnames "columnWidth cw"
		fdesc "Arguments are : column number, column width. Sets the width of the specified column where the first parameter specifies the column (1 based index) and the second parameter specifies the width. "
	fnames "columnWidth1 cw1"
		fdesc "Sets the width of the first column.  Ignored if there is not  exactly one column. "
	fnames "columnWidth2 cw2"
		fdesc "Sets the column widths of both columns.  Ignored if there is not exactly two columns. "
	fnames "columnWidth3 cw3"
		fdesc "Sets the column widths for all 3 columns.  Ignored if there is not exactly 3 columns. "
	fnames "columnWidth4 cw4"
		fdesc "Sets the column widths for all 4 columns.  Ignored if there is not exactly 4 columns. "
	fnames "columnWidth5 cw5"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "columnWidth6 cw6"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "data1 da1"
		fdesc "No Description"
	fnames "data2 da2"
		fdesc "No Description"
	fnames "data3 da3"
		fdesc "No Description"
	fnames "data4 da4"
		fdesc "Internal data associated with each radio button. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "editable ed"
		fdesc "The edit state of the group.  By default, this flag is set to true and the radio button values may be changed by clicking on them.  If false then the radio buttons are 'read only' and can not be clicked on. The value of the radio button can always be changed with the  -sl/select  flags regardless of the state of the  -ed/editable  flag. "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "enable1 en1"
		fdesc "No Description"
	fnames "enable2 en2"
		fdesc "No Description"
	fnames "enable3 en3"
		fdesc "No Description"
	fnames "enable4 en4"
		fdesc "Enable state of the individual radio buttons. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "When present on creation an optional text label will be built with the group.  The string specifes the label text. "
	fnames "label1 l1"
		fdesc "No Description"
	fnames "label2 l2"
		fdesc "No Description"
	fnames "label3 l3"
		fdesc "No Description"
	fnames "label4 l4"
		fdesc "Specify label strings for the respective radio buttons in the group. "
	fnames "labelArray2 la2"
		fdesc "No Description"
	fnames "labelArray3 la3"
		fdesc "No Description"
	fnames "labelArray4 la4"
		fdesc "Specify multiple labels in a single flag.  These flags are ignored if the number of radio buttons doesn't match. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "numberOfRadioButtons nrb"
		fdesc "Number of radio buttons in the group (1 - 4). "
	fnames "offCmd ofc"
		fdesc "Command executed when any radio button turns off. "
	fnames "offCommand1 of1"
		fdesc "No Description"
	fnames "offCommand2 of2"
		fdesc "No Description"
	fnames "offCommand3 of3"
		fdesc "No Description"
	fnames "offCommand4 of4"
		fdesc "Off command for each respective radio button. "
	fnames "onCommand onc"
		fdesc "Command executed when any radio button turns on. "
	fnames "onCommand1 on1"
		fdesc "No Description"
	fnames "onCommand2 on2"
		fdesc "No Description"
	fnames "onCommand3 on3"
		fdesc "No Description"
	fnames "onCommand4 on4"
		fdesc "On command for each respective radio button. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rowAttach rat"
		fdesc "Arguments are : attachment type, offset. Possible attachments are: top | bottom | both.  Specifies attachment types  and offsets for the entire row.   "
	fnames "select sl"
		fdesc "Selected radio button.  The argument is a 1 based integer. "
	fnames "shareCollection scl"
		fdesc "Specify the radioButtonGrp that this radio group is to be associated with.  By default the radio group will be a separate collection. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "radioCollection"
	desc "This command creates a radio button collection. Collections are parented to the current default layout if no parent is specified with the -p/parent flag. As children of the layout they will be deleted when the layout is deleted. Collections may also span more than one window if the -gl/global flag is used. In this case the collection has no parent and must be explicitly deleted with the deleteUI command when it is no longer wanted."
	fcount "10"
	fnames "collectionItemArray cia"
		fdesc "Return a string list giving the long names of all the items in this collection. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "global gl"
		fdesc "Set the collection to have no parent layout.  Global collections must be explicitly deleted. "
	fnames "numberOfCollectionItems nci"
		fdesc "Return the number of items in this collection. "
	fnames "parent p"
		fdesc "The parent of the collection.  The collection will be deleted along with the parent. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "select sl"
		fdesc "Select the specified collection item.  If queried will return the name of the currently selected collection item. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "radioMenuItemCollection"
	desc "This command creates a radioMenuItemCollection. Attach radio menu items to radio menu item collection objects to get radio button behaviour. Radio menu item collections will be parented to the current menu if no parent is specified with the -p/parent flag. As children of the menu they will be deleted when the menu is deleted. Collections may also span more than one menu if the -g/global flag is used. In this case the collection has no parent menu and must be explicitly deleted with the deleteUI command when it is no longer wanted."
	fcount "7"
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "global gl"
		fdesc "Set the collection to have no parent menu.  Global collections must be explicitly deleted. "
	fnames "parent p"
		fdesc "The parent of the collection.  The collection will be deleted along with the parent. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "rampColorPort"
	desc "This command creates a control that displays an image representing the ramp node specified, and supports editing of that node."
	fcount "22"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "node n"
		fdesc "Specifies the name of the newRamp texture node  this port will represent. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "selectedColorControl sc"
		fdesc "Set the name of the control (if any) which is to be used to show  the color of the currently selected entry in the ramp. This control will automatically update as the user selects different entries in the ramp, and will modify the selected entry if edited. The type of control must be an attrColorSliderGrp. "
	fnames "selectedPositionControl sp"
		fdesc "Set the name of the control (if any) which is to be used to show  the position of the currently selected entry in the ramp. This control will automatically update as the user selects different entries in the ramp, and will modify the selected entry if edited. The type of control must be an attrFieldSliderGrp. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "rand"
	desc "The command returns random numbers evenly distributed over the range 0->range or in the case of the second version between start_range and end_range. The vector version generates an independent random number for each of the three components. Multiple random number streams: The three stream-based variants of rand accept a stream name parameter which specifies the name of the random number stream to use when generating random numbers. For details on random number streams please refer to the section "An overview of MEL's multiple random number stream support" later in this document. The behaviour of the function is identical to the.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "randstate"
	desc "The command returns the "state" of the random stream named by the string argument. This state information comprises a set of numbers which can be used by an external process (for example, a user-written plug-in) to emulate the random number sequence which is generated by MEL's random number functions."
	fcount "0"
	rcount "0"
name "rangeControl"
	desc "This command creates a control used for displaying and modifying the current playback range."
	fcount "23"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changedCommand cc"
		fdesc "script to be executed when the range changes "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "maxRange max"
		fdesc "Controls the max range displayable in the control "
	fnames "minRange min"
		fdesc "Controls the max range displayable in the control "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "widthHeight wh"
		fdesc "Controls the dimensions of the control "
	rcount "0"
name "readTake"
	desc "This action reads a take (.mov) file to a defined device. See also: writeTake, applyTake."
	fcount "6"
	fnames "angle a"
		fdesc "Sets the angular unit used in the take. Valid strings are "deg", "degree", "rad", and "radian".  C: The default is the current user angular unit. "
	fnames "device d"
		fdesc "Specifies the device into which the take data is read. This is a  required argument.  "
	fnames "frequency f"
		fdesc "The timestamp is ignored and the specified frequency is used. If timeStamp data is not in the .mov file, the -noTimestamp flag should also be used. This flag resample, instead  the data is assumed to be at the specified frequency.  C: If the take file does not use time stamps, the default frequency is 60Hz. "
	fnames "linear l"
		fdesc "Sets the linear unit used in the take. Valid strings are "mm", "millimeter", "cm", "centimeter", "m", "meter", "km",  "kilometer", "in", "inch", "ft", "foot", "yd", "yard", "mi",  and "mile".  C: The default is the current user linear unit. "
	fnames "noTime nt"
		fdesc "Specifies if the take (.mov) file contains time stamps.  C: The default is to assume time stamps are part of the take file. "
	fnames "take t"
		fdesc "Reads the specified take file. It is safest to pass the full path to the flag. "
	rcount "9"
		rname "applyTake"
		rname "filter"
		rname "recordDevice"
		rname "defineDataServer"
		rname "movIn"
		rname "writeTake"
		rname "defineVirtualDevice"
		rname "movOut"
		rname "enableDevice"
name "rebuildCurve"
	desc "This command rebuilds a curve by modifying its parameterization. In some cases the shape may also change. The rebuildType (-rt) determines how the curve is to be rebuilt."
	fcount "19"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "degree d"
		fdesc "The degree of the resulting curve 1 - linear, 2 - quadratic, 3 - cubic, 5 - quintic, 7 - heptic Default:  3 "
	fnames "endKnots end"
		fdesc "End conditions for the curve 0 - uniform end knots, 1 - multiple end knots, Default:  0 "
	fnames "fitRebuild fr"
		fdesc "If true use the least squares fit rebuild. Otherwise use the convert method. Default:  true "
	fnames "keepControlPoints kcp"
		fdesc "If true, the CVs will remain the same. This forces uniform parameterization unless rebuildType is matchKnots. Default:  false "
	fnames "keepEndPoints kep"
		fdesc "If true, keep the endpoints the same. Default:  true "
	fnames "keepRange kr"
		fdesc "Determine the parameterization for the resulting curve. 0 - reparameterize the resulting curve from 0 to 1, 1 - keep the original curve parameterization, 2 - reparameterize the result from 0 to number of spans Default:  1 "
	fnames "keepTangents kt"
		fdesc "If true, keep the end tangents the same. Default:  true "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "rebuildType rt"
		fdesc "How to rebuild the input curve. 0 - uniform, 1 - reduce spans, 2 - match knots, 3 - remove multiple knots, 4 - curvature 5 - rebuild ends 6 - clean Default:  0 "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "smartSurfaceCurveRebuild scr"
		fdesc "If true, curve on surface is rebuild in 3D and 2D info is kept Default:  false "
	fnames "spans s"
		fdesc "The number of spans in resulting curve Used only if rebuildType is uniform. Default:  4 "
	fnames "tolerance tol"
		fdesc "The tolerance with which to rebuild. Default:  0.01 "
	rcount "2"
		rname "fitBspline"
		rname "smoothCurve"
name "rebuildSurface"
	desc "This command rebuilds a surface by modifying its parameterization. In some cases the shape of the surface may also change. The rebuildType (-rt) attribute determines how the surface is rebuilt."
	fcount "21"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "degreeU du"
		fdesc "The degree of the resulting surface in the u direction 0 - maintain current, 1 - linear, 2 - quadratic, 3 - cubic, 5 - quintic, 7 - heptic Default:  3 "
	fnames "degreeV dv"
		fdesc "The degree of the resulting surface in the v direction 0 - maintain current, 1 - linear, 2 - quadratic, 3 - cubic, 5 - quintic, 7 - heptic Default:  3 "
	fnames "direction dir"
		fdesc "The direction in which to rebuild: 0 - U, 1 - V, 2 - Both U and V Default:  2 "
	fnames "endKnots end"
		fdesc "End conditions for the surface 0 - uniform end knots, 1 - multiple end knots, Default:  0 "
	fnames "fitRebuild fr"
		fdesc "If true use the least squares fit rebuild. Otherwise use the convert method. Default:  false "
	fnames "keepControlPoints kcp"
		fdesc "Use the control points of the input surface. This forces uniform parameterization unless rebuildType is 2 (match knots) Default:  false "
	fnames "keepCorners kc"
		fdesc "The corners of the resulting surface will not change from the corners of the input surface. Default:  true "
	fnames "keepRange kr"
		fdesc "Determine the parameterization for the resulting surface. 0 - reparameterize the resulting surface from 0 to 1; 1 - keep the original surface parameterization; 2 - reparameterize the result from 0 to number of spans Default:  1 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "oldRebuildRational orr"
		fdesc "If true this will make rebuild Surfaces with convert option always rational. Use for backward compatibility. Default:  false "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "rebuildType rt"
		fdesc "The rebuild type: 0 - uniform, 1 - reduce spans, 2 - match knots, 3 - remove multiple knots, 4 - force non rational 5 - rebuild ends 6 - trim convert (uniform) 7 - into Bezier mesh Default:  0 "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "spansU su"
		fdesc "The number of spans in the u direction in resulting surface. Used only when rebuildType is 0 - uniform. If 0, keep the same number of spans as the original surface. Default:  4 "
	fnames "spansV sv"
		fdesc "The number of spans in the v direction in resulting surface. Used only when rebuildType is 0 - uniform. If 0, keep the same number of spans as the original surface. Default:  4 "
	fnames "tolerance tol"
		fdesc "The tolerance with which to rebuild Default:  0.01 "
	rcount "0"
name "recordAttr"
	desc "This command sets up an attribute to be recorded. When the record command is executed, any changes to this attribute are recorded. When recording stops these changes are turned into keyframes. If no attributes are specified all attributes of the node are recorded."
	fcount "3"
	fnames "attribute at"
		fdesc "specify the attribute to record "
	fnames "delete d"
		fdesc "don't record the specified attributes "
	fnames "query q"
		fdesc "print the attachments for the specified nodes or attributes "
	rcount "13"
		rname "assignInputDevice"
		rname "getModifiers"
		rname "attachDeviceAttr"
		rname "listDeviceAttachments"
		rname "setAttrMapping"
		rname "detachDeviceAttr"
		rname "listInputDeviceAxes"
		rname "setInputDeviceMapping"
		rname "devicePanel"
		rname "listInputDeviceButtons"
		rname "unassignInputDevice"
		rname "getInputDeviceRange"
		rname "listInputDevices"
name "recordDevice"
	desc "Starts and stops server side device recording. The data is recorded at the device rate. Once recorded, the data may be brought into Maya with the applyTake command. See also: enableDevice, applyTake, readTake, writeTake."
	fcount "7"
	fnames "cleanup c"
		fdesc "Removes the recorded data from the device. "
	fnames "data da"
		fdesc "Specifies if the device has recorded data. If the device is  recording at the time of query, the flag will return false.  Q: When queried, this flag returns an int. "
	fnames "device d"
		fdesc "Specifies which device(s) to start record recording.  The listed device(s) will start recording regardless of their record enable state.  C: The default is to start recording all devices that are  record enabled. "
	fnames "duration dr"
		fdesc "Duration (in seconds) of the recording. When the duration expires, the device will still be in a recording state and must be told to stop recording.  C: The default is 60.  Q: When queried, this flag returns an int. "
	fnames "playback p"
		fdesc "If any attribute is connected to an animation curve, the  animation curve will play back while recording the device(s) including any animation curves attached to attributes being  recorded.  C: The default is false.  Q: When queried, this flag returns an int. "
	fnames "state st"
		fdesc "Start or stop device recording.  C: The default is true.  Q: When queried, this flag returns an int. "
	fnames "wait w"
		fdesc "If -p/playback specified, wait until playback completion before  returning control to the user. This flag is ignored if -p is not used. "
	rcount "9"
		rname "applyTake"
		rname "filter"
		rname "defineDataServer"
		rname "movIn"
		rname "writeTake"
		rname "defineVirtualDevice"
		rname "movOut"
		rname "enableDevice"
		rname "readTake"
name "redo"
	desc "Takes the most recently undone command from the undo list and redoes it."
	fcount "0"
	rcount "0"
name "reference"
	desc "Reference is undoable , queryable , and NOT editable . Use this command to find out which nodes in the scene come from a given referenced file, or which file a given referenced node comes from."
	fcount "8"
	fnames "connectionsBroken cb"
		fdesc "Query returns string[] consisting of attribute pairs representing the connections broken on a node from a referenced file.  The first element of the pair is the source attribute, the second is the destination attribute.  These pairs correspond to the "disconnectAttr" statements in a scene file where changes to a referenced file occur after the referenced file has been opened. "
	fnames "connectionsMade cm"
		fdesc "Query returns string[] consisting of attribute pairs representing the connections made on a node from a referenced file.  The first element of the pair is the source attribute, the second is the destination attribute.  These pairs correspond to the "connectAttr" statements in a scene file where changes to a referenced file occur after the referenced file has been opened. "
	fnames "dagPath dp"
		fdesc "Modifier for -node, -connectionsBroken, and -connectionsMade. Returns the nodes' full dag paths. "
	fnames "filename f"
		fdesc "Query returns string for the name of the referenced file in which the target node is defined.  Querying this flag for a node that is not referenced results in an error. "
	fnames "isNodeReferenced inr"
		fdesc "Query returns boolean: true if the target node comes from a referenced file, false if not. "
	fnames "longName ln"
		fdesc "Modifier for -filename to return the full path. "
	fnames "node n"
		fdesc "Query returns string[] for names of nodes referenced (in a given file, for instance). "
	fnames "shortName sn"
		fdesc "Modifier for -filename to return just the file name. "
	rcount "4"
		rname "listAttr"
		rname "file"
		rname "connectAttr"
		rname "disconnectAttr"
name "refineSubdivSelectionList"
	desc "RefineSubdivSelectionList is undoable , NOT queryable , and NOT editable . Refines a subdivision surface set of components based on the selection list. The selected components are subdivided. The selection list after the command is the newly created components at the finer subdivision level."
	fcount "0"
	rcount "0"
name "refresh"
	desc "This command is used to force a redraw during script execution. Normally, redraw is suspended while scripts are executing but sometimes it is useful to show intermediate results for purposes such as capturing images from the screen. If the -cv flag is specified, then only the current active view is redrawn."
	fcount "2"
	fnames "currentView cv"
		fdesc "Redraw only the current view (default redraws all views). "
	fnames "force f"
		fdesc "Force the refresh regardless of the state of the model. "
	rcount "13"
		rname "currentUnit"
		rname "displayPref"
		rname "hide"
		rname "displayAffected"
		rname "displayRGBColor"
		rname "displayColor"
		rname "displaySmoothness"
		rname "showHidden"
		rname "displayCull"
		rname "displayStats"
		rname "toggle"
		rname "displayLevelOfDetail"
		rname "displaySurface"
name "refreshAE"
	desc "Refreshes the attribute editor. (Only if it's visible.)."
	fcount "0"
	rcount "0"
name "rehash"
	desc "This command checks the script search path for new scripts. In normal operation, MEL will only read the contents of the script path once. This is much more efficient, especially when the script path spans network drives. If a new script is added to a directory on the script path, or the script path is changed, then this command should be called by the user to tell MEL to scan for the new files. The script path is set via the environment variable MAYA_SCRIPT_PATH. It is recommended that you set this in your Maya.env file in your preferences directory."
	fcount "0"
	rcount "0"
name "reloadImage"
	desc "This command reloads an xpm image from disk. This can be used when the file has changed on disk and needs to be reloaded."
	fcount "0"
	rcount "0"
name "removeJoint"
	desc "This command will remove the selected joint or the joint given at the command line from the skeleton. The given(or selected) joint should not be the root joint of the skeleton, and not have skin attached. The command works on the given(or selected) joint. No options or flags are necessary."
	fcount "0"
	rcount "0"
name "removeMultiInstance"
	desc "Removes a particular instance of a multiElement. This is only useful for input attributes since outputs will get regenerated the next time the node gets executed. This command will remove the instance and optionally break all incoming and outgoing connections to that instance. If the connections are not broken (with the -b true) flag, then the command will fail if connections exist."
	fcount "1"
	fnames "break b"
		fdesc "If the argument is true, all connections to the attribute will be broken before the element is removed. If false, then the command will fail if the element is connected. "
	rcount "0"
name "rename"
	desc "Renames the given object to have the new name. If only one argument is supplied the command will rename the (first) selected object. If the new name conflicts with an existing name, the object will be given a unique name based on the supplied name. It is not legal to rename an object to the empty string. When a transform is renamed then any shape nodes beneath the transform that have the same prefix as the old transform name are renamed. For example, "rename nurbsSphere1 ball" would rename "nurbsSphere1|nurbsSphereShape1" to "ball|ballShape". If the new name ends in a single '#'.... Refer to full documentation"
	fcount "1"
	fnames "ignoreShape is"
		fdesc "Indicates that renaming of shape nodes below transform nodes should be prevented. "
	rcount "0"
name "renameAttr"
	desc "Renames the given user-defined attribute from oldName to newName. If the new name conflicts with an existing name then this command will fail. Note that it is not legal to rename an attribute to the empty string."
	fcount "0"
	rcount "0"
name "renameSelectionList"
	desc "Renames all the writable objects on the selection list using the string argument as the base name. For multiple selected objects an incremented value will be appended to the argument name. Note this procedure does not work if any of the items in the selection list have the same child name. For example, group1|child and group2|child both have the same child name. Attempting to use this procedure with those items in the selection list will generate an error stating more than one object matches the child name."
	fcount "0"
	rcount "0"
name "renameUI"
	desc "This command renames the UI object to the specified new name. If the new name is a duplicate, or not valid, then re-naming fails and the old name is returned. NOTE: This command does not update other objects or commands that reference this object by name, so use this command at your own risk."
	fcount "0"
	rcount "0"
name "render"
	desc "Render is NOT undoable , NOT queryable , and NOT editable . The render command is used to start off a MayaSoftware rendering session of the currently active camera. If a rendering is already in progress, then this command stops the rendering. This command is not undoable."
	fcount "8"
	fnames "abortMissingTexture amt"
		fdesc "Aborts renderer when encountered missing texture. Only available when -batch is set "
	fnames "batch b"
		fdesc "Runs in batch mode. Computes the images for all renderable cameras. This is the mel equivalent of running maya in batch mode with the -render flag set. All other flags are ignored when -batch is used. "
	fnames "keepPreImage kpi"
		fdesc "Keep the renderings prior to post-process around. Only available when -batch is set "
	fnames "nglowpass ngl"
		fdesc "overwrite glow pass capabilities (can turn off glow pass globally by setting this value to false) "
	fnames "nshadows nsh"
		fdesc "shadowing capabilities (can turn off shadow globally by setting this value to false) "
	fnames "replace rep"
		fdesc "Replace the rendered image if it already exists. Only available when -batch is set "
	fnames "xresolution x"
		fdesc "Overwrite x resolution "
	fnames "yresolution y"
		fdesc "Overwrite y resolution "
	rcount "0"
name "renderGlobalsNode"
	desc "The renderGlobalsNode creates a render globals node and registers it with the model. The createNode command will not register nodes of this type correctly."
	fcount "2"
	fnames "renderQuality rq"
		fdesc "set the quality to be renderQualityName Must be a renderQuality nodw. "
	fnames "renderResolution rr"
		fdesc "set the resolution to be resolutionName.   Must be a resolution nodw. "
	rcount "0"
name "renderInfo"
	desc "The renderInfo commands sets geometric properties of surfaces of the selected object. The properties set are analogous to the "render stats" or "objectInfo" information in PA."
	fcount "16"
	fnames "castShadows cs"
		fdesc "if object casts shadow or not. "
	fnames "chordHeight ch"
		fdesc "AG tessellation subdivision criteria. "
	fnames "chordHeightRatio chr"
		fdesc "AG tessellation subdivision criteria. "
	fnames "doubleSided ds"
		fdesc "if object double or single sided. "
	fnames "edgeSwap es"
		fdesc "AG tessellation subdivision criteria. "
	fnames "minScreen ms"
		fdesc "AG tessellation subdivision criteria. "
	fnames "opposite o"
		fdesc "if the normals of the object is to be reversed. "
	fnames "smoothShading ss"
		fdesc "if smooth shaded, or flat shaded - applies only to polysets. "
	fnames "unum un"
		fdesc "AG tessellation subdivision criteria. "
	fnames "useChordHeight uch"
		fdesc "AG tessellation subdivision criteria. "
	fnames "useChordHeightRatio ucr"
		fdesc "AG tessellation subdivision criteria. "
	fnames "useDefaultLights udl"
		fdesc "this should not be here. "
	fnames "useMinScreen ums"
		fdesc "AG tessellation subdivision criteria. "
	fnames "utype ut"
		fdesc "AG tessellation subdivision criteria. "
	fnames "vnum vn"
		fdesc "AG tessellation subdivision criteria. "
	fnames "vtype vt"
		fdesc "AG tessellation subdivision criteria. "
	rcount "0"
name "renderLayerButton"
	desc "Creates a render layer bar button widget. This widget contains both the name of the render layer to which it refers and a color swatch indicating it's color assignment. It is used primarily in the construction of the renderLayerBar and render layer Editor window, being the widget used for each render layer in the respective lists."
	fcount "31"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "color cl"
		fdesc "Layer color, specified with normalized real numbers in R, G, B space. "
	fnames "command c"
		fdesc "Set the command to call on a single click. "
	fnames "current cr"
		fdesc "Set this button to display as the current render layer.  The current render layer is the one which the user has the option of adding all newly created objects into.   NB: Setting the render layer button to this state has no effect on the actual current render layer. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "doubleClickCommand dcc"
		fdesc "Set the command to call on a double click. "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "identification id"
		fdesc "This is the integer identification number associated with the render layer. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "Label text for the button. "
	fnames "labelWidth lw"
		fdesc "Query the width of the label part so as to determine if button clicks are in the label part or the colour swatch part. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "name n"
		fdesc "Name of the layer. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "renameCommand rc"
		fdesc "Set the command to call when the render layer gets renamed. "
	fnames "renderableCommand rdc"
		fdesc "Command that is called when the renderable indicator of the render layer button is pressed. "
	fnames "select s"
		fdesc "Set this button to display as a selected render layer. "
	fnames "transparent t"
		fdesc "Indicate whether the render layer color is visible or transparent. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "renderManip"
	desc "This command creates manipulators for cameras or lights."
	fcount "4"
	fnames "camera cam"
		fdesc "Query or edit the visiblity status of the component camera manipulators. The order of components are: cycling index, center of interest, pivot, clipping planes, and unused. "
	fnames "light lt"
		fdesc "Query or edit the visiblity status of the component light manipulators. The order of components are: cycling index, center of interest, and pivot. "
	fnames "spotLight slt"
		fdesc "Query or edit the visiblity status of the component spot light manipulators. The order of components are: cycling index, center of interest, pivot, cone angle, penumbra, look through barn doors, and decay regions. "
	fnames "state st"
		fdesc "Query or edit the state of manipulators on an camera, ambient light, directional light, point light, or spot light. This flag's default value is on. "
	rcount "0"
name "renderPartition"
	desc "Set or query the model's current partition."
	fcount "1"
	fnames "query q"
		fdesc "query as to which render partition we are using. partitionName set the current render partition to "partitionName". "
	rcount "0"
name "renderQualityNode"
	desc "The renderQualityNode creates a render quality node and registers it with the model. The createNode command will not register nodes of this type correctly."
	fcount "0"
	rcount "0"
name "renderThumbnailUpdate"
	desc "Toggle the updating of object thumbnails. (These are visible in tools like the attributeEditor and the Multilister) All thumbnails everywhere will not update to reflect changes to the object until this command is used to toggle to true."
	fcount "0"
	rcount "0"
name "renderWindowEditor"
	desc "Create a editor window that can receive the result of the rendering process."
	fcount "45"
	fnames "autoResize ar"
		fdesc "Lets the render view editor automatically resize the viewport or not. "
	fnames "caption cap"
		fdesc "Sets the caption which appears at the bottom of the render view. "
	fnames "changedCommand cc"
		fdesc "Call the command when something changes in the editor The command should have this prototype : command(string $editor, string $editorCmd, string $updateFunc, int $reason) The possible reasons could be : 0: no particular reason 1: scale color 2: buffer (single/double) 3: axis  4: image displayed 5: image saved in memory "
	fnames "clear cl"
		fdesc "Clear the image with the given color at the given resolution. "
	fnames "control ctl"
		fdesc "Query only. Returns the top level control for this editor. Usually used for getting a parent to attach popup menus. CAUTION: editors may not have controls at times.  This flag can return "NONE" if no control is present. "
	fnames "currentCamera crc"
		fdesc "Get or set the current camera. (used when redoing last render) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "displayImage di"
		fdesc "Set a particular image in the Editor Image Stack as the current Editor Image. Images are added to the Editor Image Stack using the "si/saveImage" flag. "
	fnames "displayStyle dst"
		fdesc "Set how to display the image color is the basic image mask is display the mask channel lum display the luminance channel "
	fnames "docTag dtg"
		fdesc "Attaches a tag to the maya editor. "
	fnames "doubleBuffer dbf"
		fdesc "Set the display in double buffer mode "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "filter f"
		fdesc "Specifies the name of a filter to be placed on this editor. This filters the information coming onto the main list of the editor. "
	fnames "forceMainConnection fmc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. This is a variant of the -mainListConnection flag in that it will force a change even when the connection is locked. This flag is used to reduce the overhead when using the -unlockMainConnection , -mainListConnection, -lockMainConnection flags in immediate  succession. "
	fnames "frameImage fi"
		fdesc "Frames the image inside the window. "
	fnames "frameRegion fr"
		fdesc "Frames the region inside the window. "
	fnames "highlightConnection hlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its highlight list.  Not all editors have a highlight list.  For those who do, it is sort of a secondary selection list. "
	fnames "loadImage li"
		fdesc "load an image from disk and set it as the current Editor Image "
	fnames "lockMainConnection lck"
		fdesc "Locks the current list of objects within the mainConnection, so that only those objects are displayed within the editor. Further changes to the original mainConnection are ignored. "
	fnames "mainListConnection mlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. "
	fnames "marquee mq"
		fdesc "defines a marquee for the render computation. "
	fnames "nbImages nim"
		fdesc "returns the number of images "
	fnames "panel pnl"
		fdesc "Specifies the panel that the editor belongs to.  By default if an editor is created in the create callback of a scripted panel it will belong to that panel.  If an editor doesn't belong to a panel it will be deleted when the window that it is in is deleted. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this editor. This flag will only have an effect if the editor is currently un-parented. "
	fnames "pcaption pca"
		fdesc "Sets the permanent caption which will be in brackets and it will appears at the end of the custom caption.   For instance, it is often used to specify the name of the current renderer.  "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "realSize rs"
		fdesc "Display the image with a one to one pixel match. "
	fnames "removeImage ri"
		fdesc "remove the current Editor Image from the Editor Image Stack "
	fnames "resetRegion rr"
		fdesc "Forces a reset of any marquee/region. "
	fnames "saveImage si"
		fdesc "save the current Editor Image to memory. Saved Editor Images are stored in an Editor Image Stack. The most recently saved image is stored in position 0, the second most recently saved image in position 1, and so on... To set the current Editor Image to a previously saved  image use the "di/displayImage" flag. "
	fnames "scaleBlue sb"
		fdesc "Define the scaling factor for the blue component in the View. The default value is 1 and can be between -1000 to +1000 "
	fnames "scaleGreen sg"
		fdesc "Define the scaling factor for the green component in the View. The default value is 1 and can be between -1000 to +1000 "
	fnames "scaleRed sr"
		fdesc "Define the scaling factor for the red component in the View. The default value is 1 and can be between -1000 to +1000 "
	fnames "selectionConnection slc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its own selection list.  As the user selects things in this editor, they will be selected in the selectionConnection object.  If someone else changes the object, the editor will update to show the change. "
	fnames "showRegion srg"
		fdesc "Shows the current region at the given resolution. "
	fnames "singleBuffer sbf"
		fdesc "Set the display in single buffer mode "
	fnames "snapshot snp"
		fdesc "Makes a copy of the camera of the model editor at the given size. "
	fnames "stateString sts"
		fdesc "Query only flag.  Returns the MEL command that will edit an editor to match the current editor state. The returned command string uses the string variable $editorName in place of a specific name. "
	fnames "toggle tgl"
		fdesc "Turns the ground plane display on/off. "
	fnames "unParent up"
		fdesc "Specifies that the editor should be removed from its layout. This cannot be used with query. "
	fnames "unlockMainConnection ulk"
		fdesc "Unlocks the mainConnection, effectively restoring the original mainConnection (if it is still available), and dynamic updates. "
	fnames "updateMainConnection upd"
		fdesc "Causes a locked mainConnection to be updated from the orginal mainConnection, but preserves the lock state. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "writeImage wi"
		fdesc "write the current Editor Image to disk "
	rcount "0"
name "renderWindowSelectContext"
	desc "Set the selection context for the render view panel."
	fcount "8"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "renderer"
	desc "Renderer is NOT undoable , queryable , and editable . Command to register renders. This command allows you to specify the UI name and procedure names for renderers. The command also allow you to query the UI name and the procedure names for the registered renders."
	fcount "40"
	fnames "rendererUIName ui"
		fdesc "Set or query the rendererUIName for the specified renderer. The rendererUIName is the name of the renderer as it would appear in menus. "
	fnames "renderGlobalsProcedure rg"
		fdesc "This flag is obsolete.  It will be removed in the next release. "
	fnames "iprRenderProcedure ipr"
		fdesc "Set or query the IPR render command associated with the specified renderer. "
	fnames "isRunningIprProcedure isr"
		fdesc "Set or query the isRunningIpr command associated with the specified renderer. "
	fnames "startIprRenderProcedure sti"
		fdesc "Set or query the start IPR render procedure associated with the specified renderer. "
	fnames "stopIprRenderProcedure spi"
		fdesc "Set or query the stop IPR render procedure associated with the specified renderer. "
	fnames "refreshIprRenderProcedure rfi"
		fdesc "Set or query the refresh IPR render procedure associated with the specified renderer. "
	fnames "pauseIprRenderProcedure psi"
		fdesc "Set or query the pause IPR render procedure associated with the specified renderer. "
	fnames "changeIprRegionProcedure cir"
		fdesc "Set or query the change IPR region procedure associated with the specified renderer. "
	fnames "iprOptionsMenuLabel ipm"
		fdesc "Set or query the label for the IPR update options menu which is under the render view's IPR menu. "
	fnames "iprOptionsSubMenuProcedure ips"
		fdesc "Set or query the procedure for creating the sub menu for the IPR update options menu which is under the render view's IPR menu. "
	fnames "renderProcedure r"
		fdesc "Set or query the render command associated with the specified renderer. "
	fnames "renderOptionsProcedure ro"
		fdesc "Set or query the render options procedure associated with the specified renderer. "
	fnames "renderDiagnosticsProcedure rd"
		fdesc "Set or query the render diagnostics procedure associated with the specified renderer. "
	fnames "commandRenderProcedure cr"
		fdesc "Set or query the command line rendering procedure associated with the specified renderer. "
	fnames "batchRenderProcedure br"
		fdesc "Set or query the batch render procedure associated with the specified renderer. "
	fnames "batchRenderOptionsProcedure bro"
		fdesc "Set or query the batch render options procedure associated with the specified renderer. "
	fnames "cancelBatchRenderProcedure cbr"
		fdesc "Set or query returns the cancel batch render procedure associated with the specified renderer. "
	fnames "showBatchRenderProcedure sbr"
		fdesc "Set or query the show batch render procedure associated with the specified renderer. "
	fnames "showRenderLogProcedure srl"
		fdesc "Set or query the log file render procedure associated with the specified renderer. "
	fnames "showBatchRenderLogProcedure brl"
		fdesc "Set or query the log file batch procedure associated with the specified renderer. "
	fnames "renderRegionProcedure rr"
		fdesc "Set or query the render region procedure associated with the specified renderer. "
	fnames "textureBakingProcedure tb"
		fdesc "Set or query the texture baking procedure associated with the specified renderer. "
	fnames "polyPrelightProcedure pp"
		fdesc "Set or query the polygon prelight procedure associated with the specified renderer. "
	fnames "renderingEditorsSubMenuProcedure res"
		fdesc "Set or query the procedure reponsible for creating renderer specific editors submenu under the "Rendering Editors" menu for the specified renderer. "
	fnames "renderMenuProcedure rm"
		fdesc "This flag is obsolete. It will be removed in the next release. "
	fnames "logoImageName log"
		fdesc "Set or query the logo image name for the specified renderer. The logo is a image representing the renderer. "
	fnames "logoCallbackProcedure lgc"
		fdesc "Set or query the procedure which is a callback associated to the logo for the specified renderer.   For example, the logo and the callback can be used in the unified render globals window beside the "Render Using" optionMenu. "
	fnames "namesOfAvailableRenderers ava"
		fdesc "Returns the names of renderers which are currently registered. "
	fnames "unregisterRenderer unr"
		fdesc "Unregister the specified renderer. "
	fnames "exists ex"
		fdesc "The flag returns true if the specified renderer is registered in the registry, and it returns false otherwise. "
	fnames "addGlobalsTab agt"
		fdesc "Add a tab associated with the specified renderer for the unified render globals window. "
	fnames "globalsTabLabels gtl"
		fdesc "This flag returns the labels of unified render globals window tabs which are associated with the specified renderer. "
	fnames "globalsTabCreateProcNames gtc"
		fdesc "This flag returns the names of procedures which are used to create the unified render globals window tabs which are associated with the specified renderer. "
	fnames "globalsTabUpdateProcNames gtu"
		fdesc "This flag returns the names of procedures which are used to update the unified render globals window tabs which are associated with the specified renderer. "
	fnames "addGlobalsNode agn"
		fdesc "This flag allows the user to add a globals node the specified renderer uses. "
	fnames "globalsNodes gn"
		fdesc "This flag returns the list of render globals nodes the specified renderer uses. "
	fnames "hasCommonGlobalValueProcedure hcg"
		fdesc "Set or query the procedure that can verify whether a particular Common Global value can be provided by the specified renderer. This procedure should take a single string argument which identifies the Common Global in question. Refer to copyCommonRenderGlobals.mel for more information. "
	fnames "getCommonGlobalValueProcedure gcg"
		fdesc "Set or query the procedure that can provide a particular Common Global value for the specified renderer. This procedure should take a single string argument which identifies the Common Global whose value is to be returned, and should return a string value. Refer to copyCommonRenderGlobals.mel for more information. "
	fnames "setCommonGlobalValueProcedure scg"
		fdesc "Set or query the procedure that can set the value of a particular Common Global for the specified renderer. This procedure should take a string argument which identifies the Common Global to be set, and a string argument which contains the value to which the Common Global should be set. Refer to copyCommonRenderGlobals.mel for more information. "
	rcount "0"
name "reorder"
	desc "This command reorders (moves) objects relative to their siblings. For relative moves, both positive and negative numbers may be specified. Positive numbers move the object forward and negative numbers move the object backward amoung its siblings. When an object is at the end (beginning) of the list of siblings, a relative move of 1 (-1) will put the object at the beginning (end) of the list of siblings. That is, relative moves will wrap if necessary. If a shape is specified and it is the only child then its parent will be reordered."
	fcount "3"
	fnames "back b"
		fdesc "Move object(s) to back of sibling list. "
	fnames "front f"
		fdesc "Move object(s) to front of sibling list. "
	fnames "relative r"
		fdesc "Move object(s) relative to other siblings. "
	rcount "0"
name "reorderDeformers"
	desc "This command changes the order in which the 2 deformation nodes affect the output geometry. It inserts deformer2 before deformer1. Currently supported deformer nodes include: sculpt, cluster, jointCluster, lattice, wire, jointLattice, boneLattice, blendShape."
	fcount "0"
	rcount "0"
name "requires"
	desc "This command is used during file I/O to specify the requirements needed to load the given file. It defines what file format version was used to write the file, or what plug-ins are required to load the scene. The first string names a product (either "maya", or a plug-in name), while the second string gives the version. This command is only useful during file I/O, so users should not have any need to use this command themselves."
	fcount "0"
	rcount "0"
name "reroot"
	desc "This command will reroot a skeleton. The selected joint or the given joint at the command line will be the new root of the skeleton. All ikHandles passing through the selected joint or above it will be deleted. The given(or selected) joint should not have skin attached. The command works on the given or selected joint. No options or flags are necessary."
	fcount "0"
	rcount "0"
name "resampleFluid"
	desc "ResampleFluid is undoable , queryable , and editable . A command to extend the fluid grid, keeping the voxels the same size, and keeping the existing contents of the fluid in the same place. Note that the fluid transform is also modified to make this possible."
	fcount "3"
	fnames "resampleWidth rw"
		fdesc "Change width resolution to this value "
	fnames "resampleHeight rh"
		fdesc "Change height resolution to this value "
	fnames "resampleDepth rd"
		fdesc "Change depth resolution to this value "
	rcount "0"
name "resetAE"
	desc "Destroys and rebuilds the attribute editor."
	fcount "0"
	rcount "0"
name "resetTool"
	desc "This command resets a tool back to its "factory settings"."
	fcount "0"
	rcount "0"
name "resolutionNode"
	desc "The resolutionNode creates a render resolution node and registers it with the model. The createNode command will not register nodes of this type correctly."
	fcount "0"
	rcount "0"
name "retarget"
	desc "Retarget is undoable , NOT queryable , and NOT editable . This command is used to take motion from one character and retarget it to a second character of a different size."
	fcount "12"
	fnames "endFrame end"
		fdesc "Specify the retargeting end frame. Default is 10. "
	fnames "lowerBody lb"
		fdesc "Specify the desired retargeting technique for the lower body. Valid options are: "jointRotationsOnly", "scaledFootPlacement" and "absoluteFootPlacement". Default is scaledFootPlacement. "
	fnames "lowerScale ls"
		fdesc "Specify the way scale is calculated for the lower body. Valid techniques are: "hipToFoot", "hipToToe", "overallHeight", and "other".  This option is used when the lowerBody flag is set to anything other than "jointRotationsOnly". Default is hipToFoot. When "other" is used, the lowerScaleFactor flag should be used to specify the scale factor. "
	fnames "lowerScaleFactor lsf"
		fdesc "Specify the scale factor for the lower body. This option is only used when the lowerScale is set to "other". "
	fnames "maintainOffset mo"
		fdesc "When this flag is used, the root of the target character will stay the same distance from the source as at the rest pose. "
	fnames "restPoseFrame rpf"
		fdesc "The retargeting solution takes the rest pose of the characters into consideration. For example, one character may be bowlegged with respect to the other in the rest pose. When retargeting animation from the bowlegged character to the non-bowlegged character, the solution will take the rest pose into account so that the target character will receive the walk animation without the bowlegged aspects of the walk. The user has 2 options for specifying a restPose: specifying a frame number at which the rest pose is defined, or defining a retargeting rest pose using the Retargeting->SetRestPose menu item. If you use a frame number for the rest pose, the best practice is to use a frame that does not lie within the range of frames being retargeted. This allows you to retarget without wiping out the rest pose. "
	fnames "scaleHandsFrom shf"
		fdesc "Specify where the arms are scaled from. Valid arguments are: "shoulder", "root" and "origin". This option is only used when the upperBody flag is set to "scaledHandPlacement". Defaults is shoulder. "
	fnames "startFrame s"
		fdesc "Specify the retargeting start frame. Default is 0. "
	fnames "upperBody ub"
		fdesc "Specify the desired retargeting technique for the upper body. Valid techniques are: "jointRotationsOnly", "scaledHandPlacement", "absoluteHandPlacement" and "maintainHandDistance". Default is jointRotationsOnly. "
	fnames "upperScale us"
		fdesc "Specify the way scale is calculated for the upper body. Valid techniques are: "shoulderToWrist", "shoulderToHand", "followLower", and "other". This option is used when the upperBody flag is set to anything other than "jointRotationsOnly". Defaults is shoulderToHand. When "other" is used, the upperScaleFactor flag should be used to specify the scale factor. "
	fnames "upperScaleFactor usf"
		fdesc "Specify the scale factor for the upper body. This option is used when the upperScale is set to "other". "
	fnames "useExistingKeys uek"
		fdesc "When this flag is used, the existing keys on the target are used as a hint to help guide the retargeting solution. This option sometimes allows the solver to narrow in on a better solution. "
	rcount "3"
		rname "characterMap"
		rname "character"
		rname "joint"
name "reverseCurve"
	desc "The reverseCurve command reverses the direction of a curve or curve-on-surface. A string is returned containing the pathname of the newly reversed curve and the name of the resulting dependency node. The reversed curve has the same parameter range as the original curve."
	fcount "8"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	rcount "0"
name "reverseSurface"
	desc "The reverseSurface command reverses one or both directions of a surface or can be used to "swap" the U and V directions (this creates the effect of reversing the surface normal). The name of the newly reversed surface and the name of the resulting dependency node is returned. The resulting surface has the same parameter ranges as the original surface. This command also handles selected surface isoparms. For a selected isoparm, imagine that the isoparm curve is reversed after the operation. eg. reverseSurface surface.v[0.1] will reverse in the U direction."
	fcount "9"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "direction d"
		fdesc "The direction to reverse the surface in: 0 - U, 1 - V, 2 - Both U and V, 3 - Swap Default:  0 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	rcount "0"
name "revolve"
	desc "This command creates a revolved surface by revolving the given profile curve about an axis. The profile curve can be a curve, curve-on-surface, surface isoparm, or trim edge."
	fcount "42"
	fnames "autoCorrectNormal acn"
		fdesc "If this is set to true we will attempt to reverse the direction of the axis in case it is necessary to do so for the surface normals to end up pointing to the outside of the object. Default:  false "
	fnames "axis ax"
		fdesc "Revolve axis "
	fnames "axisChoice aco"
		fdesc "Only used for computed axis/pivot case.  As we are computing the axis for a planar curve, we have two choices for the major axis based axis.  We will choose the axis corresponding to the longer dimension of the object (0), or explicitly choose one or the other (choices 1 and 2). Default:  0 "
	fnames "axisX axx"
		fdesc "X of the axis Default:  1 "
	fnames "axisY axy"
		fdesc "Y of the axis Default:  0 "
	fnames "axisZ axz"
		fdesc "Z of the axis Default:  0 "
	fnames "bridge br"
		fdesc "If true, we will close a partial revolve to get a pie shaped surface.  The surface will be closed, but not periodic the way it is in the full revolve case. Default:  false "
	fnames "compAnchor cn"
		fdesc "Computed anchor if computePivotAndAxis attribute was set to non-zero.  This is the point from which the computed pivot is radius distance away. "
	fnames "compAnchorX cnx"
		fdesc "X of the computed anchor. "
	fnames "compAnchorY cny"
		fdesc "Y of the computed anchor. "
	fnames "compAnchorZ cnz"
		fdesc "Z of the computed anchor. "
	fnames "compAxis ca"
		fdesc "Computed axis if computePivotAndAxis attribute was set to non-zero. "
	fnames "compAxisChoice cac"
		fdesc "Computed axis choice, either matching non-zero axis choice or computed from the curve. "
	fnames "compAxisX cax"
		fdesc "X of the computed axis if computePivotAndAxis attribute was set. "
	fnames "compAxisY cay"
		fdesc "Y of the computed axis if computePivotAndAxis attribute was set. "
	fnames "compAxisZ caz"
		fdesc "Z of the computed axis if computePivotAndAxis attribute was set. "
	fnames "compPivot cp"
		fdesc "Computed pivot if computePivotAndAxis attribute was set to non-zero. "
	fnames "compPivotX cpx"
		fdesc "X of the computed pivot. "
	fnames "compPivotY cpy"
		fdesc "Y of the computed pivot. "
	fnames "compPivotZ cpz"
		fdesc "Z of the computed pivot. "
	fnames "computePivotAndAxis cpa"
		fdesc "If this is set to 2, we will compute the axis, use the curve position and radius to compute the pivot for the revolve internally.  The value of the pivot and axis attributes are ignored.  If this is set to 1, we will take the supplied axis, but compute the pivot.  If this is set to 0, we will take both the supplied axis and pivot. Default:  0 "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "degree d"
		fdesc "The degree of the resulting surface. Default:  3 "
	fnames "endSweep esw"
		fdesc "The value for the end sweep angle, in the current units.  This must be no more than the maximum, 360 degrees, or 2 Pi radians. Default:  6.2831853 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "pivot p"
		fdesc "Revolve pivot point "
	fnames "pivotX px"
		fdesc "X of the pivot Default:  0 "
	fnames "pivotY py"
		fdesc "Y of the pivot Default:  0 "
	fnames "pivotZ pz"
		fdesc "Z of the pivot Default:  0 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "radius r"
		fdesc "The pivot point will be this distance away from the bounding box of the curve, if computedPivot is set to true.  The value of the pivot attribute is ignored. Default:  1 "
	fnames "radiusAnchor ra"
		fdesc "The position on the curve for the anchor point so that we can compute the pivot using the radius value.  If in 0 - 1 range, its on the curve, normalized parameter range.  If  0 or  1, its computed based on the bounding box. Default:  -1 "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "sections s"
		fdesc "Number of sections of the resulting surface (if tolerance is not used). Default:  8 "
	fnames "startSweep ssw"
		fdesc "The value for the start sweep angle, in the current units.  This must be no more than the maximum, 360 degrees, or 2 Pi radians. Default:  0 "
	fnames "tolerance tol"
		fdesc "Tolerance to build to (if useTolerance attribute is set) Default:  0.01 "
	fnames "useLocalPivot ulp"
		fdesc "If true, then the pivot of the profile curve is used as the start point of the axis of revolution. "
	fnames "useTolerance ut"
		fdesc "Use the tolerance, or the number of sections to control the sections. Default:  false "
	rcount "0"
name "rgb_to_hsv"
	desc "Converts colors between RGB and HSV colorspace representations. The components of the argument vector are expected to be between 0.0 and 1.0."
	fcount "0"
	rcount "0"
name "rigidBody"
	desc "This command creates a rigid body from a polygonal or nurbs surface."
	fcount "33"
	fnames "active act"
		fdesc "Creates a rigid body that is active.  An active rigid body accepts and  causes collisions and is effected by dynamic fields.  This is the default. "
	fnames "angularVelocity av"
		fdesc "Current angular velocity of rigid body. "
	fnames "applyForceAt afa"
		fdesc "Determines how forces are applied to the rigid body. The choices are centerOfMass | boundingBox | verticesOrCVs. Default: boundingBox "
	fnames "bounciness b"
		fdesc "Sets the restitution (or bounciness) of the rigid body.   Range:   0.0 - 2.0 Default: 0.6 "
	fnames "cache c"
		fdesc "Turns caching on (1) or off (0) for the rigid body. Default: off "
	fnames "centerOfMass com"
		fdesc "Sets the center of mass (x,y,z) of the rigid body. Default: actual center of mass. "
	fnames "collisions cl"
		fdesc "Truns collisions on/off for the rigid body.  If the collisions are turned of the rigid body will not collide with any other rigid body. Default: on. "
	fnames "contactCount cc"
		fdesc "returns the current contact count for the rigid body. "
	fnames "contactName cn"
		fdesc "returns all the rigid body names which are in contact with this shape.  One name for each contact will be returned. "
	fnames "contactPosition cp"
		fdesc "returns all the contact position.  One position for each contact will be returned. "
	fnames "damping dp"
		fdesc "Sets the damping value of the rigid body.   Range:   -2.0 - 2.0 Default: 0.0 "
	fnames "deleteCache dc"
		fdesc "Deletes the cache (if one exists) of the rigid body. "
	fnames "dynamicFriction df"
		fdesc "Sets the dynamic friction for the rigid body. Range:   0.0 - 1.0 Default: 0.2 "
	fnames "force f"
		fdesc "Current force on the rigid body. "
	fnames "ignore ig"
		fdesc "Causes the rigid body to be ignored in the rigid solver. Default: off "
	fnames "impulse i"
		fdesc "Applies an impulse (instantaneous) force on a rigid body. Default: 0.0 0.0 0.0 "
	fnames "impulsePosition imp"
		fdesc "The position at which the impulse is applied. Default: the bodies center of mass. "
	fnames "initialAngularVelocity iav"
		fdesc "Sets the initial angular velocity of the rigid body. Default:  "
	fnames "initialVelocity iv"
		fdesc "Sets the initial velocity of the rigid body. Default:  "
	fnames "layer l"
		fdesc "Sets the collision layer of the rigid body.  Only rigid bodies in the same collision layer can collide with each other.   Range:   >= 0 Default: 0. "
	fnames "lockCenterOfMass lcm"
		fdesc "Locks the center of mass for the rigid body. Default: off "
	fnames "mass m"
		fdesc "Sets the mass of the rigid body. Range:   > 0 Default: 1.0 "
	fnames "name n"
		fdesc "Assigns the rigid body the given name. "
	fnames "orientation o"
		fdesc "Sets the initial orientation (x,y,z) of the rigid body. Default: current orientation. "
	fnames "particleCollision pc"
		fdesc "Turns the ability for a rigid body to collide with particles on and off.  The particles will exert a force on the rigid body. Default: off "
	fnames "passive pas"
		fdesc "Creates a rigid body that is passive.  A passive rigid body does not  react to collisions but active rigid bodies can collide with it. Dynamic Fields will not effect a passive rigid body.  Only passive  rigid bodies can be keyframed.   "
	fnames "position p"
		fdesc "Sets the initial position (x,y,z) of the rigid body.  Default: current position. "
	fnames "solver slv"
		fdesc "The name of the solver which this rigid node is to resided.  If the solver does not exists then the rigid body will not be created.  If the edit flag is thrown add the solver exists, the rigid body will be moved to that solver. "
	fnames "spinImpulse si"
		fdesc "Applies an spin impulse (instantaneous rotational) force on a rigid body. Default: 0.0 0.0 0.0 "
	fnames "standInObject sio"
		fdesc "Causes the simulator to use a stand in object for the simulation. The choices are none | cube | sphere. The default is none. Default: none "
	fnames "staticFriction sf"
		fdesc "Sets the static friction for the rigid body. Range:   0.0 - 1.0 Default: 0.2 "
	fnames "tesselationFactor tf"
		fdesc "Sets the tesselation factor for a rigid body surface.   Range:   >= 10 Default: 200. "
	fnames "velocity vel"
		fdesc "Current velocity of rigid body. "
	rcount "7"
		rname "constrain"
		rname "rigidSolver"
		rname "air"
		rname "radial"
		rname "gravity"
		rname "newton"
		rname "drag"
name "rigidSolver"
	desc "This command sets the attributes for the rigid solver."
	fcount "26"
	fnames "autoTolerances at"
		fdesc "Turns the auto tolerance calculation on and off.  The auto tolerances calculation will override the default or user defined values of the  step size and collision tolerance value that is calculated based  on the objects in the scene. Default: 0 (off) "
	fnames "bounciness b"
		fdesc "Turns bounciness on and off for the an the objects in the simulation. Default value: on "
	fnames "cacheData cd"
		fdesc "Turns the cache on fall all rigid bodies in the system. Default value: off "
	fnames "collide c"
		fdesc "Disallows the interpenetration of the two rigid bodies listed. Default: Collide is on for all bodies. "
	fnames "collisionTolerance ct"
		fdesc "Sets the collision tolerance.  This is the error at which two objects are considered to have collided.   Range:   0.0005 - 1.000 Default: 0.02 "
	fnames "contactData ctd"
		fdesc "Turns the contact data information on/off for all rigid bodies. Default value: off "
	fnames "create cr"
		fdesc "Creates a new rigid solver. "
	fnames "current cu"
		fdesc "Sets rigid solver as the current solver. "
	fnames "deleteCache del"
		fdesc "Deletes the cache for all rigid bodies in the system. "
	fnames "displayCenterOfMass dcm"
		fdesc "Displays the center of mass icon. Default value: on "
	fnames "displayConstraint dc"
		fdesc "Displays the constraint vectors. Default value: on "
	fnames "displayVelocity dv"
		fdesc "Displays the velocity vectors. Default value: off "
	fnames "dynamics d"
		fdesc "Turns dynamics on and off for the an the objects in the simulation. Default value: on "
	fnames "friction f"
		fdesc "Turns friction on and off for the an the objects in the simulation. Default value: on "
	fnames "interpenetrate i"
		fdesc "Allows the two rigid bodies listed to interpenetrate. Default: interpenetration is off for all bodies. "
	fnames "interpenetrationCheck ic"
		fdesc "Checks for interpenetrating rigid bodies in the scene. "
	fnames "rigidBodies rb"
		fdesc "Returns a list of rigid bodies in the solver. "
	fnames "rigidBodyCount rbc"
		fdesc "Returns the number of rigid bodies in the solver. "
	fnames "showCollision sc"
		fdesc "Displays the colliding objects in a different color. "
	fnames "showInterpenetration si"
		fdesc "Displays the interpenetrating objects in a different color. "
	fnames "solverMethod sm"
		fdesc "Sets the solver method.  The choices are 0 | 1 | 2. 0 = Euler (fastest/least acurate),  1 = Runge-Kutta ( slower/more acurate),  2 = adaptive Runge-Kutta (slowest/most acurate). The default is 2 (adaptive Runge-Kutta) "
	fnames "startTime stt"
		fdesc "Sets the start time for the solver. "
	fnames "state st"
		fdesc "Turns the rigid solver on or off. "
	fnames "statistics sta"
		fdesc "Turns the statistic information on/off for all rigid bodies. Default value: off "
	fnames "stepSize s"
		fdesc "Sets the solvers step size.  This is the maximum size of a single step the solver will take at one time.   Range:   0.0004 - 0.100 Default: 0.0333 "
	fnames "velocityVectorScale vs"
		fdesc "scales the velocity vector display. Default value: 1.0 "
	rcount "2"
		rname "constrain"
		rname "rigidBody"
name "roll"
	desc "The roll command rotates a camera about its viewing direction, a positive angle produces clockwise camera rotation, while a negative angle produces counter-clockwise camera rotation. The default mode is relative and the rotation is applied with respect to the current orientation of the camera. When mode is set to absolute, the rotation is applied with respect to the plane constructed from the following three vectors in the world space: the world up vector, the camera view vector, and the camera up vector. The rotation angle is specified in degrees. The roll command can be applied to either a perspective or.... Refer to full documentation"
	fcount "3"
	fnames "absolute abs"
		fdesc "Set to absolute mode. "
	fnames "degree d"
		fdesc "Set the amount of the rotation angle. "
	fnames "relative rel"
		fdesc "Set to relative mode. "
	rcount "15"
		rname "camera"
		rname "cameraView"
		rname "dolly"
		rname "listCameras"
		rname "lookThru"
		rname "orbit"
		rname "track"
		rname "tumble"
		rname "viewCamera"
		rname "viewClipPlane"
		rname "viewFit"
		rname "viewHeadOn"
		rname "viewLookAt"
		rname "viewPlace"
		rname "viewSet"
name "rollCtx"
	desc "This command can be used to create, edit, or query a roll context."
	fcount "1"
	fnames "rollScale rs"
		fdesc "In degrees of rotation per 100 pixels of cursor drag. "
	rcount "0"
name "rootOf"
	desc "This procedure returns the name of the root-level DAG parent of the specified object, if any. If the specified object has no parents, the return value is "". See also firstParentOf()."
	fcount "0"
	rcount "0"
name "rot"
	desc "This command returns the position of the point after being rotated the number of radians about the axis. The first argument represents a point, the second an axis and the third an angle in radians."
	fcount "0"
	rcount "0"
name "rotate"
	desc "The rotate command is used to change the rotation of geometric objects. The rotation values are specified as Euler angles (rx, ry, rz). The values are interpreted based on the current working unit for Angular measurements. Most often this is degrees. The default behaviour, when no objects or flags are passed, is to do a absolute rotate on each currently selected object in the world space."
	fcount "8"
	fnames "absolute a"
		fdesc "Perform an absolute operation. "
	fnames "centerPivot cp"
		fdesc "Let the pivot be the center of the bounding box of all objects "
	fnames "euler eu"
		fdesc "Modifer for -relative flag that specifies rotation values should be added to current XYZ rotation values. "
	fnames "objectCenterPivot ocp"
		fdesc "Let the pivot be the center of the bounding box of each object "
	fnames "objectSpace os"
		fdesc "Perform rotation about object-space axis. "
	fnames "pivot p"
		fdesc "Define the pivot point for the transformation "
	fnames "relative r"
		fdesc "Perform a operation relative to the object's current position  "
	fnames "worldSpace ws"
		fdesc "Perform rotation about global world-space axis. "
	rcount "3"
		rname "xform"
		rname "move"
		rname "scale"
name "rotationInterpolation"
	desc "RotationInterpolation is undoable , queryable , and NOT editable . The rotationInterpolation command converts the rotation curves to the desired rotation interpolation representation. For example, an Euler-angled representation can be converted to Quaternion."
	fcount "1"
	fnames "convert c"
		fdesc "Specifies the rotation interpolation mode for the curves after converting. Possible choices are "none" (unsynchronized Euler-angled curves which are compatible with pre-4.0 Maya curves), "euler" (Euler-angled curves with keyframes kept synchronized), and "quaternion" (quaternion curves with keyframes kept synchronized). "
	rcount "0"
name "roundConstantRadius"
	desc "This command generates constant radius NURBS fillets and NURBS corner surfaces for matching edge pairs on NURBS surfaces. An edge pair is a matching pair of surface isoparms or trim edges. This command can handle more than one edge pair at a time. This command can also handle compound edges, which is where an edge pair is composed of more than two surfaces. Use the "-sa" and "-sb" flags in this case. The results from this command are three surface var groups plus the name of the new roundConstantRadius dependency node, if history was on. The 1st var group contains.... Refer to full documentation"
	fcount "12"
	fnames "append a"
		fdesc "If true, then an edge pair is being added to an existing round dependency node.  Default is false.  You must specify an existing round dependency node when this flag is true.  See example below. "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "radiuss rad"
		fdesc "Use this flag to specify radius.  This overrides the "-r/radius" flag.  If only one "-rad" flag is used, then it is applied to all edge pairs.  If >1 "-rad" flag is used, then the number of "-rad" flags must equal the number of edge pairs.  For example, for four edge pairs, you must specify zero, one or four "-rad" flags. "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "sidea sa"
		fdesc "Use this flag for compound edges in conjunction with the  following "-sb" flag. You must specify the same number of "-sa" flags as "-sb" flags. If no "-sa" nor "-sb" flags are specified, then the edges are assumed to be in pairs. See also examples below.   For example, two faces of a cube meet at an edge pair. Suppose one of the faces is then split in two pieces at the middle of the edge, so that there is one  face on side "A", and two pieces on side "B".  In this case you would use the flag combination: -sidea 1 -sideb 2. You must specify the edges in the corresponding order: roundConstantRadius -sidea 1 -sideb 2 isoA isoB1 isoB2; "
	fnames "sideb sb"
		fdesc "Use this flag for compound edges in conjunction with the  "-sa" flag.  See description for the "-sa" flag. "
	rcount "0"
name "rowColumnLayout"
	desc "This command creates a rowColumn layout. A rowColumn layout positions children in either a row or column format. A column layout, specified with the -nc/numberOfColumns flag, allows you set text alignment, attachments and offsets for each column in the layout. Every member of a column will have the same alignment, attachment and offsets. Likewise the row format, specified by the -nr/numberOfRows flag, allows setting of these attributes for each row in the layout. Every member of a row will have the same attributes. The layout must be either a row or column format. This layout does not support both, or.... Refer to full documentation"
	fcount "33"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "childArray ca"
		fdesc "Returns a string array of the names of the layout's  immediate children. "
	fnames "columnAlign cal"
		fdesc "Alignment for text and pixmaps in the specified column.  Values are: "left", "right" and "center".  Only valid for column format, ie. number of columns specified with  -nc/numberOfColumns  flag. "
	fnames "columnAttach cat"
		fdesc "The attachements and offsets for the children in  the specified column.  The first argument is the 1-based column index.  The second argument is the attachment, valid values are "left", "right" and "both".  The third argument must be greater than 0 and specifies the offset. "
	fnames "columnOffset co"
		fdesc "The attachment offset for the specified column.  The first argument is the 1-based column index.  The second argument is the attachment, valid values are "left", "right" and "both".  The third argument must be greater than 0 and specifies the offset. "
	fnames "columnSpacing cs"
		fdesc "The space between columns in pixels.  In column format this flag specifies that the space be to the left of the given column.  In row format it specifies the space between all columns, however a valid column index is still required.  The first argument is the 1-based column index.  The second argument must be greater than 0 and specifies the spacing. "
	fnames "columnWidth cw"
		fdesc "Width of a column. This flag is valid only in column format.  The column width must be greater than 0.  The first argument is the 1-based column index.  The second argument must be greater than 0 and specifies the column width. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfChildren nch"
		fdesc "Returns in an int the number of immediate children of the layout. "
	fnames "numberOfColumns nc"
		fdesc "Number of columns. This flag is mutually exclusive to the  -nr/numRows  flag.  Either one or the other can be specified. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "numberOfRows nr"
		fdesc "Number of rows. This flag is mutually exclusive to the  -nc/numColumns  flag. Either one or the other can be specified. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rowAlign ral"
		fdesc "Alignment for text and pixmaps in the specified row. Values are: "left", "right" and "center".  Only valid for row format, ie. number of rows specified with  -nr/numberOfRows  flag. "
	fnames "rowAttach rat"
		fdesc "The attachements and offsets for the children in  the specified row.  The first argument is the 1-based row index.  The second argument is the attachment, valid values are "top", "bottom" and "both".  The third argument must be greater than 0 and specifies the offset. "
	fnames "rowHeight rh"
		fdesc "Height of a row. This flag is only valid in row format. The row height must be greater than 0. The first argument is the 1-based row index.  The second argument must be greater than 0 and specifies the row height. "
	fnames "rowOffset ro"
		fdesc "The attachment offset for the specified row.  The first argument is the 1-based row index.  The second argument is the attachment, valid values are "top", "bottom" and "both".  The third argument must be greater than 0 and specifies the offset. "
	fnames "rowSpacing rs"
		fdesc "The space between rows, in pixels.  In row format this specifies the space above the specified row.  In column format it specifies the space between all rows, however a valid row index is still required.  The first argument is the 1-based row index.  The second argument must be greater than 0 and specifies the spacing. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "rowLayout"
	desc "This command creates a layout capable of positioning children into a single horizontal row."
	fcount "57"
	fnames "adjustableColumn adj"
		fdesc "Specifies which column has an adjustable size that changes with the sizing of the layout. "
	fnames "adjustableColumn1 ad1"
		fdesc "Specifies that the first column has an adjustable size that changes with the size of the parent layout. Ignored if there isn't exactly one column.  "
	fnames "adjustableColumn2 ad2"
		fdesc "Specifies which of the two columns has an adjustable size that changes with the size of the parent layout. Ignored if there isn't exactly two columns.  "
	fnames "adjustableColumn3 ad3"
		fdesc "Specifies which of the three columns has an adjustable size that changes with the size of the parent layout. Ignored if there isn't exactly three columns.  "
	fnames "adjustableColumn4 ad4"
		fdesc "Specifies which of the four columns has an adjustable size that changes with the size of the parent layout. Ignored if there isn't exactly four columns.  "
	fnames "adjustableColumn5 ad5"
		fdesc "Specifies which of the five columns has an adjustable size that changes with the size of the parent layout. Ignored if there isn't exactly five columns.  "
	fnames "adjustableColumn6 ad6"
		fdesc "Specifies which of the six columns has an adjustable size that changes with the size of the parent layout. Ignored if there isn't exactly six columns.  "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "childArray ca"
		fdesc "Returns a string array of the names of the layout's  immediate children. "
	fnames "columnAlign cal"
		fdesc "Text alignment for the specified column. Valid values are "left", "right", and "center" "
	fnames "columnAlign1 cl1"
		fdesc "Text alignment for the first column. Valid values are "left", "right", and "center". Ignored if there isn't exactly one column. "
	fnames "columnAlign2 cl2"
		fdesc "Text alignment for both columns. Valid values are "left", "right", and "center". Ignored if there isn't exactly two columns. "
	fnames "columnAlign3 cl3"
		fdesc "Text alignment for all three columns. Valid values are "left", "right", and "center". Ignored if there isn't exactly three columns. "
	fnames "columnAlign4 cl4"
		fdesc "Text alignment for all four columns. Valid values are "left", "right", and "center". Ignored if there isn't exactly four columns. "
	fnames "columnAlign5 cl5"
		fdesc "Text alignment for all five columns. Valid values are "left", "right", and "center". Ignored if there isn't exactly five columns. "
	fnames "columnAlign6 cl6"
		fdesc "Text alignment for all six columns. Valid values are "left", "right", and "center". Ignored if there isn't exactly six columns. "
	fnames "columnAttach cat"
		fdesc "Horizontally attach a particular column.  The first argument is a 1-based index specifying the column.  The second argument is the attachment, valid values are "left", "right", and "both".  The third argument is the offset value. "
	fnames "columnAttach1 ct1"
		fdesc "Attachment type for the first column.  Ignored if there isn't exactly one column. Valid values are "left", "right", and "both". "
	fnames "columnAttach2 ct2"
		fdesc "Attachment type for both columns.  Ignored if there isn't exactly two columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach3 ct3"
		fdesc "Attachment type for all three columns.  Ignored if there isn't exactly three columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach4 ct4"
		fdesc "Attachment type for all four columns.  Ignored if there isn't exactly four columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach5 ct5"
		fdesc "Attachment type for all five columns.  Ignored if there isn't exactly five columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach6 ct6"
		fdesc "Attachment type for all six columns.  Ignored if there isn't exactly six columns. Valid values are "left", "right", and "both". "
	fnames "columnOffset1 co1"
		fdesc "Used in conjunction with the -columnAttach1 flag.  If that flag is not used then this flag will be ignored.  Sets the offset for the first column.  The offsets applied are based on the attachments specified with the -columnAttach1 flag. Ignored if there isn't exactly one column.  "
	fnames "columnOffset2 co2"
		fdesc "Used in conjunction with the -columnAttach2 flag.  If that flag is not used then this flag will be ignored.  Sets the offset for both columns.  The offsets applied are based on the attachments specified with the -columnAttach2 flag. Ignored if there isn't exactly two columns.  "
	fnames "columnOffset3 co3"
		fdesc "Used in conjunction with the -columnAttach3 flag.  If that flag is not used then this flag will be ignored.  Sets the offset for all three columns.  The offsets applied are based on the attachments specified with the -columnAttach3 flag. Ignored if there isn't exactly three columns.  "
	fnames "columnOffset4 co4"
		fdesc "Used in conjunction with the -columnAttach4 flag.  If that flag is not used then this flag will be ignored.  Sets the offset for all four columns.  The offsets applied are based on the attachments specified with the -columnAttach4 flag. Ignored if there isn't exactly four columns.  "
	fnames "columnOffset5 co5"
		fdesc "Used in conjunction with the -columnAttach5 flag.  If that flag is not used then this flag will be ignored.  Sets the offset for all five columns.  The offsets applied are based on the attachments specified with the -columnAttach5 flag. Ignored if there isn't exactly five columns. "
	fnames "columnOffset6 co6"
		fdesc "Used in conjunction with the -columnAttach6 flag.  If that flag is not used then this flag will be ignored.  Sets the offset for all six columns.  The offsets applied are based on the attachments specified with the -columnAttach6 flag. Ignored if there isn't exactly six columns.  "
	fnames "columnWidth cw"
		fdesc "Width of a particular column.  The first argument is a 1-based index specifying the column.  The second argument is the width value. "
	fnames "columnWidth1 cw1"
		fdesc "Width for the first column.  Ignored if there isn't exactly one column. "
	fnames "columnWidth2 cw2"
		fdesc "Widths for both columns.  Ignored if there isn't exactly two columns. "
	fnames "columnWidth3 cw3"
		fdesc "Widths for all three columns.  Ignored if there isn't exactly three columns. "
	fnames "columnWidth4 cw4"
		fdesc "Widths for all four columns.  Ignored if there isn't exactly four columns. "
	fnames "columnWidth5 cw5"
		fdesc "Widths for all five columns.  Ignored if there isn't exactly five columns. "
	fnames "columnWidth6 cw6"
		fdesc "Widths for all six columns.  Ignored if there isn't exactly six columns. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfChildren nch"
		fdesc "Returns in an int the number of immediate children of the layout. "
	fnames "numberOfColumns nc"
		fdesc "Number of columns in the row.  The specified number of columns must be a value greater than 0. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rowAttach rat"
		fdesc "Vertically attach a particular column.  The first argument is a 1-based index specifying the column.  The second argument is the attachment, valid values are "top", "bottom", and "both".  The third argument is the offset value. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "runTimeCommand"
	desc "Create a command given the specified name. Once the command is created you can invoke it like any other command. When the command is invoked it will execute the string attached to the -command flag. Note that the resulting command takes no arguments, has no flags and may not be queried or edited. The command name you provide must be unique. The name itself must begin with an alphabetic character or underscore followed by alphanumeric characters or underscores. If you create your run time commands in a script which is automatically sourced at startup then set the -default flag to.... Refer to full documentation"
	fcount "16"
	fnames "annotation ann"
		fdesc "Description of the command. "
	fnames "category cat"
		fdesc "Category for the command. "
	fnames "categoryArray caa"
		fdesc "Return all the run time command categories. "
	fnames "command c"
		fdesc "Command to be executed when runTimeCommand is invoked. "
	fnames "commandArray ca"
		fdesc "Returns an string array containing the names of all the run time commands. "
	fnames "default d"
		fdesc "Indicate that this run time command is a default command. Default run time commands will not be saved to preferences. "
	fnames "defaultCommandArray dca"
		fdesc "Returns an string array containing the names of all the  default run time commands. "
	fnames "delete del"
		fdesc "Delete the specified user run time command. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the specified object exists.  Other flags are ignored. "
	fnames "numberOfCommands nc"
		fdesc "Return the number of run time commands. "
	fnames "numberOfDefaultCommands ndc"
		fdesc "Return the number of default run time commands. "
	fnames "numberOfUserCommands nuc"
		fdesc "Return the number of user run time commands. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the value of the specified flag. "
	fnames "save s"
		fdesc "Save all the user run time commands. "
	fnames "userCommandArray uca"
		fdesc "Returns an string array containing the names of all the  user run time commands. "
	rcount "0"
name "runup"
	desc "Runup plays the scene through a frame of frames, forcing dynamic objects to evaluate as it does so. If no max frame is specified, runup runs up to the current time."
	fcount "5"
	fnames "cache cch"
		fdesc "Cache the state after the runup. "
	fnames "fpf fromPreviousFrame"
		fdesc "Run up the animation from the previously evaluated frame.  If no flag is supplied this is the default. "
	fnames "fsf fromStartFrame"
		fdesc "Run up the animation from the start frame. If no flag is supplied -fromPreviousFrame is the default. "
	fnames "maxFrame mxf"
		fdesc "Ending time for runup, in current user time units.   The runup will always start at the minimum start frame for all dynamic objects.   "
	fnames "st state"
		fdesc "Turns runup and cache on/off. "
	rcount "0"
name "sampleImage"
	desc "The sampleImage command is used to control parameters of sample images, such as swatches in the multilister. The fast option turns on or off some rendering cheats which speed up the render but may cause edges to look ragged. The resolution option specifies the width in pixels of the image which will be rendered for the specified node. Note that the width of the image is also the height of the image since sample images are square."
	fcount "2"
	fnames "fastSample f"
		fdesc "If fast but rough rendering for sampleImage is to be used "
	fnames "resolution r"
		fdesc "The first argument to this flag specifies a resolution in pixels. The second argument specifies a dependency node. The effect of this flag is that further sample image renderings for the specified node will be made at the specified resolution. "
	rcount "0"
name "saveAllShelves"
	desc "This command writes all shelves that are immediate children of the specified control layout to the prefs directory."
	fcount "0"
	rcount "0"
name "saveAttrPreset"
	desc "Saves the current settings of a node as an attribute preset. If autoRename is on, it will automatically try to generate a new name if the presetName exists. If autoRename is off, it will prompt whether or not to overwrite the file."
	fcount "0"
	rcount "0"
name "saveFluid"
	desc "SaveFluid is undoable , queryable , and editable . A command to save the current state of the fluid to the initial state cache. The grids to be saved are determined by the cache attributes: cacheDensity, cacheVelocity, etc. These attributes are normally set from the options on Set Initial State. The cache must be set up before invoking this command."
	fcount "3"
	fnames "currentTime ct"
		fdesc "cache state of fluid at current time "
	fnames "startTime st"
		fdesc "start Time for cacheing "
	fnames "endTime et"
		fdesc "end Time for cacheing "
	rcount "0"
name "saveImage"
	desc "This command creates a static image control for non-xpm files used to display a thumbnail image of the scene file."
	fcount "22"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "currentView cv"
		fdesc "Generate the image from the current view. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "objectThumbnail ot"
		fdesc "Use an image of the named object, if possible. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "sceneFile sf"
		fdesc "The name of the file that the icon is to be associated with. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "saveInitialState"
	desc "SaveInitialState saves the current state of dynamics objects as the initial state. A dynamic object is a particle shape, rigid body, rigid constraint or rigid solver. If no objects are specified, it saves the initial state for any selected objects. It returns the names of the objects for which initial state was saved."
	fcount "2"
	fnames "attribute atr"
		fdesc "Save the initial state of the specified attribute only. This is a multi-use flag. "
	fnames "saveall all"
		fdesc "Save the initial state for all dynamics objects in the scene. "
	rcount "0"
name "saveMenu"
	desc "This command is used for saving the contents of a menu, so that another instance of the menu may be recreated later. The command writes out a file which, when run as a script, will rebuild the menuItems contained in the original menu. Note that the fileName is relative to the user's marking menu preference directory. Note that this command is used solely by the Marking Menu Editor and is not intended to be used for general purposes."
	fcount "0"
	rcount "0"
name "savePrefObjects"
	desc "This command saves preference dependency nodes to "userPrefObjects.ma" in the user preference directory."
	fcount "0"
	rcount "0"
name "savePrefs"
	desc "This command saves preferences to disk. If no flags are specified then all pref types get saved out."
	fcount "5"
	fnames "colors c"
		fdesc "Save the color prefs to disk "
	fnames "general g"
		fdesc "Save the general prefs to disk (optionVars) "
	fnames "hotkeys hk"
		fdesc "Save the hotkeys to disk "
	fnames "plugins pl"
		fdesc "Save the plug-in prefs to disk "
	fnames "uiLayout ui"
		fdesc "Save each window's size and position to disk "
	rcount "0"
name "saveShelf"
	desc "This command saves the specified shelf to the specified file."
	fcount "0"
	rcount "0"
name "saveToolSettings"
	desc "This command causes all the tools not on the shelf to save their settings as optionVars. This is called automatically by the system when Maya exits."
	fcount "0"
	rcount "0"
name "scale"
	desc "The scale command is used to change the sizes of geometric objects. The default behaviour, when no objects or flags are passed, is to do a relative scale on each currently selected object object using each object's existing scale pivot point."
	fcount "6"
	fnames "absolute a"
		fdesc "Perform an absolute operation. "
	fnames "centerPivot cp"
		fdesc "Let the pivot be the center of the bounding box of all objects "
	fnames "distanceOnly dso"
		fdesc "Scale only the distance between the objects. "
	fnames "objectCenterPivot ocp"
		fdesc "Let the pivot be the center of the bounding box of each object "
	fnames "pivot p"
		fdesc "Define the pivot point for the transformation "
	fnames "relative r"
		fdesc "Perform a operation relative to the object's current position  "
	rcount "3"
		rname "xform"
		rname "rotate"
		rname "move"
name "scaleConstraint"
	desc "Constrain an object's scale to the scale of the target object or to the average scale of a number of targets. A scaleConstraint takes as input one or more "target" DAG transform nodes to which to scale the single "constraint object" DAG transform node. The scaleConstraint scales the constrained object at the weighted geometric mean of the world space target scale factors."
	fcount "3"
	fnames "maintainOffset mo"
		fdesc "The offset necessary to preserve the constrained object's initial scale will be calculated and used as the offset. "
	fnames "offset o"
		fdesc "Sets or queries the value of the offset. Default is 1,1,1. "
	fnames "skip sk"
		fdesc "Specify the axis to be skipped. Valid values are "x", "y", "z" and "none". During creation, "none" is the default. This flag is multi-use. "
	rcount "8"
		rname "aimConstraint"
		rname "geometryConstraint"
		rname "normalConstraint"
		rname "orientConstraint"
		rname "parentConstraint"
		rname "pointConstraint"
		rname "poleVectorConstraint"
		rname "tangentConstraint"
name "scaleKey"
	desc "This command takes keyframes at (or within) the specified times (or time ranges) and scales them. If no times are specified, the scale is applied to active keyframes or (if no keys are active) all keys of active objects. This command operates on a keyset. A keyset is defined as a group of keys within a specified time range on one or more animation curves. The animation curves comprising a keyset depend on the value of the "-animation" flag: keysOrObjects : 1) any active keys, when no target objects or -attribute flags appear on the command line, or 2) all.... Refer to full documentation"
	fcount "20"
	fnames "animation an"
		fdesc "Where this command should get the animation to act on.  Valid values are "objects," "keys," and "keysOrObjects" Default: "keysOrObjects."  (See Description for details.) "
	fnames "attribute at"
		fdesc "List of attributes to select "
	fnames "controlPoints cp"
		fdesc "This flag explicitly specifies whether or not to include the control points of a shape (see "-s" flag) in the list of attributes. Default: false.   (Not valid for "pasteKey" cmd.) "
	fnames "float f"
		fdesc "value uniquely representing a non-time-based key (or key range) on a time-based animCurve.  Valid floatRange include single values (-f 10) or a string with a lower and upper bound, separated by a colon (-f "10:20") "
	fnames "floatPivot fp"
		fdesc "Scale pivot along the x-axis for float-input animCurves "
	fnames "floatScale fs"
		fdesc "Amount of scale along the x-axis for float-input animCurves "
	fnames "hierarchy hi"
		fdesc "Hierarchy expansion options.  Valid values are "above," "below," "both," and "none."  (Not valid for "pasteKey" cmd.) "
	fnames "includeUpperBound iub"
		fdesc "When the -t/time or -f/float flags represent a range of keys, this flag determines whether the keys at the  upper bound of the range are included in the keyset. Default value: true.  This flag is only valid when the argument to the -t/time flag is a time range with a lower and upper bound.  (When used with the "pasteKey"  command, this flag refers only to the time range of the target curve that is replaced, when using options such as "replace," "fitReplace," or "scaleReplace."  This  flag has no effect on the curve pasted from the clipboard.) "
	fnames "index in"
		fdesc "index of a key on an animCurve "
	fnames "newEndFloat nef"
		fdesc "The end of the float range to which the float-input targets should be scaled. "
	fnames "newEndTime net"
		fdesc "The end of the time range to which the targets should be scaled. "
	fnames "newStartFloat nsf"
		fdesc "The start of the float range to which the float-input targets should be scaled. "
	fnames "newStartTime nst"
		fdesc "The start of the time range to which the time-input targets should be scaled. "
	fnames "scaleSpecifiedKeys ssk"
		fdesc "Determines if only the specified keys are affected by the scale. If false, other keys may be adjusted with the scale. The  default is true. "
	fnames "shape s"
		fdesc "Consider attributes of shapes below transforms as well, except "controlPoints".  Default: true.   (Not valid for "pasteKey" cmd.) "
	fnames "time t"
		fdesc "time uniquely representing a key (or key range) on a time-based animCurve.  Valid timeRanges include single values (-t 10) or a string with a lower and upper bound, separated by a colon (-t "10:20") "
	fnames "timePivot tp"
		fdesc "Scale pivot along the time-axis for time-input animCurves "
	fnames "timeScale ts"
		fdesc "Amount of scale along the time-axis for time-input animCurves "
	fnames "valuePivot vp"
		fdesc "Scale pivot along the value-axis "
	fnames "valueScale vs"
		fdesc "Amount of scale along the value-axis "
	rcount "10"
		rname "copyKey"
		rname "cutKey"
		rname "pasteKey"
		rname "snapKey"
		rname "keyframe"
		rname "keyframeStats"
		rname "keyframeOutliner"
		rname "setInfinity"
		rname "keyTangent"
		rname "findKeyframe"
name "scaleKeyCtx"
	desc "This command creates a context which may be used to scale keyframes within the graph editor."
	fcount "10"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "scaleSpecifiedKeys ssk"
		fdesc "Determines if only the specified keys should be scaled. If false, the non-selected keys will be adjusted during the scale. The default is true. "
	fnames "type typ"
		fdesc "rect | manip Specifies the type of scale manipulator to use (Note: "rect" is a manipulator style context, and "manip" is a gestural style context) "
	rcount "0"
name "sceneUIReplacement"
	desc "This command returns existing scene based UI that can be utilitzed by the scene that is being loaded. It can also delete any such UI that is not used by the loading scene."
	fcount "6"
	fnames "clear cl"
		fdesc "Frees any resources allocated by the command. "
	fnames "deleteRemaining dr"
		fdesc "Delete any UI that is scene dependent and has not been referenced by this command since the last update. "
	fnames "getNextFilter gf"
		fdesc "Returns the next filter of the specified type with the specified name. "
	fnames "getNextPanel gp"
		fdesc "Returns the next panel of the specified type, preferably with the specified label. "
	fnames "getNextScriptedPanel gsp"
		fdesc "Returns the next scripted panel of the specified scripted panel type, preferably with the specified label. "
	fnames "update u"
		fdesc "Updates the state of the command to reflect the current state of the application.  The string argument is the name of the  main window pane layout holding the panels. "
	rcount "0"
name "scmh"
	desc "Set the current manipulator handle value(s). In UI units (where applicable), though the syntax is set to handle the unit type of the current manipulator handle (if available)."
	fcount "3"
	fnames "absolute a"
		fdesc "The values are absolute "
	fnames "ignore i"
		fdesc "This is a multiuse flag which specifies that the index-th (1-based) entry is to be ignored "
	fnames "relative r"
		fdesc "The values are relative "
	rcount "0"
name "scriptCtx"
	desc "This command allows a user to create their own tools based on the selection tool. A number of selection lists can be collected, the behaviour of the selection and the selection masks are fully customizable, etc. The command is processed prior to being executed. The keyword "$Selection#" where # is a number 1 or greater specifies a selection set. The context can specify several selection sets which are substituted in place of the $Selection# keyword in the form of a Mel string array. Items that are specific per set need to be specified in each set, if they are going.... Refer to full documentation"
	fcount "22"
	fnames "baseClassName bcn"
		fdesc "This string will be used to produce MEL function names for the property sheets for the tool.  For example, if "myScriptTool" was given, the functions "myScriptToolValues" and "myScriptToolProperties" will be used for the property sheets.  The default is "scriptTool". "
	fnames "cumulativeLists cls"
		fdesc "If set, the selection lists will be cumulative.  For example, the second list will contain all the items from the first list, the third all the items from the second list etc.  Make sure your script specified above takes that into account.  Relevant if there is more than one selection set. "
	fnames "enableRootSelection ers"
		fdesc "If set, the items to be selected are at their root transform level. Default is false. "
	fnames "exitUponCompletion euc"
		fdesc "If set, completing the last selection set will exit the tool.  Default is true. "
	fnames "expandSelectionList esl"
		fdesc "If set, the selection lists will expand to have a single component in each item.  You probably want this as a default, otherwise two isoparms on the same surface will show up as 1 item. "
	fnames "finalCommandScript fcs"
		fdesc "Supply the script that will be run when the user presses the enter key and the context is completed.  Depending on the  number of selection sets you have, the script can make use of variables string $Selection1[], $Selection2[], ... "
	fnames "forceAddSelect fas"
		fdesc "If set to true, together with -setAutoToggleSelection (see below) on the first selection set, causes the first selection after the computation of the previous result to be "shift" selection, unless a modifier key is pressed.  Default is false. Flags for each selection set.  These flags are multi-use. "
	fnames "ignoreInvalidItems iii"
		fdesc "If you have multiple selection sets, the state of the selection set is recorded at the time you "complete it".  You could  then delete some of the items in that list and end up with invalid items in one or more of your selection sets.  If this flag is set, those items will be detected and ignored.  You will never know it happened.  Its as if they were never selected in the first place, except that your selection set now does not have as many items as it may need.  If this flag is not set, you will get a warning and your final command callback script will likely not execute because of an error condition. "
	fnames "lastAutoComplete lac"
		fdesc "True if auto complete is set for the last selection set, false otherwise.  Mostly used for query, but if present in conjuction with -sac/setAutoComplete flag, -sac flag takes precedence. "
	fnames "setAllowExcessCount sae"
		fdesc "If set, the number if items is to be interpreted as the minimum. "
	fnames "setAutoComplete sac"
		fdesc "If set to true, as soon as the specified number of items is selected the tool will start the next selection set or run the command. "
	fnames "setAutoToggleSelection sat"
		fdesc "If set to true, it is as if "shift" key is pressed when there are no modifiers pressed.  That means that you get the "toggle select" behaviour by default.  This only applies to the 3D view, and the selection done in the hypergraph, outliner or elsewhere is still a subject to the usual rules. "
	fnames "setDoneSelectionPrompt dsp"
		fdesc "If setAutoComplete is not set (see below) this string will be shown as soon as the tool has enough items for a particular selection set.  If this is not set, but is needed, the same string as set with -setSelectionPrompt flag will be used. "
	fnames "setNoSelectionPrompt snp"
		fdesc "Supply a string that will be shown as help when there is nothing selected.  This must be set separately for each selection set. "
	fnames "setSelectionCount ssc"
		fdesc "The number of items in this selection set.  0 means as many as you need until completion. "
	fnames "setSelectionPrompt ssp"
		fdesc "Supply a string that will be shown as help when there is something selected.  This must be set separately for each selection set. "
	fnames "showManipulators sm"
		fdesc "If set, the manipulators will be shown for any active objects. Basically, it is as if you are in the Show Manipulator tool. "
	fnames "title t"
		fdesc "Supply a string that will be used as a precursor to all the messages; i.e., the "name" of the tool. "
	fnames "toolCursorType tct"
		fdesc "Supply the string identifier to set the tool cursor type  when inside of tool. The following are the valid ids:  "create", "dolly", "edit", "pencil", "track", "trackHorizontal", "trackVertical", "transformation", "tumble", "zoom", "zoomIn", "zoomOut", "flyThrough", "dot", "fleur", "leftArrow", "question", "doubleHorizArrow", "doubleVertArrow",    "sizing", "dollyIn", "dollyOut", "brush", "camera", "noAccess",  "input", "output", "leftCycle", "rightCycle", "rightExpand", "knife". "
	fnames "toolFinish tf"
		fdesc "Supply the script that will be run when the user exits the script. "
	fnames "toolStart ts"
		fdesc "Supply the script that will be run when the user first enters the script "
	fnames "totalSelectionSets tss"
		fdesc "Total number of selection sets. "
	rcount "0"
name "scriptEditorInfo"
	desc "Use this command to directly manipulate and query the contents of the Script Editor window. Note: This command cannot be used to create a new script editor window."
	fcount "9"
	fnames "clearHistory ch"
		fdesc "Clears the read-only text in the upper field of the Script Editor. "
	fnames "clearHistoryFile chf"
		fdesc "Clear the file defined by the -hf/historyFilename flag, but only  if -wh/writeHistory is true. Use this flag to start a new history file,  since the default behaviour of the Script Editor is to append to  the existing file. "
	fnames "historyFilename hfn"
		fdesc "Sets or returns the name of the file that the Script Editor will use to echo all of its history to. If this is an empty string when the -wh/writeHistory flag is set to true, then it will automatically be set to the default file. "
	fnames "input i"
		fdesc "Sets the text in the lower field of the Script Editor. Set this value to an empty string to clear the field. "
	fnames "suppressErrors se"
		fdesc "When true, Script Editor will not display error messages. "
	fnames "suppressInfo si"
		fdesc "When true, Script Editor will not display info messages  generated by Maya. "
	fnames "suppressResults sr"
		fdesc "When true, Script Editor will not display command results. "
	fnames "suppressWarnings sw"
		fdesc "When true, Script Editor will not display warning messages. "
	fnames "writeHistory wh"
		fdesc "When true, Script Editor will echo all of its  history to the file defined by the -hf/historyFilename flag. This  flag effectively turns file writing on/off. "
	rcount "0"
name "scriptJob"
	desc "This command creates a "script job", which is a MEL command or script. This job is attached to the named condition, event, or attribute. Each time the condition switches to the desired state (or the trigger is triggered, etc), the script is run. This triggering happens very frequently so for speed considerations no events are forwarded during playback. This means that you cannot use scriptJob -tc tcCallback; to alter animation behaviour. Use an expression instead, or the rendering callbacks "preRenderMel" and "postRenderMel". When setting up jobs for conditions, it is invalid to setup jobs for the true state, false state,.... Refer to full documentation"
	fcount "27"
	fnames "allChildren alc"
		fdesc "This flag can only be used in conjunction with  the -ac/attributeChange flag.  If it is specified, and the job is attached to a compound attribute, then the  job will run due to changes to the specified attribute  as well as changes to its children. "
	fnames "attributeAdded aa"
		fdesc "Run the script when the named attribute is added. The string must identify both the dependency node and the particular attribute.  If the dependency node is deleted, this job is killed (even if the deletion is undoable). "
	fnames "attributeChange ac"
		fdesc "Run the script when the named attribute changes value. The string must identify both the dependency node and the particular attribute.  If the dependency node is deleted, this job is killed (even if the deletion is undoable). "
	fnames "attributeDeleted ad"
		fdesc "Run the script when the named attribute is deleted. The string must identify both the dependency node and the particular attribute.  If the dependency node is deleted, this job is killed (even if the deletion is undoable). "
	fnames "compressUndo cu"
		fdesc "If this is set to true, and the scriptJob is undoable, then its action will be bundled with the last user action for undo purposes.  For example; if the scriptJob was triggered by a selection change, then pressing undo will undo both the scriptJob and the selection change at the same time. "
	fnames "conditionChange cc"
		fdesc "Run the script when the named condition changes state. The string must be the name of a pre-defined, or a user-defined boolean condition.  To get a list of what conditions exist, use the -listConditions flag. "
	fnames "conditionFalse cf"
		fdesc "Run the script when the named condition becomes false. The string must be the name of a pre-defined, or a user-defined boolean condition.  To get a list of what conditions exist, use the -listConditions flag. "
	fnames "conditionTrue ct"
		fdesc "Run the script when the named condition becomes true. The string must be the name of a pre-defined, or a user-defined boolean condition.  To get a list of what conditions exist, use the -listConditions flag. "
	fnames "connectionChange con"
		fdesc "Run the script when the named attribute changes its connectivity.  The string must identify both the dependency node and the particular attribute.  If the dependency node is deleted, this job is killed (even if the deletion is undoable). "
	fnames "disregardIndex dri"
		fdesc "This flag can only be used in conjunction with  the -ac/attributeChange flag.  If it is specified, and the job is attached to a multi (indexed) attribute, then the job will run no matter which attribute in the multi changes. "
	fnames "event e"
		fdesc "Run the script when the named event occurs.  This string must be the name of a pre-defined maya event.  To get a list of what events exist, use the -listEvents flag. "
	fnames "exists ex"
		fdesc "Returns true if a scriptJob with the specified "job number" exists, and false otherwise. The "job number" should be a value that was returned  on creation of a new scriptJob. "
	fnames "force f"
		fdesc "This flag can only be used with -kill, -killAll,  or -replacePrevious. It enables the deletion of protected jobs. "
	fnames "idleEvent ie"
		fdesc "Run the script every time maya is idle.  WARNING,  as long as an idle event is is registered, the application will keep calling it and will use up all available CPU time. Use idleEvents with caution. "
	fnames "kill k"
		fdesc "Kills the job with the specified job number. Permanent jobs cannot be killed, however, and protected jobs can only be killed if the -force flag is used in the command. "
	fnames "killAll ka"
		fdesc "Kills all jobs. Permanent jobs will not be deleted, and protected jobs will only be deleted if the -force flag is used. "
	fnames "killWithScene kws"
		fdesc "Attaches the job to the current scene, and when the scene is emptied. The current scene is emptied by opening a new or  existing scene. "
	fnames "listConditions lc"
		fdesc "This causes the command to return a string array containing the names of all existing conditions.  Below is the descriptions for all the existing conditions: Events Based on Available Maya Features These events are true when the given feature is available. Event Name  Maya Feature "
	fnames "listEvents le"
		fdesc "This causes the command to return a string array containing the names of all existing events.  Below is the descriptions  for all the existing events:   angularToleranceChanged: when the tolerance on angular units is changed. This tolerance can be changed by:  using the MEL command, "tolerance" with the  "-angular" flag  changing the pref under Options- GeneralPreferences- Modeling tab- Tangential Tolerance     angularUnitChanged: when the user changes the angular unit.     axisAtOriginChanged: when the axis changes at the origin.      axisInViewChanged: when the axis changes at a particular view.     ColorIndexChanged: when the color index values change.     constructionHistoryChanged:  when the construction history chang.es     currentSoundNodeChanged: whenever the sound displayed in the time slider changes due to:  the sound being removed (or no longer displayed) [RMB in the time slider] a new sound being displayed [RMB in the time slider] sound display being toggled [animation options] sound display mode being changed [animation options]     DagObjectCreated: when a new DAG object is created.     deleteAll: when a file new occurs     DisplayColorChanged: when the display color changes.     displayLayerChange: when a layer has been created or destroyed.     displayLayerManagerChange: when the display layer manager has changed.     DisplayRGBColorChanged: when the RGB display color changes.     glFrameTrigger: for internal use only.     gridDisplayChanged:  for internal use only.     idle:  when Maya is idle and there are no high priority idle tasks     idleHigh:  when Maya is idle.  This is called before low priority idle  tasks.  You should almost always use "idle" instead.     lightLinkingChanged:  when any change occurs which modifies light linking relationships.     lightLinkingChangedNonSG:  when any change occurs which modifies light linking relationships, except when the change is a change of shading assignment.     linearToleranceChanged:  when the linear tolerance has been changed.  This tolerance can be changed by:  using the MEL command, "tolerance" with the  "-linear" flag  changing the pref under Options- GeneralPreferences- Modeling tab- Positional Tolerance     linearUnitChanged:  when the user changes the linear unit through the Options menu.     MenuModeChanged:  when the user changes the menu set for the menu bar in the main Maya window (for example, from "Modeling" to "Animation").     RecentCommandChanged:  for internal use only.     NewSceneOpened: when a new scene has been opened.     nurbsToPolygonsPrefsChanged:  when any of the nurbs-to-polygons prefs have changed.  These prefs can be changed by:  using the Mel command, "nurbsToPolygonsPref"  changing the prefs under Polygons- Nurbs To Polygons- Option Box     playbackRangeChanged: when the playback keyframe range changes.     playbackRangeSliderChanged: when the animation start/end range (i.e. the leftmost or rightmost entry cells in the time slider range, the inner ones adjust the playback range) change     quitApplication: when the user has chosen to quit, either through the quit MEL  command, or through the Exit menu item.     Redo: when user has selected redo from the menu and there was something  to redo.  This callback can be used for updating UI or local storage.  Do not change the state of the scene or DG during this callback.     renderLayerChange: when creation or deletion of a render layer node has occured.     renderLayerManagerChange: when the current render layer has changed.     RebuildUIValues: for internal use only.     SceneOpened: when a scene has been opened.     SelectionChanged:  when a new selection is made.     SelectModeChanged:  when the selection mode changes.     SelectPreferenceChanged:  for internal use only.     SelectPriorityChanged: when the selection priority changes.     SelectTypeChanged:  when the selection type changes.     setEditorChanged: obsolete.  No longer used.     SetModified: when the set command is used to modify a set     snapModeChanged: when the snap mode changes. E.g. changes to grid snapping.      timeChanged: when the time changes.     timeUnitChanged:  when the user changes the time unit.     ToolChanged:  when the user changes the tool/context.     NameChanged:  when the user changes the name of an object with the rename command.     Undo: when user has selected undo from the menu and there was  something to undo.  This callback can be used for updating UI or local storage.  Do not change the state of the scene or DG during this callback. "
	fnames "listJobs lj"
		fdesc "This causes the command to return a string array containing a description of all existing jobs, along with their job numbers.  These numbers can be used to kill the jobs later. "
	fnames "parent p"
		fdesc "Attaches this job to a piece of maya UI.  When the UI is destroyed, the job will be killed along with it. "
	fnames "permanent perm"
		fdesc "Makes the job un-killable. Permanent jobs exist for the life of the application, or for the life of their parent object. The -killWithScene flag does apply to permanent jobs. "
	fnames "protected pro"
		fdesc "Makes the job harder to kill. Protected jobs must be killed or replaced intentionally by using the -force flag. The -killWithScene flag does apply to protected jobs. "
	fnames "replacePrevious rp"
		fdesc "This flag can only be used with the -parent flag.  Before the new scriptJob is created, any existing scriptJobs that have the same parent are first deleted. "
	fnames "runOnce ro"
		fdesc "If this is set to true, the script will only be run a single time.  If false (the default) the script will run every time the triggering condition/event occurs.  If the -uid flag is used, runOnce is turned on automatically. "
	fnames "timeChange tc"
		fdesc "Run the script whenever the current time changes. The script will not be executed if the time is changed by clicking on the time slider, whereas scripts triggered by the "timeChanged"  condition will be executed. "
	fnames "uiDeleted uid"
		fdesc "Run the script when the named piece of UI is deleted. "
	rcount "3"
		rname "eval"
		rname "evalDeferred"
		rname "evalEcho"
name "scriptNode"
	desc "ScriptNodes contain scripts that are executed when a file is loaded or when the node is deleted. The scriptNode command is used to create, edit, query, and test scriptNodes."
	fcount "6"
	fnames "afterScript as"
		fdesc "The script executed when the node is deleted.  C: The default is an empty string.  Q: When queried, this flag returns a string. "
	fnames "beforeScript bs"
		fdesc "The script executed during file load.  C: The default is an empty string.  Q: When queried, this flag returns a string. "
	fnames "executeAfter ea"
		fdesc "Execute the script stored in the .after attribute of the  scriptNode. This script is normally executed when the node is deleted. "
	fnames "executeBefore eb"
		fdesc "Execute the script stored in the .before attribute of the  scriptNode. This script is normally executed when the file is loaded. "
	fnames "name n"
		fdesc "When creating a new scriptNode, this flag specifies the name of the node. If a non-unique name is used, the name will be  modified to ensure uniqueness. "
	fnames "scriptType st"
		fdesc "Specifies when the script is executed. The following values may be used: "
	rcount "0"
name "scriptTable"
	desc "This command creates/edits/queries the switch table control."
	fcount "31"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "cellChangedCmd ccc"
		fdesc "Sets the MEL procedure to call when somebody has changed the value of a cell. The procedure is called with 2 integer arguments specifying the row and column for which the value was changed. The 3rd argument is the string which was entered into that cell. The procedure should return an integer value which indicates whether that value should be accepted (return true if yes, and false if no). The row and column numbers passed in are 1-based (ie. (1,1) is the upper left cell). The procedure should be of the form: global proc int procedureName(int $row, int $column, string $value) "
	fnames "clearRow cr"
		fdesc "Clear the contents for all the cells on the specified row. Any procedure specified by the -gcc flag will be called to populate the cleared cells The row number is 1-based (ie. the first row is 1 not 0). "
	fnames "clearTable ct"
		fdesc "Clears the contents of all the cells in the table. Any procedure specified by the -gcc flag will be called to populate the cleared cells "
	fnames "columnWidth cw"
		fdesc "Set the width of the specified column The column number is 1-based (ie. the first column is 1 not 0). "
	fnames "columns c"
		fdesc "Set the number of columns in the table "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "deleteRow dr"
		fdesc "Delete the specified row The row number is 1-based (ie. the first row is 1 not 0). "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "getCellCmd gcc"
		fdesc "Sets the MEL procedure to call when it requires the contents of a cell. The procedure is called with 2 integer arguments specifying the row and column for which the value is required. The procedure should return a string which is the value for the cell. The row and column numbers passed in are 1-based (ie. (1,1) is the upper left cell). The procedure should be of the form: global proc string procedureName(int $row, int $column) "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "insertRow ir"
		fdesc "Insert an empty row before the specified row. Any procedure specified by the -gcc flag will be called to populate the new new cells. The row number is 1-based (ie. the first row is 1 not 0). "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "Set the label of the specified column. The column number is 1-based (ie. the first column is 1 not 0). "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rows r"
		fdesc "Set the number of rows in the table "
	fnames "selectedRow sr"
		fdesc "The current row selected. The returned row number is 1-based (ie. the first row is 1 not 0). "
	fnames "underPointerRow upr"
		fdesc "The row under the pointer. The returned row number is 1-based (ie. the first row is 1 not 0). "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "scriptedPanel"
	desc "This command will create an instance of the specified scriptedPanelType. A panel is a collection of UI objects (buttons, fields, graphical views) that are grouped together. A panel can be moved around as a group within the application interface, and torn off to exist in its own window. The panel takes care of maintaining the state of its UI when it is relocated, or recreated. A scripted panel is a panel that is defined in MEL, with all of the required callbacks available as MEL proc's."
	fcount "20"
	fnames "control ctl"
		fdesc "Returns the top level control for this panel. Usually used for getting a parent to attach popup menus. CAUTION: panels may not have controls at times.  This flag can return "" if no control is present. "
	fnames "copy cp"
		fdesc "Makes this panel a copy of the specified panel.  Both panels must be of the same type. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Attaches a tag to the maya panel. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "init in"
		fdesc "Initializes the panel's default state.  This is usually done automatically on file -new and file -open. "
	fnames "isUnique iu"
		fdesc "Returns true if only one instance of this panel type is allowed. "
	fnames "label l"
		fdesc "Specifies the user readable label for the panel. "
	fnames "menuBarVisible mbv"
		fdesc "Controls whether the menu bar for the panel is displayed. "
	fnames "needsInit ni"
		fdesc "(Internal) On Edit will mark the panel as requiring initialization. Query will return whether the panel is marked for initialization.  Used during file -new and file -open. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this panel. "
	fnames "popupMenuProcedure pmp"
		fdesc "Specifies the procedure called for building the panel's popup menu(s). The default value is "buildPanelPopupMenu". "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "replacePanel rp"
		fdesc "Will replace the specifed panel with this panel.  If the target panel is within the same layout it will perform a swap. "
	fnames "tearOff to"
		fdesc "Will tear off this panel into a separate window with a paneLayout as the parent of the panel. When queried this flag will return if the panel has been torn off into its own window. "
	fnames "tearOffCopy toc"
		fdesc "Will create this panel as a torn of copy of the specified source panel. "
	fnames "type typ"
		fdesc "This flag specifies the type of scripted panel to create.  The type is specified as a string. "
	fnames "unParent up"
		fdesc "Specifies that the panel should be removed from its layout. This (obviously) cannot be used with query. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "scriptedPanelType"
	desc "This command defines the callbacks for a type of scripted panel. The panel type created by this command is then used when creating a scripted panel. See also the 'scriptedPanel' command."
	fcount "12"
	fnames "addCallback acb"
		fdesc "This flag specifies the callback procedure for adding the panel to a particular control layout.  The parent layout is guaranteed to be  the current default layout when the proc is called.  If its name is required then it can be queried with 'setParent -q'.  Any editors should be parented here. global proc procName (string $panelName) { .... } "
	fnames "createCallback ccb"
		fdesc "This flag specifies the callback procedure for initially creating the panel object.  No UI should be created here.  Any editors owned  by the panel should be created here unparented. The callback proc has the form: global proc procName (string $panelName) { .... } "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "deleteCallback dcb"
		fdesc "This flag specifies the callback procedure for final deletion of the panel.  The callback proc has the form: global proc procName (string $panelName) { .... } "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "initCallback icb"
		fdesc "This flag specifies the callback procedure for the initialize callback.  This will be called on file -new and file -open to give the panel an opportunity to re-initialize to a starting state, if required. The panel may be parented or unparented at this time. The callback proc has the form: global proc procName (string $panelName) { .... } "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "removeCallback rcb"
		fdesc "This flag specifies the callback procedure for removing the panel from its current control layout.  Any editors should be unparented here. The callback proc has the form: global proc procName (string $panelName) { .... } "
	fnames "saveStateCallback scb"
		fdesc "This flag specifies the callback procedure for saving the state of the panel.  The callback proc has the form: global proc string procName (string $panelName) { .... } Note that the proc returns a string.  This string will be executed after the createCallback has been called to facilitate restoring the panel state. "
	fnames "unique u"
		fdesc "This flag specifies if only one instance of this type of panel can exist at a given time. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "scrollField"
	desc "This command creates a scrolling field that handles multiple lines of text."
	fcount "31"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed when the value changes. This command is executed whenever the field loses focus. "
	fnames "clear cl"
		fdesc "Removes all text in the field. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "editable ed"
		fdesc "The edit state of the field.  By default, this flag is set to true and the field value may be changed by typing into it. If false then the field is 'read only' and can not be typed into. The text in the field can always be changed with the -tx/text flag regardless of the state of the -ed/editable flag. "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "enterCommand ec"
		fdesc "Command executed when the enter key is pressed. This applies to the enter key on the numeric keypad only. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "font fn"
		fdesc "The font for the text.  Valid values are "boldLabelFont", "smallBoldLabelFont", "tinyBoldLabelFont", "plainLabelFont", "smallPlainLabelFont", "obliqueLabelFont", "smallObliqueLabelFont", "fixedWidthFont" and "smallFixedWidthFont". "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "insertText it"
		fdesc "Insert text into the field at the current insertion position (specified by the -ip/insertionPosition flag). "
	fnames "insertionPosition ip"
		fdesc "The insertion position for inserted text.  This is a 1 based value where position 1 specifies the beginning of the field.  Position 0 may be used to specify the end of the field. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "keyPressCommand kpc"
		fdesc "Command executed when any key is pressed. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfLines nl"
		fdesc "Number of lines in the scroll field. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "selection sl"
		fdesc "The selected text in the field.  An empty string is returned if there is no selected text. "
	fnames "text tx"
		fdesc "The field text. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "wordWrap ww"
		fdesc "Specify true to break lines at spaces, tabs, or newlines.  Text will continue on the following line.  A value of false will not break text between words, in which case text may disappear beyond the edge of the field.  This flag must be set at create time. Lines do not word wrap by default. "
	rcount "0"
name "scrollLayout"
	desc "This command creates a scroll layout. A scroll layout is useful for when you have a number of controls which cannot all be visible at a time. This layout will display a horizontal and/or vertical scroll bar when necessary to bring into view the hidden controls. Since the scroll layout provides no real positioning of children you should use another control layout as the immediate child."
	fcount "31"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "childArray ca"
		fdesc "Returns a string array of the names of the layout's  immediate children. "
	fnames "childResizable cr"
		fdesc "Set to true if you want the child of the control layout to be as wide as the scroll area.  You may also indicate a minimum width for the child using the  -mcw/minimumChildWidth  flag. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "horizontalScrollBarThickness hst"
		fdesc "Thickness of the horizontal scroll bar.  Specify an integer value of pixels greater than or equal to 0. Other than setting the value to 0 to hide the scrollbar, this flag has no effect on Windows systems. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "minChildWidth mcw"
		fdesc "A positive non-zero integer value indicating the minimum width the scroll layout's child.  This flag only has meaning when the  -cr/childResizable  flag is set to true. "
	fnames "numberOfChildren nch"
		fdesc "Returns in an int the number of immediate children of the layout. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "resizeCommand rc"
		fdesc "The command invoked when the scroll layout is resized. "
	fnames "scrollAreaHeight sah"
		fdesc "Return the height of the scroll area (in pixels). "
	fnames "scrollAreaValue sav"
		fdesc "Return the vertical and horizontal values of the scroll  area (in pixels). "
	fnames "scrollAreaWidth saw"
		fdesc "Return the width of the scroll area (in pixels). "
	fnames "scrollByPixel sbp"
		fdesc "Scroll the client area in the direction of the string. The int specifies the number of pixels. "
	fnames "scrollPage sp"
		fdesc "Scroll the client area in the direction of the string. Valid values are "up", "down", "left" or "right". "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "verticalScrollBarThickness vst"
		fdesc "Thickness of the vertical scroll bar.  Specify an integer value of pixels greater than or equal to 0. This flag has no effect on Windows systems. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "sculpt"
	desc "This command creates/edits/queries a sculpt object deformer. By default for creation mode an implicit sphere will be used as the sculpting object if no sculpt tool is specified. The name of the created/edited object is returned."
	fcount "19"
	fnames "after af"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node after the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "before bf"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node before the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "deformerTool dt"
		fdesc "Returns the name of the deformer tool objects (if any) as string string ... "
	fnames "dropoffDistance dd"
		fdesc "Specifies the distance from the surface of the sculpt object at which the sculpt object produces no deformation effect. Default is 1.0. When queried, this flag returns a float. "
	fnames "dropoffType drt"
		fdesc "Specifies how the deformation effect drops off from maximum effect at the surface of the sculpt object to no effect at dropoff distance limit. Valid values are: linear | none. Default is linear. When queried, this flag returns a string. "
	fnames "exclusive ex"
		fdesc "Puts the deformation set in a deform partition. "
	fnames "frontOfChain foc"
		fdesc "This command is used to specify that the new deformer  node should be placed ahead (upstream) of existing deformer and skin nodes in the shape's history (but not ahead of existing tweak nodes). The input to the deformer will be the upstream shape rather than the visible downstream shape, so the behavior of this flag is the most intuitive if the downstream deformers are in their reset (hasNoEffect) position when the new deformer is added. "
	fnames "geometry g"
		fdesc "The specified object will be added to the list of objects being deformed by this deformer object, unless the -rm flag is also specified. When queried, this flag returns string string string ... "
	fnames "groupWithLocator gwl"
		fdesc "Groups the sculptor and its locator together under a single transform. Default is off. "
	fnames "ignoreSelected is"
		fdesc "Tells the command to not deform objects on the current selection list "
	fnames "insideMode im"
		fdesc "Specifies how the deformation algorithm deals with points that are inside the sculpting primitve. The choices are: ring | even. The default is even. When queried, this flag returns a string. Ring mode will tend to produce a contour like ring of points around the sculpt object as it passes through an object while even mode will try to spread the points out as evenly as possible across the surface of the sculpt object. "
	fnames "maxDisplacement md"
		fdesc "Defines the maximum amount the sculpt object may move a point on an object which it is deforming. Default is 1.0. When queried, this flag returns a float. "
	fnames "mode m"
		fdesc "Specifies which deformation algorithm the sculpt object should use. The choices are: flip | project | stretch. The default is stretch. When queried, this flag returns a string. "
	fnames "name n"
		fdesc "Used to specify the name of the node being created "
	fnames "objectCentered oc"
		fdesc "Places the sculpt and locator in the center of the bounding box of the selected object(s) or components. Default is off which centers the sculptor and locator at the origin. "
	fnames "prune pr"
		fdesc "Removes any points not being deformed by the deformer in  its current configuration from the deformer set. "
	fnames "remove rm"
		fdesc "Specifies that objects listed after the -g flag should be removed from this deformer. "
	fnames "sculptTool st"
		fdesc "Use the specified NURBS object as the sculpt tool instead of the default implicit sphere. "
	fnames "split sp"
		fdesc "Branches off a new chain in the dependency graph instead of inserting/appending the deformer into/onto an existing chain. "
	rcount "7"
		rname "cluster"
		rname "lattice"
		rname "deformer"
		rname "flexor"
		rname "wire"
		rname "wrinkle"
		rname "percent"
name "searchPathArray"
	desc "Looks for a readable file in the directories listed in pathArray. Notes: Intial white space in $name is ignored (chopped) Name beginning with "/" are returned as-is Empty string entries in pathArray are skipped, use . for cwd. Path elements beginning in "$" are treated as environment variables."
	fcount "0"
	rcount "0"
name "seed"
	desc "This command seeds the generation of random numbers allowing repeatable sequences of random numbers. The seed function affects rand , sphrand and gauss . Multiple random number streams: The stream-based variant of seed accepts a string parameter which specifies the name of the random number stream to seed. For more details on multiple random number streams please see the rand function. Note that there is no need to seed a stream upon creation because every stream created, including the default stream, is first initialised to the same internal seed value to ensure that every stream will generate identical results when.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "selLoadSettings"
	desc "SelLoadSettings is undoable , queryable , and editable . This command is used to edit and query information about the implicit load settings. Currently this is primarily intended for internal use within the Preload Reference Editor. selLoadSettings acts on load setting IDs. When implict load settings are built for a target scene, there will be one load setting for each reference in the target scene. Each load setting has a numerical ID which is its index in a pre-order traversal of the target reference hierarchy (with the root scenefile being assigned an ID of 0). Although the IDs are numerical.... Refer to full documentation"
	fcount "6"
	fnames "deferReference dr"
		fdesc "Change or query the load state of a reference. "
	fnames "fileName fn"
		fdesc "Return the file name reference file(s) associated with the indicated load setting(s). "
	fnames "numSettings ns"
		fdesc "Return the number of settings in the group of implicit load settings. This is equivalent to number of references in the scene plus 1. "
	fnames "referenceNode rfn"
		fdesc "Return the name(s) of the reference node(s) associated with the indicated load setting(s). "
	fnames "shortName shn"
		fdesc "Formats the return value of the 'fileName' query flag to only return the short name(s) of the reference file(s). "
	fnames "unresolvedName un"
		fdesc "Formats the return value of the 'fileName' query flag to return the unresolved name(s) of the reference file(s). The unresolved file name is the file name used when the reference was created, whether or not that file actually exists on disk. When Maya encounters a file name which does not exist on disk it attempts to resolve the name by looking for the file in a number of other locations. By default the 'fileName' flag will return this resolved value. "
	rcount "1"
		rname "file"
name "select"
	desc "This command is used to put objects onto or off of the active list. If none of the five flags [-add, -af, -r, -d, -tgl] are specified, the default is to replace the objects on the active list with the given list of objects. When selecting a set as in "select set1", the behaviour is for all the members of the set to become selected instead of the set itself. If you want to select a set, the "-ne/noExpand" flag must be used. With the advent of namespaces, selection by name may be confusing. To clarify, without a qualified namespace,.... Refer to full documentation"
	fcount "12"
	fnames "add add"
		fdesc "Indicates that the specified items should be added to the active list without removing existing items from the active list. "
	fnames "addFirst af"
		fdesc "Indicates that the specified items should be added to the front of the active list without removing existing items from the active list. "
	fnames "all all"
		fdesc "Indicates that all deletable root level dag objects and all deletable non-dag dependency nodes should be selected. "
	fnames "allDagObjects ado"
		fdesc "Indicates that all deletable root level dag objects should be selected. "
	fnames "allDependencyNodes adn"
		fdesc "Indicates that all deletable dependency nodes including all deletable dag objects should be selected. "
	fnames "clear cl"
		fdesc "Clears the active list.  This is more efficient than "select -d;".  Also "select -d;" will not remove sets from the active list unless the "-ne" flag is also specified. "
	fnames "deselect d"
		fdesc "Indicates that the specified items should be removed from the active list if they are on the active list. "
	fnames "hierarchy hi"
		fdesc "Indicates that all children, grandchildren, ... of the specified dag objects should also be selected. "
	fnames "noExpand ne"
		fdesc "Indicates that any set which is among the specified items should not be expanded to its list of members. This allows sets to be selected as opposed to the members of sets which is the default behaviour. "
	fnames "replace r"
		fdesc "Indicates that the specified items should replace the existing items on the active list. "
	fnames "toggle tgl"
		fdesc "Indicates that those items on the given list which are on the active list should be removed from the active list and those items on the given list which are not on the active list should be added to the active list. "
	fnames "visible vis"
		fdesc "Indicates that of the specified items only those  that are visible should be affected.   "
	rcount "6"
		rname "selectPref"
		rname "selectedNodes"
		rname "selectKey"
		rname "selectPriority"
		rname "selectMode"
		rname "selectType"
name "selectContext"
	desc "Creates a context to perform selection."
	fcount "8"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "selectKey"
	desc "This command operates on a keyset. A keyset is defined as a group of keys within a specified time range on one or more animation curves. The animation curves comprising a keyset depend on the value of the "-animation" flag: keysOrObjects : 1) any active keys, when no target objects or -attribute flags appear on the command line, or 2) all animation curves connected to all keyframable attributes of objects specified as the command line's targetList, when there are no active keys. keys : Only act on active keys or tangents. If there are no active keys or tangents, don't.... Refer to full documentation"
	fcount "18"
	fnames "addTo add"
		fdesc "Add to the current selection of keyframes/tangents "
	fnames "animation an"
		fdesc "Where this command should get the animation to act on.  Valid values are "objects," "keys," and "keysOrObjects" Default: "keysOrObjects."  (See Description for details.) "
	fnames "attribute at"
		fdesc "List of attributes to select "
	fnames "clear cl"
		fdesc "Remove all keyframes and tangents from the active list. "
	fnames "controlPoints cp"
		fdesc "This flag explicitly specifies whether or not to include the control points of a shape (see "-s" flag) in the list of attributes. Default: false.   (Not valid for "pasteKey" cmd.) "
	fnames "float f"
		fdesc "value uniquely representing a non-time-based key (or key range) on a time-based animCurve.  Valid floatRange include single values (-f 10) or a string with a lower and upper bound, separated by a colon (-f "10:20") "
	fnames "hierarchy hi"
		fdesc "Hierarchy expansion options.  Valid values are "above," "below," "both," and "none."  (Not valid for "pasteKey" cmd.) "
	fnames "inTangent it"
		fdesc "Select in-tangents of keyframes in the specified time range "
	fnames "includeUpperBound iub"
		fdesc "When the -t/time or -f/float flags represent a range of keys, this flag determines whether the keys at the  upper bound of the range are included in the keyset. Default value: true.  This flag is only valid when the argument to the -t/time flag is a time range with a lower and upper bound.  (When used with the "pasteKey"  command, this flag refers only to the time range of the target curve that is replaced, when using options such as "replace," "fitReplace," or "scaleReplace."  This  flag has no effect on the curve pasted from the clipboard.) "
	fnames "index in"
		fdesc "index of a key on an animCurve "
	fnames "keyframe k"
		fdesc "select only keyframes (cannot be combined with -in/-out) "
	fnames "outTangent ot"
		fdesc "Select out-tangents of keyframes in the specified time range "
	fnames "remove rm"
		fdesc "Remove from the current selection of keyframes/tangents "
	fnames "replace r"
		fdesc "Replace the current selection of keyframes/tangents "
	fnames "shape s"
		fdesc "Consider attributes of shapes below transforms as well, except "controlPoints".  Default: true.   (Not valid for "pasteKey" cmd.) "
	fnames "time t"
		fdesc "time uniquely representing a key (or key range) on a time-based animCurve.  Valid timeRanges include single values (-t 10) or a string with a lower and upper bound, separated by a colon (-t "10:20") "
	fnames "toggle tgl"
		fdesc "Toggle the picked state of the specified keyset "
	fnames "unsnappedKeys uk"
		fdesc "Select only keys that have times that are not a multiple of the specified numeric value. "
	rcount "6"
		rname "select"
		rname "selectPref"
		rname "selectedNodes"
		rname "selectPriority"
		rname "selectMode"
		rname "selectType"
name "selectKeyCtx"
	desc "This command creates a context which may be used to select keyframes within the graph editor."
	fcount "8"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "selectMode"
	desc "The selectMode command is used to change the selection mode. Object, component, root, leaf and template modes are mutually exclusive."
	fcount "8"
	fnames "component co"
		fdesc "Set component selection on. Component selection mode allows filtered selection based on the component selection mask. The component selection mask is the set of selection masks related to objects that indicate which components are selectable. "
	fnames "hierarchical h"
		fdesc "Set hierarchical selection on. There are three types of hierarchical selection: root, leaf and template.  Hierarchical mode is set if root, leaf or template mode is set. Setting to hierarchical mode will set the mode to whichever of root, leaf, or template was last on. "
	fnames "leaf l"
		fdesc "Set leaf selection mode on.  This mode allows the leaf level objects to be selected.  It is similar to object selection mode but ignores the object selection mask. "
	fnames "object o"
		fdesc "Set object selection on. Object selection mode allows filtered selection based on the object selection mask. The object selection mask is the set of selection masks related to objects that indicate which objects are selectable.  The masks are controlled by the "selectType" command.  Object selection mode selects the leaf level objects. "
	fnames "preset p"
		fdesc "Allow selection of anything with the mask set, independent of it being an object or a component. "
	fnames "query q"
		fdesc "Query the selection mode. "
	fnames "root r"
		fdesc "Set root selection mode on.  This mode allows the root of a hierarchy to be selected by selecting any of its descendents.  It ignores the object selection mask. "
	fnames "template t"
		fdesc "Set template selection mode on.  This mode allows selection of templated objects.  It selects the templated object closest to the root of the hierarchy. "
	rcount "6"
		rname "select"
		rname "selectPref"
		rname "selectedNodes"
		rname "selectKey"
		rname "selectPriority"
		rname "selectType"
name "selectPref"
	desc "This command controls state variables used to selection UI behavior."
	fcount "10"
	fnames "affectsActive aa"
		fdesc "Set affects-active toggle which when on causes the active list to be affected when changing between object and component selection mode. "
	fnames "allowHiliteSelection ahs"
		fdesc "When in component selection mode, allow selection of objects for editing.  If an object is selected for editing, it appears in the hilite color and its selectable components are automatically displayed. "
	fnames "clickBoxSize cbs"
		fdesc "When click selecting, this value defines the size of square picking region surrounding the cursor. The size of the square is twice the specified value. That is, the value defines the amount of space on all four sides of the cursor position. The size must be positive. "
	fnames "clickDrag cld"
		fdesc "Set click/drag selection interaction on/off "
	fnames "expandPopupList epl"
		fdesc "When in popup selection mode, if this is set then all selection items that contain multiple objects or components will be be expanded such that each object or component will be a single new selection item. "
	fnames "ignoreSelectionPriority isp"
		fdesc "If this is set, selection priority will be ignored when performing selection. "
	fnames "popupMenuSelection pms"
		fdesc "If this is set, a popup menu will be displayed and used to determine the object to select. The menu lists the current user box (marquee) of selected  candidate objects. "
	fnames "query q"
		fdesc "Allows you to query one of the above values. "
	fnames "singleBoxSelection sbs"
		fdesc "Set single box selection on/off. This flag indicates whether just single object will be selected when the user box (marquee) selects several objects if flag set to true.  Otherwise, all those objects inside the box will be selected. "
	fnames "xformNoSelect xns"
		fdesc "Disable selection in xform tools "
	rcount "6"
		rname "select"
		rname "selectedNodes"
		rname "selectKey"
		rname "selectPriority"
		rname "selectMode"
		rname "selectType"
name "selectPriority"
	desc "The selectPriority command is used to change the selection priority of particular types of objects that can be selected when using the select tool. It accepts no other arguments besides the flags. These flags are the same as used by the 'selectType' command."
	fcount "76"
	fnames "allComponents alc"
		fdesc "Set all component selection priority "
	fnames "allObjects alo"
		fdesc "Set all object selection priority "
	fnames "animBreakdown abd"
		fdesc "Set animation breakdown selection priority "
	fnames "animCurve ac"
		fdesc "Set animation curve selection priority "
	fnames "animInTangent ait"
		fdesc "Set animation in-tangent selection priority "
	fnames "animKeyframe ak"
		fdesc "Set animation keyframe selection priority "
	fnames "animOutTangent aot"
		fdesc "Set animation out-tangent selection priority "
	fnames "camera ca"
		fdesc "Set camera selection priority "
	fnames "cluster cl"
		fdesc "Set cluster selection priority "
	fnames "collisionModel clm"
		fdesc "Set collision model selection priority "
	fnames "controlVertex cv"
		fdesc "Set control vertex selection priority "
	fnames "curve c"
		fdesc "Set curve selection priority "
	fnames "curveKnot ck"
		fdesc "Set curve knot selection priority "
	fnames "curveOnSurface cos"
		fdesc "Set curve-on-surface selection priority "
	fnames "curveParameterPoint cpp"
		fdesc "Set curve parameter point selection priority "
	fnames "dimension dim"
		fdesc "Set dimension shape selection priority "
	fnames "edge eg"
		fdesc "Set mesh edge selection priority "
	fnames "editPoint ep"
		fdesc "Set edit-point selection priority "
	fnames "emitter em"
		fdesc "Set emitter selection priority "
	fnames "facet fc"
		fdesc "Set mesh face selection priority "
	fnames "field fi"
		fdesc "Set field selection priority "
	fnames "fluid fl"
		fdesc "Set fluid selection priority "
	fnames "follicle fo"
		fdesc "Set follicle selection priority "
	fnames "hairSystem hs"
		fdesc "Set hairSystem selection priority "
	fnames "handle ha"
		fdesc "Set object handle selection priority "
	fnames "hull hl"
		fdesc "Set hull selection priority "
	fnames "ikEndEffector iee"
		fdesc "Set ik end effector selection priority "
	fnames "ikHandle ikh"
		fdesc "Set ik handle selection priority "
	fnames "imagePlane ip"
		fdesc "Set image plane selection mask priority "
	fnames "implicitGeometry ig"
		fdesc "Set implicit geometry selection priority "
	fnames "isoparm iso"
		fdesc "Set surface iso-parm selection priority "
	fnames "joint j"
		fdesc "Set ik handle selection priority "
	fnames "jointPivot jp"
		fdesc "Set joint pivot selection priority "
	fnames "lattice la"
		fdesc "Set lattice selection priority "
	fnames "latticePoint lp"
		fdesc "Set lattice point selection priority "
	fnames "light lt"
		fdesc "Set light selection priority "
	fnames "localRotationAxis ra"
		fdesc "Set local rotation axis selection priority "
	fnames "locator lc"
		fdesc "Set locator (all types) selection priority "
	fnames "locatorUV luv"
		fdesc "Set uv locator selection priority "
	fnames "locatorXYZ xyz"
		fdesc "Set xyz locator selection priority "
	fnames "nonlinear nl"
		fdesc "Set nonlinear selection priority "
	fnames "nurbsCurve nc"
		fdesc "Set nurbs-curve selection priority "
	fnames "nurbsSurface ns"
		fdesc "Set nurbs-surface selection priority "
	fnames "orientationLocator ol"
		fdesc "Set orientation locator selection priority "
	fnames "particle pr"
		fdesc "Set particle point selection priority "
	fnames "particleShape ps"
		fdesc "Set particle shape selection priority "
	fnames "plane pl"
		fdesc "Set sketch plane selection priority "
	fnames "polymesh p"
		fdesc "Set poly-mesh selection priority "
	fnames "polymeshEdge pe"
		fdesc "Set poly-mesh edge selection priority "
	fnames "polymeshFace pf"
		fdesc "Set poly-mesh face selection priority "
	fnames "polymeshFreeEdge pfe"
		fdesc "Set poly-mesh free-edge selection priority "
	fnames "polymeshUV puv"
		fdesc "Set poly-mesh UV point selection priority "
	fnames "polymeshVertex pv"
		fdesc "Set poly-mesh vertex selection priority "
	fnames "polymeshVtxFace pvf"
		fdesc "Set poly-mesh vtxFace selection priority "
	fnames "query q"
		fdesc "No Description"
	fnames "rigidBody rb"
		fdesc "Set rigid body selection priority "
	fnames "rigidConstraint rc"
		fdesc "Set rigid constraint selection priority "
	fnames "rotatePivot rp"
		fdesc "Set rotate pivot selection priority "
	fnames "scalePivot sp"
		fdesc "Set scale pivot selection priority "
	fnames "sculpt sc"
		fdesc "Set sculpt selection priority "
	fnames "selectHandle sh"
		fdesc "Set select handle selection priority "
	fnames "spring spr"
		fdesc "Set spring shape selection priority "
	fnames "springComponent spc"
		fdesc "Set individual spring selection priority "
	fnames "stroke str"
		fdesc "Set stroke selection priority "
	fnames "subdiv sd"
		fdesc "Set subdivision surface selection priority "
	fnames "subdivMeshEdge sme"
		fdesc "Set subdivision surface mesh edge selection priority "
	fnames "subdivMeshFace smf"
		fdesc "Set subdivision surface mesh face selection priority "
	fnames "subdivMeshPoint smp"
		fdesc "Set subdivision surface mesh point selection priority "
	fnames "subdivMeshUV smu"
		fdesc "Set subdivision surface mesh UV map selection priority "
	fnames "surfaceEdge se"
		fdesc "Set surface edge selection priority "
	fnames "surfaceFace sf"
		fdesc "Set surface face selection priority "
	fnames "surfaceKnot sk"
		fdesc "Set surface knot selection priority "
	fnames "surfaceParameterPoint spp"
		fdesc "Set surface parameter point selection priority "
	fnames "surfaceRange sr"
		fdesc "Set surface range selection priority "
	fnames "texture tx"
		fdesc "Set texture selection priority "
	fnames "vertex v"
		fdesc "Set mesh vertex selection priority "
	rcount "6"
		rname "select"
		rname "selectPref"
		rname "selectedNodes"
		rname "selectKey"
		rname "selectMode"
		rname "selectType"
name "selectType"
	desc "The selectType command is used to change the set of allowable types of objects that can be selected when using the select tool. It accepts no other arguments besides the flags. There are basically two different types of items that are selectable when interactively selecting objects in the 3D views. They are classified as objects (entire objects) or components (parts of objects). The object and component command flags control which class of objects are selectable. It is possible to select components while in the object selection mode. To set the components which are selectable in object selection mode you must.... Refer to full documentation"
	fcount "77"
	fnames "allComponents alc"
		fdesc "Set all component selection masks on/off "
	fnames "allObjects alo"
		fdesc "Set all object selection masks on/off "
	fnames "animBreakdown abd"
		fdesc "Set animation breakdown selection mask on/off. "
	fnames "animCurve ac"
		fdesc "Set animation curve selection mask on/off. "
	fnames "animInTangent ait"
		fdesc "Set animation in-tangent selection mask on/off. "
	fnames "animKeyframe ak"
		fdesc "Set animation keyframe selection mask on/off. "
	fnames "animOutTangent aot"
		fdesc "Set animation out-tangent selection mask on/off. "
	fnames "camera ca"
		fdesc "Set camera selection mask on/off. (object flag) "
	fnames "cluster cl"
		fdesc "Set cluster selection mask on/off. (object flag) "
	fnames "collisionModel clm"
		fdesc "Set collision model selection mask on/off. (object flag) "
	fnames "controlVertex cv"
		fdesc "Set control vertex selection mask on/off. (component flag) "
	fnames "curve c"
		fdesc "Set curve selection mask on/off. (object flag) "
	fnames "curveKnot ck"
		fdesc "Set curve knot selection mask on/off. (component flag) "
	fnames "curveOnSurface cos"
		fdesc "Set curve-on-surface selection mask on/off. (object flag) "
	fnames "curveParameterPoint cpp"
		fdesc "Set curve parameter point selection mask on/off. (component flag) "
	fnames "dimension dim"
		fdesc "Set dimension shape selection mask on/off. (object flag) "
	fnames "edge eg"
		fdesc "Set mesh edge selection mask on/off. (component flag) "
	fnames "editPoint ep"
		fdesc "Set edit-point selection mask on/off. (component flag) "
	fnames "emitter em"
		fdesc "Set emitter selection mask on/off. (object flag) "
	fnames "facet fc"
		fdesc "Set mesh face selection mask on/off. (component flag) "
	fnames "field fi"
		fdesc "Set field selection mask on/off. (object flag) "
	fnames "fluid fl"
		fdesc "Set fluid selection mask on/off. (object flag) "
	fnames "follicle fo"
		fdesc "Set follicle selection mask on/off. (object flag) "
	fnames "hairSystem hs"
		fdesc "Set hairSystem selection mask on/off. (object flag) "
	fnames "handle ha"
		fdesc "Set object handle selection mask on/off. (object flag) "
	fnames "hull hl"
		fdesc "Set hull selection mask on/off. (component flag) "
	fnames "ikEndEffector iee"
		fdesc "Set ik end effector selection mask on/off. (object flag) "
	fnames "ikHandle ikh"
		fdesc "Set ik handle selection mask on/off. (object flag) "
	fnames "imagePlane ip"
		fdesc "Set image plane selection mask on/off. (component flag) "
	fnames "implicitGeometry ig"
		fdesc "Set implicit geometry selection mask on/off. (object flag) "
	fnames "isoparm iso"
		fdesc "Set surface iso-parm selection mask on/off. (component flag) "
	fnames "joint j"
		fdesc "Set ik handle selection mask on/off. (object flag) "
	fnames "jointPivot jp"
		fdesc "Set joint pivot selection mask on/off. (component flag) "
	fnames "lattice la"
		fdesc "Set lattice selection mask on/off. (object flag) "
	fnames "latticePoint lp"
		fdesc "Set lattice point selection mask on/off. (component flag) "
	fnames "light lt"
		fdesc "Set light selection mask on/off. (object flag) "
	fnames "localRotationAxis ra"
		fdesc "Set local rotation axis selection mask on/off. (component flag) "
	fnames "locator lc"
		fdesc "Set locator (all types) selection mask on/off. (object flag) "
	fnames "locatorUV luv"
		fdesc "Set uv locator selection mask on/off. (object flag) "
	fnames "locatorXYZ xyz"
		fdesc "Set xyz locator selection mask on/off. (object flag) "
	fnames "nonlinear nl"
		fdesc "Set nonlinear selection mask on/off. (object flag) "
	fnames "nurbsCurve nc"
		fdesc "Set nurbs-curve selection mask on/off. (object flag) "
	fnames "nurbsSurface ns"
		fdesc "Set nurbs-surface selection mask on/off. (object flag) "
	fnames "objectComponent ocm"
		fdesc "Component flags apply to object mode. "
	fnames "orientationLocator ol"
		fdesc "Set orientation locator selection mask on/off. (object flag) "
	fnames "particle pr"
		fdesc "Set particle point selection mask on/off. (component flag) "
	fnames "particleShape ps"
		fdesc "Set particle shape selection mask on/off. (object flag) "
	fnames "plane pl"
		fdesc "Set sketch plane selection mask on/off. (object flag) "
	fnames "polymesh p"
		fdesc "Set poly-mesh selection mask on/off. (object flag) "
	fnames "polymeshEdge pe"
		fdesc "Set poly-mesh edge selection mask on/off. (component flag) "
	fnames "polymeshFace pf"
		fdesc "Set poly-mesh face selection mask on/off. (component flag) "
	fnames "polymeshFreeEdge pfe"
		fdesc "Set poly-mesh free-edge selection mask on/off. (component flag) "
	fnames "polymeshUV puv"
		fdesc "Set poly-mesh UV point selection mask on/off. (component flag) "
	fnames "polymeshVertex pv"
		fdesc "Set poly-mesh vertex selection mask on/off. (component flag) "
	fnames "polymeshVtxFace pvf"
		fdesc "Set poly-mesh vertexFace selection mask on/off. (component flag) "
	fnames "query q"
		fdesc "No Description"
	fnames "rigidBody rb"
		fdesc "Set rigid body selection mask on/off. (object flag) "
	fnames "rigidConstraint rc"
		fdesc "Set rigid constraint selection mask on/off. (object flag) "
	fnames "rotatePivot rp"
		fdesc "Set rotate pivot selection mask on/off. (component flag) "
	fnames "scalePivot sp"
		fdesc "Set scale pivot selection mask on/off. (component flag) "
	fnames "sculpt sc"
		fdesc "Set sculpt selection mask on/off. (object flag) "
	fnames "selectHandle sh"
		fdesc "Set select handle selection mask on/off. (component flag) "
	fnames "spring spr"
		fdesc "Set spring shape selection mask on/off. (object flag) "
	fnames "springComponent spc"
		fdesc "Set individual spring selection mask on/off. (component flag) "
	fnames "stroke str"
		fdesc "Set the Paint Effects stroke selection mask on/off. (object flag) "
	fnames "subdiv sd"
		fdesc "Set subdivision surfaces selection mask on/off. (object flag) "
	fnames "subdivMeshEdge sme"
		fdesc "Set subdivision surfaces mesh edge selection mask on/off. (component flag) "
	fnames "subdivMeshFace smf"
		fdesc "Set subdivision surfaces mesh face selection mask on/off. (component flag) "
	fnames "subdivMeshPoint smp"
		fdesc "Set subdivision surfaces mesh point selection mask on/off. (component flag) "
	fnames "subdivMeshUVs smu"
		fdesc "Set subdivision surfaces mesh UV map selection mask on/off. (component flag) "
	fnames "surfaceEdge se"
		fdesc "Set surface edge selection mask on/off. (component flag) "
	fnames "surfaceFace sf"
		fdesc "Set surface face selection mask on/off. (component flag) "
	fnames "surfaceKnot sk"
		fdesc "Set surface knot selection mask on/off. (component flag) "
	fnames "surfaceParameterPoint spp"
		fdesc "Set surface parameter point selection mask on/off. (component flag) "
	fnames "surfaceRange sr"
		fdesc "Set surface range selection mask on/off. (component flag) "
	fnames "texture tx"
		fdesc "Set texture selection mask on/off. (object flag) "
	fnames "vertex v"
		fdesc "Set mesh vertex selection mask on/off. (component flag) "
	rcount "6"
		rname "select"
		rname "selectPref"
		rname "selectedNodes"
		rname "selectKey"
		rname "selectPriority"
		rname "selectMode"
name "selectedNodes"
	desc "Return a list of all the dependency nodes on the active list."
	fcount "1"
	fnames "dagObjects do"
		fdesc "No Description"
	rcount "6"
		rname "select"
		rname "selectPref"
		rname "selectKey"
		rname "selectPriority"
		rname "selectMode"
		rname "selectType"
name "selectionConnection"
	desc "This command creates a named selectionConnection object. This object is simply a shared selection list. It may be used by editors to share their highlight data. For example, an outliner may attach its selected list to one of these objects, and a graph editor may use the same object as a list source. Then, the graph editor would only display objects that are selected in the outliner. Selection connections are UI objects which contain a list of model objects. Selection connections are useful for specifying which objects are to be displayed within a particular editor. Editor's have three plug sockets.... Refer to full documentation"
	fcount "30"
	fnames "activeCharacterList acl"
		fdesc "Specifies that this connection should reflect the characters that objects on the active list belong to. "
	fnames "activeList act"
		fdesc "Specifies that this connection should reflect the active list (geometry objects and keys). "
	fnames "addScript as"
		fdesc "Specify a script to be called when something is added to the  selection. "
	fnames "addTo add"
		fdesc "The name of a selection connection that should be added to this list of connections. "
	fnames "characterList cl"
		fdesc "Specifies that this connection should reflect all the characters in the world. "
	fnames "clear clr"
		fdesc "Remove everything from the selection connection. "
	fnames "connectionList lst"
		fdesc "Specifies that this connection should contain a list of selection connections. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "deselect d"
		fdesc "Remove something from the selection. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "editor ed"
		fdesc "Specifies that this connection should reflect the -mainListConnection of the specified editor. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "filter f"
		fdesc "Optionally specifies an itemFilter for this connection. An empty string ("") clears the current filter. If a filter is specified, all the information going into the selectionConnection must first pass through the filter before being accepted. NOTE: filters can only be attached to regular selectionConnections. They cannot be attached to any connection created using the -act, -mdl, -key, -wl, -sl, -cl, -lst, -obj, or -ren flags. We strongly recommend that you do not attach filters to a selectionConnection --- it is better to attach your filter to the editor that is using the selectionConnection instead. "
	fnames "findObject fo"
		fdesc "Find a selection connection in this list that wraps the specified object. "
	fnames "global g"
		fdesc "A global selection connection cannot be deleted by any script commands. "
	fnames "highlightList hl"
		fdesc "Specifies that this connection is being used as a highlight list. "
	fnames "identify id"
		fdesc "Find out what type of selection connection this is.  May be: activeList | modelList | keyframeList | worldList | objectList listList | editorList | connection | unknown "
	fnames "keyframeList key"
		fdesc "Specifies that this connection should reflect the animation portion of the active list. "
	fnames "lock lck"
		fdesc "For activeList connections, locking the connection means that it will not listen to activeList changes. "
	fnames "modelList mdl"
		fdesc "Specifies that this connection should reflect the modeling (i.e. excluding keys) portion of the active list. "
	fnames "object obj"
		fdesc "Specifies that this connection should wrap around the specified object (which may be a set).  Query will return all the members of the selection connection (if the connection wraps a set, the set members will be returned) "
	fnames "parent p"
		fdesc "The name of a UI object this should be attached to.  When the parent is destroyed, the selectionConnection will auto-delete. If no parent is specified, the connection is created in the current controlLayout. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "remove rm"
		fdesc "The name of a selection connection that should be removed from this list of connections. "
	fnames "removeScript rs"
		fdesc "Specify a script to be called when something is removed from  the selection. "
	fnames "select s"
		fdesc "Add something to the selection. This does not replace the  existing selection. "
	fnames "setList sl"
		fdesc "Specifies that this connection should reflect all the sets in the world. "
	fnames "switch sw"
		fdesc "Acts as a modifier to -connectionList which sets the list of objects to be the first non-empty selection connection.  selection connections are tested in the order in which they are added. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "worldList wl"
		fdesc "Specifies that this connection should reflect all objects in the world. "
	rcount "0"
name "separator"
	desc "This command creates a separator widget in a variety of drawing styles."
	fcount "21"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "horizontal hr"
		fdesc "Specify the orientation of the separator.  True for horizontal and false for vertical. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "style st"
		fdesc "Specify the style of the separator.  Valid values are "none", "single", "double", "singleDash", "doubleDash", "in" and "out". "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "setAttr"
	desc "Sets the value of a dependency node attribute. No value for the the attribute is needed when the -l/-k/-s flags are used. The -type flag is only required when setting a non-numeric attribute. The following chart outlines the syntax of setAttr for non-numeric data types: {TYPE} below means any number of values of type TYPE , separated by a space [TYPE] means that the value of type TYPE is optional A|B means that either of A or B may appear In order to run its examples, first execute these commands to create the sample attribute types: sphere -n node; addAttr.... Refer to full documentation"
	fcount "6"
	fnames "alteredValue av"
		fdesc "The value is only the current value, which may change in the next evalution (if the attribute has an incoming connection).   This flag is only used during file I/O, so that attributes with incoming connections do not have their data overwritten during the first evaluation after a file is opened. "
	fnames "clamp c"
		fdesc "For numeric attributes, if the value is outside the range of the attribute, clamp it to the min or max instead of failing "
	fnames "keyable k"
		fdesc "Sets the attribute's keyable state on or off. "
	fnames "lock l"
		fdesc "Sets the attribute's lock state on or off. "
	fnames "size s"
		fdesc "Defines the size of a multi-attribute array. This is only a hint, used to help allocate memory as efficiently as possible. "
	fnames "type typ"
		fdesc "Identifies the type of data.  If the -type flag is not present, a numeric type is assumed.   "
	rcount "5"
		rname "addAttr"
		rname "getAttr"
		rname "connectAttr"
		rname "disconnectAttr"
		rname "listAttr"
name "setAttrMapping"
	desc "This command applies an offset and scale to a specified device attachment. This command is different than the setInputDeviceMapping command, which applies a mapping to a device axis. The value from the device is multiplied by the scale and the offset is added to this product. With an absolute mapping, the attached attribute gets the resulting value. If the mapping is relative, the resulting value is added to the previous calculated value. The calculated value will also take into account the setInputDeviceMapping, if it was defined. As an example, if the space ball is setup with absolute attachment mappings, pressing.... Refer to full documentation"
	fcount "9"
	fnames "absolute a"
		fdesc "Make the mapping absolute. "
	fnames "attribute at"
		fdesc "The attribute used in the attachment. "
	fnames "axis ax"
		fdesc "The axis on the device used in the attachment. "
	fnames "clutch c"
		fdesc "The clutch button used in the attachment. "
	fnames "device d"
		fdesc "The device used in the attachment.  "
	fnames "offset o"
		fdesc "Specify the offset value. "
	fnames "relative r"
		fdesc "Make the mapping relative. "
	fnames "scale s"
		fdesc "Specify the scale value. "
	fnames "selection sl"
		fdesc "This flag specifies the mapping should be on the selected objects "
	rcount "0"
name "setConstraintRestPosition"
	desc "Script for setting the rest position of a constrained object."
	fcount "0"
	rcount "0"
name "setDefaultShadingGroup"
	desc "The setDefaultShadingGroup command is used to change which shading group is considered the current default shading group. Subsequently created objects will be assigned to the new default group."
	fcount "0"
	rcount "0"
name "setDrivenKeyframe"
	desc "This command sets a driven keyframe. A driven keyframe is similar to a regular keyframe. However, while a standard keyframe always has an x-axis of time in the graph editor, for a drivenkeyframe the user may choose any attribute as the x-axis of the graph editor. For example, you can keyframe the emission of a faucet so that so that it emits whenever the faucet handle is rotated around y. The faucet emission in this example is called the driven attribute. The handle rotation is called the driver. Once you have used setDrivenKeyframe to set up the relationship between the.... Refer to full documentation"
	fcount "12"
	fnames "attribute at"
		fdesc "Attribute name to set keyframes on. "
	fnames "controlPoints cp"
		fdesc "Explicitly specify whether or not to include the control points of a shape (see "-s" flag) in the list of attributes. Default: false. "
	fnames "currentDriver cd"
		fdesc "Set the driver to be used for the current driven keyframe. "
	fnames "driven dn"
		fdesc "Returns list of driven attributes for the selected item. "
	fnames "driver dr"
		fdesc "Returns list of available drivers for the attribute. "
	fnames "driverValue dv"
		fdesc "Value of the driver to use for this keyframe. Default value is the current value. "
	fnames "hierarchy hi"
		fdesc "Controls the objects this command acts on, relative to the specified (or active) target objects. Valid values are "above," "below," "both," and "none." Default is "hierarchy -query" "
	fnames "inTangentType itt"
		fdesc "The in tangent type for keyframes set by this command. Valid values are "spline," "linear," "fast," "slow," "flat," "step," and "clamped." Default is "keyTangent -q -g -inTangentType" "
	fnames "insert i"
		fdesc "Insert keys at the given time(s) and preserve the shape of the animation curve(s). "
	fnames "outTangentType ott"
		fdesc "The out tangent type for keyframes set by this command. Valid values are "spline," "linear," "fast," "slow," "flat," "step," and "clamped." Default is "keyTangent -q -g -outTangentType" "
	fnames "shape s"
		fdesc "Consider attributes of shapes below transforms as well, except "controlPoints".  Default: true "
	fnames "value v"
		fdesc "Value to set the keyframe at. Default is the current value. "
	rcount "4"
		rname "autoKeyframe"
		rname "setKeyframe"
		rname "findKeyframe"
		rname "setKeyPath"
name "setDynamic"
	desc "SetDynamic sets the isDynamic attribute of particle objects on or off. If no objects are specified, it sets the attribute for any selected objects. If -all is thrown, it sets the attribute for all particle objects in the scene. By default it sets the attribute true (on); if the -off flag is thrown, it sets the attribute false (off). WARNING: setDynamic is obsolescent. This is the last version of Maya in which it will be supported."
	fcount "5"
	fnames "allOnWhenRun awr"
		fdesc "Obsolete, no longer suppported or necessary. "
	fnames "disableAllOnWhenRun dwr"
		fdesc "Obsolete, no longer suppported or necessary.  "
	fnames "setAll all"
		fdesc "Set for all objects. "
	fnames "setOff off"
		fdesc "Sets isDynamic false. "
	fnames "setOn on"
		fdesc "Sets isDynamic true.  This flag is set by default. "
	rcount "0"
name "setEditCtx"
	desc "This command creates a tool that can be used to modify set membership."
	fcount "8"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "setEditor"
	desc "This command creates/edits a set editor. It is rarely invoked by the user directly; normally, it is called by the panel editor system. Please note that the set editor is no longer a supported user interface element. Please see the relationship editor and the component editor."
	fcount "30"
	fnames "addToList al"
		fdesc "Adds the sets associated with the current selection list to the list of sets currently displayed in the editor "
	fnames "addToSet ats"
		fdesc "Adds the current selection list to the set selected in the set editor. "
	fnames "allSets as"
		fdesc "Specifies that the set editor should display all  available sets. "
	fnames "applyWeightCommand awc"
		fdesc "The operation named in the string is performed on the weights which are selected in the set editor. For example, use the command to "setKeyframe" key weights, or "select" to select the attributes corresponding to the weights. "
	fnames "autoExpand aue"
		fdesc "Specifies whether the set editor should automatically expand frames. The default is false. "
	fnames "autoScroll aus"
		fdesc "Specifies whether the set editor should automatically scroll its expanded frames to show selected items whenever the current selection list changes. The default is false. Only has an effect when in list by object mode. "
	fnames "autoUpdate au"
		fdesc "Specifies whether the set editor should use the current selection list to determine which sets it should display. The default is false. "
	fnames "collapseFrames cf"
		fdesc "Recursively collapses all frames currently  expanded in the set editor "
	fnames "componentListLength cll"
		fdesc "Specifies the maximum size of a grouped component list The default is 8. "
	fnames "createBookmark cb"
		fdesc "Creates a bookmark from the current contents of the set editor. "
	fnames "editPartitions ep"
		fdesc "The set editor will edit partitions. "
	fnames "editSets es"
		fdesc "The set editor will edit sets. "
	fnames "expandFrames ef"
		fdesc "Recursively expands all frames currently in the set editor "
	fnames "groupComponents gc"
		fdesc "If set to true components are grouped in a expand/collapse item according to their parent. If false, components are left ungrouped and appear as  . [n]...  in the set. The default is true. "
	fnames "listBookmarks lb"
		fdesc "Lists the names of the existing set editor bookmarks. "
	fnames "mode m"
		fdesc "Specifies the operating mode for the set editor. Valid values are: editing | selectNoExpand | selectExpand | paint. Only has an effect when auto update is disabled. "
	fnames "reload rl"
		fdesc "Temporarily reloads the contents of the set editor based on the current selection list. "
	fnames "removeFromSet rfs"
		fdesc "Removes the items selected in the set editor from the set they belong to.    "
	fnames "scrollFrames sf"
		fdesc "Scrolls the expanded frames of the set editor to show selected items. Only has an effect when in list by object mode. "
	fnames "showBlendShapeSets sbs"
		fdesc "No Description"
	fnames "showBoneLatticeSets sbl"
		fdesc "No Description"
	fnames "showClusterSets sc"
		fdesc "No Description"
	fnames "showDeformerSets sd"
		fdesc "No Description"
	fnames "showJointLatticeSets sjl"
		fdesc "No Description"
	fnames "showLatticeSets sl"
		fdesc "No Description"
	fnames "showNormalSets sn"
		fdesc "No Description"
	fnames "showRenderSets sr"
		fdesc "No Description"
	fnames "showSculptSets ss"
		fdesc "No Description"
	fnames "showWireSets sw"
		fdesc "Specify whether sets of the given types should be shown or not. The default is true. "
	fnames "useBookmark ub"
		fdesc "Use an existing bookmark for the contents of the set editor. "
	rcount "0"
name "setEscapeCtx"
	desc "This command specifies which context should be switched to when the user presses the escape key."
	fcount "0"
	rcount "0"
name "setFluidAttr"
	desc "SetFluidAttr is NOT undoable , NOT queryable , and NOT editable . Sets values of built-in fluid attributes such as density, velocity, etc., for individual grid cells or for all cells in the grid."
	fcount "15"
	fnames "attribute at"
		fdesc "Specifies the fluid attribute for which to set values.  Valid attributes are "velocity", "density", "fuel", "color", and "temperature". "
	fnames "xvalue x"
		fdesc "Only set the first component of the vector-valued attribute specified by the "-at/attribute" flag. "
	fnames "yvalue y"
		fdesc "Only set the second component of the vector-valued attribute specified by the "-at/attribute" flag. "
	fnames "zvalue z"
		fdesc "Only set the third component of the vector-valued attribute specified by the "-at/attribute" flag. "
	fnames "clear cl"
		fdesc "Set this attribute to 0 "
	fnames "reset re"
		fdesc "Set this attribute to default value "
	fnames "addValue ad"
		fdesc "Add specified value to attribute "
	fnames "floatValue fv"
		fdesc "If this was a scalar (e.g. density) attribute, use this value "
	fnames "vectorValue vv"
		fdesc "If this was a vector (e.g. velocity) attribute, use this value "
	fnames "floatRandom fr"
		fdesc "If this was a scalar (e.g. density) attribute, use a random value in +-VALUE If fv is specified, it is used as the base value and combined with the random value. If the fv flag is not specified, the  base is assumed to be 0. "
	fnames "vectorRandom vr"
		fdesc "If this was a vector (e.g. velocity) attribute, use a random value in +-VALUE If vv is specified, it is used as the base value and combined with the random value. If the vv flag is not specified, the  base is assumed to be 0,0,0. "
	fnames "xIndex xi"
		fdesc "Only return values for cells with this X index "
	fnames "yIndex yi"
		fdesc "Only return values for cells with this Y index "
	fnames "zIndex zi"
		fdesc "Only return values for cells with this Z index "
	fnames "lowerFace lf"
		fdesc "Only valid with "-at velocity".  Since velocity values are stored on the edges of each voxel and not at the center, using voxel based indices to set velocity necessarily affects neighboring voxels.  Use this flag to only set velocity components on the lower left three faces of a voxel, rather than all six. "
	rcount "0"
name "setFocus"
	desc "Give keyboard focus to a specific control or panel."
	fcount "0"
	rcount "0"
name "setInfinity"
	desc "Set the infinity type before (after) a paramCurve's first (last) keyframe."
	fcount "6"
	fnames "attribute at"
		fdesc "List of attributes to select "
	fnames "controlPoints cp"
		fdesc "This flag explicitly specifies whether or not to include the control points of a shape (see "-s" flag) in the list of attributes. Default: false.   (Not valid for "pasteKey" cmd.) "
	fnames "hierarchy hi"
		fdesc "Hierarchy expansion options.  Valid values are "above," "below," "both," and "none."  (Not valid for "pasteKey" cmd.) "
	fnames "postInfinite poi"
		fdesc "set the infinity type after a paramCurve's last keyframe "
	fnames "preInfinite pri"
		fdesc "set the infinity type before a paramCurve's first keyframe "
	fnames "shape s"
		fdesc "Consider attributes of shapes below transforms as well, except "controlPoints".  Default: true.   (Not valid for "pasteKey" cmd.) "
	rcount "10"
		rname "copyKey"
		rname "cutKey"
		rname "pasteKey"
		rname "snapKey"
		rname "keyframe"
		rname "keyframeStats"
		rname "keyframeOutliner"
		rname "scaleKey"
		rname "keyTangent"
		rname "findKeyframe"
name "setInputDeviceMapping"
	desc "The command sets a scale and offset for all attachments made to a specified device axis. Any attachment made to a mapped device axis will have the scale and offset applied to its values. The value from the device is multiplied by the scale and the offset is added to this product. With an absolute mapping, the attached attribute gets the resulting value. If the mapping is relative, the final value is the offset added to the scaled difference between the current device value and the previous device value. This mapping will be applied to the device data before any.... Refer to full documentation"
	fcount "8"
	fnames "absolute a"
		fdesc "report absolute axis values "
	fnames "axis ax"
		fdesc "specify the axis to map "
	fnames "device d"
		fdesc "specify which device to map "
	fnames "offset o"
		fdesc "specify the axis offset value "
	fnames "relative r"
		fdesc "report the change in axis value since the last sample "
	fnames "scale s"
		fdesc "specify the axis scale value "
	fnames "view v"
		fdesc "translate the device coordinates into the coordinates of the active camera "
	fnames "world w"
		fdesc "translate the device coordinates into world space coordinates "
	rcount "13"
		rname "assignInputDevice"
		rname "getModifiers"
		rname "recordAttr"
		rname "attachDeviceAttr"
		rname "listDeviceAttachments"
		rname "setAttrMapping"
		rname "detachDeviceAttr"
		rname "listInputDeviceAxes"
		rname "devicePanel"
		rname "listInputDeviceButtons"
		rname "unassignInputDevice"
		rname "getInputDeviceRange"
		rname "listInputDevices"
name "setKeyCtx"
	desc "This command creates a context which may be used to set keys within the graph editor."
	fcount "9"
	fnames "breakdown bd"
		fdesc "Specifies whether or not to create breakdown keys "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	rcount "0"
name "setKeyPath"
	desc "The setKeyPath command either creates or edits the path (a nurbs curve) based on the current position of the selected object at the current time."
	fcount "0"
	rcount "0"
name "setKeyframe"
	desc "This command creates keyframes for the specified objects, or the active objects if none are specified on the command line. The default time for the new keyframes is the current time. Override this behavior with the "-t" flag on the command line. The default value for the keyframe is the current value of the attribute for which a keyframe is set. Override this behavior with the "-v" flag on the command line. When setting keyframes on animation curves that do not have "time" as an input attribute (ie, they are unitless animation curves), use "-f/-float" to specify the unitless value.... Refer to full documentation"
	fcount "12"
	fnames "attribute at"
		fdesc "Attribute name to set keyframes on. "
	fnames "breakdown bd"
		fdesc "Sets the breakdown state for the key.  Default is false "
	fnames "clip c"
		fdesc "Specifies that the new key should be placed in the specified clip. Note that if the objects being keyframed are not already part of the clip, this flag will be ignored. "
	fnames "controlPoints cp"
		fdesc "Explicitly specify whether or not to include the control points of a shape (see "-s" flag) in the list of attributes. Default: false. "
	fnames "float f"
		fdesc "Float time at which to set a keyframe on float-based animation curves. "
	fnames "hierarchy hi"
		fdesc "Controls the objects this command acts on, relative to the specified (or active) target objects. Valid values are "above," "below," "both," and "none." Default is "hierarchy -query" "
	fnames "inTangentType itt"
		fdesc "The in tangent type for keyframes set by this command. Valid values are "spline," "linear," "fast," "slow," "flat," "step," and "clamped." Default is "keyTangent -q -g -inTangentType" "
	fnames "insert i"
		fdesc "Insert keys at the given time(s) and preserve the shape of the animation curve(s). "
	fnames "outTangentType ott"
		fdesc "The out tangent type for keyframes set by this command. Valid values are "spline," "linear," "fast," "slow," "flat," "step," and "clamped." Default is "keyTangent -q -g -outTangentType" "
	fnames "shape s"
		fdesc "Consider attributes of shapes below transforms as well, except "controlPoints".  Default: true "
	fnames "time t"
		fdesc "Time at which to set a keyframe on time-based animation curves. "
	fnames "value v"
		fdesc "Value at which to set the keyframe. "
	rcount "4"
		rname "autoKeyframe"
		rname "setDrivenKeyframe"
		rname "findKeyframe"
		rname "setKeyPath"
name "setMenuMode"
	desc "SetMenuMode is undoable , NOT queryable , and NOT editable . Optionally sets a new Menu Mode for the menu bar in the main Maya window. Returns the current Menu Mode, and if a new one is specified, then the previous Menu Mode is returned."
	fcount "0"
	rcount "0"
name "setNodeTypeFlag"
	desc "This command sets static data on the specified node type tag. This will affect the class of node type as a whole. The node type tag can be found using the objectType cmd."
	fcount "1"
	fnames "display dsp"
		fdesc "Sets whether the node type will appear in the UI or not.  Setting display to false will cause the node type to not appear in the UI. "
	rcount "0"
name "setParent"
	desc "This command changes the default parent to be the specified parent. Two special parents are "/" which indicates the top of the hierarchy, or ".." which indicates one level up in the hierarchy. Trying to move above the top level has no effect. A control must be parented to a control layout. A control layout may be parented to another control layout or a window. A menu may be parented to a window or a menu bar layout. For all of these cases the setParent command (with no flags) will indicate the current default parent. A menu item must be.... Refer to full documentation"
	fcount "6"
	fnames "defineTemplate dt"
		fdesc "Put a command in a mode where any other flags and args  are parsed and added to the command template templateName.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "menu m"
		fdesc "Parent menu for menu items. "
	fnames "query q"
		fdesc "Return the name of the current parent. "
	fnames "topLevel top"
		fdesc "Move to the top level in the hierarchy. "
	fnames "upLevel u"
		fdesc "Move up one level in the hierarchy. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "setParticleAttr"
	desc "This action will set the value of the chosen attribute for every particle or selected component in the selected or passed particle object. Components should not be passed to the command line. For setting the values of components, the components must be selected and only the particle object's names should be passed to this action. If the attribute is a vector attribute and the -vv flag is passed, then the three floats passed will be used to set the values. If the attribute is a vector and the -fv flag is pass and the -vv flag is not passed, then.... Refer to full documentation"
	fcount "7"
	fnames "attribute at"
		fdesc "Tells the action which attribute you want to set "
	fnames "floatValue fv"
		fdesc "Tells what you want the value to be set to of a float attribute "
	fnames "object o"
		fdesc "If this flag is passed and the STRING is the name of a particle object's transform or shape, then ONLY that object will be edited, ignoring the selection list or command line, and ALL of its particles' values will be changed for the specified attribute. "
	fnames "randomFloat rf"
		fdesc "Tells the command to add a random value from -FLOAT to +FLOAT to the results of each particle.  The default is 0.0. "
	fnames "randomVector rv"
		fdesc "Tells the command to add a random value from  > to  > to the results of each particle.  The default is  >. "
	fnames "relative r"
		fdesc "If this is set to TRUE (the default is FALSE), then the float or vector value will be added to the current value for each particle. "
	fnames "vectorValue vv"
		fdesc "Tells what you want the value to be set to of a vector attribute "
	rcount "2"
		rname "particle"
		rname "getParticleAttr"
name "setProject"
	desc "Sets the current project. If no string is specified, the Project Browser window will open."
	fcount "0"
	rcount "0"
name "setStartupMessage"
	desc "Update the startup window message. Also know as the 'Splash Screen', this is the window that appears while the application is starting up."
	fcount "0"
	rcount "0"
name "setState"
	desc "Sets the nodeState attr for all nodes in the scene that match the type passed in. Note that setting the state for certain types of nodes can have unpredictable results (things will stop building, evaluating, etc, and it can be difficult to determine what is happening in the scene in certain complex cases). Use this mainly for things like expressions, etc."
	fcount "0"
	rcount "0"
name "setToolTo"
	desc "This command switches control to the named context."
	fcount "0"
	rcount "0"
name "setUITemplate"
	desc "This command sets the current(default) command template for the ELF commands. The special name NONE can be used to set no templates current. See "uiTemplate" command also."
	fcount "2"
	fnames "popTemplate ppt"
		fdesc "Pop the current template off of the stack and sets the next template on the stack to be current. "
	fnames "pushTemplate pst"
		fdesc "Push the current template onto a stack that can later be popped. "
	rcount "0"
name "sets"
	desc "This command is used to create a set, query some state of a set, or perform operations to update the membership of a set. A set is a logical grouping of an arbitrary collection of objects, attributes, or components of objects. Sets are dependency nodes. Connections from objects to a set define membership in the set. Sets are used throughout Maya in a multitude of ways. They are used to define an association of material properties to objects, to define an association of lights to objects, to define a bookmark or named collection of objects, to define a character, and.... Refer to full documentation"
	fcount "28"
	fnames "addElement add"
		fdesc "Adds the list of items to the given set.  If some of the items cannot be added to the set because they are in another set which is in the same partition as the set to edit, the command will fail. "
	fnames "afterFilters af"
		fdesc "Default state is false. This flag is valid in edit mode only. This flag is for use on sets that are acted on by deformers such as sculpt, lattice, blendShape. The default edit mode is to edit the membership of the group acted on by the deformer. If you want to edit the group but not change the membership of the deformer, set the flag to true. "
	fnames "clear cl"
		fdesc "An operation which removes all items from the given set making the set empty. "
	fnames "color co"
		fdesc "Defines the hilite color of the set. Must be a value in range [-1, 7] (one of the user defined colors).  -1 marks the color has being undefined and therefore not having any affect. Only the vertices of a vertex set will be displayed in this color. "
	fnames "copy cp"
		fdesc "Copies the members of the given set to a new set. This flag is for use in creation mode only. "
	fnames "edges eg"
		fdesc "Indicates the new set can contain edges only. This flag is for use in creation or query mode only. The default value is false. "
	fnames "editPoints ep"
		fdesc "Indicates the new set can contain editPoints only. This flag is for use in creation or query mode only. The default value is false. "
	fnames "empty em"
		fdesc "Indicates that the set to be created should be empty. That is, it ignores any arguments identifying objects to be added to the set. This flag is only valid for operations that create a new set. "
	fnames "facets fc"
		fdesc "Indicates the new set can contain facets only. This flag is for use in creation or query mode only. The default value is false. "
	fnames "flatten fl"
		fdesc "An operation that flattens the structure of the given set. That is, any sets contained by the given set will be replaced by its members so that the set no longer contains other sets but contains the other sets' members. "
	fnames "forceElement fe"
		fdesc "For use in edit mode only. Forces addition of the items to the set. If the items are in another set which is in the same partition as the given set, the items will be removed from the other set in order to keep the sets in the partition mutually exclusive with respect to membership. "
	fnames "include in"
		fdesc "Adds the list of items to the given set.  If some of the items cannot be added to the set, a warning will be issued. This is a less strict version of the -add/addElement operation. "
	fnames "intersection int"
		fdesc "An operation that returns a list of items which are members of all the sets in the	list. "
	fnames "isIntersecting ii"
		fdesc "An operation which tests whether the sets in the list have common members. "
	fnames "isMember im"
		fdesc "An operation which tests whether all the given items are members of the given set. "
	fnames "layer l"
		fdesc "OBSOLETE.  DO NOT USE. "
	fnames "name n"
		fdesc "Assigns string as the name for a new set. This flag is only valid for operations that create a new set. "
	fnames "noSurfaceShader nss"
		fdesc "If set is renderable, do not connect it to the default surface shader.  Flag has no meaning or effect for non renderable sets. This flag is for use in creation mode only. The default value is false. "
	fnames "noWarnings nw"
		fdesc "Indicates that warning messages should not be reported such as when trying to add an invalid item to a set. (used by UI) "
	fnames "nodesOnly no"
		fdesc "This flag is usable with the -q/query flag but is ignored if used with another queryable flags. This flag modifies the results of the set membership query such that when there are attributes (e.g. sphere1.tx) or components of  nodes included in the set, only the nodes will be listed.   Each node will only be listed once, even if more than one attribute  or component of the node exists in the set. "
	fnames "query q"
		fdesc "With this flag, if no other queryable flags are specified, then all the members of the given set are returned. If a queryable flag is supplied, then the resulting value of the queryable state is returned. "
	fnames "remove rm"
		fdesc "Removes the list of items from the given set. "
	fnames "renderable r"
		fdesc "This flag indicates that a special type of set should be created. This type of set (shadingEngine as opposed to objectSet) has certain restrictions on its membership in that it can only contain renderable elements such as lights and geometry. These sets are referred to as shading groups and are automatically connected to the "renderPartition" node when created (to ensure mutual exclusivity of the set's members with the other sets in the partition). This flag is for use in creation or query mode only. The default value is false which means a normal set is created. "
	fnames "split sp"
		fdesc "Produces a new set with the list of items and removes each item in the list of items from the given set. "
	fnames "subtract sub"
		fdesc "An operation between two sets which returns the members of the first set that are not in the second set. "
	fnames "text t"
		fdesc "Defines an annotation string to be stored with the set. "
	fnames "union un"
		fdesc "An operation that returns a list of all the members of all sets listed. "
	fnames "vertices v"
		fdesc "Indicates the new set can contain vertices only. This flag is for use in creation or query mode only. The default value is false. "
	rcount "3"
		rname "partition"
		rname "character"
		rname "listSets"
name "shadingConnection"
	desc "Sets the connection state of a connection between nodes that are used in shading. Specify the destination attribute of the connection."
	fcount "1"
	fnames "connectionState cs"
		fdesc "Species the state of the connection. On/True/1 means the connection is still active. Off/False/0 means the connection is inactive. "
	rcount "0"
name "shadingGeometryRelCtx"
	desc "This command creates a context that can be used for associating geometry to shading groups. You can put the context into shading-centric mode by using the -shadingCentric flag and specifying true. This means that the shading group is selected first then geometry associated with the shading group are highlighted. Subsequent selections result in assignments. Specifying -shadingCentric false means that the geometry is to be selected first. The shading group associated with the geometry will then be selected and subsequent selections will result in assignments being made."
	fcount "3"
	fnames "offCommand ofc"
		fdesc "command to be issued when context is turned on "
	fnames "onCommand onc"
		fdesc "command to be issued when context is turned on "
	fnames "shadingCentric s"
		fdesc "shading-centric mode. "
	rcount "0"
name "shadingGroupDialogDaemon"
	desc "The shadingGroupDialogDaemon command instantiates a daemon object to watch a specified shading group for changes to its surface, displacement, image and volume shaders. If any of those shaders change, the daemon will invoke the specified script. The command is intended to provide a mechanism for updating the shading group attribute editor whenever a shader of the shading group is changed."
	fcount "3"
	fnames "l layout"
		fdesc "Specifies the layout with which the daemon is to be associated. When the layout is deleted, the daemon will be deleted. "
	fnames "n node"
		fdesc "Specifies the shading group which the dialog daemon will watch for changes to surface, displacement, image and volume shaders. "
	fnames "s script"
		fdesc "Specifies the script to be called when a surface, displacement, image or volume shader of the shading group changes. "
	rcount "0"
name "shadingLightRelCtx"
	desc "This command creates a context that can be used for associating lights to shading groups. You can put the context into shading-centric mode by using the -shadingCentric flag and specifying true. This means that the shading group is selected first then lights associated with the shading group are highlighted. Subsequent selections result in assignments. Specifying -shadingCentric false means that the light is to be selected first. The shading groups associated with the light will then be selected and subsequent selections will result in assignments being made."
	fcount "3"
	fnames "offCommand ofc"
		fdesc "command to be issued when context is turned on "
	fnames "onCommand onc"
		fdesc "command to be issued when context is turned on "
	fnames "shadingCentric s"
		fdesc "shading-centric mode. "
	rcount "0"
name "shadingNode"
	desc "The shadingNode command classifies any DG node as a shader, texture light, post process, or utility so that it can be properly organized in the multi-lister. Recall that any DG node can be used a part of a a shader, texture or light - regardless of how it is classified by this. command. These classifications are provided for convenience in the UI."
	fcount "8"
	fnames "asLight al"
		fdesc "classify the current DG node as a light "
	fnames "asPostProcess app"
		fdesc "classify the current DG node as a post process "
	fnames "asShader as"
		fdesc "classify the current DG node as a shader "
	fnames "asTexture at"
		fdesc "classify the current DG node as a texture "
	fnames "asUtility au"
		fdesc "classify the current DG node as a utility "
	fnames "name n"
		fdesc "Sets the name of the newly-created node. "
	fnames "parent p"
		fdesc "Specifies the parent in the DAG under which the new node belongs. "
	fnames "shared s"
		fdesc "This node is shared across multiple files, so only create it if it does not already exist.  "
	rcount "0"
name "shelfButton"
	desc "This control supports up to 3 icon images and 4 different display styles. The icon image displayed is the one that best fits the current size of the control given its current style. This command creates an iconTextButton that is designed to be on the shelf. The button contains a command that can be drag'n'dropped."
	fcount "32"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "command c"
		fdesc "Command executed when the control is pressed. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "doubleClickCommand dcc"
		fdesc "Command executed when the control is double clicked. "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "highlightImage hi"
		fdesc "Highlight image displayed while the cursor is over the control. Image size must be the same as the image specified with the  -i/image  flag. This is a Windows only flag. "
	fnames "image i"
		fdesc "If you are not providing images with different sizes then you may use this flag for the control's image. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "This control supports three icons.  The icon that best fits the current size of the control will be displayed. "
	fnames "imageOverlayLabel iol"
		fdesc "A short string (5 characters) label that will be displayed  on top of the image. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "The text that appears in the control. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "marginHeight mh"
		fdesc "The number of pixels above and below the control content. The default value is 1 pixel. "
	fnames "marginWidth mw"
		fdesc "The number of pixels on either side of the control content. The default value is 1 pixel. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "selectionImage si"
		fdesc "Image displayed while the control is selected. Image size must be the same as the image specified with the  -i/image flag. This is a Windows only flag. "
	fnames "style st"
		fdesc "The draw style of the control.  Valid styles are "iconOnly", "textOnly", "iconAndTextHorizontal" and "iconAndTextVertical". "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "shelfLayout"
	desc "This command creates a new empty shelf layout. The shelf layout can accept drops of commands scripts."
	fcount "26"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "cellHeight ch"
		fdesc "Set or query the height of the items in the shelf. "
	fnames "cellWidth cw"
		fdesc "Set or query the width of the items in the shelf. "
	fnames "cellWidthHeight cwh"
		fdesc "Set the width and height of the items in the shelf. "
	fnames "childArray ca"
		fdesc "Returns a string array of the names of the layout's  immediate children. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfChildren nch"
		fdesc "Returns in an int the number of immediate children of the layout. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "position pos"
		fdesc "Specify the name of a child control in the grid layout along with a 1-based integer value indicating the desired position of the child.  Positions increase from left to right within a row and then wrap around to the next row increasing from top to bottom.  For example, a grid layout with 3 columns and 2 rows has 6 visible positions where 1, 2 and 3 occupy the first row and 4, 5 and 6 occupy the second. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "style st"
		fdesc "Set or query the current style of the items in the shelf.  Valid styles are "iconOnly", "textOnly", "iconAndTextHorizontal" and "iconAndTextVertical". "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "shelfTabLayout"
	desc "This command creates/edits/queries a shelf tab group which is essentially a normal tabLayout with some drop behaviour in the tab bar. A garbage can icon can appear in the top right corner to dispose of buttons dragged to it from shelves."
	fcount "40"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed when a tab is selected interactively. This command is only invoked when the selected tab changes. Re-selecting the current tab will not invoke this command.  Note that this command is not executed by using either of the  -st/selectTab  or  -sti/selectTabIndex  flags. "
	fnames "childArray ca"
		fdesc "Returns a string array of the names of the layout's  immediate children. "
	fnames "childResizable cr"
		fdesc "Set to true if you want the child of the control layout to be as wide as the scroll area.  You may also indicate a minimum width for the child using the  -mcw/minChildWidth  flag. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "doubleClickCommand dcc"
		fdesc "Command executed when a tab is double clicked on.  Note that the first click will select the tab and the second click will execute the double click command.  Double clicking the current tab will re-invoke the double click command. "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "horizontalScrollBarThickness hst"
		fdesc "Thickness of the horizontal scroll bar.  Specify an integer value greater than or equal to zero. This flag has  no effect on Windows systems. "
	fnames "image i"
		fdesc "Image appearing in top right corner of tab layout. "
	fnames "imageVisible iv"
		fdesc "Visibility of tab image. "
	fnames "innerMarginHeight imh"
		fdesc "Margin height for all tab children. "
	fnames "innerMarginWidth imw"
		fdesc "Margin width for all tab children. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "minChildWidth mcw"
		fdesc "Specify a positive non-zero integer value indicating the minimum width the tab layout's children.  This flag only has meaning when the  -cr/childResizable  flag is set to true. "
	fnames "moveTab mt"
		fdesc "Move the tab from the current index to a new index. "
	fnames "numberOfChildren nch"
		fdesc "Returns in an int the number of immediate children of the layout. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "preSelectCommand psc"
		fdesc "Command executed when a tab is selected but before it's contents become visible.  Re-selecting the current tab will not invoke this command.  Note that this command is not executed by using either of the  -st/selectTab or  -sti/selectTabIndex  flags. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "scrollable scr"
		fdesc "Puts all children of this layout within a scroll area. "
	fnames "selectCommand sc"
		fdesc "Command executed when a tab is selected interactively  This command will be invoked whenever a tab is selected, ie. re-selecting the current tab will invoke this command.  Note that this command is not executed by using either of the  -st/selectTab  or  -sti/selectTabIndex  flags. "
	fnames "selectTab st"
		fdesc "The name, in short form, of the selected tab.  An empty string is returned on query if there are no child tabs. "
	fnames "selectTabIndex sti"
		fdesc "Identical to the  -st/selectTab  flag except this flag takes a 1-based index to identify the selected tab.  A value of 0 is returned on query if there are not child tabs. "
	fnames "tabLabel tl"
		fdesc "Set a tab label.  The first argument is the name of a control that must be a child of the tab layout.  The second argument is the label for the tab associated with that child. If this flag is queried then the tab labels for all the children are returned. "
	fnames "tabLabelIndex tli"
		fdesc "Identical to the  -tl/tabLabel  flag except this flag takes a 1-based index to identify the tab you want to set the label for. If this flag is queried the tab labels for all the children are returned. "
	fnames "tabsVisible tv"
		fdesc "Visibility of the tab labels. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "verticalScrollBarThickness vst"
		fdesc "Thickness of the vertical scroll bar.  Specify an integer value greater than or equal to zero. This flag has no effect on Windows systems. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "shellField"
	desc "This command creates a scrolling field that behaves similar to a unix shell for entering user input. You may specify the number of lines that will be remembered by the field with the -slc/saveLineCount flag. The default number of lines saved is 100. The shellField also maintains a command history buffer. You can specify the number of input lines that will be saved with the -hlc/historyLineCount flag. The default size of this buffer is 10."
	fcount "26"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "clear cl"
		fdesc "Erases all visible text, and also deletes any text that had scrolled of the top of the field.  After clearing the field it will be blank, and you will not be able to scroll up to see previous lines.  This flag does not affect the command history buffer, however. "
	fnames "command c"
		fdesc "Command executed when the enter or return key is pressed. Note that this command is not executed when the enter or return key is preceeded by a '\' character.  This allows you to continue input on the next line. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfHistoryLines nhl"
		fdesc "The number of input lines to be saved in the command history buffer.  You can cycle through this buffer by pressing the up and down arrow keys.  Valid values are 0 through 32767.  Any value less than 0 will be handled as if 0 was specified.  Similarly, any value greater than 32767 will be handled as if 32767 was specified. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "numberOfSavedLines nsl"
		fdesc "The total number of lines (the scrolled lines and currently visible lines) that will be remembered by the field. Any lines beyond this number will be lost, and the user will not be able to review them by scrolling.  Valid values are 1 through 32767.  Any value less than 1 will be handled as if 1 was specified.  Similarly, any value greater than 32767 will be handled as if 32767 was specified. "
	fnames "output out"
		fdesc "Echos a string to the field. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "prompt pr"
		fdesc "The prompt string.. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "userInput ui"
		fdesc "Returns the user input as a single string value. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "showHelp"
	desc "ShowHelp is NOT undoable , queryable , and NOT editable . Invokes a web browser to open the on-line documentation and help files. It will open the help page for a given topic, or open a browser to a specific URL."
	fcount "4"
	fnames "absolute a"
		fdesc "The specified "URL" is an absolute URL that should be passed directly to the web browser. "
	fnames "docs d"
		fdesc "Use this flag to directly specify a help file relative to the on-line documentation root. "
	fnames "helpTable ht"
		fdesc "Use this flag to specify which file will be used to search for help topics when the -d/docs and -a/absolute flags are not used. If only a file name is specified and not a path, then the file is assumed to be in the maya application directory. If this flag does not accept an argument if it is queried. The default value is "helpTable". "
	fnames "relative r"
		fdesc "This flag is used to directly specify a help file relative to the on-line documentation root. This does not go through the docServer and hence can be used even when the Help Server is not running. "
	rcount "1"
		rname "help"
name "showHidden"
	desc "The showHidden command is used to make invisible objects visible. If no flags are specified, only the objects given to the command will be made visible. If a parent of an object is invisible, the object will still be invisible. Invisibility is inherited. To ensure the object becomes visible, use the -a/above flag. This forces all invisible ancestors of the object(s) to be visible. If the -b/below flag is used, any invisible objects below the object will be made visible. To make all objects visible, use the -all/allObjects flag. See also: hide."
	fcount "3"
	fnames "above a"
		fdesc "make objects and all their invisible ancestors visible "
	fnames "allObjects all"
		fdesc "make all invisible objects visible "
	fnames "below b"
		fdesc "make objects and all their invisible decendents visible "
	rcount "13"
		rname "currentUnit"
		rname "displayPref"
		rname "hide"
		rname "displayAffected"
		rname "displayRGBColor"
		rname "refresh"
		rname "displayColor"
		rname "displaySmoothness"
		rname "displayCull"
		rname "displayStats"
		rname "toggle"
		rname "displayLevelOfDetail"
		rname "displaySurface"
name "showManipCtx"
	desc "This command can be used to create a show manip context. The show manip context will display manips for all selected objects that have valid manips defined for them."
	fcount "4"
	fnames "lockSelection ls"
		fdesc "If true, this context will never change the current selection. By default this is set to false. "
	fnames "showUniversalManip sum"
		fdesc "If true, this context will show the universal manipulator. By default this is set to false. "
	fnames "toolFinish tf"
		fdesc "Supply the script that will be run when the user exits the script. "
	fnames "toolStart ts"
		fdesc "Supply the script that will be run when the user first enters the script "
	rcount "0"
name "showSelectionInTitle"
	desc "This command causes the title of the specified window to be linked to the current file and selection. When selection changes, the window title will change to show the current file name and the name of the last selected object."
	fcount "0"
	rcount "0"
name "showShadingGroupAttrEditor"
	desc "The showShadingGroupAttrEditor command opens up the attribute editor for the current object's shading-group information."
	fcount "0"
	rcount "0"
name "showWindow"
	desc "Make a window visible. If no window is specified then the current window (most recently created) is used. See also the window command's -vis/visible flag. If the specified window is iconified, it will be opened."
	fcount "0"
	rcount "0"
name "sign"
	desc "Returns one of 3 possible floating point values: -1 if the argument is less than 0. 1 if the argument is greater than 0. 0 if the argument is 0."
	fcount "0"
	rcount "0"
name "simplify"
	desc "This command will simplify (reduce the number of keyframes) an animation curve. This command operates on a keyset. A keyset is defined as a group of keys within a specified time range on one or more animation curves. The animation curves comprising a keyset depend on the value of the "-animation" flag: keysOrObjects : 1) any active keys, when no target objects or -attribute flags appear on the command line, or 2) all animation curves connected to all keyframable attributes of objects specified as the command line's targetList, when there are no active keys. keys : Only act on active.... Refer to full documentation"
	fcount "12"
	fnames "animation an"
		fdesc "Where this command should get the animation to act on.  Valid values are "objects," "keys," and "keysOrObjects" Default: "keysOrObjects."  (See Description for details.) "
	fnames "attribute at"
		fdesc "List of attributes to select "
	fnames "controlPoints cp"
		fdesc "This flag explicitly specifies whether or not to include the control points of a shape (see "-s" flag) in the list of attributes. Default: false.   (Not valid for "pasteKey" cmd.) "
	fnames "float f"
		fdesc "value uniquely representing a non-time-based key (or key range) on a time-based animCurve.  Valid floatRange include single values (-f 10) or a string with a lower and upper bound, separated by a colon (-f "10:20") "
	fnames "floatTolerance ft"
		fdesc "Specify the x-axis tolerance (defaults to 0.05) for float-input animCurves such as those created by "Set Driven Keyframe". This flag is ignored on animCurves driven by time. Higher floatTolerance values will result in sparser keys which may less accurately represent the initial curve. "
	fnames "hierarchy hi"
		fdesc "Hierarchy expansion options.  Valid values are "above," "below," "both," and "none."  (Not valid for "pasteKey" cmd.) "
	fnames "includeUpperBound iub"
		fdesc "When the -t/time or -f/float flags represent a range of keys, this flag determines whether the keys at the  upper bound of the range are included in the keyset. Default value: true.  This flag is only valid when the argument to the -t/time flag is a time range with a lower and upper bound.  (When used with the "pasteKey"  command, this flag refers only to the time range of the target curve that is replaced, when using options such as "replace," "fitReplace," or "scaleReplace."  This  flag has no effect on the curve pasted from the clipboard.) "
	fnames "index in"
		fdesc "index of a key on an animCurve "
	fnames "shape s"
		fdesc "Consider attributes of shapes below transforms as well, except "controlPoints".  Default: true.   (Not valid for "pasteKey" cmd.) "
	fnames "time t"
		fdesc "time uniquely representing a key (or key range) on a time-based animCurve.  Valid timeRanges include single values (-t 10) or a string with a lower and upper bound, separated by a colon (-t "10:20") "
	fnames "timeTolerance tt"
		fdesc "Specify the x-axis tolerance (defaults to 0.05 seconds) for time-input animCurves. This flag is ignored on animCurves driven by floats. Higher time tolerance values will result in sparser keys which may less accurately represent the initial curve. "
	fnames "valueTolerance vt"
		fdesc "Specify the value tolerance (defaults to 0.01) "
	rcount "0"
name "sin"
	desc "Returns the sine of the given value. Also available: asin : Returns the arc sine in the range -PI/2 to PI/2. sinh : Hyperbolic function. asinh : Inverse hyperbolic function. sind : Returns value in degrees. asind : Returns value in degrees."
	fcount "0"
	rcount "0"
name "singleProfileBirailSurface"
	desc "This cmd creates a railed surface by sweeping the profile curve along the two rail curves. One of the requirements for surface creation is the profile curve must intersect the two rail curves. If the profile is a surface curve i.e. isoparm, curve on surface or trimmed edge then tangent continuity across the surface underlying the profile may be enabled using the flag -tp1 true."
	fcount "11"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "sweepStyle ss"
		fdesc "sweep style for Profile ( Natural, View ). Only Natural is supported. Default:  0 "
	fnames "tangentContinuityProfile1 tp1"
		fdesc "Need to be tangent continuous across the profile. The profile must be a surface curve. Default:  false "
	fnames "transformMode tm"
		fdesc "transform mode ( Non proportional, proportional ). Non proportional is default value. Default:  0 "
	rcount "1"
		rname "extrude"
name "size"
	desc "This command returns the number of elements in an array or the number of characters in a string."
	fcount "0"
	rcount "0"
name "skinCluster"
	desc "The skinCluster command is used for smooth skinning in maya. It binds the selected geometry to the selected joints or skeleton by means of a skinCluster node. Each point of the bound geometry can be affected by any number of joints. The extent to which each joint affects the motion of each point is regulated by a corresponding weight factor. Weight factors can be modified using the skinPercent command. The command returns the name of the new skinCluster. The skinCluster binds only a single geometry at a time. Thus, to bind multiple geometries, multiple skinCluster commands must be issued. Upon.... Refer to full documentation"
	fcount "28"
	fnames "addInfluence ai"
		fdesc "The specified transform or joint will be added to the  list of transforms that influence the bound geometry. The maximum number of influences will be observed and only the weights of the cv's that the specified transform effects will change. "
	fnames "after af"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node after the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "baseShape bsh"
		fdesc "This flag can be used in conjunction with the -addInfluence flag to specify the shape that will  be used as the base shape when an influence object with  geometry is added to the skinCluster.  If the flag is not used then the command will make a copy of the  influence object's shape and use that as a base shape.  "
	fnames "before bf"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node before the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "deformerTool dt"
		fdesc "Returns the name of the deformer tool objects (if any) as string string ... "
	fnames "dropoffRate dr"
		fdesc "Sets the rate at which the influence of a transform drops as the distance from that transform increases.  The valid range is between 0.1 and 10.0.  In Create mode it sets the dropoff rate for all the bound  joints.  In Edit mode the flag is used together with the  inf/influence flag to set the dropoff rate of a  particular influence.  Note: When the flag is used in  Edit mode, any custom weights on the skin points the  given transform influences will be lost.  "
	fnames "exclusive ex"
		fdesc "Puts the deformation set in a deform partition. "
	fnames "frontOfChain foc"
		fdesc "This command is used to specify that the new deformer  node should be placed ahead (upstream) of existing deformer and skin nodes in the shape's history (but not ahead of existing tweak nodes). The input to the deformer will be the upstream shape rather than the visible downstream shape, so the behavior of this flag is the most intuitive if the downstream deformers are in their reset (hasNoEffect) position when the new deformer is added. "
	fnames "geometry g"
		fdesc "The specified object will be added to the list of objects being deformed by this deformer object, unless the -rm flag is also specified. When queried, this flag returns string string string ... "
	fnames "ignoreBindPose ibp"
		fdesc "Normally, you can only add an influence object or bind a new skin if the skeleton is at the bindPose. This flag tells the command to ignore the bindPose. "
	fnames "ignoreHierarchy ih"
		fdesc "Disregard the place of the joints in the skeleton  hierarchy when computing the closest joints that influence a point of the geometry. "
	fnames "ignoreSelected is"
		fdesc "Tells the command to not deform objects on the current selection list "
	fnames "influence inf"
		fdesc "This flag specifies the influence object that  will be used for the current edit operation. In query mode, returns a string array of the influence objects (joints and transform). "
	fnames "lockWeights lw"
		fdesc "Lock the weights of the specified influence object to their current value or to the value specified by the -weight flag. "
	fnames "maximumInfluences mi"
		fdesc "Sets the maximum number of transforms that can influence a point (have non-zero weight for the point) when  the skinCluster is first created or a new influence is added.  Note: When this flag is used in Edit mode any custom weights will be lost and new weights will be  reassigned to the whole skin. "
	fnames "name n"
		fdesc "Used to specify the name of the node being created "
	fnames "nurbsSamples ns"
		fdesc "Sets the number of sample points that will be used  along an influence curve or in each direction on an  influence NURBS surface to influence the bound skin.  The more the sample points the more closely the skin follows the influence NURBS curve/surface.  "
	fnames "polySmoothness ps"
		fdesc "This flag controls how accurately the skin control  points follow a given polygon influence object.  The higher the value of polySmoothnmess the  more rounded the deformation resulting from a polygonal influence object will be.  "
	fnames "prune pr"
		fdesc "Removes any points not being deformed by the deformer in  its current configuration from the deformer set. "
	fnames "remove rm"
		fdesc "Specifies that objects listed after the -g flag should be removed from this deformer. "
	fnames "removeInfluence ri"
		fdesc "Remove the specified transform or joint from the list of transforms that influence the bound geometry The weights for the affected points are renormalized. "
	fnames "split sp"
		fdesc "Branches off a new chain in the dependency graph instead of inserting/appending the deformer into/onto an existing chain. "
	fnames "toSelectedBones tsb"
		fdesc "geometry will be bound to the selected bones only. "
	fnames "unbind ub"
		fdesc "Unbinds the geometry from the skinCluster and deletes the skinCluster node "
	fnames "unbindKeepHistory ubk"
		fdesc "Unbinds the geometry from the skinCluster, but keeps the skinCluster node so that its weights can be used when the skin is rebound. To rebind, use the skinCluster command. "
	fnames "useGeometry ug"
		fdesc "When adding an influence to a skinCluster, use the geometry parented under the influence transform to determine the weight dropoff of that influence.  "
	fnames "weight wt"
		fdesc "This flag is only valid in conjunction with the -addInfluence flag. It sets the weight for the influence object that is being added. "
	fnames "weightedInfluence wi"
		fdesc "This flag returns a string array of the influence objects (joints and transform) that have non-zero weighting. "
	rcount "10"
		rname "bindPose"
		rname "bindSkin"
		rname "blendShape"
		rname "boneLattice"
		rname "copyFlexor"
		rname "copySkinWeights"
		rname "flexor"
		rname "skinPercent"
		rname "wire"
		rname "wrinkle"
name "skinPercent"
	desc "This command edits and queries the weight values on members of a skinCluster node. If no object components are explicitly mentioned in the command line, the current selection list is used."
	fcount "8"
	fnames "ignoreBelow ib"
		fdesc "Limits the output of the -value and -transform queries to the entries whose weight values are over the specified limit.  This flag has to be used before the -query flag. "
	fnames "normalize nrm"
		fdesc "If set, the weights not assigned by the -transformValue flag are normalized so that the sum of the all weights  for the selected object component add up to 1. The default is on. NOTE: The skinCluster has a normalizeWeights attribute which when false overrides this attribute! If the skinCluster.normalizeWeights attribute is false, you must set it to true in order to normalize weights using the  skinPercent command. "
	fnames "pruneWeights prw"
		fdesc "Sets to zero any weight smaller than the given value for all the selected components. To use this command to set all the weights to zero, you must turn the -normalize flag "off" or the skinCluster node will normalize the weights to sum to one after pruning them. Weights for influences with a true value on their "Hold Weights" attribute will not be pruned. "
	fnames "relative r"
		fdesc "Used with -transformValue to specify a relative setting of values. If -relative is true, the value passed to -tv is added to the previous value.  Otherwise, it replaces the previous value. "
	fnames "resetToDefault rtd"
		fdesc "Sets the weights of the selected components to their  default values, overwriting any custom weights.  "
	fnames "transform t"
		fdesc "If used after the -query flag (without an argument) the command returns an array of strings corresponding to  the names of the transforms influencing the selected object  components.  If used before the -query flag (with a  transform name), the command returns the weight of the  selected object component corresponding to the given  transform.   "
	fnames "transformValue tv"
		fdesc "Accepts a pair consisting of a transform name and a value and assigns that value as the weight of the selected object components corresponding to the given transform. "
	fnames "value v"
		fdesc "Returns an array of doubles corresponding to the  joint weights for the selected object component.  "
	rcount "10"
		rname "bindPose"
		rname "bindSkin"
		rname "blendShape"
		rname "boneLattice"
		rname "copyFlexor"
		rname "copySkinWeights"
		rname "flexor"
		rname "skinCluster"
		rname "wire"
		rname "wrinkle"
name "smoothCurve"
	desc "No Description."
	fcount "10"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "index i"
		fdesc "index of the control vertex "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "smoothness s"
		fdesc "smoothness factor Default:  10.0 "
	rcount "2"
		rname "fitBspline"
		rname "rebuildCurve"
name "smoothTangentSurface"
	desc "The smoothTangentSurface command smooths the surface along an isoparm at each parameter value. The name of the surface is returned and if history is on, the name of the resulting dependency node is also returned. This command only applies to parameter values with a multiple knot value. (If the given parameter value has no multiple knot associated with it, then the dependency node is created but the surface doesn't change.) When would you use this? If you have a surface consisting of a number of Bezier patches or any isoparms with more than a single knot multiplicity, you could get.... Refer to full documentation"
	fcount "11"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "direction d"
		fdesc "Direction in which to smooth knot: 0 - V direction, 1 - U direction Default:  1 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "parameter p"
		fdesc "Parameter value(s) where knots are added Default:  0.0 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "smoothness s"
		fdesc "Smoothness to get: 0 - Tangent, 1 - Maximum (based on the degree) Default:  1 "
	rcount "0"
name "smoothstep"
	desc "This command is identical to linstep except that the correlation between the third argument and the return value is not linearly interpolated when the third argument is between the first and second arguments. Instead, the interpolation is a cubic polynomial between the return value and the distance between the first and second arguments. This gives the return value a zero slope when the third argument is equal to either the first or second argument. In other words, the return value creates a smooth starting and ending transition when the third argument ranges between the first and second arguments. smoothstep uses.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "snap2to2"
	desc "This is a manual version of snap align action available in Maya. Some of the component selection in Maya doesn't preserve ordering. For example, if you select curve edit point 5, followed by curve edit point 3, the list of selected items will be equivalent to that one if you selected the two points in the reverse order. Polygon vertices and NURBS curve control points are another example of this. In the event of needing to use snap align function with one of these point components, you will need to use this script as follows: Select 4 points in turn.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "snapKey"
	desc "This command "snaps" all target key times and/or values so that they have times and/or values that are multiples of the specified flag arguments. If neither multiple is specified, default is time snapping with a multiple of 1.0. Note that this command will fail to move keys over other neighboring keys: a key's index will not change as a result of a snapKey operation. This command operates on a keyset. A keyset is defined as a group of keys within a specified time range on one or more animation curves. The animation curves comprising a keyset depend on the value.... Refer to full documentation"
	fcount "11"
	fnames "animation an"
		fdesc "Where this command should get the animation to act on.  Valid values are "objects," "keys," and "keysOrObjects" Default: "keysOrObjects."  (See Description for details.) "
	fnames "attribute at"
		fdesc "List of attributes to select "
	fnames "controlPoints cp"
		fdesc "This flag explicitly specifies whether or not to include the control points of a shape (see "-s" flag) in the list of attributes. Default: false.   (Not valid for "pasteKey" cmd.) "
	fnames "float f"
		fdesc "value uniquely representing a non-time-based key (or key range) on a time-based animCurve.  Valid floatRange include single values (-f 10) or a string with a lower and upper bound, separated by a colon (-f "10:20") "
	fnames "hierarchy hi"
		fdesc "Hierarchy expansion options.  Valid values are "above," "below," "both," and "none."  (Not valid for "pasteKey" cmd.) "
	fnames "includeUpperBound iub"
		fdesc "When the -t/time or -f/float flags represent a range of keys, this flag determines whether the keys at the  upper bound of the range are included in the keyset. Default value: true.  This flag is only valid when the argument to the -t/time flag is a time range with a lower and upper bound.  (When used with the "pasteKey"  command, this flag refers only to the time range of the target curve that is replaced, when using options such as "replace," "fitReplace," or "scaleReplace."  This  flag has no effect on the curve pasted from the clipboard.) "
	fnames "index in"
		fdesc "index of a key on an animCurve "
	fnames "shape s"
		fdesc "Consider attributes of shapes below transforms as well, except "controlPoints".  Default: true.   (Not valid for "pasteKey" cmd.) "
	fnames "time t"
		fdesc "time uniquely representing a key (or key range) on a time-based animCurve.  Valid timeRanges include single values (-t 10) or a string with a lower and upper bound, separated by a colon (-t "10:20") "
	fnames "timeMultiple tm"
		fdesc "If this flag is present, key times will be snapped to a multiple of the specified float value.   "
	fnames "valueMultiple vm"
		fdesc "If this flag is present, key values will be snapped to a multiple of the specified float value.   "
	rcount "10"
		rname "copyKey"
		rname "cutKey"
		rname "pasteKey"
		rname "keyframe"
		rname "keyframeStats"
		rname "keyframeOutliner"
		rname "scaleKey"
		rname "setInfinity"
		rname "keyTangent"
		rname "findKeyframe"
name "snapMode"
	desc "The snapMode command is used to control snapping. It toggles the snapping modes in effect and sets information used for snapping."
	fcount "12"
	fnames "curve c"
		fdesc "Set curve snap mode "
	fnames "edgeMagnet em"
		fdesc "Number of extra magnets to snap onto, regularly spaced  along the edge. "
	fnames "edgeMagnetTolerance emt"
		fdesc "Precision for edge magnet snapping. "
	fnames "grid gr"
		fdesc "Set grid snap mode "
	fnames "liveFaceCenter lfc"
		fdesc "While moving on live polygon objects, snap to its face centers. "
	fnames "livePoint lp"
		fdesc "While moving on live polygon objects, snap to its vertices. "
	fnames "point p"
		fdesc "Set point snap mode "
	fnames "query q"
		fdesc "Query the snap mode parameters "
	fnames "tolerance t"
		fdesc "Tolerance defines the size of the square region in which points must lie in order to be snapped to. The tolerance value is the distance from the cursor position to the boundary of the square (in all four directions). "
	fnames "useTolerance ut"
		fdesc "If useTolerance is set, then point snapping is limited to points that are within a square region surrounding the cursor position. The size of the square is determined by the tolerance value. "
	fnames "uvTolerance uvt"
		fdesc "uvTolerance defines the size of the square region in which points must lie in order to be snapped to, in the  UV Texture Editor.  The tolerance value is the distance  from the cursor position to the boundary of the square  (in all four directions). "
	fnames "viewPlane vp"
		fdesc "Set view-plane snap mode "
	rcount "0"
name "snapTogetherCtx"
	desc "The snapTogetherCtx command creates a tool for snapping surfaces together."
	fcount "11"
	fnames "clearSelection cs"
		fdesc "Sets whether the tool should clear the selection on entry to the tool. Default true. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "history ch"
		fdesc "If this is a tool command, turn the construction history on for the tool in question. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "Contexts support up to three icons that represent the tool associated with the context. "
	fnames "name n"
		fdesc "If this is a tool command, name the tool appropriately. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "setOrientation so"
		fdesc "Sets whether the tool should orient as well as moving an item. Default true. "
	fnames "snapPolygonFace spf"
		fdesc "Sets whether the tool should snap the cursor to polygon face centers. Default false. "
	rcount "0"
name "snapshot"
	desc "This command can be used to create either a series of surfaces evaluated at the times specified by the command flags, or a motion trail displaying the trajectory of the object's pivot point at the times specified. If the constructionHistory flag is true, the output shapes or motion trail will re-update when modifications are made to the animation or construction history of the original shape. When construction history is used, the forceUpdate flag can be set to false to control when the snapshot recomputes, which will typically improve performance."
	fcount "7"
	fnames "constructionHistory ch"
		fdesc "update with changes to original geometry "
	fnames "endTime et"
		fdesc "time to stop copying target geometry Default: 10.0 "
	fnames "increment i"
		fdesc "time increment between copies Default: 1.0 "
	fnames "motionTrail mt"
		fdesc "Rather than create a series of surfaces, create a motion trail displaying the location of the object's pivot point at the specified time steps. Default is false. "
	fnames "name n"
		fdesc "the name of the snapshot node. Query returns string. "
	fnames "startTime st"
		fdesc "time to begin copying target geometry Default: 1.0 "
	fnames "update u"
		fdesc "This flag can only be used if the snapshot has constructionHistory. It sets the snapshot node's update value. The update value controls whether the snapshot updates on demand (most efficient), when keyframes change (efficient), or whenever any history changes (least efficient). Valid values are "demand", "animCurve", "always". Default: "always" "
	rcount "0"
name "soft"
	desc "Makes a soft body from the object(s) passed on the command line or in the selection list. The geometry can be a NURBS, polygonal, lattice object. The resulting soft body is made up of a hierarchy with a particle shape and a geometry shape, thus: T / \ T G / P Dynamics are applied to the particle shape and the resulting particle positions then drive the locations of the geometry's CVs, vertices, or lattice points. With the convert option, the particle shape and its transform are simply inserted below the original shape's hierarchy. With the duplicate option, the original.... Refer to full documentation"
	fcount "6"
	fnames "convert c"
		fdesc "No Argument.  This tells the command that you want the original object to be the actual deformed object.  The particle shape portion of the soft body will be inserted in the same hierarchy as the original, under the same parent (with one additional intervening transform which is initially the identity).  If no flags are passed, then this is assumed.  The combination -c -h 1 is not valid; if you have this in your scripts, remove the -h 1. "
	fnames "duplicate d"
		fdesc "No Argument.  This tells the command that you want to make a copy of the original object and use the copy as the deforming geometry. Input connections to the original object are duplicated.  You would do this if you wanted to keep the original object in your scene and also have a copy of it that was a soft body. This flag and -dh are mutually exclusive. "
	fnames "duplicateHistory dh"
		fdesc "No Argument.  This is the same as -d, except that upstream history,  is duplicated as well, instead of just input connections. This flag and -d are mutually exclusive. "
	fnames "goal g"
		fdesc "This is the same as -d, but in addition it tells the command that  you want the resulting soft body to try to follow the original geometry, using the set goal weight as the value that controls how strongly it is to follow it.  A value of 1.0 will try to follow exactly, and a value of 0.0 will not follow at all. The default value is 0.5.  This value must be from 0.0 to 1.0. You could use -d with -g, but it is redundant.  If you want history to be duplicated, you can use -dh and -g together. "
	fnames "hideOriginal h"
		fdesc "This flag is used only when duplicating (-d, -g, or -dh).  If set to true, whichever of the two objects is NOT the soft object will be hidden. In other words, with -d -h true, the original object will be hidden;  with -d -c -h 1 the duplicate object will be hidden.   You would typically do this if you want to use the non-dynamic object as a goal for the soft one (see -g) but you do not want it visible in the scene. The flags -h 1 and -c are mutually exclusive. "
	fnames "name n"
		fdesc "This flag is obsolete.  If you wish to give your new soft object a name, use the rename command (or from the UI, use the outliner). "
	rcount "0"
name "softMod"
	desc "The softMod command creates a softMod or edits the membership of an existing softMod. The command returns the name of the softMod node upon creation of a new softMod."
	fcount "23"
	fnames "after af"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node after the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "before bf"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node before the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "bindState bs"
		fdesc "Specifying this flag adds in a compensation to ensure  the softModed objects preserve their spatial position when softModed. This is required to prevent the geometry from jumping at the time the softMod is created in situations when the softMod transforms at softMod time are not identity. "
	fnames "deformerTool dt"
		fdesc "Returns the name of the deformer tool objects (if any) as string string ... "
	fnames "envelope en"
		fdesc "Set the envelope value for the deformer. Default is 1.0 "
	fnames "exclusive ex"
		fdesc "Puts the deformation set in a deform partition. "
	fnames "falloffAroundSelection fas"
		fdesc "Falloff will be calculated around any selected components "
	fnames "falloffBasedOnX fbx"
		fdesc "Falloff will be calculated using the X component. "
	fnames "falloffBasedOnY fby"
		fdesc "Falloff will be calculated using the Y component. "
	fnames "falloffBasedOnZ fbz"
		fdesc "Falloff will be calculated using the Z component. "
	fnames "falloffCenter fc"
		fdesc "Set the falloff center point of the softMod. "
	fnames "falloffMasking fm"
		fdesc "Deformation will be restricted to selected components "
	fnames "falloffRadius fr"
		fdesc "Set the falloff radius of the softMod. "
	fnames "frontOfChain foc"
		fdesc "This command is used to specify that the new deformer  node should be placed ahead (upstream) of existing deformer and skin nodes in the shape's history (but not ahead of existing tweak nodes). The input to the deformer will be the upstream shape rather than the visible downstream shape, so the behavior of this flag is the most intuitive if the downstream deformers are in their reset (hasNoEffect) position when the new deformer is added. "
	fnames "geometry g"
		fdesc "The specified object will be added to the list of objects being deformed by this deformer object, unless the -rm flag is also specified. When queried, this flag returns string string string ... "
	fnames "ignoreSelected is"
		fdesc "Tells the command to not deform objects on the current selection list "
	fnames "name n"
		fdesc "Used to specify the name of the node being created "
	fnames "prune pr"
		fdesc "Removes any points not being deformed by the deformer in  its current configuration from the deformer set. "
	fnames "relative rel"
		fdesc "Enable relative mode for the softMod. In relative mode, Only the transformations directly above the softMod are used by the softMod. Default is off. "
	fnames "remove rm"
		fdesc "Specifies that objects listed after the -g flag should be removed from this deformer. "
	fnames "resetGeometry rg"
		fdesc "Reset the geometry matrices for the objects being deformed by the softMod. This flag is used to get rid of undesirable effects that happen if you scale an object that is deformed by a softMod. "
	fnames "split sp"
		fdesc "Branches off a new chain in the dependency graph instead of inserting/appending the deformer into/onto an existing chain. "
	fnames "weightedNode wn"
		fdesc "Transform node in the DAG above the softMod to which all percents are applied. fromNode specifies the descendent of  nodeName from where the transformation matrix is evaluated. Default is the softMod handle. "
	rcount "6"
		rname "lattice"
		rname "sculpt"
		rname "deformer"
		rname "cluster"
		rname "wire"
		rname "wrinkle"
name "softModCtx"
	desc "Controls the softMod context."
	fcount "0"
	rcount "0"
name "sort"
	desc "Returns an array containing the elements of the input array sorted in ascending order."
	fcount "0"
	rcount "0"
name "sound"
	desc "Creates an audio node which can be used with UI commands such as soundControl or timeControl which support sound scrubbing and sound during playback."
	fcount "4"
	fnames "file f"
		fdesc "Name of sound file.  Query returns string. "
	fnames "length l"
		fdesc "The length (in the current time unit) of the sound.  Query returns float. "
	fnames "name n"
		fdesc "Name to give the resulting audio node.  Query returns string. "
	fnames "offset o"
		fdesc "Time at which to start the sound.  Query returns float. "
	rcount "0"
name "soundControl"
	desc "This command creates a control used for changing current time and scratching/scrubbing through sound files."
	fcount "31"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "beginScrub bs"
		fdesc "Set this widget up for sound scrubbing. Subsequent changes to current time will result in "sound scrubbing" behavior, until the "-endScrub" command is issued for this widget. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "displaySound ds"
		fdesc "Turn sound display off.  Query returns int. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "endScrub es"
		fdesc "End sound scubbing for this widget.  This stops sound scrubbing behavior and should be issued before any subsequent "-beginScrub" flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "maxTime max"
		fdesc "Controls the max time of the range displayed in the control.   Query returns float. "
	fnames "minTime min"
		fdesc "Controls the min time of the range displayed in the control.   Query returns float. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "pressCommand pc"
		fdesc "script to run on mouse-down in this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "releaseCommand rc"
		fdesc "script to run on mouse-up in this control. "
	fnames "repeatChunkSize rcs"
		fdesc "How much sound (in the current time unit) is repeated when -repeatOnHold is true.  Default is 1.0. "
	fnames "repeatOnHold roh"
		fdesc "Repeat sound during mouse-down events "
	fnames "resample r"
		fdesc "Resample the sound display to fit the widget "
	fnames "sound s"
		fdesc "Name of audio depend node whose data should display in the  sound-display widget. Query returns string. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "waveform wf"
		fdesc "Determines what part of the sound waveform to display,  when -displaySound is "true". Valid values are "top", "bottom",  and "both".  Default is "top". Query returns string. "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "source"
	desc "The source directive causes MEL to compile and execute the contents of a script that is stored in a file. The argument passed to the source directive can be a full path or just the name of a script. If only the script name is provided, then MEL will attempt to locate it in the MEL search path. If the name or path is un-suffixed then MEL will add a ".mel" suffix before the search. If a full path is provided, then it must surrounded in quotes. It is important for advanced MEL users to understand that "source" is not.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "spaceLocator"
	desc "The command creates a locator at the specified position in space. By default it is created at (0,0,0)."
	fcount "1"
	fnames "position p"
		fdesc "Location in  3-dimensional space where locator is to be created. "
	rcount "0"
name "sphere"
	desc "The sphere command creates a new sphere. The number of spans in the in each direction of the sphere is determined by the useTolerance attribute. If -ut is true then the -tolerance attribute will be used. If -ut is false then the -sections attribute will be used."
	fcount "26"
	fnames "absoluteSweepDifference asd"
		fdesc "The difference of endSweep - startSweep "
	fnames "axis ax"
		fdesc "The primitive's axis "
	fnames "axisX axx"
		fdesc "X of the axis Default:  1 "
	fnames "axisY axy"
		fdesc "Y of the axis Default:  0 "
	fnames "axisZ axz"
		fdesc "Z of the axis Default:  0 "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "degree d"
		fdesc "The degree of the resulting surface: 1 - linear, 3 - cubic Default:  3 "
	fnames "endSweep esw"
		fdesc "The angle at which to end the surface of revolution. Default is 2Pi radians, or 360 degrees. Default:  6.2831853 "
	fnames "heightRatio hr"
		fdesc "Ratio of "height" to "width" Default:  2.0 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "pivot p"
		fdesc "The primitive's pivot point "
	fnames "pivotX px"
		fdesc "X of the pivot Default:  0 "
	fnames "pivotY py"
		fdesc "Y of the pivot Default:  0 "
	fnames "pivotZ pz"
		fdesc "Z of the pivot Default:  0 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "radius r"
		fdesc "The radius of the object Default:  1.0 "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "sections s"
		fdesc "The number of sections determines the resolution of the surface in the sweep direction. Used only if useTolerance is false. Default:  8 "
	fnames "spans nsp"
		fdesc "The number of spans determines the resolution of the surface in the opposite direction. Default:  1 "
	fnames "startSweep ssw"
		fdesc "The angle at which to start the surface of revolution Default:  0 "
	fnames "tolerance tol"
		fdesc "The tolerance with which to build the surface. Used only if useTolerance is true Default:  0.01 "
	fnames "useTolerance ut"
		fdesc "Use the specified tolerance to determine resolution. Otherwise number of sections will be used. Default:  false "
	rcount "5"
		rname "cone"
		rname "cylinder"
		rname "torus"
		rname "nurbsPlane"
		rname "nurbsCube"
name "sphrand"
	desc "This command generates random vectors evenly distributed inside a sphere of the specified radius. If a vector argument is given, sphrand scales the output by the components of the vector argument. Multiple random number streams: The two stream-based variants of sphrand accept a string parameter which specifies the name of the random number stream to use when generating random numbers. The behaviour of the function is identical to the non-stream versions with the exception that random number generation is performed from the specified rather than the default random number stream. For more details on multiple random number streams please see.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "spotLight"
	desc "The spotLight command is used to edit the parameters of existing spotLights, or to create new ones. The default behaviour is to create a new spotlight."
	fcount "12"
	fnames "coneAngle ca"
		fdesc "angle of the spotLight  "
	fnames "decayRate d"
		fdesc "decay rate of the light (0-no decay, 1-slow, 2-realistic, 3-fast) "
	fnames "discRadius drs"
		fdesc "radius of the disc around the light "
	fnames "dropOff do"
		fdesc "dropOff of the spotLight  "
	fnames "edit e"
		fdesc "edit the parameters of an existing light "
	fnames "intensity i"
		fdesc "intensity of the light (expressed as a percentage) "
	fnames "penumbra p"
		fdesc "specify penumbra region  -rgb float float float color of the light (0-1) "
	fnames "shadowColor sc"
		fdesc "the shadow color "
	fnames "shadowDither sd"
		fdesc "dither the shadow "
	fnames "shadowSamples sh"
		fdesc "number of shadow samples. "
	fnames "softShadow ss"
		fdesc "soft shadow "
	fnames "useRayTraceShadows rs"
		fdesc "ray trace shadows "
	rcount "9"
		rname "ambientLight"
		rname "lightListEditor"
		rname "directionalLight"
		rname "lightListPanel"
		rname "exclusiveLightCheckBox"
		rname "lightlink"
		rname "spotLightPreviewPort"
		rname "pointLight"
		rname "lightList"
name "spotLightPreviewPort"
	desc "This command creates a 3dPort that displays an image representing the illumination provided by the spotLight. It is a picture of a plane being illuminated by a light."
	fcount "21"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "spotLight sl"
		fdesc "Name of the spotLight. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "widthHeight wh"
		fdesc "The width and height of the port. "
	rcount "9"
		rname "ambientLight"
		rname "lightListEditor"
		rname "directionalLight"
		rname "lightListPanel"
		rname "spotLight"
		rname "exclusiveLightCheckBox"
		rname "lightlink"
		rname "pointLight"
		rname "lightList"
name "spreadSheetEditor"
	desc "This command creates a new spread sheet editor in the current layout."
	fcount "27"
	fnames "allAttr aa"
		fdesc "Returns a list of all the attribute names currently being displayed.  This flag is ignored when not being queried. "
	fnames "control ctl"
		fdesc "Query only. Returns the top level control for this editor. Usually used for getting a parent to attach popup menus. CAUTION: editors may not have controls at times.  This flag can return "NONE" if no control is present. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dtg"
		fdesc "Attaches a tag to the maya editor. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "execute exe"
		fdesc "Immediately executes the command string once for every selected cell in the spreadSheet.  Before the command is executed, "#A" is substituted with the name of the cell's attribute, "#N" is substituted with the name of the cell's node, and "#P" is substituted with the full path name of the node. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "filter f"
		fdesc "Specifies the name of a filter to be placed on this editor. This filters the information coming onto the main list of the editor. "
	fnames "fixedAttrList fal"
		fdesc "Forces the editor to only display attributes with the specified names. "
	fnames "forceMainConnection fmc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. This is a variant of the -mainListConnection flag in that it will force a change even when the connection is locked. This flag is used to reduce the overhead when using the -unlockMainConnection , -mainListConnection, -lockMainConnection flags in immediate  succession. "
	fnames "highlightConnection hlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its highlight list.  Not all editors have a highlight list.  For those who do, it is sort of a secondary selection list. "
	fnames "keyableOnly ko"
		fdesc "Limits the displayed attributes to be those that are keyable. True by default "
	fnames "lockMainConnection lck"
		fdesc "Locks the current list of objects within the mainConnection, so that only those objects are displayed within the editor. Further changes to the original mainConnection are ignored. "
	fnames "longNames ln"
		fdesc "Controls whether the attributes are displayed using their long names or their short names. "
	fnames "mainListConnection mlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. "
	fnames "panel pnl"
		fdesc "Specifies the panel that the editor belongs to.  By default if an editor is created in the create callback of a scripted panel it will belong to that panel.  If an editor doesn't belong to a panel it will be deleted when the window that it is in is deleted. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this editor. This flag will only have an effect if the editor is currently un-parented. "
	fnames "precision pre"
		fdesc "Specifies the maximum number of digits displayed to the right of the decimal place.  Can be 0 to 20. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "selectedAttr sla"
		fdesc "Returns a list of all the attribute names that are selected.  This flag is ignored when not being queried. "
	fnames "selectionConnection slc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its own selection list.  As the user selects things in this editor, they will be selected in the selectionConnection object.  If someone else changes the object, the editor will update to show the change. "
	fnames "showShapes ss"
		fdesc "If true, when transforms are selected their shapes will be displayed instead. "
	fnames "stateString sts"
		fdesc "Query only flag.  Returns the MEL command that will edit an editor to match the current editor state. The returned command string uses the string variable $editorName in place of a specific name. "
	fnames "unParent up"
		fdesc "Specifies that the editor should be removed from its layout. This cannot be used with query. "
	fnames "unlockMainConnection ulk"
		fdesc "Unlocks the mainConnection, effectively restoring the original mainConnection (if it is still available), and dynamic updates. "
	fnames "updateMainConnection upd"
		fdesc "Causes a locked mainConnection to be updated from the orginal mainConnection, but preserves the lock state. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "spring"
	desc "The spring command can do any of the following: * create a new spring object (shape plus transform). The shape contains springs between the points (particles, cvs, etc.) of the objects selected or listed on the command line. * create new springs and add them to an existing spring object * edit or query certain attributes of an existing spring object One "spring object" may have hundreds or even thousands of individual springs. Certain attributes of the spring object specify exactly where the springs are attached to which other objects. Springs may be attached to the following: particles, vertices of.... Refer to full documentation"
	fcount "23"
	fnames "addSprings add"
		fdesc "If specified, springs will be added to the existing selected set of springs. (Default is to create a new spring object.) "
	fnames "allPoints all"
		fdesc "If True, sets the mode of spring application to All.  This will add springs between all points selected. (Default is False.) "
	fnames "count ct"
		fdesc "Return the number of springs in the shape.  Query-only. We maintain this flag only for compatibility with earlier versions of Maya.  To get the count of springs, it is much faster and simpler to use the spring shape's count attribute: getAttr  .count. "
	fnames "damping d"
		fdesc "Damping factor for the springs created in the spring object.  (Default = 0.2 ) "
	fnames "dampingPS dPS"
		fdesc "Damping factor for the springs created in the spring object. This will initialize all the entries in dampingPS to the specified value. In both the flag and the attribute name, "PS" stands for "per-spring." (Default = 0.2 )  "
	fnames "endForceWeight efw"
		fdesc "Amount of the force of the spring that gets applied to the point to which the spring ends. Valid range is from 0.0 to 1.0. (Default = 1.0 )  "
	fnames "exclusive exc"
		fdesc "If true, tells the command to create springs only between pairs of points which are not in the same object. (Default is False.)  "
	fnames "length l"
		fdesc "Vestigial form of "restLength." Please use "restLength" instead. "
	fnames "maxDistance mxd"
		fdesc "Maximum distance between two points that a spring would be considered.  "
	fnames "minDistance mnd"
		fdesc "Minimum distance between two points that a spring would be considered. (Default = 0.0. See Defaults for more information on this flag's default.)  "
	fnames "minMax mm"
		fdesc "If True, sets the mode of the spring application to Min/Max. This will add springs between all points from the specified point groups  that are between the minimum and maximum distance values set with min and max.  (Default is False.) Note: This gets automatically set if either the min or max flags are used.  "
	fnames "name n"
		fdesc "Name of spring object. "
	fnames "noDuplicate nd"
		fdesc "Check for existing springs and don't add a new spring between two points already connected by a spring in the same object.  Only the object the command is working on is checked.  This flag is relevant only when using -add. (Default = false) "
	fnames "restLength rl"
		fdesc "Per-object rest length for the new springs. Springs can use either their per-object or per-spring rest length.  See the -lPS and -ulp flags. "
	fnames "restLengthPS rPS"
		fdesc "Per-spring rest length for the new springs. This will initialize all the entries in restLengthPS to the specified value. If this flag is not thrown, each rest length will be initialized to the distance between the two  points at the time the spring is created (i.e., the initial length of the spring).   When playing back, springs can use either their per-spring or per-object rest length.  See the -rl and -urp flags. In both the flag and the attribute name, "PS" stands for "per-spring." "
	fnames "startForceWeight sfw"
		fdesc "Amount of the force of the spring that gets applied to the point from which the spring starts. Valid range is from 0.0 to 1.0. (Default = 1.0 )  "
	fnames "stiffness s"
		fdesc "Stiffness of the springs created in the spring object. (Default = 1.0 )  -damp float Vestigial form of "damping."  Please use "damping" instead. "
	fnames "stiffnessPS sPS"
		fdesc "Stiffness of the springs created in the spring object. This will initialize all the entries in stiffnessPS to the specified value. In both the flag and the attribute name, "PS" stands for "per-spring." (Default = 1.0 )  "
	fnames "useDampingPS udp"
		fdesc "Specifies whether to use dampingPS (per spring damping). If set to false, the per object damping attribute value will be used. This flag simply sets the useDampingPS attribute of the spring shape. In both the flag and the attribute name, "PS" stands for "per-spring." (Default = false )  "
	fnames "useRestLengthPS urp"
		fdesc "Specifies whether to use restLengthPS (per spring restLength). If set to false, the per object restLength attribute value will be used. This flag simply sets the useRestLengthPS attribute of the spring shape. In both the flag and the attribute name, "PS" stands for "per-spring." (Default = false )  "
	fnames "useStiffnessPS usp"
		fdesc "Specifies whether to use stiffnessPS (per spring stiffness). If set to false, the per object stiffness attribute value will be used. This flag simply sets the useStiffnessPS attribute of the spring shape. In both the flag and the attribute name, "PS" stands for "per-spring." (Default = false )  "
	fnames "walkLength wl"
		fdesc "This flag is valid only when doing wireframe creation. It will create springs between pairs of points connected by the specified number of edges.  For example, if walk length is 2, each pair of points  separated by no more than 2 edges will get a spring.  Walk length measures the distance between pairs of vertices just like the number of blocks measures the distance between two intersections in a city. "
	fnames "wireframe wf"
		fdesc "If True, sets the mode of the spring application to Wireframe. This is valid only for springs created on a soft body.   It will add springs along all edges connecting the adjacent points  (vertices or CV's) of curves and surfaces. (Default is False.) "
	rcount "0"
name "sqrt"
	desc "Returns the square root of the given value."
	fcount "0"
	rcount "0"
name "squareSurface"
	desc "This command produces a square surface given 3 or 4 curves. This resulting square surface is created within the intersecting region of the selected curves. The order of selection is important and the curves must intersect or their ends must meet. You must specify one continuity type flag for each selected curve. If continuity type is 1 (fixed, no tangent continuity) then the curveFitCheckpoints flag (-cfc) is not required."
	fcount "21"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "continuityPassed1 cp1"
		fdesc "True if the continuity for boundary curve 1 passed. "
	fnames "continuityPassed2 cp2"
		fdesc "True if the continuity for boundary curve 2 passed. "
	fnames "continuityPassed3 cp3"
		fdesc "True if the continuity for boundary curve 3 passed. "
	fnames "continuityPassed4 cp4"
		fdesc "True if the continuity for boundary curve 4 passed. "
	fnames "continuityType1 ct1"
		fdesc "Continuity type legal values for curve 1: 1 - fixed boundary 2 - tangent continuity 3 - implied tangent continuity Default:  2 "
	fnames "continuityType2 ct2"
		fdesc "Continuity type legal values for curve 2: 1 - fixed boundary 2 - tangent continuity 3 - implied tangent continuity Default:  2 "
	fnames "continuityType3 ct3"
		fdesc "Continuity type legal values for curve 3: 1 - fixed boundary 2 - tangent continuity 3 - implied tangent continuity Default:  2 "
	fnames "continuityType4 ct4"
		fdesc "Continuity type legal values for curve 4: 1 - fixed boundary 2 - tangent continuity 3 - implied tangent continuity Default:  2 "
	fnames "curveFitCheckpoints cfc"
		fdesc "The number of points per span to check the tangency deviation between the boundary curve and the created tangent square surface. Only available for the tangent continuity type. Default:  5 "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "rebuildCurve1 rc1"
		fdesc "A boolean to determine if input curve 1 should be rebuilt (with curvature continuity). Default:  false "
	fnames "rebuildCurve2 rc2"
		fdesc "A boolean to determine if input curve 2 should be rebuilt (with curvature continuity). Default:  false "
	fnames "rebuildCurve3 rc3"
		fdesc "A boolean to determine if input curve 3 should be rebuilt (with curvature continuity). Default:  false "
	fnames "rebuildCurve4 rc4"
		fdesc "A boolean to determine if input curve 4 should be rebuilt (with curvature continuity). Default:  false "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	rcount "3"
		rname "boundary"
		rname "doubleProfileBirailSurface"
		rname "loft"
name "srtContext"
	desc "This command can be used to create a combined transform (translate/scale/rotate) context."
	fcount "0"
	rcount "0"
name "stackTrace"
	desc "This command controls the mel stack trace window."
	fcount "2"
	fnames "query q"
		fdesc "Allows you to query one of the above values. "
	fnames "state s"
		fdesc "Turns displaying the stack trace window on or off. "
	rcount "0"
name "startString"
	desc "This procedure returns the first $count characters of the string $s. If $count is zero or negative, then an empty string is returned. If $count is greater than or equal to the number of characters in $s, then the entire string is returned."
	fcount "0"
	rcount "0"
name "startsWith"
	desc "This procedure returns true if the string $s starts with the string $prefix."
	fcount "0"
	rcount "0"
name "stitchAndExplodeShell"
	desc "Given a group of NURBS surfaces which are connected, the script stitches the surfaces together as a shell and subsequently creates trimmed NURBS surface shapes corresponding to the faces comprising the shell using a surfaceVarGroup. The stitchAndExplode is performed by hooking up the selected NURBS surfaces to a stitchAsNurbsShell node, which in turn is connected to a explodeNurbsShell node. This is useful in removing cracks which show up while rendering NURBS surfaces as the tesselation carried out to render the triangles do not have the same vertices across the shared edges."
	fcount "0"
	rcount "0"
name "stitchSurface"
	desc "The stitchSurface command aligns two surfaces together to be G(0) and/or G(1) continuous by ajusting only the Control Vertices of the surfaces. The two surfaces can be stitched by specifying the two isoparm boundary edges that are to stitched together. The edge to which the two surfaces are stitched together is obtained by doing a weighted average of the two edges. The weights for the two edges is specified using the flags -wt0, -wt1 respectively."
	fcount "40"
	fnames "bias b"
		fdesc "Blend Cvs in between input surface and result from stitch. A value of 0.0 returns the input surface Default:  1.0 "
	fnames "cacscade c"
		fdesc "C: Default is 'false'. "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "cvIthIndex ci"
		fdesc "The ith  boundary cv index on the input surface Default:  -1 "
	fnames "cvJthIndex cj"
		fdesc "The jth  boundary cv index on the input surface Default:  -1 "
	fnames "cvPosition cv"
		fdesc "Desired CV position at the cv (i,j) index. Overrides that computed during stitch. Default:  0.0, 0.0, 0.0 "
	fnames "cvpositionX cvx"
		fdesc "Desired CV position in X at the cv (i,j) index. Overrides that computed during stitch. Default:  -1 "
	fnames "cvpositionY cvy"
		fdesc "Desired CV position in Y at the cv (i,j) index. Overrides that computed during stitch. Default:  -1 "
	fnames "cvpositionZ cvz"
		fdesc "Desired CV position in Z at the cv (i,j) index. Overrides that computed during stitch. Default:  -1 "
	fnames "fixBoundary fb"
		fdesc "Fix Boundary Cvs while Solving for any G1 constraints. Default:  false "
	fnames "keepG0Continuity kg0"
		fdesc "C: Default is 'true'. "
	fnames "keepG1Continuity kg1"
		fdesc "C: Default is 'false'. "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "normal n"
		fdesc "Desired normal at the corresponding (u,v) index on the surface Default:  0.0, 0.0, 0.0 "
	fnames "normalX nx"
		fdesc "Desired normal in X at the corresponding (u,v) index on the surface Default:  0.0 "
	fnames "normalY ny"
		fdesc "Desired normal in Y at the corresponding (u,v) index on the surface Default:  0.0 "
	fnames "normalZ nz"
		fdesc "Desired normal in Z at the corresponding (u,v) index on the surface Default:  0.0 "
	fnames "numberOfSamples ns"
		fdesc "C: Default is 20. "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "parameterU u"
		fdesc "The U parameter value on surface for a point constraint. Default:  -10000 "
	fnames "parameterV v"
		fdesc "The V parameter value on surface for a point constraint Default:  -10000 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "position p"
		fdesc "Desired 3D position at the corresponding (u,v) multi index. Default:  0.0, 0.0, 0.0 "
	fnames "positionX px"
		fdesc "Desired position in X at the corresponding (u,v) multi index. Default:  0.0 "
	fnames "positionY py"
		fdesc "Desired position in Y at the corresponding (u,v) multi index. Default:  0.0 "
	fnames "positionZ pz"
		fdesc "Desired position in Z at the corresponding (u,v) multi index. Default:  0.0 "
	fnames "positionalContinuity pc"
		fdesc "Toggle on(off) G0 continuous at edge corresponding to multi index. Default:  true "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "shouldBeLast sbl"
		fdesc "Deformers will let it be last Default:  true "
	fnames "stepCount sc"
		fdesc "Step count for the number of discretizations. Default:  20 "
	fnames "tangentialContinuity tc"
		fdesc "Toggle on(off) G1 continuity across edge corresponding to multi index. Default:  false "
	fnames "togglePointNormals tpn"
		fdesc "Toggle on(off) normal point constraints on the surface. Default:  false "
	fnames "togglePointPosition tpp"
		fdesc "Toggle on(off) position point constraints on the surface. Default:  true "
	fnames "toggleTolerance tt"
		fdesc "Toggle on(off) so as to use Tolerance or specified steps for discretization. Default:  false "
	fnames "tolerance tol"
		fdesc "Tolerance to use while discretizing the edge Default:  0.1 "
	fnames "weight0 wt0"
		fdesc "C: Default is 0.5. "
	fnames "weight1 wt1"
		fdesc "C: Default is 0.5. "
	rcount "0"
name "stitchSurfacePoints"
	desc "The stitchSurfacePoints command aligns two or more surface points along the boundaries together to a single point. In the process, a node to average the points is created. The points are averaged together in a weighted fashion. The points may be control vertices along the boundaries. If the points are CVs then they are stitched together only with positional continuity. Note : No two points can lie on the same surface."
	fcount "38"
	fnames "bias b"
		fdesc "Blend Cvs in between input surface and result from stitch. A value of 0.0 returns the input surface Default:  1.0 "
	fnames "cascade c"
		fdesc "C: Default is 'false'. "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "cvIthIndex ci"
		fdesc "The ith  boundary cv index on the input surface Default:  -1 "
	fnames "cvJthIndex cj"
		fdesc "The jth  boundary cv index on the input surface Default:  -1 "
	fnames "cvPosition cv"
		fdesc "Desired CV position at the cv (i,j) index. Overrides that computed during stitch. Default:  0.0, 0.0, 0.0 "
	fnames "cvpositionX cvx"
		fdesc "Desired CV position in X at the cv (i,j) index. Overrides that computed during stitch. Default:  -1 "
	fnames "cvpositionY cvy"
		fdesc "Desired CV position in Y at the cv (i,j) index. Overrides that computed during stitch. Default:  -1 "
	fnames "cvpositionZ cvz"
		fdesc "Desired CV position in Z at the cv (i,j) index. Overrides that computed during stitch. Default:  -1 "
	fnames "equalWeight ewt"
		fdesc "C: Default is 'true'. If false, the first point is assigned a weight of 1.0 and the rest are assigned 0.0. "
	fnames "fixBoundary fb"
		fdesc "Fix Boundary Cvs while Solving for any G1 constraints. Default:  false "
	fnames "keepG0Continuity kg0"
		fdesc "C: Default is 'true'. "
	fnames "keepG1Continuity kg1"
		fdesc "C: Default is 'false'. "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "normal n"
		fdesc "Desired normal at the corresponding (u,v) index on the surface Default:  0.0, 0.0, 0.0 "
	fnames "normalX nx"
		fdesc "Desired normal in X at the corresponding (u,v) index on the surface Default:  0.0 "
	fnames "normalY ny"
		fdesc "Desired normal in Y at the corresponding (u,v) index on the surface Default:  0.0 "
	fnames "normalZ nz"
		fdesc "Desired normal in Z at the corresponding (u,v) index on the surface Default:  0.0 "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "parameterU u"
		fdesc "The U parameter value on surface for a point constraint. Default:  -10000 "
	fnames "parameterV v"
		fdesc "The V parameter value on surface for a point constraint Default:  -10000 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "position p"
		fdesc "Desired 3D position at the corresponding (u,v) multi index. Default:  0.0, 0.0, 0.0 "
	fnames "positionX px"
		fdesc "Desired position in X at the corresponding (u,v) multi index. Default:  0.0 "
	fnames "positionY py"
		fdesc "Desired position in Y at the corresponding (u,v) multi index. Default:  0.0 "
	fnames "positionZ pz"
		fdesc "Desired position in Z at the corresponding (u,v) multi index. Default:  0.0 "
	fnames "positionalContinuity pc"
		fdesc "Toggle on(off) G0 continuous at edge corresponding to multi index. Default:  true "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "shouldBeLast sbl"
		fdesc "Deformers will let it be last Default:  true "
	fnames "stepCount sc"
		fdesc "Step count for the number of discretizations. Default:  20 "
	fnames "tangentialContinuity tc"
		fdesc "Toggle on(off) G1 continuity across edge corresponding to multi index. Default:  false "
	fnames "togglePointNormals tpn"
		fdesc "Toggle on(off) normal point constraints on the surface. Default:  false "
	fnames "togglePointPosition tpp"
		fdesc "Toggle on(off) position point constraints on the surface. Default:  true "
	fnames "toggleTolerance tt"
		fdesc "Toggle on(off) so as to use Tolerance or specified steps for discretization. Default:  false "
	fnames "tolerance tol"
		fdesc "Tolerance to use while discretizing the edge Default:  0.1 "
	rcount "0"
name "strcmp"
	desc "Compares its 2 string arguments and returns an integer less than, equal to, or greater than 0, based upon whether the first argument is lexicographically less than, equal to, or greater than the second argument."
	fcount "0"
	rcount "0"
name "stringArrayCatenate"
	desc "Returns a new string array which is the result of concatenating the two given string arrays."
	fcount "0"
	rcount "0"
name "stringArrayCount"
	desc "Return the number of times the string in $item occurs in the string array $list. Zero is returned if the string is not in the list."
	fcount "0"
	rcount "0"
name "stringArrayIntersector"
	desc "The stringArrayIntersector command creates and edits an object which is able to efficiently intersect large string arrays. The intersector object maintains a sense of "the intersection so far", and updates the intersection when new string arrays are provided using the -i/intersect flag. Note that the string intersector object may be deleted using the deleteUI command."
	fcount "7"
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "intersect i"
		fdesc "Intersect the specified string array with the current intersection being maintained by the intersector. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "reset r"
		fdesc "Reset the intersector to begin a new intersection. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "stringArrayRemove"
	desc "Remove the string items in the first string array from the second string array. A new string array with the items removed is returned. The second argument is left unchanged. Note that all occurrences of the given string items will be removed from the string array, not just the first occurrence."
	fcount "0"
	rcount "0"
name "stringArrayRemoveDuplicates"
	desc "Remove all duplicate items from a string array. There will be only one occurrence of each string item in the returned string array. The argument string array is not modified."
	fcount "0"
	rcount "0"
name "stringArrayToString"
	desc "Return a string that combines all the argument array string elements, each separated by the separation string."
	fcount "0"
	rcount "0"
name "stringToStringArray"
	desc "Break up the string argument into individual strings and return them all as elements in an array. The separation string identifies the characters used to distinguish between individual strings."
	fcount "0"
	rcount "0"
name "strip"
	desc "Removes the white space from the start and end of a string."
	fcount "0"
	rcount "0"
name "stroke"
	desc "The stroke command creates a new Paint Effects stroke node."
	fcount "3"
	fnames "name n"
		fdesc "Sets the name of the stroke to the input string "
	fnames "pressure pr"
		fdesc "On creation, allows the copying of the pressure mapping settings from the Paint Effects Tool. Default is false. "
	fnames "seed s"
		fdesc "Sets the random seed for this stroke. "
	rcount "2"
		rname "dynPaintEditor"
		rname "getDefaultBrush"
name "subdAutoProjection"
	desc "Projects a texture map onto an object, using several orthogonal projections simultaneously."
	fcount "9"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  integer . "
	fnames "layout l"
		fdesc "What layout algorithm should be used: 0 UV pieces are aligned along the U axis. 1 UV pieces are moved in a square shape. "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "optimize o"
		fdesc "Use two different flavors for the cut generation. 0 Every face is assigned to the best plane. This optimizes the map distortion. 1 Small UV pieces are incorporated into larger ones, when the extra distortion introduced is reasonable. This tends to produce fewer UV pieces. "
	fnames "percentageSpace ps"
		fdesc "When layout is set to square, this value is a percentage of  the texture area which is added around each UV piece. It can be  used to ensure each UV piece uses different pixels in the texture. Maximum value is 5 percent. "
	fnames "planes p"
		fdesc "Number of intermediate projections used. Valid numbers  are 4, 5, 6, 8, and 12. C: Default is 6. "
	fnames "scale sc"
		fdesc "How to scale the pieces, after projections: 0 No scale is applied. 1 Uniform scale to fit in unit square. 2 Non proportional scale to fit in unit square. "
	fnames "skipIntersect si"
		fdesc "When on, self intersection of UV pieces are not tested. This makes the projection faster and produces fewer pieces, but may lead to overlaps in UV space. "
	fnames "worldSpace ws"
		fdesc "This flag specifies which reference to use. If "on" : all geometrical values are taken in world reference. If "off" : all geometrical values are taken in object reference. C: Default is "off". Q: When queried, this flag returns an  integer . Common flags "
	rcount "0"
name "subdCleanTopology"
	desc "SubdCleanTopology is undoable , NOT queryable , and NOT editable . Command cleans topology of subdiv surfaces - at all levels. It cleans the geometry of vertices that satisfy the following conditions: - Zero edits - Default uvs (uvs obtained by subdividing parent face). - No creases."
	fcount "0"
	rcount "0"
name "subdCollapse"
	desc "This command converts a takes a subdivision surface and produces a subdivision surface with a number of hierarchy levels "removed". Returns the name of the subdivision surface created and optionally the DG node that does the conversion."
	fcount "4"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable) "
	fnames "level l"
		fdesc "The level which will now become the base mesh Default:  0 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dep. node (where applicable) "
	rcount "12"
		rname "changeSubdivComponentDisplayLevel"
		rname "querySubdiv"
		rname "subdiv"
		rname "changeSubdivRegion"
		rname "refineSubdivSelectionList"
		rname "subdivCrease"
		rname "createSubdivRegion"
		rname "subdivDisplaySmoothness"
		rname "nurbsToSubdiv"
		rname "subdToBlind"
		rname "polyToSubdiv"
		rname "subdToPoly"
name "subdDuplicateAndConnect"
	desc "This command duplicates the input subdgonal object, connects up the outSubdiv attribute of the original subd shape to the create attribute of the newly created duplicate shape and copies over the shader assignments from the original shape to the new duplicated shape. The command will fail if no objects are selected or sent as argument or if the object sent as argument is not a subdgonal object."
	fcount "0"
	rcount "0"
name "subdEditUV"
	desc "SubdEditUV is undoable , queryable , and NOT editable . Command edits uvs on subdivision surfaces. When used with the query flag, it returns the uv values associated with the specified components."
	fcount "11"
	fnames "angle a"
		fdesc "Specifies the angle value (in degrees) that the uv values are to be rotated by. "
	fnames "pivotU pu"
		fdesc "Specifies the pivot value, in the u direction, about which the scale or rotate is to be performed. "
	fnames "pivotV pv"
		fdesc "Specifies the pivot value, in the v direction, about which the scale or rotate is to be performed. "
	fnames "relative r"
		fdesc "Specifies whether this command is editing the values relative to the currently existing values. Default is true; "
	fnames "rotation rot"
		fdesc "Specifies whether this command is editing the values with rotation values "
	fnames "scale s"
		fdesc "Specifies whether this command is editing the values with scale values "
	fnames "scaleU su"
		fdesc "Specifies the scale value in the u direction. "
	fnames "scaleV sv"
		fdesc "Specifies the scale value in the v direction. "
	fnames "uValue u"
		fdesc "Specifies the value, in the u direction - absolute if relative flag is false.. "
	fnames "uvSetName uvs"
		fdesc "Specifies the name of the uv set to edit uvs on. If not specified will use the current uv set if it exists. "
	fnames "vValue v"
		fdesc "Specifies the value, in the v direction - absolute if relative flag is false.. "
	rcount "1"
		rname "subdMapCut"
name "subdListComponentConversion"
	desc "This command converts subdivision surface components from one or more types to another one or more types, and returns the list of the conversion. It doesn't change the currently selected objects. Use the "-in/internal" flag to specify conversion to "connected" vs. "contained" components. For example, if the internal flag is specified when converting from subdivision surface vertices to faces, then only faces that are entirely contained by the vertices will be returned. If the internal flag is not specified, then all faces that are connected to the vertices will be returned."
	fcount "11"
	fnames "fromEdge fe"
		fdesc "No Description"
	fnames "fromFace ff"
		fdesc "Indicates the component type to convert from. "
	fnames "fromUV fuv"
		fdesc "No Description"
	fnames "fromVertex fv"
		fdesc "No Description"
	fnames "internal in"
		fdesc "Applicable when converting from "smaller" component types to larger ones. Specifies conversion to "connected" vs. "contained" components. See examples below. "
	fnames "toEdge te"
		fdesc "No Description"
	fnames "toFace tf"
		fdesc "Indicates the component type to convert to. "
	fnames "toUV tuv"
		fdesc "No Description"
	fnames "toVertex tv"
		fdesc "No Description"
	fnames "uvShell uvs"
		fdesc "Will return uv components within the same UV shell.  Only works with flags -tuv and -fuv. "
	fnames "uvShellBorder uvb"
		fdesc "Will return uv components on the border  within the same UV shell.  Only works with  flags -tuv and -fuv. "
	rcount "1"
		rname "polyListComponentConversion"
name "subdMapCut"
	desc "Cut along edges of the texture mapping. The cut edges become map borders."
	fcount "2"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "name n"
		fdesc "Name the resulting object. "
	rcount "13"
		rname "polyProjection"
		rname "polyForceUV"
		rname "untangleUV"
		rname "polyEditUV"
		rname "polyPlanarProjection"
		rname "polyCylindricalProjection"
		rname "polyClipboard"
		rname "polySphericalProjection"
		rname "polyMoveFacetUV"
		rname "polyMoveUV"
		rname "polyMapDel"
		rname "polyMapSew"
		rname "polyUVSet"
name "subdMapSewMove"
	desc "This command can be used to Move and Sew together separate UV pieces along geometric edges. UV pieces that correspond to the same geometric edge, are merged together by moving the smaller piece to the larger one."
	fcount "4"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable). Q: When queried, this flag returns an  int . "
	fnames "limitPieceSize lps"
		fdesc "When on, this flag tells that the face number limit described above should be used. Common flags "
	fnames "name n"
		fdesc "Name the resulting object. "
	fnames "numberFaces nf"
		fdesc "Maximum number of faces in a UV piece. When trying to combine two UV pieces into a single one, the merge operation is rejected if the smaller piece has more faces than the number specified by this flag. This flag is only used when  limitPieceSize  is set to on. "
	rcount "0"
name "subdMatchTopology"
	desc "SubdMatchTopology is undoable , NOT queryable , and NOT editable . Command matches topology across multiple subdiv surfaces - at all levels."
	fcount "1"
	fnames "frontOfChain foc"
		fdesc "This command is used to specify that the new addTopology node should be placed ahead (upstream) of existing deformer and skin nodes in the shape's history (but not ahead of existing tweak nodes). The input to the addTopology node will be the upstream shape rather than the visible downstream shape, so the behavior of this flag is the most intuitive if the downstream deformers are in their reset (hasNoEffect) position when the new deformer is added. "
	rcount "7"
		rname "blendShape"
		rname "changeSubdivComponentDisplayLevel"
		rname "querySubdiv"
		rname "subdiv"
		rname "changeSubdivRegion"
		rname "createSubdivRegion"
		rname "subdivDisplaySmoothness"
name "subdMirror"
	desc "This command converts a takes a subdivision surface and produces a subdivision surface that is a mirror. Returns the name of the subdivision surface created and optionally the DG node that does the mirroring."
	fcount "6"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable) "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dep. node (where applicable) "
	fnames "xMirror xm"
		fdesc "Mirror the vertices in X Default:  false "
	fnames "yMirror ym"
		fdesc "Mirror the vertices in Y Default:  false "
	fnames "zMirror zm"
		fdesc "Mirror the vertices in Z Default:  false "
	rcount "12"
		rname "changeSubdivComponentDisplayLevel"
		rname "querySubdiv"
		rname "subdiv"
		rname "changeSubdivRegion"
		rname "refineSubdivSelectionList"
		rname "subdivCrease"
		rname "createSubdivRegion"
		rname "subdivDisplaySmoothness"
		rname "nurbsToSubdiv"
		rname "subdToBlind"
		rname "polyToSubdiv"
		rname "subdToPoly"
name "subdToBlind"
	desc "SubdToBlind is undoable , NOT queryable , and NOT editable . The subdivision surface hierarchical edits will get copied into blind data on the given polygon. The polygon face count and topology must match the subdivision surface base mesh face count and topology. If they don't, the blind data will still appear, but is not guaranteed to produce the same result when converted back to a subdivision surface. The command takes a single subdivision surface and a single polygonal object. Additional subdivision surfaces or polygonal objects will be ignored."
	fcount "3"
	fnames "absolutePosition ap"
		fdesc "If set to true, the hierarchical edits are represented as the point positions, not the point offsets.  Most of the time, this is not desirable, but if you're just going to be merging/deleting a bunch of things and not move any vertices, then you could set it to true.  False is the default and saves the offsets. "
	fnames "includeCreases ic"
		fdesc "If set, the creases get transfered as well.  With it false, the subdivision surface created from the blind data + polygon will have lost all the craese information.  The default is false. "
	fnames "includeZeroOffsets izo"
		fdesc "If set, the zero offset will get included in the blind data.  This will greatly increase the size of the blind data, but will also let you keep all created vertices in the conversion back to polys.  This flag does not change the behaviour for the vertices up to and including level 2 as they're always created.  If not set, only the edited vertices will be included in the blind data.  This will still maintain the shape of your object faithfully.  The default is false. "
	rcount "12"
		rname "changeSubdivComponentDisplayLevel"
		rname "changeSubdivRegion"
		rname "createSubdivRegion"
		rname "nurbsToSubdiv"
		rname "polyToSubdiv"
		rname "querySubdiv"
		rname "refineSubdivSelectionList"
		rname "subdCollapse"
		rname "subdToPoly"
		rname "subdiv"
		rname "subdivCrease"
		rname "subdivDisplaySmoothness"
name "subdToPoly"
	desc "This command tessellates a subdivision surface and produces polygon. The name of the new polygon is returned. If construction history is ON, then the name of the new dependency node is returned as well."
	fcount "23"
	fnames "applyMatrixToResult amr"
		fdesc "If true, the matrix on the input geometry is applied to the object and the resulting geometry will have identity matrix on it.  If false the conversion is done on the local space object and the resulting geometry has the input object's matrix on it. Default:  true "
	fnames "connectShaders cs"
		fdesc "If true, all shader assignment will be copied from the original subdiv surface to the converted polygonal surface. Default:  true "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (where applicable) "
	fnames "convertComp cc"
		fdesc "Convert the componentIds back & forth A mapping that can be used to get the one-to-one association between the poly and the SubD component Ids Default:  false "
	fnames "copyUVTopology cut"
		fdesc "Copy over uv topology (shared/unshared) from the original subdivision surface to the converted polygonal mesh. Default:  false "
	fnames "depth d"
		fdesc "The depth at which constant-depth tessellates the surface Default:  0 "
	fnames "extractPointPosition epp"
		fdesc "Determines how the position of a mesh point is calculated If on the position of the mesh point is returned. If off the position of the point of the surface is returned. Default:  false "
	fnames "format f"
		fdesc "Format: 0 - Constant Depth, 1 - Leaf Geometry, 2 - Polygon Count 3 - Vertices Default:  kConstantDepth "
	fnames "inSubdCVId is"
		fdesc "Input CV Id "
	fnames "inSubdCVIdLeft isl"
		fdesc "Higher 32 bit integer of the input CV Id "
	fnames "inSubdCVIdRight isr"
		fdesc "Lower 32 bit integer of the input CV Id "
	fnames "level l"
		fdesc "The depth from which to extract the CVs of the polyMesh (Used only when the extractPointPosition is set to true) *** CAUTION *** :Setting to higher values will be both memory-time expensive Default:  0 "
	fnames "maxPolys mp"
		fdesc "The maximum number of polygons at which by polygons tessellates. If this attribute is greater than zero, it will override the sample count and depth attributes. Default:  0 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dep. node (where applicable) "
	fnames "outSubdCVId os"
		fdesc "Output CV Id "
	fnames "outSubdCVIdLeft osl"
		fdesc "Higher 32 bit integer of the output CV Id "
	fnames "outSubdCVIdRight osr"
		fdesc "Lower 32 bit integer of the output CV Id "
	fnames "outv ov"
		fdesc "Out Vertices corresponding to the inSubDCVs. "
	fnames "polygonType pt"
		fdesc "Polygon type: 0 - Triangles, 1 - Quads, 2 - Polygons Default:  kPolygons "
	fnames "sampleCount sc"
		fdesc "The number of samples per face Default:  1 "
	fnames "shareUVs suv"
		fdesc "Force sharing of uvs on all common vertices - the value of this attribute gets overridden by the value of the copyUVTopology attribute. Default:  false "
	fnames "subdNormals un"
		fdesc "Keep subdiv surface normals Default:  false "
	rcount "12"
		rname "changeSubdivComponentDisplayLevel"
		rname "querySubdiv"
		rname "subdiv"
		rname "changeSubdivRegion"
		rname "refineSubdivSelectionList"
		rname "subdivCrease"
		rname "createSubdivRegion"
		rname "subdCollapse"
		rname "subdivDisplaySmoothness"
		rname "nurbsToSubdiv"
		rname "subdToBlind"
		rname "polyToSubdiv"
name "subdTransferUVsToCache"
	desc "SubdTransferUVsToCache is undoable , NOT queryable , and NOT editable . The subdivision surface finer level uvs will get copied to the polygonToSubd node sent in as argument. The command takes a single subdivision surface and a single polygonToSubd node as input. Additional inputs will be ignored. Please note that this command is an internal command and is to be used with care, directly by the user."
	fcount "0"
	rcount "0"
name "subdiv"
	desc "Subdiv is undoable , queryable , and NOT editable . Provides useful information about the selected subdiv or components, such as the deepest subdivided level, the children or parents of the currently selected components, etc."
	fcount "8"
	fnames "currentLevel cl"
		fdesc "When queried, this flag returns an integer representing the level of the currently selected subdiv surface component(s). Returns -1, if there are more than one level of CVs are selected, (even if they are from different objects) Returns -2, if there are no input subdiv CVs to process. "
	fnames "deepestLevel dl"
		fdesc "When queried, this flag returns an integer representing the deepest level to which the queried subdiv surface has been subdivided. "
	fnames "displayLoad dsl"
		fdesc "When queried, this flag prints the display load of selected subdiv "
	fnames "edgeStats est"
		fdesc "When queried, this flag prints stats on the current subd. "
	fnames "faceStats fst"
		fdesc "When queried, this flag prints stats on the current subd. "
	fnames "maxPossibleLevel mpl"
		fdesc "When queried, this flag returns an integer representing the maximum possible level to which the queried subdiv surface can been subdivided. "
	fnames "proxyMode pm"
		fdesc "When queried, this flag returns an integer representing whether or not the subdivision surface is in "polygon proxy" mode. "Proxy" mode allows the base mesh of a subdivision surface without construction history to be edited using the polygonal editing tools. Returns 1, if the subdivision surface is in "polygon proxy" mode. Returns 0, if the surface is not currently in "proxy" mode, but could be put into "proxy" mode since it has no construction history.  (This state is also known as "standard" mode.) Returns 2, if the surface is not in "proxy" mode and cannot be put into proxy mode, as it has construction history. "
	fnames "smallOffsets so"
		fdesc "When queried, this flag prints the number of subdiv vertices in the hierarchy that have a small enough offset so that the vertex is not required "
	rcount "12"
		rname "changeSubdivComponentDisplayLevel"
		rname "querySubdiv"
		rname "changeSubdivRegion"
		rname "refineSubdivSelectionList"
		rname "subdivCrease"
		rname "createSubdivRegion"
		rname "subdCollapse"
		rname "subdivDisplaySmoothness"
		rname "nurbsToSubdiv"
		rname "subdToBlind"
		rname "polyToSubdiv"
		rname "subdToPoly"
name "subdivCrease"
	desc "SubdivCrease is undoable , NOT queryable , and NOT editable . Set the creasing on subdivision mesh edges or mesh points that are on the selection list."
	fcount "1"
	fnames "sharpness sh"
		fdesc "Specifies the sharpness value to set the crease to "
	rcount "12"
		rname "changeSubdivComponentDisplayLevel"
		rname "querySubdiv"
		rname "subdiv"
		rname "changeSubdivRegion"
		rname "refineSubdivSelectionList"
		rname "createSubdivRegion"
		rname "subdCollapse"
		rname "subdivDisplaySmoothness"
		rname "nurbsToSubdiv"
		rname "subdToBlind"
		rname "polyToSubdiv"
		rname "subdToPoly"
name "subdivDisplaySmoothness"
	desc "SubdivDisplaySmoothness is undoable , queryable , and NOT editable . Sets or querys the display smoothness of subdivision surfaces on the selection list or of all subdivision surfaces if the -all option is set. Smoothness options are; rough, medium, or fine. Rough is the default."
	fcount "2"
	fnames "all "
		fdesc "If set, change smoothness for all subdivision surfaces "
	fnames "smoothness s"
		fdesc "Smoothness - 1 rough, 2 medium, 3 fine "
	rcount "12"
		rname "changeSubdivComponentDisplayLevel"
		rname "querySubdiv"
		rname "subdiv"
		rname "changeSubdivRegion"
		rname "refineSubdivSelectionList"
		rname "subdivCrease"
		rname "createSubdivRegion"
		rname "subdCollapse"
		rname "nurbsToSubdiv"
		rname "subdToBlind"
		rname "polyToSubdiv"
		rname "subdToPoly"
name "substitute"
	desc "Finds the portion of the second argument, the input string, that matches the regular expression in the first argument and replaces it with the string in the third argument. If there is no match between the input string and the regular expression then the original string is returned unaltered. For a more detailed description of how to use regular expressions, see the documentation for the match command."
	fcount "0"
	rcount "0"
name "substituteAllString"
	desc "Substitute every occurrence of a single character string in a text string by a new string of any length."
	fcount "0"
	rcount "0"
name "substring"
	desc "The first argument is the input string. The second and third arguments are the starting and ending positions within the input string. substring returns the portion of the first string argument bounded by starting and ending positions."
	fcount "0"
	rcount "0"
name "superCtx"
	desc "This command creates super contexts and provides a mechanism for attaching "ordinary" contexts to a super context. Whenever a tool is selected a context is invoked to manage the tool's interaction. A context will ordinarily know how to work with a specific type of object within a specific type of view (or panel). From a user's perspective they should be able to use the same tool to accomplish the same task (i.e. picking things should always be done with the select tool, whether the user is selecting geometry, animation or shaders from a 3D view, a text lister or some.... Refer to full documentation"
	fcount "4"
	fnames "attach a"
		fdesc "Specifies the name of a context to attach to a superContext. "
	fnames "edit e"
		fdesc "Allows you to attach another context to a super context (If not specified and new superContext will be created) "
	fnames "exists ex"
		fdesc "Returns true if the specified superContext exists. "
	fnames "query q"
		fdesc "Returns the current context in the superContext  "
	rcount "0"
name "surface"
	desc "The cmd creates a NURBS spline surface (rational or non rational). The surface is created by specifying control vertices (CV's) and knot sequences in the U and V direction. You cannot query the properties of the surface using this command. See examples below."
	fcount "8"
	fnames "degreeU du"
		fdesc "Degree in surface U direction.  Default is degree 3. "
	fnames "degreeV dv"
		fdesc "Degree in surface V direction.  Default is degree 3. "
	fnames "formU fu"
		fdesc "The string for open is "open" , for closed is "closed"  or  for periodic is "periodic" in U. "
	fnames "formV fv"
		fdesc "The string for open is "open" , for closed is "closed"  or  for periodic is "periodic" in V. "
	fnames "knotU ku"
		fdesc "Knot value(s) in U direction.  One flag per knot value. There must be (numberOfPointsInU + degreeInU - 1) knots and the knot  vector must be non-decreasing. "
	fnames "knotV kv"
		fdesc "Knot value(s) in V direction.  One flag per knot value. There must be (numberOfPointsInV + degreeInV - 1) knots and the knot  vector must be non-decreasing. "
	fnames "point p"
		fdesc "To specify non rational CV with (x, y, z) values.  "distance" means that this flag can take values with units.  Note that you  must specify (degree+1) surface points in any direction to create a visible surface span.  eg.  if the surface is degree 3 in the U direction, you must specify 4 CVs in the U direction. Points are specified in rows of U and columns of V.  If you want to incorporate units, add the unit name to the value, eg. "-p 3.3in 5.5ft 6.6yd" "
	fnames "pointWeight pw"
		fdesc "To specify rational CV with (x, y, z, w) values.  "distance" means that this flag can take values with units.  Note that you  must specify (degree+1) surface points in any direction to create a visible surface span.  eg.  if the surface is degree 3 in the U direction, you must specify 4 CVs in the U direction. Points are specified in rows of U and columns of V.   "
	rcount "0"
name "surfaceShaderList"
	desc "Add/Remove a relationship between an object and the current shading group."
	fcount "2"
	fnames "add add"
		fdesc "add object(s) to shader group list. "
	fnames "remove rm"
		fdesc "remove object(s) to shader group list. "
	rcount "0"
name "swatchDisplayPort"
	desc "This command creates a 3dPort that displays a swatch representing the shading node."
	fcount "25"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "borderColor bc"
		fdesc "The border color of the swatch. "
	fnames "borderWidth bw"
		fdesc "The border width of the swatch.  The value will be clamped between 0 and 4. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "pressCommand pc"
		fdesc "Specifies the command to be run when the swatch is clicked on. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "renderSize rs"
		fdesc "The render size of the swatch.  The value will be clamped between 32 and 512. "
	fnames "shadingNode sn"
		fdesc "Name of the shadingNode. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "widthHeight wh"
		fdesc "The width and height of the port. "
	rcount "0"
name "switchTable"
	desc "This command creates/edits/queries the switch table control."
	fcount "24"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label1 l1"
		fdesc "Set the label of the first column "
	fnames "label2 l2"
		fdesc "Set the label of the second column "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "selectedRow sr"
		fdesc "The current row selected. "
	fnames "switchNode sn"
		fdesc "The switch node to be displayed in the control. "
	fnames "underPointerRow upr"
		fdesc "The row under the pointer. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "symbolButton"
	desc "This command creates a symbol button. A symbol button behaves like a regular button, the only difference is a symbol button displays an image rather that a text label. A command may be attached to the button which will be executed when the button is pressed."
	fcount "21"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "command c"
		fdesc "Command executed when the symbol button is pressed. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "image i"
		fdesc "Image for the button. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "symbolCheckBox"
	desc "This command creates a symbol check box. A symbol check box is a simple control containing a pixmap and a state of either on or off. Commands can be attached to any or all of the following events: when the symbol check box is turned on, turned off, or simply when it's state is changed."
	fcount "29"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed when the symbol check box's state is changed. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "disableOffImage dfi"
		fdesc "Image displayed when the check box is off and disabled. "
	fnames "disableOnImage dni"
		fdesc "Image displayed when the check box is on and disabled. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "image i"
		fdesc "Image of the check box. "
	fnames "innerMargin im"
		fdesc "This flag will revert the symbolCheckBox to its pre Maya 2.5 behaviour of having a 2 pixel inner margin.  This flag is for backward compatibility on IRIX only, and may be removed in future releases. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "offCommand ofc"
		fdesc "Command executed when the symbol check box is turned off. "
	fnames "offImage ofi"
		fdesc "Image displayed when the check box is off. "
	fnames "onCommand onc"
		fdesc "Command executed when the symbol check box is turned on. "
	fnames "onImage oni"
		fdesc "Image displayed when the check box is on. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "value v"
		fdesc "Value of the check box. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "sysFile"
	desc "This command provides a system independent way to create a directory or to rename or delete a file."
	fcount "5"
	fnames "copy cp"
		fdesc "Copy the file to the name given by the newFileName paramter. "
	fnames "delete del"
		fdesc "Deletes the file. "
	fnames "makeDir md"
		fdesc "Create the directory path given in the parameter. This will create the entire path if more than one directory needs to be created. "
	fnames "move mov"
		fdesc "Behaves identically to the -rename flag and remains for compatibility with old scripts "
	fnames "rename ren"
		fdesc "Rename the file to the name given by the newFileName parameter. "
	rcount "1"
		rname "getFileList"
name "system"
	desc "The string argument is a command which gets executed from the shell. The output of the executed command is returned as a string. Note that the system command is system dependent, and will give different results on Windows than on a UNIX system. Special Notes: To run a command in the background on IRIX or Linux, you must redirect its output. e.g.: system("sleep 10 >/dev/null 2>&1 Naturally, you can send output to somewhere other than /dev/null if you like. To run a command in the background on Windows, use either the "start", "shell", or "load" command. The only difference between.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "tabLayout"
	desc "This command creates a tab group. Tab groups are a specialized form of control layouts that contain only control layouts. Whenever a control layout is added to a tab group it will have a tab provided for it that allows selection of that group from amongst other tabbed control groups. Only one child of a tab layout is visible at a time."
	fcount "40"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed when a tab is selected interactively. This command is only invoked when the selected tab changes. Re-selecting the current tab will not invoke this command.  Note that this command is not executed by using either of the  -st/selectTab  or  -sti/selectTabIndex  flags. "
	fnames "childArray ca"
		fdesc "Returns a string array of the names of the layout's  immediate children. "
	fnames "childResizable cr"
		fdesc "Set to true if you want the child of the control layout to be as wide as the scroll area.  You may also indicate a minimum width for the child using the  -mcw/minChildWidth  flag. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "doubleClickCommand dcc"
		fdesc "Command executed when a tab is double clicked on.  Note that the first click will select the tab and the second click will execute the double click command.  Double clicking the current tab will re-invoke the double click command. "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "horizontalScrollBarThickness hst"
		fdesc "Thickness of the horizontal scroll bar.  Specify an integer value greater than or equal to zero. This flag has  no effect on Windows systems. "
	fnames "image i"
		fdesc "Image appearing in top right corner of tab layout. "
	fnames "imageVisible iv"
		fdesc "Visibility of tab image. "
	fnames "innerMarginHeight imh"
		fdesc "Margin height for all tab children. "
	fnames "innerMarginWidth imw"
		fdesc "Margin width for all tab children. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "minChildWidth mcw"
		fdesc "Specify a positive non-zero integer value indicating the minimum width the tab layout's children.  This flag only has meaning when the  -cr/childResizable  flag is set to true. "
	fnames "moveTab mt"
		fdesc "Move the tab from the current index to a new index. "
	fnames "numberOfChildren nch"
		fdesc "Returns in an int the number of immediate children of the layout. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "preSelectCommand psc"
		fdesc "Command executed when a tab is selected but before it's contents become visible.  Re-selecting the current tab will not invoke this command.  Note that this command is not executed by using either of the  -st/selectTab or  -sti/selectTabIndex  flags. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "scrollable scr"
		fdesc "Puts all children of this layout within a scroll area. "
	fnames "selectCommand sc"
		fdesc "Command executed when a tab is selected interactively  This command will be invoked whenever a tab is selected, ie. re-selecting the current tab will invoke this command.  Note that this command is not executed by using either of the  -st/selectTab  or  -sti/selectTabIndex  flags. "
	fnames "selectTab st"
		fdesc "The name, in short form, of the selected tab.  An empty string is returned on query if there are no child tabs. "
	fnames "selectTabIndex sti"
		fdesc "Identical to the  -st/selectTab  flag except this flag takes a 1-based index to identify the selected tab.  A value of 0 is returned on query if there are not child tabs. "
	fnames "tabLabel tl"
		fdesc "Set a tab label.  The first argument is the name of a control that must be a child of the tab layout.  The second argument is the label for the tab associated with that child. If this flag is queried then the tab labels for all the children are returned. "
	fnames "tabLabelIndex tli"
		fdesc "Identical to the  -tl/tabLabel  flag except this flag takes a 1-based index to identify the tab you want to set the label for. If this flag is queried the tab labels for all the children are returned. "
	fnames "tabsVisible tv"
		fdesc "Visibility of the tab labels. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "verticalScrollBarThickness vst"
		fdesc "Thickness of the vertical scroll bar.  Specify an integer value greater than or equal to zero. This flag has no effect on Windows systems. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "tan"
	desc "Returns the tangent of the given value. Also available: atan : Returns the arc tangent in the range -PI/2 to PI/2. atan2(x,y) : Returns the arc tangent of y/x in the range -PI to PI. tanh : Hyperbolic function. atanh : Inverse hyperbolic function. tand : Returns value in degrees. atand : Returns value in degrees. atan2d : Returns value in degrees."
	fcount "0"
	rcount "0"
name "tangentConstraint"
	desc "Constrain an object's orientation based on the tangent of the target curve[s] at the closest point[s] to the object. A tangentConstraint takes as input one or more NURBS curves (the targets) and a DAG transform node (the object). The tangentConstraint orients the constrained object such that the aimVector (in the object's local coordinate system) aligns in world space to combined tangent vector. The upVector (again the the object's local coordinate system) is aligned in world space with the worldUpVector. The combined tangent vector is a weighted average of the tangent vector for each target curve at the point closest to.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "texManipContext"
	desc "Command used to register the texManipCtx tool."
	fcount "0"
	rcount "0"
name "texMoveContext"
	desc "This command can be used to create, edit, or query a texture editor move manip context. Note that the above flags control the global behaviour of all texture editor move manip contexts. Changing one context independently is not allowed. Changing a context's behaviour using the above flags, will change all existing texture editor move manip contexts."
	fcount "3"
	fnames "position p"
		fdesc "Returns the current position of the manipulator "
	fnames "snapComponentsRelative scr"
		fdesc "Value can be : true or false. If true, while snapping a group of UVs, the relative spacing between them will be preserved. If false, all the UVs will be snapped to the target point  "
	fnames "snapPixelMode spm"
		fdesc "set the snapping mode to be the pixel center or upper  left corner  "
	rcount "0"
name "texRotateContext"
	desc "This command can be used to create, edit, or query a rotate context for the UV Texture Editor. Note that the above flag controls the global behaviour of all texture editor rotate contexts. Changing one context independently is not allowed. Changing a context's behaviour using the above flag, will change all existing texture editor rotate contexts."
	fcount "1"
	fnames "position p"
		fdesc "Returns the current position of the manipulator "
	rcount "0"
name "texScaleContext"
	desc "This command can be used to create, edit, or query a scale context for the UV Texture Editor. Note that the above flag controls the global behaviour of all texture editor scale contexts. Changing one context independently is not allowed. Changing a context's behaviour using the above flag, will change all existing texture editor scale contexts."
	fcount "1"
	fnames "position p"
		fdesc "Returns the current position of the manipulator "
	rcount "0"
name "texSelectContext"
	desc "Command used to register the texSelectCtx tool."
	fcount "0"
	rcount "0"
name "texWinToolCtx"
	desc "No Description."
	fcount "3"
	fnames "boxzoom bz"
		fdesc "This class creates a context for the View Tools "track", "dolly", and "box zoom" in the texture window. "
	fnames "dolly do"
		fdesc "No Description"
	fnames "track tr"
		fdesc "No Description"
	rcount "0"
name "text"
	desc "Create a simple text label control."
	fcount "23"
	fnames "align al"
		fdesc "The label alignment.  Alignment values are "left", "right", and "center".  Note that the alignment will only be noticable if the control is wider than the label length. By default, the label is aligned "center". "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "font fn"
		fdesc "The font for the text.  Valid values are "boldLabelFont", "smallBoldLabelFont", "tinyBoldLabelFont", "plainLabelFont", "smallPlainLabelFont", "obliqueLabelFont", "smallObliqueLabelFont", "fixedWidthFont" and "smallFixedWidthFont". "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "The label text.  The default label is the name of the control. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "recomputeSize rs"
		fdesc "If true then the control will recompute it's size to just fit the size of the label.  If false then the control size will remain fixed as you change the size of the label.  The default value of this flag is true. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "textCurves"
	desc "The textCurves command creates NURBS curves from a text string using the specified font. A single letter can be made up of more than one NURBS curve. The number of curves per letter varies with the font."
	fcount "4"
	fnames "font f"
		fdesc "The font to use  "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result shapes, or just the dependency node  "
	fnames "text t"
		fdesc "The string to create the curves for  "
	rcount "0"
name "textField"
	desc "Create a text field control."
	fcount "28"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed when the text changes.  This command is not invoked when the value changes via the -tx/text flag. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "editable ed"
		fdesc "The edit state of the field.  By default, this flag is set to true and the field value may be changed by typing into it. If false then the field is 'read only' and can not be typed into. The text in the field can always be changed with the -tx/text flag regardless of the state of the -ed/editable flag. "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "enterCommand ec"
		fdesc "Command executed when the keypad 'Enter' key is pressed. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "fileName fi"
		fdesc "Text in the field as a filename. This does conversions between internal and external (UI) file representation. "
	fnames "font fn"
		fdesc "The font for the text.  Valid values are "boldLabelFont", "smallBoldLabelFont", "tinyBoldLabelFont", "plainLabelFont", "smallPlainLabelFont", "obliqueLabelFont", "smallObliqueLabelFont", "fixedWidthFont" and "smallFixedWidthFont". "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "insertText it"
		fdesc "Insert text into the field at the current insertion position (specified by the -ip/insertionPosition flag). "
	fnames "insertionPosition ip"
		fdesc "The insertion position for inserted text.  This is a 1 based value where position 1 specifies the beginning of the field.  Position 0 may be used to specify the end of the field. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "receiveFocusCommand rfc"
		fdesc "Command executed when the field receives focus. "
	fnames "text tx"
		fdesc "The field text. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "textFieldButtonGrp"
	desc "This command adds a button to the textFieldGrp command. All of the group commands position their individual controls in columns starting at column 1. The layout of each control (ie. column) can be customized using the -cw/columnWidth , -co/columnOffset , -cat/columnAttach , -cal/columnAlign , and -adj/adjustableColumn flags. By default, columns are left aligned with no offset and are 100 pixels wide. Only one column in any group can be adjustable."
	fcount "58"
	fnames "adjustableColumn adj"
		fdesc "Specifies which column has an adjustable size that changes with the sizing of the layout.  The column value is a 1-based index.  You may also specify 0 to turn off the previous adjustable column. "
	fnames "adjustableColumn2 ad2"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly two columns.  "
	fnames "adjustableColumn3 ad3"
		fdesc "Specifies that the column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly three columns.  "
	fnames "adjustableColumn4 ad4"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly four columns.  "
	fnames "adjustableColumn5 ad5"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly five columns.  "
	fnames "adjustableColumn6 ad6"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly six columns.  "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "buttonCommand bc"
		fdesc "Command attached to the button. "
	fnames "buttonLabel bl"
		fdesc "Label text of the button. "
	fnames "changeCommand cc"
		fdesc "Command executed when the field text changes. "
	fnames "columnAlign cal"
		fdesc "Arguments are : column number, alignment type. Possible alignments are: left | right | center.  Specifies alignment type for the specified column. "
	fnames "columnAlign2 cl2"
		fdesc "Sets the text alignment of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign3 cl3"
		fdesc "Sets the text alignment for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign4 cl4"
		fdesc "Sets the text alignment for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign5 cl5"
		fdesc "Sets the text alignment for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign6 cl6"
		fdesc "Sets the text alignment for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "center". "
	fnames "columnAttach cat"
		fdesc "Arguments are : column number, attachment type, and offset. Possible attachments are: left | right | both.  Specifies column attachment types and offets. "
	fnames "columnAttach2 ct2"
		fdesc "Sets the attachment type of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach3 ct3"
		fdesc "Sets the attachment type for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach4 ct4"
		fdesc "Sets the attachment type for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach5 ct5"
		fdesc "Sets the attachment type for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach6 ct6"
		fdesc "Sets the attachment type for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "both". "
	fnames "columnOffset2 co2"
		fdesc "This flag is used in conjunction with the -columnAttach2 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the two columns.  The offsets applied are based on the attachments  specified with the -columnAttach2 flag.  Ignored if there is not exactly two columns.  "
	fnames "columnOffset3 co3"
		fdesc "This flag is used in conjunction with the -columnAttach3 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the three columns.  The offsets applied are based on the attachments  specified with the -columnAttach3 flag.  Ignored if there is not exactly three columns.  "
	fnames "columnOffset4 co4"
		fdesc "This flag is used in conjunction with the -columnAttach4 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the four columns.  The offsets applied are based on the attachments  specified with the -columnAttach4 flag.  Ignored if there is not exactly four columns.  "
	fnames "columnOffset5 co5"
		fdesc "This flag is used in conjunction with the -columnAttach5 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the five columns.  The offsets applied are based on the attachments  specified with the -columnAttach5 flag.  Ignored if there is not exactly five columns.  "
	fnames "columnOffset6 co6"
		fdesc "This flag is used in conjunction with the -columnAttach6 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the six columns.  The offsets applied are based on the attachments  specified with the -columnAttach6 flag.  Ignored if there is not exactly six columns.  "
	fnames "columnWidth cw"
		fdesc "Arguments are : column number, column width. Sets the width of the specified column where the first parameter specifies the column (1 based index) and the second parameter specifies the width. "
	fnames "columnWidth1 cw1"
		fdesc "Sets the width of the first column.  Ignored if there is not  exactly one column. "
	fnames "columnWidth2 cw2"
		fdesc "Sets the column widths of both columns.  Ignored if there is not exactly two columns. "
	fnames "columnWidth3 cw3"
		fdesc "Sets the column widths for all 3 columns.  Ignored if there is not exactly 3 columns. "
	fnames "columnWidth4 cw4"
		fdesc "Sets the column widths for all 4 columns.  Ignored if there is not exactly 4 columns. "
	fnames "columnWidth5 cw5"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "columnWidth6 cw6"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "editable ed"
		fdesc "The edit state of the field.  By default, this flag is set to true and the field value may be changed by typing into it. If false then the field is 'read only' and can not be typed into. The text in the field can always be changed with the  -tx/text  flag regardless of the state of the  -ed/editable  flag. "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "enableButton eb"
		fdesc "Enable state of the button.  By default, this flag is set to true and the button is enabled.  Specify true, and the button will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "fileName fi"
		fdesc "Text in the field as a filename. This does conversions between internal and external (UI) file representation. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "Label text for the group. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rowAttach rat"
		fdesc "Arguments are : attachment type, offset. Possible attachments are: top | bottom | both.  Specifies attachment types  and offsets for the entire row.   "
	fnames "text tx"
		fdesc "Text in the field. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "textFieldGrp"
	desc "All of the group commands position their individual controls in columns starting at column 1. The layout of each control (ie. column) can be customized using the -cw/columnWidth , -co/columnOffset , -cat/columnAttach , -cal/columnAlign , and -adj/adjustableColumn flags. By default, columns are left aligned with no offset and are 100 pixels wide. Only one column in any group can be adjustable. This command creates a pre-packaged collection of label text and editable text field. The label text is optional."
	fcount "55"
	fnames "adjustableColumn adj"
		fdesc "Specifies which column has an adjustable size that changes with the sizing of the layout.  The column value is a 1-based index.  You may also specify 0 to turn off the previous adjustable column. "
	fnames "adjustableColumn2 ad2"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly two columns.  "
	fnames "adjustableColumn3 ad3"
		fdesc "Specifies that the column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly three columns.  "
	fnames "adjustableColumn4 ad4"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly four columns.  "
	fnames "adjustableColumn5 ad5"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly five columns.  "
	fnames "adjustableColumn6 ad6"
		fdesc "Specifies which column has an adjustable size that changes with the size of the parent layout. Ignored if there is not exactly six columns.  "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed when the field text changes. "
	fnames "columnAlign cal"
		fdesc "Arguments are : column number, alignment type. Possible alignments are: left | right | center.  Specifies alignment type for the specified column. "
	fnames "columnAlign2 cl2"
		fdesc "Sets the text alignment of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign3 cl3"
		fdesc "Sets the text alignment for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign4 cl4"
		fdesc "Sets the text alignment for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign5 cl5"
		fdesc "Sets the text alignment for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "center". "
	fnames "columnAlign6 cl6"
		fdesc "Sets the text alignment for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "center". "
	fnames "columnAttach cat"
		fdesc "Arguments are : column number, attachment type, and offset. Possible attachments are: left | right | both.  Specifies column attachment types and offets. "
	fnames "columnAttach2 ct2"
		fdesc "Sets the attachment type of both columns.  Ignored if there is not exactly two columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach3 ct3"
		fdesc "Sets the attachment type for all 3 columns.  Ignored if there is not exactly 3 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach4 ct4"
		fdesc "Sets the attachment type for all 4 columns.  Ignored if there is not exactly 4 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach5 ct5"
		fdesc "Sets the attachment type for all 5 columns.  Ignored if there is not exactly 5 columns. Valid values are "left", "right", and "both". "
	fnames "columnAttach6 ct6"
		fdesc "Sets the attachment type for all 6 columns.  Ignored if there is not exactly 6 columns. Valid values are "left", "right", and "both". "
	fnames "columnOffset2 co2"
		fdesc "This flag is used in conjunction with the -columnAttach2 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the two columns.  The offsets applied are based on the attachments  specified with the -columnAttach2 flag.  Ignored if there is not exactly two columns.  "
	fnames "columnOffset3 co3"
		fdesc "This flag is used in conjunction with the -columnAttach3 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the three columns.  The offsets applied are based on the attachments  specified with the -columnAttach3 flag.  Ignored if there is not exactly three columns.  "
	fnames "columnOffset4 co4"
		fdesc "This flag is used in conjunction with the -columnAttach4 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the four columns.  The offsets applied are based on the attachments  specified with the -columnAttach4 flag.  Ignored if there is not exactly four columns.  "
	fnames "columnOffset5 co5"
		fdesc "This flag is used in conjunction with the -columnAttach5 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the five columns.  The offsets applied are based on the attachments  specified with the -columnAttach5 flag.  Ignored if there is not exactly five columns.  "
	fnames "columnOffset6 co6"
		fdesc "This flag is used in conjunction with the -columnAttach6 flag.  If that flag is not used then this flag will be ignored.  It sets the offset for  the six columns.  The offsets applied are based on the attachments  specified with the -columnAttach6 flag.  Ignored if there is not exactly six columns.  "
	fnames "columnWidth cw"
		fdesc "Arguments are : column number, column width. Sets the width of the specified column where the first parameter specifies the column (1 based index) and the second parameter specifies the width. "
	fnames "columnWidth1 cw1"
		fdesc "Sets the width of the first column.  Ignored if there is not  exactly one column. "
	fnames "columnWidth2 cw2"
		fdesc "Sets the column widths of both columns.  Ignored if there is not exactly two columns. "
	fnames "columnWidth3 cw3"
		fdesc "Sets the column widths for all 3 columns.  Ignored if there is not exactly 3 columns. "
	fnames "columnWidth4 cw4"
		fdesc "Sets the column widths for all 4 columns.  Ignored if there is not exactly 4 columns. "
	fnames "columnWidth5 cw5"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "columnWidth6 cw6"
		fdesc "Sets the column widths for all 5 columns.  Ignored if there is not exactly 5 columns. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "editable ed"
		fdesc "The edit state of the field.  By default, this flag is set to true and the field value may be changed by typing into it. If false then the field is 'read only' and can not be typed into. The text in the field can always be changed with the  -tx/text  flag regardless of the state of the  -ed/editable  flag. "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "fileName fi"
		fdesc "Text in the field as a filename. This does conversions between internal and external (UI) file representation. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "label l"
		fdesc "Label text for the group. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "rowAttach rat"
		fdesc "Arguments are : attachment type, offset. Possible attachments are: top | bottom | both.  Specifies attachment types  and offsets for the entire row.   "
	fnames "text tx"
		fdesc "Text in the field. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "textScrollList"
	desc "This command creates/edits/queries a text scrolling list. The list can be in single select mode where only one item at at time is selected, or in multi-select mode where many items may be selected. Note: The -dgc/dragCallback flag works only on Windows."
	fcount "40"
	fnames "allItems ai"
		fdesc "All the items. "
	fnames "allowAutomaticSelection aas"
		fdesc "Specify automatic selection mode.  When automaticSelection is on each item that the mouse is over (during dragging once an item has been selected) will be selected.  Thus, if  -sc/selectCommand someCommand  is set,  someCommand will be called for each selected item. If  -aas/allowAutomaticSelection  is off, then only the item selected when the mouse button is up will be the selected item, so  -sc/selectCommand someCommand  is only called once if it is set.  "
	fnames "allowMultiSelection ams"
		fdesc "Specify multi or single selection mode. "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "append a"
		fdesc "Add an item to the end of the list. "
	fnames "appendPosition ap"
		fdesc "Append an item at the specified position. The position is a 1-based index. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "deleteKeyCommand dkc"
		fdesc "Specify the command to be executed when the delete or backspace key is pressed. "
	fnames "deselectAll da"
		fdesc "Deselect all items. "
	fnames "deselectIndexedItem dii"
		fdesc "Deselect the indexed item.  Indecies are 1-based. "
	fnames "deselectItem di"
		fdesc "Deselect the item that contains the specified text. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "doubleClickCommand dcc"
		fdesc "Specify the command to be executed when an item is double clicked. "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "font fn"
		fdesc "The font for the list items.  Valid values are "boldLabelFont", "smallBoldLabelFont", "tinyBoldLabelFont", "plainLabelFont", "smallPlainLabelFont", "obliqueLabelFont", "smallObliqueLabelFont", "fixedWidthFont" and "smallFixedWidthFont". "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfItems ni"
		fdesc "Number of items. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "numberOfRows nr"
		fdesc "Number of visible rows. "
	fnames "numberOfSelectedItems nsi"
		fdesc "Number of selected items. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "removeAll ra"
		fdesc "Remove all items. "
	fnames "removeIndexedItem rii"
		fdesc "Remove the indexed item. Indecies are 1-based. "
	fnames "removeItem ri"
		fdesc "Remove the item with the specified text. "
	fnames "selectCommand sc"
		fdesc "Specify the command to be executed when an item is selected. "
	fnames "selectIndexedItem sii"
		fdesc "Select the indexed item. Indecies are 1-based. "
	fnames "selectItem si"
		fdesc "Select the item that contains the specified text. "
	fnames "showIndexedItem shi"
		fdesc "Show the indexed item.  Scroll the list as necessary so that the indexed item is visible.  Indecies are 1-based. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "textToShelf"
	desc "Creates a shelf item on the currently active shelf that will execute the given MEL script."
	fcount "0"
	rcount "0"
name "textureDisplacePlane"
	desc "This mel procedure creates a poly plane with an expression to offset the uvs based on an input surface texture or oceanShader node. The input texture may be modified and the plane will interactively update. The generated expression provides an example of how one could use the colorAtPoint command to create a displacement mapping effect. Note that for preview uses the heightField node is more efficient for this general task, although it does not modify geometry that can be rendered or output. If one uses this for an ocean shader, the mapping is determined by the position of the plane,.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "texturePlacementContext"
	desc "Create a command for creating new texture placement contexts. By default label mapping is on when the context is created."
	fcount "1"
	fnames "labelMapping lm"
		fdesc "Set the context to label mapping. "
	rcount "0"
name "textureWindow"
	desc "This command is used to create a texture editor and to query or edit the texture editor settings. The texture editor displays texture mapped polygon objects in 2D texture space. Only active objects are visible in this window. The texture editor has the ability to display two types of images. The Texture Image is a visualisation of the current texture and associated placement parameters. The Editor Image is a user specified image loaded from disk. A texture editor can be invoked by selecting the "Windows -> Rendering Editors -> Texture View" menu item from the main maya menu listing that.... Refer to full documentation"
	fcount "67"
	fnames "changedCommand cc"
		fdesc "Call the command when something changes in the editor The command should have this prototype : command(string $editor, string $editorCmd, string $updateFunc, int $reason) The possible reasons could be : 0: no particular reason 1: scale color 2: buffer (single/double) 3: axis  4: image displayed 5: image saved in memory "
	fnames "clearImage ci"
		fdesc "Clears the current Editor Image "
	fnames "control ctl"
		fdesc "Query only. Returns the top level control for this editor. Usually used for getting a parent to attach popup menus. CAUTION: editors may not have controls at times.  This flag can return "NONE" if no control is present. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "displayAxes dax"
		fdesc "Specify true to display the grid axes. "
	fnames "displayDivisionLines ddl"
		fdesc "Specify true to display the subdivision lines between grid lines. "
	fnames "displayGridLines dgl"
		fdesc "Specify true to display the grid lines. "
	fnames "displayImage di"
		fdesc "Set a particular image in the Editor Image Stack as the current Editor Image. Images are added to the Editor Image Stack using the "si/saveImage" flag. "
	fnames "displayLabels dl"
		fdesc "Specify true to display the grid line numeric labels. "
	fnames "displayStyle dst"
		fdesc "Set how to display the image color is the basic image mask is display the mask channel lum display the luminance channel "
	fnames "divisions d"
		fdesc "Sets the number of subdivisions between main grid lines "
	fnames "docTag dtg"
		fdesc "Attaches a tag to the maya editor. "
	fnames "doubleBuffer dbf"
		fdesc "Set the display in double buffer mode "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "filter f"
		fdesc "Specifies the name of a filter to be placed on this editor. This filters the information coming onto the main list of the editor. "
	fnames "forceMainConnection fmc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. This is a variant of the -mainListConnection flag in that it will force a change even when the connection is locked. This flag is used to reduce the overhead when using the -unlockMainConnection , -mainListConnection, -lockMainConnection flags in immediate  succession. "
	fnames "forceRebake frb"
		fdesc "Forces the current cache texture to refresh.  "
	fnames "frameAll fa"
		fdesc "This will zoom on the whole scene. "
	fnames "frameSelected fs"
		fdesc "This will zoom on the currently selected objects. "
	fnames "highlightConnection hlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its highlight list.  Not all editors have a highlight list.  For those who do, it is sort of a secondary selection list. "
	fnames "imageDisplay id"
		fdesc "Turns on or off Texture Image display "
	fnames "imageNames imn"
		fdesc "The image names for all Texture Images available for display, if any. "
	fnames "imageNumber in"
		fdesc "Sets the number of the Texture Image to display This depends on the number of textures corresponding to the current selection. If there are N textures, then the possible Texture Image numbers are 0 to N-1. "
	fnames "imagePixelSnap ip"
		fdesc "Sets a mode so that uv transformations in the texture view will cause uv values to snap to image pixel corners. Which pixels are used depends on whether a Texture Image or an Editor Image is being displayed, if both are displayed the Texture Image pixels will be used.		 "
	fnames "imageRatio imr"
		fdesc "Sets the window to draw using the Texture Image's height versus width ratio. If the width is greater than the height than than the width is set to be 1 "unit" in the window and the height is adjusted by width divided by height. This only affects the display of a Texture Image, not an Editor Image. "
	fnames "imageSize is"
		fdesc "Returns the size of the Texture Image currently being display. The values returned are width followed by height. Image size can only be queried.		 "
	fnames "imageTileRange itr"
		fdesc "Sets the UV range of the display. The 4 values specify the  minimum U, V and maximum U, V in that order. When viewing a Texture Image, these values affect how many times the image is tiled based on appropriate parameters (e.g. Repeat UV, Mirror, Wrap, etc...) When viewing an Editor Image these values determine the visible size of the image. For example, setting the range to ( 0, 0, 2, 1 ) will cause the Editor Image to be loaded into a 2x1 rectangle, distorting it as necessary to fill the available space. "
	fnames "imageUnfiltered iuf"
		fdesc "Sets the Texture Image to draw unfiltered. The image will  appear "pixelated" when the display resolution is higher than the  resolution of the image. "
	fnames "internalFaces if"
		fdesc "Display contained faces by the selected components. "
	fnames "labelPosition lp"
		fdesc "The position of the grid's numeric labels. Valid values are "axis" and "edge". "
	fnames "loadImage li"
		fdesc "load an image from disk and set it as the current Editor Image "
	fnames "lockMainConnection lck"
		fdesc "Locks the current list of objects within the mainConnection, so that only those objects are displayed within the editor. Further changes to the original mainConnection are ignored. "
	fnames "mainListConnection mlc"
		fdesc "Specifies the name of a selectionConnection object which the editor will use as its source of content.  The editor will only display items contained in the selectionConnection object. "
	fnames "maxResolution mrs"
		fdesc "This flag will set the current cached texture's maximum resolution. "
	fnames "nbImages nim"
		fdesc "returns the number of images "
	fnames "numUvSets nuv"
		fdesc "This flag will return the number of uv sets for selected objects in the texture window.	 "
	fnames "numberOfImages ni"
		fdesc "The number of Texture Images currently available for display. "
	fnames "panel pnl"
		fdesc "Specifies the panel that the editor belongs to.  By default if an editor is created in the create callback of a scripted panel it will belong to that panel.  If an editor doesn't belong to a panel it will be deleted when the window that it is in is deleted. "
	fnames "parent p"
		fdesc "Specifies the parent layout for this editor. This flag will only have an effect if the editor is currently un-parented. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "realSize rs"
		fdesc "This will display the image with the size of the internal buffer. Note: This argument no long has any affect on image display. "
	fnames "relatedFaces rf"
		fdesc "Display connected faces by the selected components. "
	fnames "removeImage ri"
		fdesc "remove the current Editor Image from the Editor Image Stack "
	fnames "reset r"
		fdesc "Resets the ground plane to its default values. "
	fnames "saveImage si"
		fdesc "save the current Editor Image to memory. Saved Editor Images are stored in an Editor Image Stack. The most recently saved image is stored in position 0, the second most recently saved image in position 1, and so on... To set the current Editor Image to a previously saved  image use the "di/displayImage" flag. "
	fnames "scaleBlue sb"
		fdesc "Define the scaling factor for the blue component in the View. The default value is 1 and can be between -1000 to +1000 "
	fnames "scaleGreen sg"
		fdesc "Define the scaling factor for the green component in the View. The default value is 1 and can be between -1000 to +1000 "
	fnames "scaleRed sr"
		fdesc "Define the scaling factor for the red component in the View. The default value is 1 and can be between -1000 to +1000 "
	fnames "selectInternalFaces sif"
		fdesc "Add to selectionList the faces which are contained by  (internal to) selected components. "
	fnames "selectRelatedFaces srf"
		fdesc "Add to selectionList the faces which are connected to (non-internally related to) selected components. "
	fnames "selectionConnection slc"
		fdesc "Specifies the name of a selectionConnection object which the editor will synchronize with its own selection list.  As the user selects things in this editor, they will be selected in the selectionConnection object.  If someone else changes the object, the editor will update to show the change. "
	fnames "setUvSet suv"
		fdesc "This flag will set the current uv set on one given selected object within the texture window. "
	fnames "singleBuffer sbf"
		fdesc "Set the display in single buffer mode "
	fnames "size s"
		fdesc "Sets the size of the grid. "
	fnames "spacing sp"
		fdesc "Sets the spacing between main grid lines. "
	fnames "stateString sts"
		fdesc "Query only flag.  Returns the MEL command that will edit an editor to match the current editor state. The returned command string uses the string variable $editorName in place of a specific name. "
	fnames "style st"
		fdesc "This flag is obsolete and should not be used. "
	fnames "toggle tgl"
		fdesc "Turns the ground plane display on/off. "
	fnames "unParent up"
		fdesc "Specifies that the editor should be removed from its layout. This cannot be used with query. "
	fnames "unlockMainConnection ulk"
		fdesc "Unlocks the mainConnection, effectively restoring the original mainConnection (if it is still available), and dynamic updates. "
	fnames "updateMainConnection upd"
		fdesc "Causes a locked mainConnection to be updated from the orginal mainConnection, but preserves the lock state. "
	fnames "useFaceGroup uf"
		fdesc "Display faces that are associated with the groupId  that is set on the mesh node that is drawn. (The attribute "displayFacesWithGroupId") "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "uvSets uvs"
		fdesc "This flag will return strings containing  uv set and object name pairs for selected objects in the texture window. The syntax of each pair is "objectName | uvSetName", where | is a literal character. "
	fnames "veiwPortImage vpi"
		fdesc "Toggles the view port/ caching texture images. "
	fnames "writeImage wi"
		fdesc "write the current Editor Image to disk "
	rcount "0"
name "threePointArcCtx"
	desc "The threePointArcCtx command creates a new context for creating 3 point arcs."
	fcount "2"
	fnames "degree d"
		fdesc "No Description"
	fnames "spans s"
		fdesc "No Description"
	rcount "0"
name "timeControl"
	desc "This command creates a control that can be used for changing current time, displaying/editing keys, and displaying/scrubbing sound. Note : only one timeControl may be created. The one Maya creates on startup can be accessed from the global string variable $gPlayBackSlider. Also, it is not a good idea to delete it."
	fcount "37"
	fnames "animCurveNames acn"
		fdesc "When "showKeys" is not "none", querying this flag will return the names of all the animCurves for which keyframe ticks are being displayed.  Query returns string[]. "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "beginScrub bs"
		fdesc "Set this widget up for sound scrubbing. Subsequent changes to current time will result in "sound scrubbing" behavior, until the "-endScrub" command is issued for this widget. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "displaySound ds"
		fdesc "Turn sound display off.  Query returns int. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "endScrub es"
		fdesc "End sound scubbing for this widget.  This stops sound scrubbing behavior and should be issued before any subsequent "-beginScrub" flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "globalTime gt"
		fdesc ""true" means this widget controls and displays the global, dependency graph time.  "false" means time changes here do NOT affect the dependency graph. Query returns int. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "mainListConnection mlc"
		fdesc "Specifies the name of a selectionConnection object which the time slider will use as its source of content.  The time slider will only display keys for items contained in the selectionConnection object. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "pressCommand pc"
		fdesc "script to run on mouse-down in this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "range rng"
		fdesc "Returns string representing the currently highlighted range visible on the time slider.  A range from 10 to 20 would be returned as "10:20".  When there's no range visible on the time slider, the query returns a range  spanning the current time: for example, "10:11".  These values are in the current time unit. "
	fnames "rangeArray ra"
		fdesc "Returns a float array representing the currently highlighted range visible on the time slider.  A range from 10 to 20 would be returned as { 10.0, 20.0 }.  When there's no range visible on the time slider, the query returns values spanning the current time: { 10.0, 11.0 }.  These values are in the current time unit. "
	fnames "rangeVisible rv"
		fdesc "Returns true if a currently highlighted range is visible  on the time slider, false if no.	 "
	fnames "releaseCommand rc"
		fdesc "script to run on mouse-up in this control. "
	fnames "repeatChunkSize rcs"
		fdesc "How much sound (in the current time unit) is repeated when -repeatOnHold is true.  Default is 1.0. "
	fnames "repeatOnHold roh"
		fdesc "Repeat sound during mouse-down events "
	fnames "resample r"
		fdesc "Resample the sound display to fit the widget "
	fnames "showKeys sk"
		fdesc ""active" will show tick marks for keyframes on all active objects.  "none" shows no tick marks.  Any other name is  taken as the name of a channel box whose selected attributes will display tick marks.  Default "active".  Query returns string. "
	fnames "snap sn"
		fdesc ""true" means this widget is constrained to having values that are integers representing the current time unit..   "false" means the current time indicator is "free floating" and not constrained. "
	fnames "sound s"
		fdesc "Name of audio depend node whose data should display in the  sound-display widget. Query returns string. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "waveform wf"
		fdesc "Determines what part of the sound waveform to display,  when -displaySound is "true". Valid values are "top", "bottom",  and "both".  Default is "top". Query returns string. "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "timePort"
	desc "This command creates a simple time control widget. See also the "timeControl" command."
	fcount "21"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "globalTime gt"
		fdesc ""true" means this widget controls and displays the global, dependency graph time.  "false" means time changes here do NOT affect the dependency graph. Query returns int. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "snap sn"
		fdesc ""true" means this widget is constrained to having values that are integers representing the current time unit..   "false" means the current time indicator is "free floating" and not constrained. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "timerX"
	desc "Used to calculate elapsed time. This command returns sub-second accurate time values. It is useful from scripts for timing the length of operations. Call this command before and after the operation you wish to time. On the first call, do not use any flags. It will return the start time. Save this value. After the operation, call this command a second time, and pass the saved start time using the -st flag. The elapsed time will be returned."
	fcount "1"
	fnames "startTime st"
		fdesc "No Description"
	rcount "0"
name "toNativePath"
	desc "Convert from '/' to '\\' path formats on NT, otherwise does nothing. Use this proceedure to convert pathnames retrieved from Maya to more NT-like backslash-separated pathnames (note that most NT system calls do handle forward slashes as path-delimiters)."
	fcount "0"
	rcount "0"
name "toggle"
	desc "The toggle command is used to toggle the display of various object features for objects which have these components. For example, CV and edit point display may be toggled for those listed NURB curves or surfaces. Note: This command is not undoable."
	fcount "32"
	fnames "above a"
		fdesc "Toggle state for all objects above listed objects. "
	fnames "below b"
		fdesc "Toggle state for all objects below listed objects. "
	fnames "boundary bn"
		fdesc "Toggle boundary display of listed mesh objects. "
	fnames "controlVertex cv"
		fdesc "Toggle CV display of listed curves and surfaces. "
	fnames "curveEndPoints cep"
		fdesc "Toggle curve end point display of listed curves. "
	fnames "doNotWrite dnw"
		fdesc "Toggle the "this should be written to the file" state. "
	fnames "editPoint ep"
		fdesc "Toggle edit point display of listed curves and surfaces. "
	fnames "extent et"
		fdesc "Toggle display of extents of listed mesh objects. "
	fnames "facet f"
		fdesc "For use with -normal flag. Set the normal display style to facet display. "
	fnames "geometry g"
		fdesc "Toggle geometry display of listed objects. "
	fnames "global gl"
		fdesc "Toggle state for all objects "
	fnames "hull hl"
		fdesc "Toggle hull display of listed curves and surfaces. "
	fnames "latticePoint lp"
		fdesc "Toggle point display of listed lattices "
	fnames "latticeShape ls"
		fdesc "Toggle display of listed lattices "
	fnames "localAxis la"
		fdesc "Toggle local axis display of listed objects. "
	fnames "newCurve nc"
		fdesc "Set component display state of new curve objects "
	fnames "newPolymesh np"
		fdesc "Set component display state of new polymesh objects "
	fnames "newSurface ns"
		fdesc "Set component display state of new surface objects "
	fnames "normal nr"
		fdesc "Toggle display of normals of listed surface and mesh objects. "
	fnames "origin o"
		fdesc "Toggle origin display of listed surfaces. "
	fnames "point pt"
		fdesc "For use with -normal flag. Set the normal display style to vertex display. "
	fnames "pointDisplay pd"
		fdesc "Toggle point display of listed surfaces. "
	fnames "pointFacet pf"
		fdesc "For use with -normal flag. Set the normal display style to vertex and face display. "
	fnames "query q"
		fdesc "Query the toggle state on the selected object. "
	fnames "rotatePivot rp"
		fdesc "Toggle rotate pivot display of listed objects. "
	fnames "scalePivot sp"
		fdesc "Toggle scale pivot display of listed objects. "
	fnames "selectHandle sh"
		fdesc "Toggle select handle display of listed objects. "
	fnames "state st"
		fdesc "Explicitly set the state to true or false instead of toggling the state. Can not be queried. "
	fnames "surfaceFace sf"
		fdesc "Toggle surface face handle display of listed surfaces. "
	fnames "template te"
		fdesc "Toggle template state of listed objects "
	fnames "uvCoords uv"
		fdesc "Toggle display uv coords of listed mesh objects. "
	fnames "vertex vt"
		fdesc "Toggle vertex display of listed mesh objects. "
	rcount "13"
		rname "currentUnit"
		rname "displayPref"
		rname "hide"
		rname "displayAffected"
		rname "displayRGBColor"
		rname "refresh"
		rname "displayColor"
		rname "displaySmoothness"
		rname "showHidden"
		rname "displayCull"
		rname "displayStats"
		rname "displayLevelOfDetail"
		rname "displaySurface"
name "toggleAxis"
	desc "Toggles the axis display off and on at the origin of the ground plane and in the bottom left of each view. If no flags are specified, then both axes are toggled. (Obsolete) The display of the axis in the bottom left corner has been rendered obsolete to the headsUpDisplay command."
	fcount "2"
	fnames "origin o"
		fdesc "Turns display of the axis at the origin of the ground plane  on or off. "
	fnames "view v"
		fdesc "Turns display of the axis at the bottom left of each view on or off. (Obsolete - refer to the headsUpDisplay command) "
	rcount "0"
name "toggleWindowVisibility"
	desc "Toggle the visibility of a window. If no window is specified then the current window (most recently created) is used. See also the window command's -vis/visible flag."
	fcount "0"
	rcount "0"
name "tokenize"
	desc "This command will split the first string argument up according to split characters provided in the optional second argument. If this argument is not provided, tokenize will use a default split string consisting of whitespace characters. The input string is scanned for substrings (tokens) which are separated by any of the split characters. Note: tokenize does not match the entire split string; it matches any character in the string. The resulting token strings are put into the third argument which is a string array. The return value of this procedure is the number of tokens into which the original string.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "tokenizeList"
	desc "Takes a string $list representing a list of items. The items can be either whitespace- or comma-separated. The individual items in the list are returned as elements of the result array, stored in $tokenizedList."
	fcount "0"
	rcount "0"
name "tolerance"
	desc "This command sets tolerances used by modelling operations that require a tolerance, such as surface fillet. Linear tolerance is also known as "positional" tolerance. Angular tolerance is also known as "tangential" tolerance."
	fcount "2"
	fnames "angular a"
		fdesc "Sets the angular, or "tangential" tolerance. "
	fnames "linear l"
		fdesc "Sets the linear, or "positonal" tolerance. "
	rcount "0"
name "tolower"
	desc "Returns a string that is a duplicate of the string argument except that all upper case alphabetic characters are converted to lower case."
	fcount "0"
	rcount "0"
name "toolButton"
	desc "This command creates a toolButton that is added to the most recently created tool button collection unless the -cl/collection flag is used. It also attaches the named tool, activating it when this control is selected. By default, this control only handles one tool at a time. Using the -t/tool flag to associate a new tool will simply override the previous attached tool. If you use the -amt/allowMultipleTools flag then you will be able to attach more than one tool with this control. Only one tool will be current within the control. To access the other tools press the right mouse.... Refer to full documentation"
	fcount "38"
	fnames "allowMultipleTools amt"
		fdesc "Indicates whether this control will allow you to attach more than one tool.  By default, this control accepts only one tool. You can add multiple tools by setting this flag to  true . Only one tool will be current and displayed at any one time.   Use the pop up menu attached to the right mouse button to view all the tools. "
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "changeCommand cc"
		fdesc "Command executed when the control's state is changed. "
	fnames "collection cl"
		fdesc "To explicitly add a tool button to a tool collection. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "doubleClickCommand dcc"
		fdesc "Command executed when the control is double clicked. "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "iconOverlayLabel iol"
		fdesc "A short string (5 characters) label that will be displayed  on top of the icon. "
	fnames "image1 i1"
		fdesc "No Description"
	fnames "image2 i2"
		fdesc "No Description"
	fnames "image3 i3"
		fdesc "This control supports three images.  The image that best fits the current size of the control will be displayed.  This flag  applies the image to the current tool.   "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "offCommand ofc"
		fdesc "Command executed when the control is turned off. "
	fnames "onCommand onc"
		fdesc "Command executed when the control is turned on. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupIndicatorVisible piv"
		fdesc "Edit this flag to set the visibility of the popup tool indicator. The indicator is a simple image that appears in the top right corner of the button when more that one tool is associated with this control. This flag is queryable and true by default. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "select sl"
		fdesc "Will set this button as the selected one.  This flag also queries the select state of the control. "
	fnames "style st"
		fdesc "The draw style of the control.  Valid styles are "iconOnly", "textOnly", "iconAndTextHorizontal" and "iconAndTextVertical". "
	fnames "tool t"
		fdesc "The name of the tool to be attached to the button.  If the tool specified is already attached to this button then it will be selected.  Query this flag to return the current tool.  This flag may be specified more than once to attach more than one tool. "
	fnames "toolArray ta"
		fdesc "This query only flag returns the names of all the tools attached to the toolButton control. "
	fnames "toolCount tc"
		fdesc "This query only flag return the number of tools attached to the toolButton control. "
	fnames "toolImage11 ti1"
		fdesc "No Description"
	fnames "toolImage12 ti2"
		fdesc "No Description"
	fnames "toolImage13 ti3"
		fdesc "This control supports three images.  The image that best fits the current size of the control will be displayed.  This flag  applies the image to the specified tool.  The first argument is the name of the tool and the second is the name of the image.  When queried an array of tool icon pairs is returned. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "toolCollection"
	desc "This command creates a tool button collection. Collections are parented to the current default layout if no parent is specified with the -p/parent flag. As children of the layout they will be deleted when the layout is deleted. Collections may also span more than one window if the -gl/global flag is used. In this case the collection has no parent and must be explicitly deleted with the 'deleteUI' command when it is no longer wanted."
	fcount "10"
	fnames "collectionItemArray cia"
		fdesc "Returns a string list giving the long names of all the items in this collection. "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "global gl"
		fdesc "Set the collection to have no parent layout.  This flag must be specified when the collection is created and can not be queried or edited.  Consequently, global collections must be explicitly deleted. "
	fnames "numberOfCollectionItems nci"
		fdesc "Returns the number of items that are in this collection. "
	fnames "parent p"
		fdesc "Specify the parent to associate the collection with.  The collection will be deleted along with the parent.  This flag must be specified when the collection is created and can not be edited. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "select sl"
		fdesc "Select the specified collection item.  If queried will return the name of the currently selected collection item. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	rcount "0"
name "toolDropped"
	desc "This command builds and executes the commands necessary to recreate the specified tool button. It is invoked when a tool is dropped on the shelf."
	fcount "0"
	rcount "0"
name "toolHasOptions"
	desc "This command queries a tool to see if it has options. If it does, it returns true. Otherwise it returns false."
	fcount "0"
	rcount "0"
name "toolPropertyWindow"
	desc "End users should only call this command as 1. a query (in the custom tool property sheet code) or 2. with no arguments to create the default tool property sheet. The more complex uses of it are internal."
	fcount "11"
	fnames "edit e"
		fdesc "allows you to change the value of a flag. "
	fnames "field fld"
		fdesc "Sets/returns the name of the text field used to store the tool name in the property sheet. "
	fnames "helpButton hb"
		fdesc "Sets/returns the name of the button used to show help on the tool in the property sheet. "
	fnames "icon icn"
		fdesc "Sets/returns the name of the static picture object (used to display the tool icon in the property sheet). "
	fnames "inMainWindow imw"
		fdesc "Specify true if you want the tool settings to appear in the main window rather than a separate window. "
	fnames "location loc"
		fdesc "Sets/returns the location of the current tool property sheet, or an empty string if there is none. "
	fnames "noviceMode nm"
		fdesc "Sets/returns the 'novice mode' flag.(unused at the moment) "
	fnames "query q"
		fdesc "allows you to query the value of a flag. "
	fnames "resetButton rb"
		fdesc "Sets/returns the name of the button used to restore the tool settings in the property sheet. "
	fnames "selectCommand sel"
		fdesc "Sets/returns the property sheet's select command. "
	fnames "showCommand shw"
		fdesc "Sets/returns the property sheet's display command. "
	rcount "0"
name "torus"
	desc "The torus command creates a new torus and/or a dependency node that creates one, and returns their names."
	fcount "27"
	fnames "absoluteSweepDifference asd"
		fdesc "The difference of endSweep - startSweep "
	fnames "axis ax"
		fdesc "The primitive's axis "
	fnames "axisX axx"
		fdesc "X of the axis Default:  1 "
	fnames "axisY axy"
		fdesc "Y of the axis Default:  0 "
	fnames "axisZ axz"
		fdesc "Z of the axis Default:  0 "
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "degree d"
		fdesc "The degree of the resulting surface: 1 - linear, 3 - cubic Default:  3 "
	fnames "endSweep esw"
		fdesc "The angle at which to end the surface of revolution. Default is 2Pi radians, or 360 degrees. Default:  6.2831853 "
	fnames "heightRatio hr"
		fdesc "Ratio of "height" to "width" Default:  2.0 "
	fnames "minorSweep msw"
		fdesc "The sweep angle for the minor circle in the torus Default:  6.2831853 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "pivot p"
		fdesc "The primitive's pivot point "
	fnames "pivotX px"
		fdesc "X of the pivot Default:  0 "
	fnames "pivotY py"
		fdesc "Y of the pivot Default:  0 "
	fnames "pivotZ pz"
		fdesc "Z of the pivot Default:  0 "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "radius r"
		fdesc "The radius of the object Default:  1.0 "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "sections s"
		fdesc "The number of sections determines the resolution of the surface in the sweep direction. Used only if useTolerance is false. Default:  8 "
	fnames "spans nsp"
		fdesc "The number of spans determines the resolution of the surface in the opposite direction. Default:  1 "
	fnames "startSweep ssw"
		fdesc "The angle at which to start the surface of revolution Default:  0 "
	fnames "tolerance tol"
		fdesc "The tolerance with which to build the surface. Used only if useTolerance is true Default:  0.01 "
	fnames "useTolerance ut"
		fdesc "Use the specified tolerance to determine resolution. Otherwise number of sections will be used. Default:  false "
	rcount "5"
		rname "cone"
		rname "cylinder"
		rname "sphere"
		rname "nurbsPlane"
		rname "nurbsCube"
name "toupper"
	desc "Returns a string that is a duplicate of the string argument except that all upper case alphabetic characters are converted to upper case."
	fcount "0"
	rcount "0"
name "trace"
	desc "The trace command displays its string argument directly to standard output. It is intended to provide a mechanism for debugging Mel scripts."
	fcount "0"
	rcount "0"
name "track"
	desc "The track command translates a camera horizontally or vertically in the world space. The viewing-direction and up-direction of the camera are not altered. There is no translation in the viewing direction. The track command can be applied to either a perspective or an orthographic camera. When no camera name is supplied, this command is applied to the camera in the active view."
	fcount "4"
	fnames "down d"
		fdesc "Set the amount of down translation in unit distance. "
	fnames "left l"
		fdesc "Set the amount of left translation in unit distance. "
	fnames "right r"
		fdesc "Set the amount of right translation in unit distance. "
	fnames "up u"
		fdesc "Set the amount of up translation in unit distance. "
	rcount "15"
		rname "camera"
		rname "cameraView"
		rname "dolly"
		rname "listCameras"
		rname "lookThru"
		rname "orbit"
		rname "roll"
		rname "tumble"
		rname "viewCamera"
		rname "viewClipPlane"
		rname "viewFit"
		rname "viewHeadOn"
		rname "viewLookAt"
		rname "viewPlace"
		rname "viewSet"
name "trackCtx"
	desc "This command can be used to create a track context."
	fcount "3"
	fnames "alternateContext ac"
		fdesc "Set the ALT+MMB and ALT+SFT+MMB to refer to this context. "
	fnames "trackGeometry tg"
		fdesc "Toggle whether the drag should try to track geometry. The context will compute a track plane by intersecting the initial press with geometry or the live object. "
	fnames "trackScale ts"
		fdesc "Specify the distance to the track plane from the camera. The smaller the scale the slower the drag. "
	rcount "0"
name "transformLimits"
	desc "The transformLimits command allows us to set, edit, or query the limits of the transformation that can be applied to objects. We can also turn any limits off which may have been previously set. When an object is first created, all the transformation limits are off by default. Transformation limits allow us to control how much an object can be transformed. This is most useful for joints, although it can be used any place we would like to limit the movement of an object. Default values are: ( -1, 1) for translation, ( -1, 1) for scaling, and (-45,45) for.... Refer to full documentation"
	fcount "19"
	fnames "enableRotationX erx"
		fdesc "enable/disable the lower & upper x-rotation limits When queried, it returns  boolean boolean "
	fnames "enableRotationY ery"
		fdesc "enable/disable the lower & upper y-rotation limits When queried, it returns  boolean boolean "
	fnames "enableRotationZ erz"
		fdesc "enable/disable the lower & upper z-rotation limits When queried, it returns  boolean boolean "
	fnames "enableScaleX esx"
		fdesc "enable/disable the lower & upper x-scale limits When queried, it returns  boolean boolean "
	fnames "enableScaleY esy"
		fdesc "enable/disable the lower & upper y-scale limits When queried, it returns  boolean boolean "
	fnames "enableScaleZ esz"
		fdesc "enable/disable the lower & upper z-scale limits When queried, it returns  boolean boolean "
	fnames "enableTranslationX etx"
		fdesc "enable/disable the  ower & upper x-translation limits When queried, it returns  boolean boolean "
	fnames "enableTranslationY ety"
		fdesc "enable/disable the lower & upper y-translation limits When queried, it returns  boolean boolean "
	fnames "enableTranslationZ etz"
		fdesc "enable/disable the lower & upper z-translation limits When queried, it returns  boolean boolean "
	fnames "remove rm"
		fdesc "turn all the limits off and reset them to their default values "
	fnames "rotationX rx"
		fdesc "set the lower & upper x-rotation limits When queried, it returns  angle angle "
	fnames "rotationY ry"
		fdesc "set the lower & upper y-rotation limits When queried, it returns  angle angle "
	fnames "rotationZ rz"
		fdesc "set the lower & upper z-rotation limits When queried, it returns  angle angle "
	fnames "scaleX sx"
		fdesc "set the lower & upper x-scale limits When queried, it returns  float float "
	fnames "scaleY sy"
		fdesc "set the lower & upper y-scale limits When queried, it returns  float float "
	fnames "scaleZ sz"
		fdesc "set the lower & upper z-scale limits When queried, it returns  float float "
	fnames "translationX tx"
		fdesc "set the lower & upper x-translation limits When queried, it returns  linear linear "
	fnames "translationY ty"
		fdesc "set the lower & upper y-translation limits When queried, it returns  linear linear "
	fnames "translationZ tz"
		fdesc "set the lower & upper z-translation limits When queried, it returns  linear linear "
	rcount "0"
name "translator"
	desc "Set or query parameters associated with the file translators."
	fcount "8"
	fnames "defaultOptions do"
		fdesc "Return/set a string of default options used by this translator. "
	fnames "extension ext"
		fdesc "Returns the default file extension for this translator. "
	fnames "fileCompression cmp"
		fdesc "Specifies the compression action to take when a file is saved. Possible values are "compressed", "uncompressed" "asCompressed". "
	fnames "filter f"
		fdesc "Returns the filter string used for this translator. "
	fnames "list l"
		fdesc "Return a string array of all the translators that are loaded. "
	fnames "optionsScript os"
		fdesc "Query the name of the options script to use to post the user options UI. When this script is invoked it will expect the name of the parent layout in which the options will be displayed as well as the name of the callback to be invoked once the apply button has been depressed in the options area. "
	fnames "readSupport rs"
		fdesc "Returns true if this translator supports read operations. "
	fnames "writeSupport ws"
		fdesc "Returns true if this translator supports write operations. "
	rcount "1"
		rname "workspace"
name "trim"
	desc "This command trims a surface to its curves on surface by first splitting the surface and then selecting which regions to keep or discard."
	fcount "15"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "locatorU lu"
		fdesc "u parameter value to position a locator on the surface. Default:  0.5 "
	fnames "locatorV lv"
		fdesc "v parameter value to position a locator on the surface. Default:  0.5 "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "selected sl"
		fdesc "Specify whether to keep or discard selected regions. Default:  0 "
	fnames "shouldBeLast sbl"
		fdesc "If true, then deformers will let this trim node be last Default:  true "
	fnames "shrink sh"
		fdesc "If true, shrink underlying surface to outer boundaries of trimmed surface. Default:  false "
	fnames "tolerance tol"
		fdesc "The tolerance with which to trim. Default:  0.001 "
	fnames "usedCurves uc"
		fdesc "Flag each curve as used or not used in trimming. "
	rcount "3"
		rname "projectCurve"
		rname "intersect"
		rname "untrim"
name "trunc"
	desc "Returns the largest whole value that is not greater than the argument."
	fcount "0"
	rcount "0"
name "truncateFluidCache"
	desc "TruncateFluidCache is undoable , queryable , and editable . This command sets the end time of a fluid cache to the current time. If the current time is less than the end time of the cache, the cache is truncated so that only the portion of the cache up to and including the current time is preserved."
	fcount "0"
	rcount "0"
name "truncateHairCache"
	desc "TruncateHairCache is undoable , queryable , and editable . This command sets the end time of a hair cache to the current time. If the current time is less than the end time of the cache, the cache is truncated so that only the portion of the cache up to and including the current time is preserved."
	fcount "0"
	rcount "0"
name "tumble"
	desc "The tumble command revolves the camera(s) by varying the azimuth and elevation angles in the perspective window. When both the azimuth and the elevation angles are supplied on the command line, the camera is firstly tumbled for the azimuth angle, then tumbled for the elevation angle. When no camera name is supplied, this command is applied to the camera in the active view. The camera's rotate pivot will override a specifed pivot point if the rotate pivot is not at the camera's eye point."
	fcount "4"
	fnames "azimuthAngle aa"
		fdesc "Degrees to change the azimuth angle. "
	fnames "elevationAngle ea"
		fdesc "Degrees to change the elevation angle. "
	fnames "pivotPoint pp"
		fdesc "Three dimensional point used as the pivot point in the world space. "
	fnames "rotationAngles ra"
		fdesc "Two values in degrees to change the azimuth and elevation angles. "
	rcount "15"
		rname "camera"
		rname "cameraView"
		rname "dolly"
		rname "listCameras"
		rname "lookThru"
		rname "orbit"
		rname "roll"
		rname "track"
		rname "viewCamera"
		rname "viewClipPlane"
		rname "viewFit"
		rname "viewHeadOn"
		rname "viewLookAt"
		rname "viewPlace"
		rname "viewSet"
name "tumbleCtx"
	desc "This command can be used to create, edit, or query a tumble context."
	fcount "6"
	fnames "alternateContext ac"
		fdesc "Set the ALT+LMB and ALT+SFT+LMB to refer to this context. "
	fnames "autoOrthoConstrain aoc"
		fdesc "Automatically constrain horizontal and vertical rotations when the camera is orthographic. The shift key can be used to unconstrain the rotation. "
	fnames "localTumble lt"
		fdesc "The camera will tumble around its center of interest if on, and its tumble pivot if off. "
	fnames "orthoLock ol"
		fdesc "Orthographic cameras cannot be tumbled while orthoLock is on. "
	fnames "orthoStep os"
		fdesc "Specify the angular step in degrees for orthographic rotation. If camera is orthographic and autoOrthoConstrain is toggled on the rotation will be stepped by this amount. "
	fnames "tumbleScale ts"
		fdesc "Set the rotation speed. A tumble scale of 1.0 will result in in 40 degrees of rotation per 100 pixels of cursor drag. "
	rcount "0"
name "turbulence"
	desc "A turbulence field causes irregularities (also called 'noise' or 'jitter') in the motion of affected objects. Use connectDynamic to cause the field to affect a dynamic object. If fields are created, this command returns the names of each of the fields. If a field was queried, the results of the query are returned. If a field was edited, the field name is returned. If object names are provided or the active selection list is non-empty, the command creates a field for every object in the list and calls addDynamic to add it to the object. If the list is empty,.... Refer to full documentation"
	fcount "13"
	fnames "attenuation att"
		fdesc "Attentuation rate of field  "
	fnames "frequency f"
		fdesc "Frequency of turbulence field. This determines how often  motion is disrupted.  "
	fnames "magnitude m"
		fdesc "Strength of field. As this increases, the affected  objects will move faster.  "
	fnames "maxDistance mxd"
		fdesc "Maximum distance at which field is exerted.  "
	fnames "name n"
		fdesc "name of field  "
	fnames "noiseLevel nsl"
		fdesc "If the noiseLevel parameter is greater than zero, the field  will do multiple lookups in the table.  Each additional lookup is weighted using noiseRatio (which see).  The noiseLevel is the number of additional lookups, so if noiseLevel is 0, there is just one lookup.  A value of 0 (the default) corresponds to the way the field behaved prior to Maya 3.0. "
	fnames "noiseRatio nsr"
		fdesc "If noiseLevel is greater than zero, then noiseRatio is the relative magnitude for each consecutive noise evaluation. These are cumulative: for example, if noiseRatio is 0.5, then the first evaluation is weighted 0.5, the second 0.25, and so on. Has no effect if noiseLevel is zero. "
	fnames "perVertex pv"
		fdesc "Per-vertex application. If this flag is set true, then each  individual point (CV, particle, vertex,etc.) of the chosen object  exerts an identical copy of the force field. If this flag is set to  false, then the force is exerted only from the geometric center of the set of points.  "
	fnames "phase p"
		fdesc "Phase shift of turbulence field. This influences the direction  of the disruption.  This flag is obsolete and is retained only for backward compatibility.  It is replaced by -phaseX, -phaseY, and -phaseZ.  Setting -phase is identical to setting -phaseZ (the phase shift was always in the Z dimension). "
	fnames "phaseX px"
		fdesc "X component of phase shift of turbulence field. This influences  the direction of the disruption.  "
	fnames "phaseY py"
		fdesc "Y component of phase shift of turbulence field. This influences  the direction of the disruption.  "
	fnames "phaseZ pz"
		fdesc "Z component of phase shift of turbulence field. This influences  the direction of the disruption.  "
	fnames "position pos"
		fdesc "Position in space where you want to place a field. The field then emanates from this position in space rather  than from an object. Note that you can both use -pos  (creating a field at a position) and also provide object names.  "
	rcount "0"
name "twoPointArcCtx"
	desc "The twoPointArcCtx command creates a new context for creating two point circular arcs."
	fcount "2"
	fnames "degree d"
		fdesc "No Description"
	fnames "spans s"
		fdesc "No Description"
	rcount "0"
name "uiTemplate"
	desc "This command creates a new command template object. Template objects can hold default flag arguments for multiple UI commands. The command arguments are specified with the individual commands using the -defineTemplate flag and the desired flags and arguments. See also setUITemplate ."
	fcount "1"
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified uiTemplate exists.  Other flags are ignored. "
	rcount "0"
name "unassignInputDevice"
	desc "This command deletes all command strings associated with this device."
	fcount "2"
	fnames "clutch c"
		fdesc "No Description"
	fnames "device d"
		fdesc "No Description"
	rcount "13"
		rname "assignInputDevice"
		rname "getModifiers"
		rname "recordAttr"
		rname "attachDeviceAttr"
		rname "listDeviceAttachments"
		rname "setAttrMapping"
		rname "detachDeviceAttr"
		rname "listInputDeviceAxes"
		rname "setInputDeviceMapping"
		rname "devicePanel"
		rname "listInputDeviceButtons"
		rname "getInputDeviceRange"
		rname "listInputDevices"
name "undo"
	desc "Takes the most recent command from the undo list and undoes it."
	fcount "0"
	rcount "0"
name "undoInfo"
	desc "This command controls the undo/redo parameters."
	fcount "9"
	fnames "infinity in"
		fdesc "Set the queue length to infinity. "
	fnames "length l"
		fdesc "Specifies the number of items in the undo queue.  The infinity flag overrides this one. "
	fnames "query q"
		fdesc "Allows you to query one of the above values. "
	fnames "redoName rn"
		fdesc "Returns what will be redone (if anything) "
	fnames "redoQueueEmpty rqe"
		fdesc "Return true if the redo queue is empty. Return false if there is at least one command in the queue to be redone. "
	fnames "state st"
		fdesc "Turns undo/redo on or off. "
	fnames "stateWithoutFlush swf"
		fdesc "Turns undo/redo on or off without flushing the queue. "
	fnames "undoName un"
		fdesc "Returns what will be undone (if anything) "
	fnames "undoQueueEmpty uqe"
		fdesc "Return true if the undo queue is empty. Return false if there is at least one command in the queue to be undone. "
	rcount "3"
		rname "undo"
		rname "redo"
		rname "flushUndo"
name "ungroup"
	desc "This command ungroups the specified objects. The objects will be placed at the same level in the hierarchy the group node occupied unless the -w flag is specified, in which case they will be placed under the world. If an object is ungrouped and there is an object in the new group with the same name then this command will rename the ungrouped object. See also: group, parent, instance, duplicate."
	fcount "4"
	fnames "absolute a"
		fdesc "preserve existing world object transformations (overall object transformation is preserved by modifying the objects local transformation) [default] "
	fnames "parent p"
		fdesc "put the ungrouped objects under the given parent "
	fnames "relative r"
		fdesc "preserve existing local object transformations (don't modify local transformation) "
	fnames "world w"
		fdesc "put the ungrouped objects under the world "
	rcount "0"
name "uniform"
	desc "A uniform field pushes objects in a fixed direction. The field strength, but not the field direction, depends on the distance from the object to the field location. The transform is the associated dependency node. Use connectDynamic to cause the field to affect a dynamic object. If fields are created, this command returns the names of each of the fields. If a field was queried, the results of the query are returned. If a field was edited, the field name is returned. If object names are provided or the active selection list is non-empty, the command creates a field for.... Refer to full documentation"
	fcount "9"
	fnames "attenuation att"
		fdesc "Attentuation rate of field  "
	fnames "directionX dx"
		fdesc "X-component of direction. "
	fnames "directionY dy"
		fdesc "Y-component of direction. "
	fnames "directionZ dz"
		fdesc "Z-component of direction  "
	fnames "magnitude m"
		fdesc "Strength of field.  "
	fnames "maxDistance mxd"
		fdesc "Maximum distance at which field is exerted.  -1 indicates that the field has no maximum distance.  "
	fnames "name n"
		fdesc "name of field  "
	fnames "perVertex pv"
		fdesc "Per-vertex application. If this flag is set true, then each  individual point (CV, particle, vertex,etc.) of the chosen object  exerts an identical copy of the force field. If this flag is set to  false, then the force is exerted only from the geometric center of the set of points.  "
	fnames "position pos"
		fdesc "Position in space where you want to place a field. The gravity then emanates from this position in space rather  than from an object. Note that you can both use -pos  (creating a field at a position) and also provide object names.  "
	rcount "0"
name "unit"
	desc "This command returns the normalized vector -- a vector pointing in the same direction as the argument but with a length of one."
	fcount "0"
	rcount "0"
name "unloadPlugin"
	desc "Unload plug-ins from Maya. After the successful execution of this command, plug-in services will no longer be available."
	fcount "3"
	fnames "addCallback ac"
		fdesc "Add a procedure to be called just before a plugin is  unloaded. The procedure should have the following signature:  global proc procedureName(string $pluginName). "
	fnames "force f"
		fdesc "Unload the plugin even if it is providing services.  This is not recommended.  If you unload a plug-in that implements a node or data type in the scene, those instances will be converted to unknown nodes or data and the scene will no longer behave properly.  It will, however, still save properly. "
	fnames "removeCallback rc"
		fdesc "Remove a procedure which was previously added  with -addCallback. "
	rcount "3"
		rname "loadPlugin"
		rname "pluginInfo"
		rname "openMayaPref"
name "untangleUV"
	desc "UntangleUV is undoable , NOT queryable , and NOT editable . This command will aid in the creation of non-overlapping regions (i.e. polygons) in texture space by untangling texture UVs. This is done in two stages: 1) Use this command to map the UV border determined by the current selection or passed component into a shape that is more suitable for subsequent relaxation. 2) Relax all the internal texture UVs by performing a length minimization algorithm on all edges in texture space."
	fcount "8"
	fnames "mapBorder mb"
		fdesc "Map the border containing the selected UV into a variety of shapes that may be more amenable to UV relaxation operations. There are various types of mapping available. All the resulting mappings are fit inside the unit square. Valid values for the STRING are: circular  - a circular mapping with picked UV closest to (0,0) square  - map to unit square with picked UV at (0,0) shape  - a mapping which attempts to reflect the actual shape of the object where the picked UV is placed on the line from (0,0) -> (0.5,0.5) shape_circular  - shape mapping which will interpolate to a circular mapping just enough to prevent self-intersections of the mapped border  shape_square  - shape mapping which will interpolate to a square mapping just enough to prevent self-intersections of the mapped border  "
	fnames "maxRelaxIterations mri"
		fdesc "The relaxation process is an iterative algorithm. Using this flag will put an upper limit on the number of iterations that will be performed. "
	fnames "pinBorder pb"
		fdesc "If this is true, then the relevant texture borders are pinned in place during any relaxation "
	fnames "pinSelected ps"
		fdesc "If this is true, then then any selected UVs are pinned in place during any relaxation "
	fnames "pinUnselected pu"
		fdesc "If this is true, then all unselected UVs in each mesh are pinned in place during any relaxation "
	fnames "relax r"
		fdesc "Relax all UVs in the shell of the selected UV's. The relaxation is done by simulating a spring system where each UV edge is treated as a spring. There are a number of different methods characterized by the way the UV edges are weighted in the spring system. These weightings are determined by STRING. Valid values for STRING are: uniform  - every edge is weighted the same. This is the fastest method. inverse_length  - every edge weight is inversely proportional to it's world space length. inverse_sqrt_length  - every edge weight is inversely proportional the the square root of it's world space length. harmonic  - this weighting can yield near optimal results in matching the UV's with the geometry, but can also take a long time. "
	fnames "relaxTolerance rt"
		fdesc "This sets the tolerance which is used to determine when the relaxation process can stop. Smaller tolerances yield better results but can take much longer. "
	fnames "shapeDetail sd"
		fdesc "If the mapBorder flag is set to circular or square, then this flag will control how much of the border's corresponding surface shape should be retained in the final mapped border. "
	rcount "13"
		rname "polyProjection"
		rname "polyForceUV"
		rname "polyEditUV"
		rname "polyPlanarProjection"
		rname "polyCylindricalProjection"
		rname "polyClipboard"
		rname "polySphericalProjection"
		rname "polyMoveFacetUV"
		rname "polyMoveUV"
		rname "polyMapCut"
		rname "polyMapDel"
		rname "polyMapSew"
		rname "polyUVSet"
name "untrim"
	desc "Untrim the surface."
	fcount "9"
	fnames "constructionHistory ch"
		fdesc "Turn the construction history on or off (not available in all commands) "
	fnames "curveOnSurface cos"
		fdesc "If possible, create 2D curve as a result (not available in all commands) "
	fnames "name n"
		fdesc "Name the resulting object "
	fnames "object o"
		fdesc "Create the result, or just the dependency node (not available in all commands) "
	fnames "polygon po"
		fdesc "The value of this argument controls the type of the object created by this operation (not available in all commands) - 0: nurbs surface - 1: polygon (use nurbsToPolygonsPref to set the parameters for the conversion) - 2: subdivision surface (use nurbsToSubdivPref to set the parameters for the conversion) - 3: Bezier surface - 4: subdivision surface solid (use nurbsToSubdivPref to set the parameters for the conversion) "
	fnames "range rn"
		fdesc "Force a curve range on complete input curve (not available in all commands) "
	fnames "rebuild rb"
		fdesc "Rebuild the input curve(s) before using them in the operation.  Use nurbsCurveRebuildPref to set the parameters for the conversion. (not available in all commands) "
	fnames "replaceOriginal rpo"
		fdesc "Create "in place" (i.e., replace) (not available in all commands) "
	fnames "untrimAll all"
		fdesc "if true, untrim all the trims for the surface else untrim only the last trim "
	rcount "3"
		rname "projectCurve"
		rname "intersect"
		rname "trim"
name "upAxis"
	desc "The upAxis command changes the world up direction. Current implementation provides only two choices of axis (the Y-axis or the Z-axis) as the world up direction. By default, the ground plane in Maya is on the XY plane. Hence, the default up-direction is the direction of the positive Z-axis. The -ax flag is mandatory. In conjunction with the -ax flag, when the -rv flag is specified, the camera of currently active view is revolved about the X-axis such that the position of the groundplane in the view will remain the same as before the the up direction is changed. The.... Refer to full documentation"
	fcount "2"
	fnames "axis ax"
		fdesc "This flag specifies the axis as the world up direction. The valid axis are either "y" or "z". When queried, it returns a  string . "
	fnames "rotateView rv"
		fdesc "This flag specifies to rotate the view as well. "
	rcount "0"
name "updateAE"
	desc "Displays the information for the named node in the attribute editor."
	fcount "0"
	rcount "0"
name "userCtx"
	desc "OBSOLETE: Use scriptCtx instead. This command allows a user to create their own tools based on the selection tool. This context will handle selection and the user supplied commands to be run when the tab or spacebar keys are pressed. The command is processed prior to being executed. The keyword "$Selection#" where # is a number 1 or greater specifies a selection set. The context can specify several selection sets which are substituted in place of the $Selection# keyword in the form of a Mel string array. Each selection set must have a selection prompt (set using the -sp flag).... Refer to full documentation"
	fcount "8"
	fnames "editCommand ec"
		fdesc "Supply the script that will be run when the user presses the tab and the context enters edit mode. "
	fnames "editPrompt ep"
		fdesc "Supply a string that will be shown as help when in edit mode. Flags for each selection set.  These flags are multi-use. "
	fnames "finalCommand fc"
		fdesc "Supply the script that will be run when the user presses the spacebar and the context is completed. "
	fnames "noSelectionPrompt nsp"
		fdesc "Supply a string that will be shown as help when there is nothing selected.  This must be set separately for each selection set.  The number refers to which selection set. "
	fnames "selectionCount sc"
		fdesc "The second number is the maximum number of items in this selection set. "
	fnames "selectionFlag flg"
		fdesc "The flag to prepend to each item in this selection list for the final command.  The number refers to which selection set. "
	fnames "selectionMask sm"
		fdesc "Specify the selection mask for this selection set. The number refers to which selection set. "
	fnames "selectionPrompt sp"
		fdesc "Supply a string that will be shown as help when there is something selected.  This must be set separately for each selection set. "
	rcount "0"
name "uvLink"
	desc "This command is used to make, break and query UV linking relationships between UV sets on objects and textures that use those UV sets. If no make, break or query flag is specified and both uvSet and texture flags are present, the make flag is assumed to be specified. If no make, break or query flag is specified and only one of the uvSet and texture flags is present, the query flag is assumed to be specified. The term "texture" in the context of UV linking is a bit of an oversimplification. In fact, UV sets can be linked to.... Refer to full documentation"
	fcount "7"
	fnames "break b"
		fdesc "The presence of this flag on the command indicates that the command is being invoked to break links between UV sets and textures. "
	fnames "isValid iv"
		fdesc "This flag is used to verify whether or not a texture or UV set is valid for the purposes of UV linking. It should be used in conjunction with either the -texture flag or the -uvSet flag, but not both at the same time. "
	fnames "make m"
		fdesc "The presence of this flag on the command indicates that the command is being invoked to make links between UV sets and textures. "
	fnames "query q"
		fdesc "The presence of this flag on the command indicates that the command is being invoked to query the current status of  UV sets and textures with respect to UV linking. "
	fnames "queryObject qo"
		fdesc "This flag should only be used in conjunction with a query of a texture. This flag is used to indicate that the results of the query should be limited to UV sets of the object specified by this flag. "
	fnames "texture t"
		fdesc "The argument to the texture flag specifies the texture to be used by the command in performing the action. "
	fnames "uvSet uvs"
		fdesc "The argument to the uvSet flag specifies the UV set to be used by  the command in performing the action. "
	rcount "0"
name "uvSnapshot"
	desc "UvSnapshot is NOT undoable , NOT queryable , and NOT editable . Builds an image containg the UVs of the selected objects."
	fcount "11"
	fnames "antiAliased aa"
		fdesc "When this flag is set, lines are antialiased. "
	fnames "blueColor b"
		fdesc "Blue component of line drawing. Default is 255. "
	fnames "entireUVRange euv"
		fdesc "When this flag is set, the generated image will contain the entire uv range. Default is uv in 0-1 range. "
	fnames "fileFormat ff"
		fdesc "Output file format. Any of those keyword: "iff", "sgi", "pic", "tif", "als", "gif", "rla", "jpg" Default is iff. "
	fnames "greenColor g"
		fdesc "Green component of line drawing. Default is 255. "
	fnames "name n"
		fdesc "Name of the file to be created. "
	fnames "overwrite o"
		fdesc "When this flag is set, existing file can be ovewritten. "
	fnames "redColor r"
		fdesc "Red component of line drawing. Default is 255. "
	fnames "uvSetName uvs"
		fdesc "Name of the uv set to use. Default is the current one. "
	fnames "xResolution xr"
		fdesc "Horizontal size of the image. Default is 512. "
	fnames "yResolution yr"
		fdesc "Vertical size of the image. Default is 512. "
	rcount "1"
		rname "move"
name "validateShelfName"
	desc "This script is called to make verify that a potential name for a shelf tab is valid."
	fcount "0"
	rcount "0"
name "vectorize"
	desc "Vectorize is NOT undoable , NOT queryable , and NOT editable . This command renders Maya scenes to various vector and raster formats using the Maya Vector renderer."
	fcount "35"
	fnames "browserView bv"
		fdesc "Specifies whether to preview the render in the browser.  This option is swf only. "
	fnames "byFrame bf"
		fdesc "Specifies the frame increment. "
	fnames "camera c"
		fdesc "Specifies the camera to render. "
	fnames "combineFillsEdges cfe"
		fdesc "Specifies whether fills and edges should be combined as a single object in Flash.  This option is swf only. "
	fnames "currentFrame cf"
		fdesc "Specifies whether to render the current frame only. "
	fnames "curveTolerance ct"
		fdesc "Specifies the curve tolerance.  Valid values are in the range: 0.0 to 10.0.  The curve tolerance determines how aggressively the renderer tries to fit a series of connected, consecutive line segments to a curve. A value of 0.0 causes all line segments to be drawn without curve fitting.  A value of 10.0 causes aggressive curve fitting. "
	fnames "customExtension ce"
		fdesc "Specifies a custom extension to use for the filename. Any non-empty string is valid. "
	fnames "detailLevel dl"
		fdesc "Specifies the detail level.  Valid values are:  0 to 50.  The smaller the value, the more polygons may be combined to produce smaller files.  A higher value results in a more accurate render, but also larger files and longer render times. "
	fnames "edgeColor ec"
		fdesc "Specifies the red, green, and blue components of the edge color.  Valid values are: 0 to 255 for each color component. "
	fnames "edgeDetail ed"
		fdesc "Specifies whether edge detail should be rendered; ie. edges that have an angle between the face normals of any two adjacent polygons sharing an edge that is greater than the minimum edge angle (specified by the -mea flag). "
	fnames "edgeStyle es"
		fdesc "Specifies the edge style.  Valid values are:  "Outline", "EntireMesh", "None". "
	fnames "edgeWeight ew"
		fdesc "Specifies the edge weight to be used for all edges in points.  There are 72 points per inch.  A value of 0.0 specifies hairline edge weight. "
	fnames "endFrame ef"
		fdesc "Specifies the end frame. "
	fnames "filenameFormat ff"
		fdesc "Specifies the file name format.  Valid values are:  "name", "name.ext", "name.#.ext", "name.ext.#", "name.#", "name#.ext". "
	fnames "fillStyle fs"
		fdesc "Specifies the fill style.  Valid values are:  "SingleColor", "TwoColor", "FourColor", "FullColor", "AverageColor", "AreaGradient", "MeshGradient", "None".  AreaGradient and MeshGradient are not available for the eps and ai image formats. "
	fnames "flashVersion fv"
		fdesc "Specifies the Flash version of the swf output.  Valid values are:  3, 4, 5.  This option is swf only. "
	fnames "frameRate fr"
		fdesc "Specifies the frame rate.  This option is for svg and swf only. "
	fnames "height h"
		fdesc "Specifies the height of the output image in pixels. "
	fnames "hiddenEdges he"
		fdesc "Specifies whether hidden edges should be rendered; ie. edges that have are not visible from the camera. "
	fnames "highlightLevel hl"
		fdesc "Specifies the highlight level.  Valid values are:  1 to 8.  The value specifies how many concentric rings will be used to render an object's highlight.  This option is for the SingleColor, AverageColor, and AreaGradient fill styles only. "
	fnames "highlights hi"
		fdesc "Specifies whether highlights should be rendered.  This option has no effect for ai, eps, and svg.  This option is for the SingleColor, AverageColor, and AreaGradient fill styles only. "
	fnames "imageFormat if"
		fdesc "Specifies the image format to render. Valid values for the Windows and Mac platforms are: "swf", "eps", "ai", "svg", "jpg", "iff", "sgi", "tga", "tif", "bmp". Additional valid values for the Windows platform are: "als", "cin", "gif", "yuv", "rla", "si".  Additional valid values for the Mac platform are: "pntg", "ps", "png", "pict", "qtif", "qt". "
	fnames "minEdgeAngle mea"
		fdesc "Specifies the minimum edge angle in degrees.  Valid values are: 0.0 to 90.0.  This angle is the minimum angle between adjacent polygon face normals that is used to determine if the edge is rendered when the -ed flag is specified. "
	fnames "outputFileName of"
		fdesc "Specifies the output file name. "
	fnames "pixelAspectRatio par"
		fdesc "Specifes the pixel aspect ratio. "
	fnames "reflectionDepth rd"
		fdesc "Specifies the reflection depth.  Valid values are:  1 to 4.  The value specifies how many levels of reflection will be applied.  This option has no effect for ai, eps, and svg. "
	fnames "reflections rf"
		fdesc "Specifies whether reflections should be rendered.  This option has no effect for ai, eps, and svg. "
	fnames "renderLayers rl"
		fdesc "Specifies whether render layers should be rendered into separate files. "
	fnames "renderView rv"
		fdesc "Specifies whether to display the rendered image to the render view.  This option is not applicable when batch rendering. "
	fnames "shadows sh"
		fdesc "Specifies whether shadows should be rendered.  This option has no effect for ai, eps, and svg. "
	fnames "showBackFaces sb"
		fdesc "Specifies whether back faces will should be rendered; ie. faces whose normals are pointed away from the camera. "
	fnames "startFrame sf"
		fdesc "Specifies the start frame. "
	fnames "svgAnimation sa"
		fdesc "Specifies the SVG animation type.  Valid values are:  "Native", "HTMLScript".  This option is SVG only. "
	fnames "svgCompression sc"
		fdesc "Specifies whether the SVG output should be compressed.  This option is svg only. "
	fnames "width w"
		fdesc "Specifies the width of the output image in pixels. "
	rcount "1"
		rname "renderer"
name "verifyCmd"
	desc "Query a command "flag by flag" for the specified object and compare the results to the specified (expected) values. Procedure: Parse the command into a list of strings, where 1st string is the cmd. Query the command with each flag and compare its value with what it should be. For example, if the command string is: sphere -ch 1 -ns 9 -r 3.2 -hr 2 and the second argument string is: sphere1 This proc will try to execute: sphere -q -ch sphere1; // and compare with 1, error if not equal sphere -q -ns sphere1; // and compare with 9,.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "view2dToolCtx"
	desc "No Description."
	fcount "3"
	fnames "boxzoom bz"
		fdesc "This class creates a context for the View Tools "track", "dolly", and "box zoom" in the Hypergraph. "
	fnames "dolly do"
		fdesc "No Description"
	fnames "track tr"
		fdesc "No Description"
	rcount "0"
name "viewCamera"
	desc "The viewCamera command is used to position a camera to look directly at the side or top of another camera. This is primarily useful for the user when he or she is setting depth-of-field and clipping planes, if they are being used. The default behaviour: If no other flags are specified, the camera in the active panel is moved and the -t is presumed. If there is a camera selected, it is used as the target camera."
	fcount "3"
	fnames "move m"
		fdesc "Specifies which camera needs to move. "
	fnames "sideView s"
		fdesc "Position camera to look at the side of the target camera. "
	fnames "topView t"
		fdesc "Position camera to look at the top of the target camera (default). "
	rcount "15"
		rname "camera"
		rname "cameraView"
		rname "dolly"
		rname "listCameras"
		rname "lookThru"
		rname "orbit"
		rname "roll"
		rname "track"
		rname "tumble"
		rname "viewClipPlane"
		rname "viewFit"
		rname "viewHeadOn"
		rname "viewLookAt"
		rname "viewPlace"
		rname "viewSet"
name "viewClipPlane"
	desc "The viewClipPlane command can be used to query or set a camera's clip planes. If a camera is not specified, the camera in the active view will be used. The near and far clip plane flags may be used in conjunction with the auto clip plane flag."
	fcount "4"
	fnames "autoClipPlane acp"
		fdesc "Compute the clip planes such that all object's in the camera's viewing frustum will be visible. "
	fnames "farClipPlane fcp"
		fdesc "Set or query the far clip plane. "
	fnames "nearClipPlane ncp"
		fdesc "Set or query the near clip plane. "
	fnames "surfacesOnly so"
		fdesc "This flag is to be used in conjunction with the auto clip plane flag. Only the bounding boxes of surfaces will be used to compute the camera's clipping planes. "
	rcount "15"
		rname "camera"
		rname "cameraView"
		rname "dolly"
		rname "listCameras"
		rname "lookThru"
		rname "orbit"
		rname "roll"
		rname "track"
		rname "tumble"
		rname "viewCamera"
		rname "viewFit"
		rname "viewHeadOn"
		rname "viewLookAt"
		rname "viewPlace"
		rname "viewSet"
name "viewFit"
	desc "The viewFit command positions the specified camera so its point-of-view contains all selected objects other than itself. If no objects are selected, everything is fit to the view (excepting cameras, lights, and sketching plannes). The fit-factor, if specified, determines how much of the view should be filled. If a camera is not specified, the camera in the active view will be used. After the camera is moved, its center of interest is set to the center of the bounding box of the objects."
	fcount "3"
	fnames "allObjects all"
		fdesc "Specifies that all objects are to be fit regardless of the active list. "
	fnames "fitFactor f"
		fdesc "Specifies how much of the view should be filled with the "fitted" items. "
	fnames "namespace ns"
		fdesc "Specifies a namespace that should be excluded. All objects in the specified namespace will be excluded from the fit process. "
	rcount "15"
		rname "camera"
		rname "cameraView"
		rname "dolly"
		rname "listCameras"
		rname "lookThru"
		rname "orbit"
		rname "roll"
		rname "track"
		rname "tumble"
		rname "viewCamera"
		rname "viewClipPlane"
		rname "viewHeadOn"
		rname "viewLookAt"
		rname "viewPlace"
		rname "viewSet"
name "viewHeadOn"
	desc "The viewHeadOn command positions the specified camera so it is looking "down" the normal of the live object, and fitted to the live object. If the live object is a surface, an arbitrary normal is chosen."
	fcount "0"
	rcount "0"
name "viewLookAt"
	desc "The viewLookAt command positions the specified camera so it is looking at the centroid of all selected objects. If no objects are specified the camera will look at the ground plane."
	fcount "1"
	fnames "position pos"
		fdesc "Position in world space to make the camera look at. "
	rcount "15"
		rname "camera"
		rname "cameraView"
		rname "dolly"
		rname "listCameras"
		rname "lookThru"
		rname "orbit"
		rname "roll"
		rname "track"
		rname "tumble"
		rname "viewCamera"
		rname "viewClipPlane"
		rname "viewFit"
		rname "viewHeadOn"
		rname "viewPlace"
		rname "viewSet"
name "viewPlace"
	desc "This command positions the camera as specified. The lookAt and viewDirection flags are mutually exclusive, as are the ortho and perspective flags. If this command switches a camera from ortho to perspective or the other way around without specifying a new field of view, then one is calculated based on a heuristic involving the selected objects. If the camera is not specified on the command line, the command will check to see if there is a camera on the active list. The user should be aware that some positions will be unattainable. For example, using a new camera located at.... Refer to full documentation"
	fcount "7"
	fnames "eyePoint eye"
		fdesc "The new eye point in world coordinates. "
	fnames "fieldOfView fov"
		fdesc "The new field of view (in degrees, for perspective cameras, and in world distance for ortho cameras) "
	fnames "lookAt la"
		fdesc "The new look-at point in world coordinates. "
	fnames "ortho o"
		fdesc "Sets the camera to be orthgraphic. "
	fnames "perspective p"
		fdesc "Sets the camera to be perspective. "
	fnames "upDirection up"
		fdesc "The new up direction vector. "
	fnames "viewDirection vd"
		fdesc "The new view direction vector. "
	rcount "15"
		rname "camera"
		rname "cameraView"
		rname "dolly"
		rname "listCameras"
		rname "lookThru"
		rname "orbit"
		rname "roll"
		rname "track"
		rname "tumble"
		rname "viewCamera"
		rname "viewClipPlane"
		rname "viewFit"
		rname "viewHeadOn"
		rname "viewLookAt"
		rname "viewSet"
name "viewSet"
	desc "This command positions the camera to one of the pre-defined positions. If the fit flag is set in conjunction with persp, top, side, or front; the view is "fit" based on the list of selected objects (if there are any) or on all the objects if nothing is selected. If a camera is not specified, the camera in the active view will be used. If no flag is specified, the camera is set to the home position."
	fcount "11"
	fnames "back b"
		fdesc "Moves the camera to the back position. "
	fnames "bottom bo"
		fdesc "Moves the camera to the bottom position. "
	fnames "front f"
		fdesc "Moves the camera to the front position. "
	fnames "home h"
		fdesc "Executes the camera's home attribute command. Before the string is executed, all occurances of "%camera" will be replaced by the camera's name. Use the camera command to set a camera's home command. "
	fnames "leftSide ls"
		fdesc "Moves the camera to the left side position. "
	fnames "nextView nv"
		fdesc "Moves the camera to the next position. -fit Apply a viewFit after positioning camera to persp, top, side, or front. "
	fnames "persp p"
		fdesc "Moves the camera to the persp position. "
	fnames "previousView pv"
		fdesc "Moves the camera to the previous position. "
	fnames "rightSide rs"
		fdesc "Moves the camera to the right side position. "
	fnames "side s"
		fdesc "Moves the camera to the (right) side position (deprecated). "
	fnames "top t"
		fdesc "Moves the camera to the top position. "
	rcount "15"
		rname "camera"
		rname "cameraView"
		rname "dolly"
		rname "listCameras"
		rname "lookThru"
		rname "orbit"
		rname "roll"
		rname "track"
		rname "tumble"
		rname "viewCamera"
		rname "viewClipPlane"
		rname "viewFit"
		rname "viewHeadOn"
		rname "viewLookAt"
		rname "viewPlace"
name "visor"
	desc "Visor is undoable , queryable , and NOT editable . Command for the creation and manipulation of a Visor UI element. The Visor is used to display the contents of a scene (rendering related nodes in particular), as well as files on disk which the user may wish to bring into the scene (shader and texture libraries for example)."
	fcount "35"
	fnames "reset rst"
		fdesc "Clear all previously loaded folder descriptions in preperation for building a new visual browser "
	fnames "addFolder add"
		fdesc "Add a new folder to the current visual browser "
	fnames "deleteFolder del"
		fdesc "Delete the specified folder and all of its children "
	fnames "addNodes adn"
		fdesc "Add dependency graph nodes by name to a user defined custom folder.  The argument is a string encolsed in quotes with 1 one more node names seperated by blanks "
	fnames "openFolder opf"
		fdesc "When adding a new folder indicate if it will be open or closed by default. The default is closed. "
	fnames "openDirectories opd"
		fdesc "When adding a new folder indicate if it sub directories will be show. The default is to not show sub directories. "
	fnames "editFolder edf"
		fdesc "Edit the name and MEL command for an existing folder "
	fnames "name n"
		fdesc "Name of the new folder "
	fnames "parent p"
		fdesc "Parent folder of this folder "
	fnames "command cmd"
		fdesc "Mel command which will return a list of nodes to add to a folder "
	fnames "transform trn"
		fdesc "Name of a transform node used by folders of type nodeTypeInDAG "
	fnames "nodeType ntp"
		fdesc "A node type used by folders of type nodeTypeInDAG "
	fnames "path pth"
		fdesc "Path to a file system directory to be displayed in the folder "
	fnames "rebuild re"
		fdesc "Rebuild the visor after interactively adding a folder "
	fnames "scrollBar sb"
		fdesc "Set the name of the scroll bar associated with visor "
	fnames "stateString sts"
		fdesc "Return the MEL command string to save the folder setup in visor "
	fnames "scrollPercent sp"
		fdesc "Set the percentage value for the scroll bar.  Typicly called from a a scroll bars callback. "
	fnames "type typ"
		fdesc "Type of the new folder.  Options are:  command  A mel command that will return a list of depend nodes that will be displayed in the folder connectedNodes  The nodes connected to the specified node name will be displayed in the folder defaultNodes  A mel command that will generate default node types.  These nodes will not be part of the scene and are used for drag and drop creation of new nodes that are in the scene.  The mel command use with this type is usually "listNodetypes". directory  A directory name in the file system directoryCommand  A mel command that will return a directory name in the file system folder  An empty folder(the default value).  Empty folders can be used as user defined folders by dropping dependency graph nodes in to them nodeTypeInDAG  List all nodes of a given type under a specified transforms in the DAG.  For example list all the shaders for a character by specifying the top transform of the character shelfItems  A directory containing mel files to use as shelf items "
	fnames "menu mn"
		fdesc "Set the name of the script to run to get a popup menu "
	fnames "style stl"
		fdesc "Set display style for the browser.  Options are: outliner A single column with an outliner style icon and a text label singleColumn A single column with an image style icon and a text label multiColumn A multiple column grid of swatches with the text label below the swatch "
	fnames "allowZooming az"
		fdesc "Specifies whether or not the user should be able to zoom the contents of the visor. Default is true. "
	fnames "allowPanningInX apx"
		fdesc "Specifies whether or not the user should be able to pan the contents of the visor horizontally. Default is true. "
	fnames "allowPanningInY apy"
		fdesc "Specifies whether or not the user should be able to pan the contents of the visor vertically. Default is true. "
	fnames "showFolders sfo"
		fdesc "Specifies whether or not the visor should show folders. The default is true. "
	fnames "showNodes sn"
		fdesc "Specifies whether or not the visor should show nodes. The default is true. "
	fnames "showFiles sfi"
		fdesc "Specifies whether or not the visor should show files. The default is true. "
	fnames "showDividers sd"
		fdesc "Specifies whether or not the visor should show dividers. The default is true. If -showDividers is set to false, dividers will be drawn as folders instead. "
	fnames "popupMenuScript pms"
		fdesc "Specifies the script to be called when the right mouse button is pressed in the visor. The name of the editor in which the right mouse button was pressed will be appended to the script at the time the script is called. "
	fnames "selectedGadgets sg"
		fdesc "Return a string array of the currently selected gadgets (files, folders, nodes) in the visor. "
	fnames "folderList fl"
		fdesc "Return a string array of the folders in the visor. "
	fnames "restrictPanAndZoom rpz"
		fdesc "Specifies whether the panning and zooming of the visor should be restricted to keep the contents in the top left corner of the visor when they are smaller than the visible area within the visor. Default is true. "
	fnames "saveSwatches ss"
		fdesc "Save swatches to disk for currently displayed image files. "
	fnames "refreshAllSwatches ras"
		fdesc "Refresh the swatches of all files currently displayed in this visor. "
	fnames "refreshSelectedSwatches rss"
		fdesc "Refresh the swatches of all files currently selected in any visor. "
	fnames "refreshSwatch rs"
		fdesc "Refresh the swatch of the file with the specified path. "
	rcount "0"
name "volumeAxis"
	desc "A volume axis field can push particles in four directions, defined with respect to a volume: along the axis, away from the axis or center, around the axis, and in a user-specified direction. These are analogous to the emission speed controls of volume emitters. The volume axis field also contains a wind turbulence model (different from the turbulence field) that simulates an evolving flow of liquid or gas. The turbulence has a build in animation that is driven by a connection to a time node. The transform is the associated dependency node. Use connectDynamic to cause the field to affect.... Refer to full documentation"
	fcount "24"
	fnames "alongAxis alx"
		fdesc "Initial velocity multiplier in the direction along the central axis of the volume.  See the diagrams in the documentation.   "
	fnames "aroundAxis arx"
		fdesc "Initial velocity multiplier in the direction around the central axis of the volume.  See the diagrams in the documentation. "
	fnames "attenuation att"
		fdesc "Attentuation rate of field with distance. For sphere volumes, distance is computed from the center of the sphere.  For cone, cylinder, and cube volumes, it is computed from the vertical axis of the volume.  For torus volumes, it is computed from the ring in the middle of the solid portion of the torus. "
	fnames "awayFromAxis afx"
		fdesc "Initial velocity multiplier in the direction away from the central axis of the volume.  See the diagrams in the documentation.  Used only with the cylinder, cone,  and torus volumes. "
	fnames "awayFromCenter afc"
		fdesc "Initial velocity multiplier in the direction away from the center point of a cube or sphere volume. Used only with the cube and sphere volumes. "
	fnames "detailTurbulence dtr"
		fdesc "The relative intensity of a second higher frequency turbulence. This can be used to create fine features in large scale flows. Both the speed and the frequency on this second turbulence are higher than the primary turbulence. When the detailTurbulence is non-zero the simulation may run a bit slower, due to the computation of a second turbulence. "
	fnames "directionX dx"
		fdesc "x-component of force direction.  Used with directional speed. "
	fnames "directionY dy"
		fdesc "y-component of force direction.  Used with directional speed. "
	fnames "directionZ dz"
		fdesc "z-component of force direction.  Used with directional speed. "
	fnames "directionalSpeed drs"
		fdesc "Adds a component of speed in the direction specified by the directionX, Y, and Z attributes. "
	fnames "invertAttenuation ia"
		fdesc "If this attribute is FALSE, the default, then the attenuation makes the field's effect decrease as the affected point is further from the volume's axis and closer to its edge.  If the is set to TRUE, then the effect of the field increases in this case, making the full effect of the field felt at the volume's edge. "
	fnames "magnitude m"
		fdesc "Strength of field.  "
	fnames "maxDistance mxd"
		fdesc "Maximum distance at which field is exerted.  A zero or negative value will turn off the field effect completely.   For sphere volumes, distance is computed from the center of the sphere.  For cone, cylinder, and cube volumes, it is computed from the vertical axis of the volume.  For torus volumes, it is computed from the ring in the middle of the solid portion of the torus. "
	fnames "name n"
		fdesc "name of field  "
	fnames "perVertex pv"
		fdesc "No effect for this type of field. "
	fnames "position pos"
		fdesc "Position in space where you want to place the volume. "
	fnames "turbulence trb"
		fdesc "Adds a force simulating a turbulent  wind that evolves over time.   "
	fnames "turbulenceFrequencyX tfx"
		fdesc "The repeats of the turbulence function in X.  "
	fnames "turbulenceFrequencyY tfy"
		fdesc "The repeats of the turbulence function in Y.  "
	fnames "turbulenceFrequencyZ tfz"
		fdesc "The repeats of the turbulence function in Z.  "
	fnames "turbulenceOffsetX tox"
		fdesc "The translation of the turbulence function in X.  "
	fnames "turbulenceOffsetY toy"
		fdesc "The translation of the turbulence function in Y.  "
	fnames "turbulenceOffsetZ toz"
		fdesc "The translation of the turbulence function in Z.  "
	fnames "turbulenceSpeed trs"
		fdesc "The rate of change of the turbulence over time. The turbulence loops seamlessly every 1.0/turbulenceSpeed seconds. To animate this rate attach a new time node to the time input on the volumeAxisNode then animate the time value on the time node. "
	rcount "0"
name "vortex"
	desc "A vortex field pulls objects in a circular direction, like a whirlpool or tornado. Objects affected by the vortex field tend to rotate around the axis specified by -ax, -ay, and -az. The transform is the associated dependency node. Use connectDynamic to cause the field to affect a dynamic object. If fields are created, this command returns the names of each of the fields. If a field was queried, the results of the query are returned. If a field was edited, the field name is returned. If object names are provided or the active selection list is non-empty, the command.... Refer to full documentation"
	fcount "9"
	fnames "attenuation att"
		fdesc "Attentuation rate of field  "
	fnames "axisX ax"
		fdesc "X-component of vortex axis  "
	fnames "axisY ay"
		fdesc "Y-component of vortex axis  "
	fnames "axisZ az"
		fdesc "Z-component of vortex axis  "
	fnames "magnitude m"
		fdesc "Strength of field.  "
	fnames "maxDistance mxd"
		fdesc "Maximum distance at which field is exerted.  -1 indicates that the field has no maximum distance.  "
	fnames "name n"
		fdesc "name of field  "
	fnames "perVertex pv"
		fdesc "Per-vertex application. If this flag is set true, then each  individual point (CV, particle, vertex,etc.) of the chosen object  exerts an identical copy of the force field. If this flag is set to  false, then the force is exerted only from the geometric center of the set of points.  "
	fnames "position pos"
		fdesc "Position in space where you want to place a field. The gravity then emanates from this position in space rather  than from an object. Note that you can both use -pos  (creating a field at a position) and also provide object names.  "
	rcount "0"
name "waitCursor"
	desc "This command sets/resets a wait cursor for the entire Maya application. This works as a stack, such that for each waitCursor -state on command executed there should be a matching waitCursor -state off command pending. Warning: If a script fails that has turned the wait cursor on, the wait cursor may be left on. You need to turn it off manually from the command line by entering and executing the command 'waitCursor -state off'."
	fcount "1"
	fnames "state st"
		fdesc "Set or reset the wait cursor for the entire Maya application. "
	rcount "0"
name "warning"
	desc "The warning command is provided so that the user can issue warning messages from his/her scripts. The string argument is displayed in the command window (or stdout if running in batch mode) after being prefixed with an error message heading and surrounded by //."
	fcount "1"
	fnames "showLineNumber sl"
		fdesc "If true then file and line number information are displayed. Default: false "
	rcount "1"
		rname "error"
name "webBrowser"
	desc "This command creates a web browser. Web browser is capable to display W3C compliant content. In addition to standard web browsers protocols there is a "mel:" protocol that allows web browser to communicate with Command Engine."
	fcount "26"
	fnames "annotation ann"
		fdesc "Annotate the control with an extra string value. "
	fnames "back bk"
		fdesc "Navigate to the previous page in the session history. If queried, will return true if there is a previous page in the session history. "
	fnames "backgroundColor bgc"
		fdesc "The background color of the control. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dt"
		fdesc "Add a documentation flag to the control.  The documentation flag  has a directory structure like hierarchy.   Eg. -dt render/multiLister/createNode/material "
	fnames "dragCallback dgc"
		fdesc "Adds a callback that is called when the middle mouse button is pressed.  The callback is of the form: global proc string[] callbackName(string $dragControl, int $x, int $y, int $mods) The proc returns a string array that is transferred to the drop site. By convention the first string in the array describes the user settable  message type.  Controls that are application defined drag sources may  ignore the callback. $mods allows testing for the key modifiers CTL and  SHIFT. Possible values are 0 == No modifiers, 1 == SHIFT, 2 == CTL,  3 == CTL + SHIFT. "
	fnames "dropCallback dpc"
		fdesc "Adds a callback that is called when a drag and drop operation is released above the drop site.  The callback is of the form: global proc callbackName(string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type) The proc receives a string array that is transferred from the drag source. The first string in the msgs array describes the user defined message type. Controls that are application defined drop sites may ignore the callback. $type can have values of 1 == Move, 2 == Copy, 3 == Link. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "enable en"
		fdesc "The enable state of the control.  By default, this flag is set to true and the control is enabled.  Specify false and the control will appear dimmed or greyed-out indicating it is disabled. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "forward fwd"
		fdesc "Navigate to the next page in the session history. If queried, will return true if there is a next page in the session history. "
	fnames "height h"
		fdesc "The height of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	fnames "home hm"
		fdesc "Navigate to the home page. "
	fnames "isObscured io"
		fdesc "Return whether the control can actually be seen by the user. The control will be obscured if its state is invisible, if it is blocked (entirely or partially) by some other control, if it or a parent layout is unmanaged, or if the control's window is invisible or iconified. "
	fnames "manage m"
		fdesc "Manage state of the control.  An unmanaged control is not visible, nor does it take up any screen real estate.  All controls are created managed by default. "
	fnames "numberOfPopupMenus npm"
		fdesc "Return the number of popup menus attached to this control. "
	fnames "openURL url"
		fdesc "URL to open in the web browser. When queried will return the current URL. "
	fnames "parent p"
		fdesc "The parent layout for this control. "
	fnames "popupMenuArray pma"
		fdesc "Return the names of all the popup menus attached to this control. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "reload rl"
		fdesc "Reload last page. "
	fnames "stop st"
		fdesc "Stop current page loading process. "
	fnames "urlChangedCb ucc"
		fdesc "An optional mel callback.  If set, it will be called whenever the current URL changes. The mel callback should take one string which will contain the new URL. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The visible state of the control.  A control is created visible by default.  Note that a control's actual appearance is also dependent on the visible state of its parent layout(s). "
	fnames "width w"
		fdesc "The width of the control.  The control will attempt to be this size if it is not overruled by parent layout conditions. "
	rcount "0"
name "whatIs"
	desc "This command takes one string type argument and returns a string indicating whether the argument is a builtin "Command", a "Mel procedure", a "Script", or a variable. If it is a variable, the type of the variable is also given. If it is none of these things, whatIs returns the string "Unknown". If the argument is a Mel procedure or a script file, the path to the file containing the script or procedure is included in the return value. Special Notes: The difference between a "Mel Procedure" and a "Script" can be subtle. If a procedure has not been invoked,.... Refer to full documentation"
	fcount "0"
	rcount "0"
name "window"
	desc "This command creates a new window but leaves it invisible. It is most efficient to add the window's elements and then make it visible with the showWindow command. The window can have an optional menu bar. Also, the title bar and minimize/maximize buttons can be turned on or off. If the title bar is off, then you cannot have minimize or maximize buttons. Note: The window will require a control layout of some kind to arrange the controls (buttons, sliders, fields, etc.). Examples of control layouts are columnLayout, formLayout, rowLayout, etc. Note: This command will clear the uiTemplate stack. Templates.... Refer to full documentation"
	fcount "34"
	fnames "backgroundColor bgc"
		fdesc "The background color of the window. The arguments correspond to the red, green, and blue color components. Each component ranges  in value from 0.0 to 1.0. (Windows only flag) "
	fnames "defineTemplate dt"
		fdesc "Puts a command in a mode where any other flags and args are  parsed and added to the command template specified in the argument.   They will be used as default arguments in any subsequent invocations of the command when templateName is set as the  current template. "
	fnames "docTag dtg"
		fdesc "Attach a tag to the window. "
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the  specified object exists.  Other flags are ignored. "
	fnames "frontWindow fw"
		fdesc "Return the name of the front window.  Note: you must supply the name of any window (the window does not need to exist). Returns "unknown" if the front window cannot be determined. "
	fnames "height h"
		fdesc "Height of the window in pixels. "
	fnames "iconName in"
		fdesc "The window's icon title.  By default it is the same as the window's title. "
	fnames "iconify i"
		fdesc "Icon state of the window. "
	fnames "interactivePlacement ip"
		fdesc "Forces interactive placement of the window.  The default is to place the windows automatically. Has no effect when the desktop  is customized to auto place all windows. This flag has no effect on Windows systems. "
	fnames "leftEdge le"
		fdesc "Position of the left edge of the window. "
	fnames "mainWindow mw"
		fdesc "Main window for the application.  The main window has an 'Exit' item in the Window Manager menu.  By default, the first created window becomes the main window. "
	fnames "maximizeButton mxb"
		fdesc "Turns the window's maximize button on or off  "
	fnames "menuArray ma"
		fdesc "Return a string array containing the names of the menus in the window's menu bar. "
	fnames "menuBar mb"
		fdesc "Adds an empty menu bar to the window. "
	fnames "menuBarVisible mbv"
		fdesc "Visibility of the menu bar (if there is one). "
	fnames "minimizeButton mnb"
		fdesc "Turns the window's minimize button on or off. "
	fnames "minimizeCommand mnc"
		fdesc "Script executed after the window is minimized (iconified). "
	fnames "numberOfMenus nm"
		fdesc "Return the number of menus attached to the window's menu bar. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the  value of the specified flag. "
	fnames "resizeToFitChildren rtf"
		fdesc "The window will always grow/shrink to just fit the controls it contains. "
	fnames "restoreCommand rc"
		fdesc "Script executed after the window is restored from it's minimized (iconified) state. "
	fnames "retain ret"
		fdesc "Retains the window after it has been closed.  The default is to delete the window when it is closed. "
	fnames "sizeable s"
		fdesc "Whether or not the window may be interactively resized. "
	fnames "title t"
		fdesc "The window's title. "
	fnames "titleBar tb"
		fdesc "Turns the window's title bar on or off. "
	fnames "titleBarMenu tbm"
		fdesc "Controls whether the title bar menu exists in the window title bar. Only valid if  -tb/titleBar  is true. This Windows only flag is true by default. "
	fnames "toolbox tlb"
		fdesc "Makes this a toolbox style window.  A Windows only flag that makes the title bar smaller and uses a slightly different display style. "
	fnames "topEdge te"
		fdesc "Position of the top edge of the window. "
	fnames "topLeftCorner tlc"
		fdesc "Position of the window's top left corner. "
	fnames "useTemplate ut"
		fdesc "Will force the command to use a command template other than  the current one. "
	fnames "visible vis"
		fdesc "The window's visibility. "
	fnames "width w"
		fdesc "Width of the window in pixels. "
	fnames "widthHeight wh"
		fdesc "Window's width and height in pixels. "
	rcount "0"
name "windowPref"
	desc "Create or modify preferred window attributes. The size and position of a window is retained during and between application sessions. A default window preference is created when a window is closed. Window preferences must be named and, consequently, only affect the window with a matching name. Note that window preferences are not applied to the main Maya window nor the Command window."
	fcount "14"
	fnames "edit e"
		fdesc "Puts the command in edit mode so that it will change the values of the specified flags. "
	fnames "exists ex"
		fdesc "Returns true|false depending upon whether the specified object exists.  Other flags are ignored. "
	fnames "height h"
		fdesc "Height of the window.  "
	fnames "leftEdge le"
		fdesc "Left edge position of the window.  "
	fnames "loadAll la"
		fdesc "Reads in file with window attributes from disk. "
	fnames "parentMain pm"
		fdesc "Set whether window is parented to main application window. NT only. -enableAll boolean Enable/disable all window preferences.  Preferences are enabled by default.  Set this flag to false and window's will ignore all preference values. "
	fnames "query q"
		fdesc "Puts the command in query mode so that it will return the value of the specified flag. "
	fnames "remove r"
		fdesc "Remove a window preference. "
	fnames "removeAll ra"
		fdesc "Remove all window preferences. "
	fnames "saveAll sa"
		fdesc "Writes out file with window attributes. "
	fnames "topEdge te"
		fdesc "Top edge position of the window.  "
	fnames "topLeftCorner tlc"
		fdesc "Top and left edge position of the window.  "
	fnames "width w"
		fdesc "Width of the window.  "
	fnames "widthHeight wh"
		fdesc "Width and height of the window. "
	rcount "0"
name "wire"
	desc "This command creates a wire deformer. In the create mode the selection list is treated as the object(s) to be deformed, Wires are specified with the -w flag. Each wire can optionally have a holder which helps define the the regon of the object that is affected by the deformer."
	fcount "19"
	fnames "after af"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node after the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "before bf"
		fdesc "If the default behavior for insertion/appending into/onto  the existing chain is not what you want then you can use this flag to force the command to stick the deformer  node before the selected node in the chain even if  a new geometry shape has to be created in order to do so "
	fnames "crossingEffect ce"
		fdesc "Set the amount of convolution effect. Varies from fully convolved at 0 to a simple additive effect at 1 (which is what you get with the filter off). Default is 0.  This filter should make its way into all  blend nodes that deal with combining effects from multiple sources. "
	fnames "deformerTool dt"
		fdesc "Returns the name of the deformer tool objects (if any) as string string ... "
	fnames "dropoffDistance dds"
		fdesc "Set the dropoff Distance for the wire at index. "
	fnames "envelope en"
		fdesc "Set the envelope value for the deformer. Default is 1.0 "
	fnames "exclusive ex"
		fdesc "Puts the deformation set in a deform partition. "
	fnames "frontOfChain foc"
		fdesc "This command is used to specify that the new deformer  node should be placed ahead (upstream) of existing deformer and skin nodes in the shape's history (but not ahead of existing tweak nodes). The input to the deformer will be the upstream shape rather than the visible downstream shape, so the behavior of this flag is the most intuitive if the downstream deformers are in their reset (hasNoEffect) position when the new deformer is added. "
	fnames "geometry g"
		fdesc "The specified object will be added to the list of objects being deformed by this deformer object, unless the -rm flag is also specified. When queried, this flag returns string string string ... "
	fnames "groupWithBase gw"
		fdesc "Groups the wire with the base wire so that they can easily be moved together to create a ripple effect. Default is false. "
	fnames "holder ho"
		fdesc "Set the specified curve or surface as a holder for the wire at index. "
	fnames "ignoreSelected is"
		fdesc "Tells the command to not deform objects on the current selection list "
	fnames "localInfluence li"
		fdesc "Set the local control a wire has with respect to other wires irrespective of whether it is deforming the surface. Varies from no local effect at 0 to full local control  at 1. Default is 0. "
	fnames "name n"
		fdesc "Used to specify the name of the node being created "
	fnames "prune pr"
		fdesc "Removes any points not being deformed by the deformer in  its current configuration from the deformer set. "
	fnames "remove rm"
		fdesc "Specifies that objects listed after the -g flag should be removed from this deformer. "
	fnames "split sp"
		fdesc "Branches off a new chain in the dependency graph instead of inserting/appending the deformer into/onto an existing chain. "
	fnames "wire w"
		fdesc "Specify or query the wire curve. "
	fnames "wireCount wc"
		fdesc "Set the number of wires. "
	rcount "7"
		rname "cluster"
		rname "lattice"
		rname "sculpt"
		rname "deformer"
		rname "flexor"
		rname "wrinkle"
		rname "percent"
name "wireContext"
	desc "This command creates a tool that can be used to create a wire deformer."
	fcount "9"
	fnames "crossingEffect ce"
		fdesc "Set the amount of convolution filter effect. Varies from fully convolved at 0 to a simple additive effect at 1. Default is 0. "
	fnames "deformationOrder do"
		fdesc "Set the appropriate flag that determines the position in  in the deformation hierarchy.  "
	fnames "dropoffDistance dds"
		fdesc "Set the dropoff Distance for the wires. "
	fnames "envelope en"
		fdesc "Set the envelope value for the deformer. Default is 1.0 "
	fnames "exclusive exc"
		fdesc "Set exclusive mode on | off "
	fnames "exclusivePartition ep"
		fdesc "Set the name of an exclusive partition. "
	fnames "groupWithBase gw"
		fdesc "Groups the wire with the base wire so that they can easily be moved together to create a ripple effect. Default is false. "
	fnames "holder ho"
		fdesc "Controls whether the user can specify holders for the wires from the wire context. A holder is a curve that you can use to limit the wire's deformation region. Default is false.  "
	fnames "localInfluence li"
		fdesc "Set the amount of local influence a wire has with respect to other wires. Default is 0. "
	rcount "0"
name "workspace"
	desc "Create, open, or edit a workspace associated with a given workspace file. If no workspaceFile is specified then the current workspace is assumed."
	fcount "29"
	fnames "active act"
		fdesc "This flag is a synonym for -o/openWorkspace. "
	fnames "baseWorkspace bw"
		fdesc "A workspace may be based on another workspace.  This means that all the settings in the base workspace apply to this workspace unless they are explicitly overridden.   "
	fnames "create cr"
		fdesc "Create a new directory.  If the directory name is not a full path name, it will be created as a subdirectory of the "current" directory set with the -dir flag. "
	fnames "directory dir"
		fdesc "This option will set the current workspace directory to the path specified.	When queried it will return the current workspace  directory. This directory is used as an initial directory for the fileBrowser  and is part of the search path used for locating  files. It should not be confused with the current  working   directory as used by the  pwd  and  chdir  commands. "
	fnames "expandName en"
		fdesc "Query for the full path location of a the filename name. The name may be a project relative file name, or a full path name.  If the name is an empty string, the return value will be the project directory.  The return value is always a full path name. "
	fnames "fileRule fr"
		fdesc "Set the default location for a file. The parameters are the fileRule (dxf, iges, etc) and the location.  When queried, it returns a list of strings.  The elements of the list alternate between fileRule names and the corresponding location.  There is typically one file rule for each available translator. "
	fnames "fileRuleEntry fre"
		fdesc "Return the location for the fileRule. "
	fnames "fileRuleList frl"
		fdesc "Returns a list of the currently defined file rules. "
	fnames "fullName fn"
		fdesc "Return the full name of the workspace. "
	fnames "list l"
		fdesc "This option will list the current workspace directory. If a  path is specified for the "workspaceFile" then the contents of that directory will be listed.  Otherwise, the contents of the directory set with the -dir flag will be listed. "
	fnames "listFullWorkspaces lfw"
		fdesc "Returns a list of the full path names of all the currently defined workspaces. "
	fnames "listWorkspaces lw"
		fdesc "Returns a list of all the currently defined workspace names. "
	fnames "newWorkspace n"
		fdesc "This specifies that a new workspace is being created.  If a workspace with this name already exists, the command will fail. "
	fnames "objectType ot"
		fdesc "Set/query the default location for a file. The parameters to set a type are the type name and the location. The only objectType automatically defined by Maya is "scene". When queried, it returns a list of strings.  The elements of the list alternate between objectType names and the corresponding location. "
	fnames "objectTypeEntry ote"
		fdesc "Return the location for the objectType. "
	fnames "objectTypeList otl"
		fdesc "Returns a list of the currently defined object types. "
	fnames "openWorkspace o"
		fdesc "Open the workspace.  The workspace becomes the current workspace. "
	fnames "projectPath pp"
		fdesc "Convert filePath to a filename that is relative to the project root directory (if possible) and return it.  If the filePath is not under the project root directory, a full path name will be returned. "
	fnames "renderType rt"
		fdesc "Set the default location for a render file.  Available types are: depth, images, iprImages, lights, renderScenes, sourceImages, and textures.  When queried, it returns a list of strings.  The elements of the list alternate between renderType names and the corresponding location. "
	fnames "renderTypeEntry rte"
		fdesc "Return the location for the renderType. "
	fnames "renderTypeList rtl"
		fdesc "Return a list of all the available render types. "
	fnames "rootDirectory rd"
		fdesc "Returns the root directory of the workspace. "
	fnames "saveWorkspace s"
		fdesc "Save the workspace.  Workspaces are normally saved when Maya exits but this flag will make sure that the data is flushed to disk. "
	fnames "shortName sn"
		fdesc "Query the short name of the workspace. "
	fnames "update u"
		fdesc "This flag reads all the workspace definitions from the project directory.  It is used by Maya at startup time to find the avaiable workspaces. "
	fnames "updateAll ua"
		fdesc "This flag is a synonym for -u/update. "
	fnames "variable v"
		fdesc "Set/query the value of a project variable.  Project variables are used when expanding names.  See the -en/expandName flag below. "
	fnames "variableEntry ve"
		fdesc "Return the value of the variable "
	fnames "variableList vl"
		fdesc "Return a list of all the available variables. "
	rcount "3"
		rname "pwd"
		rname "chdir"
		rname "translator"
name "wrinkle"
	desc "The wrinkle command is used to create a network of wrinkles on a surface. It automatically creates a network of wrinkle curves that control a wire deformer. The wrinkle curves are attached to a cluster deformer."
	fcount "15"
	fnames "axis ax"
		fdesc "Specifies the plane of the wrinkle.  "
	fnames "branchCount brc"
		fdesc "Specifies the number of branches per wrinkle. Default is 2. "
	fnames "branchDepth bd"
		fdesc "Specifies the depth of the branching. Default is 0. "
	fnames "center ct"
		fdesc "Specifies the center of the wrinkle. "
	fnames "crease cr"
		fdesc "Specifies an existing curve to serve as the wrinkle. "
	fnames "dropoffDistance dds"
		fdesc "Specifies the dropoff distance around the center. "
	fnames "envelope en"
		fdesc "The envelope globally attenuates the amount of deformation. Default is 1.0. "
	fnames "geometry g"
		fdesc "This flag does nothing. This flag will be removed post Maya2.0. "
	fnames "randomness rnd"
		fdesc "Amount of randomness. Default is 0.2. "
	fnames "remove rm"
		fdesc "This flag does nothing. This flag will be removed post Maya2.0. "
	fnames "style st"
		fdesc "Specifies the wrinkle style. "
	fnames "thickness th"
		fdesc "Wrinkle thickness. Default is 1.0. "
	fnames "uvSpace uv"
		fdesc "1/2 length, 1/2 breadth, rotation angle, center u, v definition of a patch in uv space where the wrinkle is to be constructed. "
	fnames "wrinkleCount wc"
		fdesc "Specifies the number of wrinkle lines to be generated. Default is 3. "
	fnames "wrinkleIntensity wi"
		fdesc "Increasing the intensity makes it more wrinkly. Default is 0.5. "
	rcount "7"
		rname "cluster"
		rname "lattice"
		rname "sculpt"
		rname "deformer"
		rname "flexor"
		rname "wire"
		rname "percent"
name "wrinkleContext"
	desc "This command creates a context that creates wrinkles."
	fcount "7"
	fnames "branchCount brc"
		fdesc "Set the number of branches spawned from a crease for radial wrinkles. Default is 2. "
	fnames "branchDepth bd"
		fdesc "Set the depth of branching for radial wrinkles. Defaults to 0. "
	fnames "randomness rnd"
		fdesc "Set the deviation of the wirnkle creases from straight lines and other elements of the wrinkle structure. Defaults to 0.2. "
	fnames "style st"
		fdesc "Set the wrinkle characteristic shape."lines"|"radial"|"custom. Default is "radial". "
	fnames "thickness th"
		fdesc "Set the thickness of wirnkle creases by setting the dropoff distance on the underlying wires. "
	fnames "wrinkleCount wc"
		fdesc "Set the number of wrinkle creases. Default is 3. "
	fnames "wrinkleIntensity wi"
		fdesc "Set the depth intensity of the wrinkle furrows. Defaults to 0.5. "
	rcount "0"
name "writeTake"
	desc "This action writes a take from a device with recorded data to a take (.mov) file. The writeTake action can also write the virtual definition of a device. See also: recordDevice, readTake, defineVirtualDevice."
	fcount "7"
	fnames "angle a"
		fdesc "Sets the angular unit used in the take. Valid strings are [deg|degree|rad|radian].  C: The default is the current user angular unit. "
	fnames "device d"
		fdesc "Specifies the device that contains the take. This is a required argument. If the device does not contain a take, the action will fail. "
	fnames "linear l"
		fdesc "Sets the linear unit used in the take. Valid strings are [mm|millimeter|cm|centimeter|m|meter|km|kilometer|in|inch|ft|foot|yd|yard|mi|mile]  C: The default is the current user linear unit. "
	fnames "noTime nt"
		fdesc "The take (.mov) file will not contain time stamps.  C: The default is to put time stamps in the take file. "
	fnames "precision pre"
		fdesc "Sets the number of digits to the right of the decimal place in the take file. C: The default is 6. "
	fnames "take t"
		fdesc "Write out the take to a file with the specified name. "
	fnames "virtualDevice vd"
		fdesc "Writes out the virtual device definition to a mel script with the  specified file name.  "
	rcount "9"
		rname "applyTake"
		rname "filter"
		rname "recordDevice"
		rname "defineDataServer"
		rname "movIn"
		rname "defineVirtualDevice"
		rname "movOut"
		rname "enableDevice"
		rname "readTake"
name "xbmLangPathList"
	desc "Returns the directories in the XBMLANGPATH environment variable."
	fcount "0"
	rcount "0"
name "xform"
	desc "This command can be used query/set any element in a transformation node. It can also be used to query some values that cannot be set directly such as the transformation matrix or the bounding box. It can also set both pivot points to convenient values. All values are specified in transformation coordinates. (attribute-space) In addition, the attributes are applied/returned in the order in which they appear in the flags section. (which corresponds to the order they appear in the transformation matrix as given below) See also: move, rotate, scale."
	fcount "24"
	fnames "absolute a"
		fdesc "perform absolute transformation (default)  "
	fnames "boundingBox bb"
		fdesc "Returns the bounding box of an object. The values returned are in the following order: xmin ymin zmin xmax ymax zmax. "
	fnames "boundingBoxInvisible bbi"
		fdesc "Returns the bounding box of an object. This includes the bounding boxes of all invisible children which are not included using the "
	fnames "centerPivots cp"
		fdesc "Set pivot points to the center of the object's bounding box. (see -p flag) "
	fnames "euler eu"
		fdesc "modifer for -relative flag that specifies rotation values should be added to current XYZ rotation values. "
	fnames "matrix m"
		fdesc "Sets/returns the composite transformation matrix. *Note* the matrix is represented by 16 double arguments that are specified in row order. "
	fnames "objectSpace os"
		fdesc "treat values as object-space transformation values (only works for pivots, translations, rotation, rotation axis, matrix, and bounding box flags) "
	fnames "pivots piv"
		fdesc "convenience method that changes both the rotate and scale pivots simultaneously. (see -rp -sp flags for more info) "
	fnames "preserve p"
		fdesc "preserve overall transformation. used to prevent object from "jumping" when changing pivots or rotation order. the default value is true. (used with -sp, -rp, -roo, -cp, -ra) "
	fnames "query q"
		fdesc "query transformation values  "
	fnames "relative r"
		fdesc "perform relative transformation "
	fnames "rotateAxis ra"
		fdesc "rotation axis orientation (when used with the -p flag the overall rotation is preserved by modifying the rotation to compensate for the axis rotation) "
	fnames "rotateOrder roo"
		fdesc "rotation order (when used with the -p flag the  overall rotation is preserved by modifying the  local rotation to be quivalent to the old one) Valid values for this flag are  xyz | yzx | zxy | xzy | yxz | zyx "
	fnames "rotatePivot rp"
		fdesc "rotate pivot point transformation (when used with the -p flag the overall transformation is preserved by modifying the rotation translation) "
	fnames "rotateTranslation rt"
		fdesc "rotation translation  "
	fnames "rotation ro"
		fdesc "rotation transformation  "
	fnames "scale s"
		fdesc "scale transformation  "
	fnames "scalePivot sp"
		fdesc "scale pivot point transformation (when used with the -p flag the overall transformation is preserved by modifying the scale translation) "
	fnames "scaleTranslation st"
		fdesc "scale translation  "
	fnames "shear sh"
		fdesc "shear transformation.  The values represent the shear  xy,xz,yz "
	fnames "translation t"
		fdesc "translation  "
	fnames "worldSpace ws"
		fdesc "treat values as world-space transformation values (only works for pivots, translations, rotation, rotation axis, matrix, and bounding box flags) "
	fnames "worldSpaceDistance wd"
		fdesc "Values for -sp, -rp, -st, -rt, -t, -piv flags are treated as world space distances to move along the local axis. (where the local axis depends on whether the command is operating in local-space or object-space. This flag has no effect for world space. "
	fnames "zeroTransformPivots ztp"
		fdesc "reset pivot points and pivot translations without changing the overall matrix by applying these values into the translation channel. "
	rcount "3"
		rname "rotate"
		rname "move"
		rname "scale"
name "xpmPicker"
	desc "No Description."
	fcount "2"
	fnames "filename fn"
		fdesc "No Description"
	fnames "parent p"
		fdesc "No Description"
	rcount "0"
