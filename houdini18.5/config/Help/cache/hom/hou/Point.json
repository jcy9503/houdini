{"body": [{"indent": 0, "text": [{"text": "hou.", "type": "supertitle"}, "Point"], "type": "title", "extent": [0, 14], "level": 0}, {"indent": 0, "type": "summary", "extent": [63, 150], "text": ["Represents a point on a geometry primitive, such as a polygon or NURBS surface."]}, {"indent": 0, "type": "para", "extent": [150, 348], "text": ["Each Point object resides inside a Geometry object and stores a\n3D position.  Points may be shared between primitives (such as polygons), and\nthe set of points and primitives describes a 3D shape."]}, {"indent": 0, "type": "para", "extent": [348, 409], "text": ["Each point can store arbitrary values in named attributes."]}, {"body": [{"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [514, 580], "text": ["Returns the ", {"text": "", "value": "/hom/hou/Geometry", "fallback_text": "hou.Geometry", "fullpath": "/hom/hou/Geometry", "scheme": "Hom", "type": "link"}, " object containing this point."]}], "indent": 0, "text": [{"text": ["geometry(self)"], "type": "code"}, "  \u2192 ", {"text": "", "value": "/hom/hou/Geometry", "fallback_text": "hou.Geometry", "fullpath": "/hom/hou/Geometry", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Point::geometry"}, "extent": [436, 479], "container": true, "type": "methods_item", "id": "geometry"}, {"body": [{"indent": 4, "type": "para", "extent": [686, 897], "text": ["Returns the point number of this point.  Points are numbered sequentially across the entire Geometry\n    starting from 0, and the points returned by ", {"fragment": "#points", "text": "", "value": "/hom/hou/Geometry#points", "fallback_text": "hou.Geometry.points", "fullpath": "/hom/hou/Geometry#points", "scheme": "Hom", "type": "link"}, "\n    are in point number order."]}], "indent": 0, "text": [{"text": ["number(self)"], "type": "code"}, "  \u2192 ", {"text": ["int"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::number", "replaces": "/expressions/pointlist /expressions/poppointnum"}, "extent": [580, 607], "container": true, "type": "methods_item", "id": "number"}, {"body": [{"indent": 4, "type": "para", "extent": [975, 1041], "text": ["Returns a tuple of the primitives that reference this point."]}], "indent": 0, "text": [{"text": ["prims(self)"], "type": "code"}, "  \u2192 ", {"text": ["tuple"], "type": "code"}, " of ", {"text": "", "value": "/hom/hou/Prim", "fallback_text": "hou.Prim", "fullpath": "/hom/hou/Prim", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Point::prims"}, "extent": [897, 943], "container": true, "type": "methods_item", "id": "prims"}, {"body": [{"indent": 4, "type": "para", "extent": [1127, 1191], "text": ["Returns a tuple of the vertices that reference this point."]}, {"indent": 4, "type": "para", "extent": [1191, 1339], "text": ["This requires a search through a primitive\u2019s vertices, so the cost grows with\n    the total number of vertices across this point\u2019s primitives."]}], "indent": 0, "text": [{"text": ["vertices(self)"], "type": "code"}, "  \u2192 ", {"text": ["tuple"], "type": "code"}, " of ", {"text": "", "value": "/hom/hou/Vertex", "fallback_text": "hou.Vertex", "fullpath": "/hom/hou/Vertex", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Point::vertices"}, "extent": [1041, 1092], "container": true, "type": "methods_item", "id": "vertices"}, {"body": [{"indent": 4, "type": "para", "extent": [1415, 1510], "text": ["Return the position of this point as a ", {"text": "", "value": "/hom/hou/Vector3", "fallback_text": "hou.Vector3", "fullpath": "/hom/hou/Vector3", "scheme": "Hom", "type": "link"}, " containing the (X, Y, Z) values."]}, {"indent": 4, "type": "para", "extent": [1510, 1574], "text": ["You can transform the ", {"text": ["Vector3"], "type": "code"}, " using a ", {"text": "", "value": "/hom/hou/Matrix4", "fallback_text": "hou.Matrix4", "fullpath": "/hom/hou/Matrix4", "scheme": "Hom", "type": "link"}, ":"]}, {"lang": null, "indent": 4, "type": "pre", "extent": [1574, 1691], "text": ["\n    xform = hou.node(\"/obj/geo1\").worldTransform()  # Matrix4\n    new_pos = point.position() * xform\n    "]}, {"indent": 4, "type": "para", "extent": [1691, 1890], "text": ["This method is a shortcut for accessing the ", {"text": ["P"], "type": "code"}, " attribute of the point. However, it is not equivalent, because ", {"text": ["point.attribValue(\"P\")"], "type": "code"}, " returns a 3-tuple of floats, not a ", {"text": ["Vector3"], "type": "code"}, " object:"]}, {"lang": "python", "indent": 4, "type": "pre", "extent": [1890, 2003], "text": ["\n    point.position()\n    # is equivalent to\n    hou.Vector3(point.attribValue(\"P\"))\n    "]}], "indent": 0, "text": [{"text": ["position(self)"], "type": "code"}, "  \u2192 ", {"text": "", "value": "/hom/hou/Vector3", "fallback_text": "hou.Vector3", "fullpath": "/hom/hou/Vector3", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Point::position"}, "extent": [1339, 1380], "container": true, "type": "methods_item", "id": "position"}, {"body": [{"indent": 4, "type": "para", "extent": [2075, 2191], "text": ["Changes the point\u2019s location.  You would typically call this method from\n    the code of a Python-defined SOP."]}, {"indent": 4, "type": "para", "extent": [2191, 2517], "text": [{"text": ["position"], "type": "code"}, " is any sequence of floats, such has a ", {"text": "", "value": "/hom/hou/Vector3", "fallback_text": "hou.Vector3", "fullpath": "/hom/hou/Vector3", "scheme": "Hom", "type": "link"}, " or a tuple or list of\n    floats, of length 3 or 4.  The fourth coordinate corresponds to\n    the weight, and is usually 1.  The weight is typically used by NURBS\n    curves and sequences.  If the sequence is of size 3, the weight will be\n    unchanged."]}, {"indent": 4, "type": "para", "extent": [2517, 2617], "text": ["This method is a shortcut for calling ", {"fragment": "#setAttribValue", "text": "", "value": "/hom/hou/Point#setAttribValue", "fallback_text": "hou.Point.setAttribValue", "fullpath": "/hom/hou/Point#setAttribValue", "scheme": "Hom", "type": "link"}, " on\n    the ", {"text": ["P"], "type": "code"}, " attribute."]}, {"lang": "python", "indent": 4, "type": "pre", "extent": [2617, 2741], "text": ["\n    point.setPosition((x, y, z))\n    # is the same as\n    point.setAttribValue(\"P\", (x, y, z))\n    "]}, {"indent": 4, "type": "para", "extent": [2741, 2899], "text": ["Raises ", {"text": "", "value": "/hom/hou/GeometryPermissionError", "fallback_text": "hou.GeometryPermissionError", "fullpath": "/hom/hou/GeometryPermissionError", "scheme": "Hom", "type": "link"}, " if the geometry is not modifiable.\n    Raises ", {"text": "", "value": "/hom/hou/InvalidSize", "fallback_text": "hou.InvalidSize", "fullpath": "/hom/hou/InvalidSize", "scheme": "Hom", "type": "link"}, " if the length of ", {"text": ["position"], "type": "code"}, " is not 3 or 4."]}], "indent": 0, "text": [{"text": ["setPosition(self, position)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::setPosition"}, "extent": [2003, 2037], "container": true, "type": "methods_item", "id": "setPosition"}, {"body": [{"indent": 4, "type": "para", "extent": [2961, 3144], "text": ["Return the weight of this point.  Point weights are displayed in Houdini\u2019s\n    geometry spreadsheet as the fourth component of the position. Point weights\n    are used by NURBS."]}, {"indent": 4, "type": "para", "extent": [3144, 3177], "text": ["Usually, the weight is 1.0."]}, {"indent": 4, "type": "para", "extent": [3177, 3328], "text": ["This method is an alternative for accessing the ", {"text": ["Pw"], "type": "code"}, " attribute of the point\n    that will still work even when the ", {"text": ["Pw"], "type": "code"}, " attribute does not exist."]}, {"lang": "python", "indent": 4, "type": "pre", "extent": [3328, 3489], "text": ["\n    point.weight()\n    # is equivalent to\n    point.attribValue(\"Pw\")\n    # if the \"Pw\" attribute exists, and otherwise returns 1.0\n    "]}, {"indent": 4, "type": "para", "extent": [3489, 3570], "text": ["You can build a ", {"text": "", "value": "/hom/hou/Vector4", "fallback_text": "hou.Vector4", "fullpath": "/hom/hou/Vector4", "scheme": "Hom", "type": "link"}, " containing both the position and weight:"]}, {"lang": "python", "indent": 4, "type": "pre", "extent": [3570, 3660], "text": ["\n    hou.Vector4(tuple(point.position()) + (point.weight(),))\n    "]}, {"indent": 4, "type": "para", "extent": [3660, 3701], "text": ["See also ", {"fragment": "#position", "text": "", "value": "/hom/hou/Point#position", "fallback_text": "hou.Point.position", "fullpath": "/hom/hou/Point#position", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["weight(self)"], "type": "code"}, "  \u2192 ", {"text": ["float"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::weight"}, "extent": [2899, 2928], "container": true, "type": "methods_item", "id": "weight"}, {"body": [{"indent": 4, "type": "para", "extent": [3766, 3879], "text": ["Change the point\u2019s weight.  You would typically call this method from\n    the code of a Python-defined SOP."]}, {"indent": 4, "type": "para", "extent": [3879, 4028], "text": ["This method is an alternative for calling ", {"fragment": "#setAttribValue", "text": "", "value": "/hom/hou/Point#setAttribValue", "fallback_text": "hou.Point.setAttribValue", "fullpath": "/hom/hou/Point#setAttribValue", "scheme": "Hom", "type": "link"}, " on\n    the ", {"text": ["Pw"], "type": "code"}, " attribute that will create the attribute if necessary."]}, {"indent": 4, "type": "para", "extent": [4028, 4148], "text": ["See ", {"fragment": "#weight", "text": "", "value": "/hom/hou/Point#weight", "fallback_text": "hou.Point.weight", "fullpath": "/hom/hou/Point#weight", "scheme": "Hom", "type": "link"}, " for more information about a point\u2019s weight.\n    See also ", {"fragment": "#setPosition", "text": "", "value": "/hom/hou/Point#setPosition", "fallback_text": "hou.Point.setPosition", "fullpath": "/hom/hou/Point#setPosition", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["setWeight(self, weight)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::setWeight"}, "extent": [3701, 3730], "container": true, "type": "methods_item", "id": "setWeight"}], "container": true, "role": "item_group", "type": "methods_item_group"}], "indent": 0, "level": 2, "text": ["Point data"], "extent": [418, 436], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [4260, 4304], "text": ["Always returns ", {"text": ["hou.attribType.Point"], "type": "code"}, "."]}, {"indent": 4, "type": "para", "extent": [4304, 4561], "text": ["This is only useful if you want to write generic code that works whether the input objects are ", {"text": "", "value": "/hom/hou/Prim", "fallback_text": "hou.Prim", "fullpath": "/hom/hou/Prim", "scheme": "Hom", "type": "link"}, ", ", {"text": "", "value": "/hom/hou/Point", "fallback_text": "hou.Point", "fullpath": "/hom/hou/Point", "scheme": "Hom", "type": "link"}, ", or ", {"text": "", "value": "/hom/hou/Vertex", "fallback_text": "hou.Vertex", "fullpath": "/hom/hou/Vertex", "scheme": "Hom", "type": "link"}, ". They all have an ", {"text": ["attribType()"], "type": "code"}, " method that returns the right ", {"text": ["attribType"], "type": "code"}, " value for the given object."]}], "indent": 0, "text": [{"text": ["attribType(self)"], "type": "code"}, "  \u2192 ", {"text": "", "value": "/hom/hou/attribType", "fallback_text": "hou.attribType", "fullpath": "/hom/hou/attribType", "scheme": "Hom", "type": "link"}, " enum value"], "role": "item", "attrs": {"cppname": "HOM_Point::attribType"}, "extent": [4165, 4223], "container": true, "type": "methods_item", "id": "attribType"}, {"body": [{"indent": 4, "type": "para", "extent": [4755, 4897], "text": ["Return value stored in this point for a particular attribute.  The\n    attribute may be specified by name or by ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object."]}, {"indent": 4, "type": "para", "extent": [4897, 5156], "text": ["Looking up an attribute value using a ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object is slightly\n    faster than looking it up by name.  When looking up attribute values inside\n    a loop, look up the ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object outside the loop, and pass it\n    into this method."]}, {"indent": 4, "type": "para", "extent": [5156, 5272], "text": ["Note that the point position attribute is named ", {"text": ["P"], "type": "code"}, " and is 4 floats in size.\n    This attribute always exists."]}, {"indent": 4, "type": "para", "extent": [5272, 5514], "text": ["When looking up the attribute values of all points, it is faster to call\n    ", {"fragment": "#pointFloatAttribValues", "text": "", "value": "/hom/hou/Geometry#pointFloatAttribValues", "fallback_text": "hou.Geometry.pointFloatAttribValues", "fullpath": "/hom/hou/Geometry#pointFloatAttribValues", "scheme": "Hom", "type": "link"}, " or\n    ", {"fragment": "#pointFloatAttribValuesAsString", "text": "", "value": "/hom/hou/Geometry#pointFloatAttribValuesAsString", "fallback_text": "hou.Geometry.pointFloatAttribValuesAsString", "fullpath": "/hom/hou/Geometry#pointFloatAttribValuesAsString", "scheme": "Hom", "type": "link"}, " than to call this method\n    for each point in the geometry."]}, {"indent": 4, "type": "para", "extent": [5514, 5591], "text": ["Raises ", {"text": "", "value": "/hom/hou/OperationFailed", "fallback_text": "hou.OperationFailed", "fullpath": "/hom/hou/OperationFailed", "scheme": "Hom", "type": "link"}, " if no attribute exists with this name."]}, {"lang": "python", "indent": 4, "type": "pre", "extent": [5591, 6260], "text": ["\n    # Create an object containing two SOPs: a box SOP wired into a color SOP.\n    geo_node = hou.node(\"/obj\").createNode(\"geo\")\n    box = geo_node.createNode(\"box\")\n    color = geo_node.createNode(\"color\")\n    color.setFirstInput(box)\n\n    # Grab the color SOP's geometry, get its first point, and print out the\n    # value of the Cd attribute.\n    geo = color.geometry()\n    point = geo.iterPoints()[0]\n    print point.attribValue(\"Cd\")\n\n    # Look up the Cd attribute and illustrate how to access the attribute\n    # value using the attribute object.\n    cd_attribute = geo.findPointAttrib(\"Cd\")\n    print point.attribValue(cd_attribute)\n    "]}], "indent": 0, "text": [{"text": ["attribValue(self, name_or_attrib)"], "type": "code"}, "  \u2192 ", {"text": ["int"], "type": "code"}, ", ", {"text": ["float"], "type": "code"}, ", ", {"text": ["str"], "type": "code"}, ", ", {"text": ["tuple"], "type": "code"}, " or ", {"text": ["dictionary"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::attribValue", "replaces": "/expressions/point /expressions/points /expressions/poppoint /expressions/poppointid"}, "extent": [4561, 4650], "container": true, "type": "methods_item", "id": "attribValue"}, {"body": [{"indent": 4, "type": "para", "extent": [6357, 6619], "text": ["Store an attribute value in this point.  The attribute may be specified by\n    name or by ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object, and must be an existing point attribute\n    in the geometry.  You would typically call this method from the code of a\n    Python-defined SOP."]}, {"indent": 4, "type": "para", "extent": [6619, 6941], "text": ["Raises ", {"text": "", "value": "/hom/hou/OperationFailed", "fallback_text": "hou.OperationFailed", "fullpath": "/hom/hou/OperationFailed", "scheme": "Hom", "type": "link"}, " if no attribute exists with this name\n    or if the attribute\u2019s data type does not match the value passed in.  If the\n    attribute\u2019s size is more than 1, the attribute value must be a sequence of\n    integers/floats, and the size of the sequence must match the attribute\u2019s\n    size."]}, {"indent": 4, "type": "para", "extent": [6941, 7023], "text": ["Raises ", {"text": "", "value": "/hom/hou/GeometryPermissionError", "fallback_text": "hou.GeometryPermissionError", "fullpath": "/hom/hou/GeometryPermissionError", "scheme": "Hom", "type": "link"}, " if this geometry is not modifiable."]}, {"indent": 4, "type": "para", "extent": [7023, 7077], "text": ["See ", {"fragment": "#addAttrib", "text": "", "value": "/hom/hou/Geometry#addAttrib", "fallback_text": "hou.Geometry.addAttrib", "fullpath": "/hom/hou/Geometry#addAttrib", "scheme": "Hom", "type": "link"}, " for an example."]}, {"indent": 4, "type": "para", "extent": [7077, 7091], "text": ["See also:"]}, {"body": [{"indent": 4, "blevel": 6, "type": "bullet", "extent": [7091, 7127], "text": [{"fragment": "#setAttribValue", "text": "", "value": "/hom/hou/Prim#setAttribValue", "fallback_text": "hou.Prim.setAttribValue", "fullpath": "/hom/hou/Prim#setAttribValue", "scheme": "Hom", "type": "link"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [7127, 7165], "text": [{"fragment": "#setAttribValue", "text": "", "value": "/hom/hou/Vertex#setAttribValue", "fallback_text": "hou.Vertex.setAttribValue", "fullpath": "/hom/hou/Vertex#setAttribValue", "scheme": "Hom", "type": "link"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [7165, 7212], "text": [{"fragment": "#setGlobalAttribValue", "text": "", "value": "/hom/hou/Geometry#setGlobalAttribValue", "fallback_text": "hou.Geometry.setGlobalAttribValue", "fullpath": "/hom/hou/Geometry#setGlobalAttribValue", "scheme": "Hom", "type": "link"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "text": [{"text": ["setAttribValue(self, name_or_attrib, attrib_value)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::setAttribValue"}, "extent": [6260, 6317], "container": true, "type": "methods_item", "id": "setAttribValue"}, {"body": [{"indent": 4, "type": "para", "extent": [7310, 7465], "text": ["Return the point attribute value for a particular floating point attribute.\n    The attribute may be specified by name or by ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object."]}, {"indent": 4, "type": "para", "extent": [7465, 7586], "text": ["Raises ", {"text": "", "value": "/hom/hou/OperationFailed", "fallback_text": "hou.OperationFailed", "fullpath": "/hom/hou/OperationFailed", "scheme": "Hom", "type": "link"}, " if no attribute exists with this name\n    or the attribute is not float of size 1."]}, {"indent": 4, "type": "para", "extent": [7586, 7749], "text": ["In most cases, you\u2019ll just use ", {"fragment": "#attribValue", "text": "", "value": "/hom/hou/Point#attribValue", "fallback_text": "hou.Point.attribValue", "fullpath": "/hom/hou/Point#attribValue", "scheme": "Hom", "type": "link"}, " to access\n    attribute values.  Houdini uses this method internally to implement\n    attribValue."]}], "indent": 0, "text": [{"text": ["floatAttribValue(self, name_or_attrib)"], "type": "code"}, "  \u2192 ", {"text": ["float"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::floatAttribValue"}, "extent": [7212, 7267], "container": true, "type": "methods_item", "id": "floatAttribValue"}, {"body": [{"indent": 4, "type": "para", "extent": [7866, 8066], "text": ["Return the point attribute value for a particular floating point\n    attribute.  The attribute may be specified by name or by\n    ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object.  The return value is a tuple of floats."]}, {"indent": 4, "type": "para", "extent": [8066, 8192], "text": ["It is valid to call this method when the attribute\u2019s size is 1.  In this\n    case, a tuple with one element is returned."]}, {"indent": 4, "type": "para", "extent": [8192, 8235], "text": ["See also ", {"fragment": "#attribValue", "text": "", "value": "/hom/hou/Point#attribValue", "fallback_text": "hou.Point.attribValue", "fullpath": "/hom/hou/Point#attribValue", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["floatListAttribValue(self, name_or_attrib)"], "type": "code"}, "  \u2192 ", {"text": ["tuple"], "type": "code"}, " of ", {"text": ["float"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::floatListAttribValue"}, "extent": [7749, 7819], "container": true, "type": "methods_item", "id": "floatListAttribValue"}, {"body": [{"indent": 4, "type": "para", "extent": [8327, 8554], "text": ["Return the point attribute value for a particular integer\n    attribute of size 1.  The attribute may be specified by name or by\n    ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object.  See ", {"fragment": "#floatAttribValue", "text": "", "value": "/hom/hou/Point#floatAttribValue", "fallback_text": "hou.Point.floatAttribValue", "fullpath": "/hom/hou/Point#floatAttribValue", "scheme": "Hom", "type": "link"}, " for more\n    information."]}], "indent": 0, "text": [{"text": ["intAttribValue(self, name_or_attrib)"], "type": "code"}, "  \u2192 ", {"text": ["int"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::intAttribValue"}, "extent": [8235, 8286], "container": true, "type": "methods_item", "id": "intAttribValue"}, {"body": [{"indent": 4, "type": "para", "extent": [8665, 8924], "text": ["Return the point attribute value for a particular integer attribute.  The\n    attribute may be specified by name or by ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object.  The\n    return value is a tuple of ints.  See ", {"fragment": "#floatListAttribValue", "text": "", "value": "/hom/hou/Point#floatListAttribValue", "fallback_text": "hou.Point.floatListAttribValue", "fullpath": "/hom/hou/Point#floatListAttribValue", "scheme": "Hom", "type": "link"}, "\n    for more information."]}], "indent": 0, "text": [{"text": ["intListAttribValue(self, name_or_attrib)"], "type": "code"}, "  \u2192 ", {"text": ["tuple"], "type": "code"}, " of ", {"text": ["int"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::intListAttribValue"}, "extent": [8554, 8620], "container": true, "type": "methods_item", "id": "intListAttribValue"}, {"body": [{"indent": 4, "type": "para", "extent": [9022, 9234], "text": ["Return the point attribute value for a particular string attribute.  The\n    attribute may be specified by name or by ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object.  See\n    ", {"fragment": "#floatAttribValue", "text": "", "value": "/hom/hou/Point#floatAttribValue", "fallback_text": "hou.Point.floatAttribValue", "fullpath": "/hom/hou/Point#floatAttribValue", "scheme": "Hom", "type": "link"}, " for more information."]}], "indent": 0, "text": [{"text": ["stringAttribValue(self, name_or_attrib)"], "type": "code"}, "  \u2192 ", {"text": ["str"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::stringAttribValue"}, "extent": [8924, 8978], "container": true, "type": "methods_item", "id": "stringAttribValue"}, {"body": [{"indent": 4, "type": "para", "extent": [9351, 9544], "text": ["Return the point attribute value for a particular string attribute.  The\n    attribute may be specified by name or by ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object.  The\n    return value is a tuple of strings."]}, {"indent": 4, "type": "para", "extent": [9544, 9733], "text": ["It is valid to call this method when the attribute\u2019s size is 1.  In this\n    case, a tuple with one element is returned. See\n    ", {"fragment": "#floatAttribValue", "text": "", "value": "/hom/hou/Point#floatAttribValue", "fallback_text": "hou.Point.floatAttribValue", "fullpath": "/hom/hou/Point#floatAttribValue", "scheme": "Hom", "type": "link"}, " for more information."]}], "indent": 0, "text": [{"text": ["stringListAttribValue(self, name_or_attrib)"], "type": "code"}, "  \u2192 ", {"text": ["tuple"], "type": "code"}, " of ", {"text": ["str"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::stringListAttribValue"}, "extent": [9234, 9303], "container": true, "type": "methods_item", "id": "stringListAttribValue"}, {"body": [{"indent": 4, "type": "para", "extent": [9834, 10050], "text": ["Return the point attribute value for a particular dictionary attribute.  The\n    attribute may be specified by name or by ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object.  See\n    ", {"fragment": "#floatAttribValue", "text": "", "value": "/hom/hou/Point#floatAttribValue", "fallback_text": "hou.Point.floatAttribValue", "fullpath": "/hom/hou/Point#floatAttribValue", "scheme": "Hom", "type": "link"}, " for more information."]}], "indent": 0, "text": [{"text": ["dictAttribValue(self, name_or_attrib)"], "type": "code"}, "  \u2192 ", {"text": ["dictionary"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::dictAttribValue"}, "extent": [9733, 9792], "container": true, "type": "methods_item", "id": "dictAttribValue"}, {"body": [{"indent": 4, "type": "para", "extent": [10163, 10365], "text": ["Return the point attribute value for a particular dictionary attribute.  The\n    attribute may be specified by name or by ", {"text": "", "value": "/hom/hou/Attrib", "fallback_text": "hou.Attrib", "fullpath": "/hom/hou/Attrib", "scheme": "Hom", "type": "link"}, " object.  The\n    return value is a tuple of dictionaries."]}, {"indent": 4, "type": "para", "extent": [10365, 10555], "text": ["It is valid to call this method when the attribute\u2019s size is 1.  In this\n    case, a tuple with one element is returned. See\n    ", {"fragment": "#floatAttribValue", "text": "", "value": "/hom/hou/Point#floatAttribValue", "fallback_text": "hou.Point.floatAttribValue", "fullpath": "/hom/hou/Point#floatAttribValue", "scheme": "Hom", "type": "link"}, " for more information."]}], "indent": 0, "text": [{"text": ["dictListAttribValue(self, name_or_attrib)"], "type": "code"}, "  \u2192 ", {"text": ["tuple"], "type": "code"}, " of ", {"text": ["str"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Point::dictListAttribValue"}, "extent": [10050, 10117], "container": true, "type": "methods_item", "id": "dictListAttribValue"}], "container": true, "role": "item_group", "type": "methods_item_group"}], "indent": 0, "level": 2, "text": ["Attributes"], "extent": [4148, 4165], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [], "indent": 0, "text": [{"text": ["transform(self, matrix)"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Point::transform"}, "extent": [10577, 10607], "container": true, "type": "methods_item", "id": "transform"}, {"body": [], "indent": 0, "text": [{"text": ["destroy(self)"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Point::destroy"}, "extent": [10659, 10678], "container": true, "type": "methods_item", "id": "destroy"}, {"body": [], "indent": 0, "text": [{"text": ["closestPrim(self)"], "type": "code"}, "  \u2192 ", {"text": "", "value": "/hom/hou/Prim", "fallback_text": "hou.Prim", "fullpath": "/hom/hou/Prim", "scheme": "Hom", "type": "link"}, " or ", {"text": ["None"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Point::closestPrim"}, "extent": [10728, 10779], "container": true, "type": "methods_item", "id": "closestPrim"}, {"body": [], "indent": 0, "text": [{"text": ["minDistanceToPrim(self, prim)"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Point::minDistanceToPrim", "replaces": "/expressions/pointdist"}, "extent": [10833, 10868], "container": true, "type": "methods_item", "id": "minDistanceToPrim"}, {"body": [], "indent": 0, "text": [{"text": ["pointsOnPrimsSharingThisPoint(self, num_prims)"], "type": "code"}, "  \u2192 ", {"text": ["tuple"], "type": "code"}, " of ", {"text": "", "value": "/hom/hou/Point", "fallback_text": "hou.Point", "fullpath": "/hom/hou/Point", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Point::pointsOnPrimsSharingThisPoint", "replaces": "/expressions/pointneighbours"}, "extent": [10957, 11039], "container": true, "type": "methods_item", "id": "pointsOnPrimsSharingThisPoint"}, {"body": [], "indent": 0, "text": [{"text": ["uvOfClosestLocationOnPrim(self, prim)"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Point::uvOfClosestLocationOnPrim"}, "extent": [11146, 11189], "container": true, "type": "methods_item", "id": "uvOfClosestLocationOnPrim"}, {"body": [], "indent": 0, "text": [{"text": ["hasCollided(self)"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Point::hasCollided", "replaces": "/expressions/iscollided"}, "extent": [11257, 11280], "container": true, "type": "methods_item", "id": "hasCollided"}, {"body": [], "indent": 0, "text": [{"text": ["isStuck(self)"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Point::isStuck", "replaces": "/expressions/isstuck"}, "extent": [11364, 11383], "container": true, "type": "methods_item", "id": "isStuck"}], "container": true, "role": "item_group", "type": "methods_item_group"}], "indent": 0, "level": 2, "text": ["Not implemented"], "extent": [10555, 10577], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Methods", "role": "section", "extent": [409, 418], "container": true, "type": "methods_section", "id": "methods"}], "summary": ["Represents a point on a geometry primitive, such as a polygon or NURBS surface."], "type": "root", "attrs": {"cppname": "HOM_Point", "type": "homclass", "group": "geo"}, "title": [{"text": "hou.", "type": "supertitle"}, "Point"]}