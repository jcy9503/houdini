{"body": [{"indent": 0, "text": ["Constraint Parent"], "type": "title", "extent": [76, 98], "level": 0}, {"indent": 0, "type": "summary", "extent": [98, 126], "text": ["Reparent an object."]}, {"indent": 0, "type": "para", "extent": [126, 213], "text": ["The Constraint Parent CHOP reparents an object from a current parent to a new parent."]}, {"indent": 0, "type": "para", "extent": [213, 371], "text": ["The first input is world transform of the object to reparent.\nThe second input is the current parent transform.\nThe third input is the new parent transform."]}, {"body": [{"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [48, 82], "text": ["The alignment option to use."]}, {"body": [{"body": [{"type": "para", "indent": 8, "extent": [105, 226], "text": ["Find the earliest start and latest end, and extend all\n        inputs to that range using the extend conditions."]}], "container": true, "text": ["Extend to Min/Max"], "extent": [82, 105], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [250, 363], "text": ["Find the earliest start and latest end, and stretch every\n        channel\u2019s start and end to that range."]}], "container": true, "text": ["Stretch to Min/Max"], "extent": [226, 250], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [385, 549], "text": ["Find the earliest start and shift all channels so they all\n        start at that index. All channels are extended to the length\n        of the longest one."]}], "container": true, "text": ["Shift to Minimum"], "extent": [363, 385], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [571, 723], "text": ["Find the latest end and shift all channels so they all end\n        at that index. Extend all channels to the length of the\n        longest one."]}], "container": true, "text": ["Shift to Maximum"], "extent": [549, 571], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [752, 874], "text": ["Shift all channels to the start of the first channel and\n        sample all inputs using the first input\u2019s range."]}], "container": true, "text": ["Shift to First Interval"], "extent": [723, 752], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [902, 954], "text": ["Trim all channels to first channel\u2019s range."]}], "container": true, "text": ["Trim to First Interval"], "extent": [874, 902], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [985, 1044], "text": ["Stretch all channels to the first channel\u2019s range."]}], "container": true, "text": ["Stretch to First Interval"], "extent": [954, 985], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [1075, 1206], "text": ["Trim all channels to the smallest start/end interval. The\n        start and end values may not come from the same channel."]}], "container": true, "text": ["Trim to Smallest Interval"], "extent": [1044, 1075], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [1240, 1375], "text": ["Stretch all channels to the smallest start/end interval. The\n        start and end values may not come from the same channel."]}], "container": true, "text": ["Stretch to Smallest Interval"], "extent": [1206, 1240], "indent": 4, "type": "dt"}], "type": "dt_group", "container": true}], "container": true, "text": ["Align"], "role": "item", "extent": [40, 48], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [1382, 1428], "text": ["Specifies the range of data to generate."]}, {"body": [{"body": [{"type": "para", "indent": 8, "extent": [1458, 1493], "text": ["All of the animated range."]}], "container": true, "text": ["Use Full Animation Range"], "extent": [1428, 1458], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [1516, 1562], "text": ["Only the sample at the current frame."]}], "container": true, "text": ["Use Current Frame"], "extent": [1493, 1516], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [1581, 1663], "text": ["The range is specified from the ", {"text": ["Start"], "type": "ui"}, " and ", {"text": ["End"], "type": "ui"}, "\n        parameters."]}], "container": true, "text": ["Use Start/End"], "extent": [1562, 1581], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [1688, 1787], "text": ["The range is taken from range of keys available in the\n        evaluated Value parameters."]}], "container": true, "text": ["Use Value Animation"], "extent": [1663, 1688], "indent": 4, "type": "dt"}], "type": "dt_group", "container": true}], "container": true, "text": ["Range"], "role": "item", "extent": [1375, 1382], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [1817, 1859], "text": ["The start time of the channel range."]}], "container": true, "text": ["Start"], "role": "item", "attrs": {"channels": "/start"}, "extent": [1787, 1794], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [1885, 1925], "text": ["The end time of the channel range."]}], "container": true, "text": ["End"], "role": "item", "attrs": {"channels": "/end"}, "extent": [1859, 1864], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [1960, 1994], "text": ["The sample rate of the CHOP."]}], "container": true, "text": ["Sample Rate"], "role": "item", "attrs": {"channels": "/rate"}, "extent": [1925, 1938], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [2013, 2122], "text": ["The number of separate threads to use to evaluate the channel samples.\n    The default is no threading."]}, {"type": "para", "indent": 4, "extent": [2122, 2334], "text": ["Since Houdini evaluates the VEX program for each sample in the input\n    geometry, it can benefit greatly from threading on a multi-processor\n    or multi-core machine when the CHOP nodes have many samples."]}], "container": true, "text": ["Number of Threads"], "role": "item", "extent": [1994, 2013], "indent": 0, "type": "parameters_item"}], "type": "parameters_item_group", "container": true}], "container": true, "level": 2, "text": ["Channel"], "extent": [16, 40], "indent": 0, "type": "h", "id": "channel"}, {"body": [{"indent": 0, "type": "para", "extent": [2356, 2423], "text": ["Some of these parameters may not be available on all CHOP nodes."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [2430, 2612], "text": ["To determine which channels get affected, some CHOPs have a scope string. Patterns can be used in the scope, for example ", {"text": ["*"], "type": "code"}, " (match all), and ", {"text": ["?"], "type": "code"}, " (match single character). "]}, {"indent": 4, "type": "para", "extent": [2612, 2691], "text": ["The following are examples of possible channel name matching options:"]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [2704, 2748], "text": ["Matches a single channel name."]}], "container": true, "text": [{"text": ["chan2"], "type": "code"}], "extent": [2691, 2704], "indent": 4, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2770, 2832], "text": ["Matches four channel names, separated by spaces."]}], "container": true, "text": [{"text": ["chan3 tx ty tz"], "type": "code"}], "extent": [2748, 2770], "indent": 4, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2845, 2908], "text": ["Matches each channel that starts with ", {"text": ["chan"], "type": "code"}, "."]}], "container": true, "text": [{"text": ["chan*"], "type": "code"}], "extent": [2832, 2845], "indent": 4, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2922, 2979], "text": ["Matches each channel that has ", {"text": ["foot"], "type": "code"}, " in it."]}], "container": true, "text": [{"text": ["*foot*"], "type": "code"}], "extent": [2908, 2922], "indent": 4, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2989, 3093], "text": ["The ", {"text": ["?"], "type": "code"}, " matches a single character. ", {"text": ["t?"], "type": "code"}, " matches two-character channels starting with t.  "]}], "container": true, "text": [{"text": ["t?"], "type": "code"}], "extent": [2979, 2989], "indent": 4, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3107, 3162], "text": ["Matches channels ", {"text": ["rx"], "type": "code"}, ", ", {"text": ["ry"], "type": "code"}, " and ", {"text": ["rz"], "type": "code"}, "."]}], "container": true, "text": [{"text": ["r[xyz]"], "type": "code"}], "extent": [3093, 3107], "indent": 4, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3182, 3262], "text": ["Matches number ranges giving ", {"text": ["blend3"], "type": "code"}, ", ", {"text": ["blend5"], "type": "code"}, ", and ", {"text": ["blend7"], "type": "code"}, "."]}], "container": true, "text": [{"text": ["blend[3-7:2]"], "type": "code"}], "extent": [3162, 3182], "indent": 4, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3285, 3356], "text": ["Matches channels ", {"text": ["blend2"], "type": "code"}, ", ", {"text": ["blend3"], "type": "code"}, ", ", {"text": ["blend5"], "type": "code"}, ", ", {"text": ["blend13"], "type": "code"}, "."]}], "container": true, "text": [{"text": ["blend[2-3,5,13]"], "type": "code"}], "extent": [3262, 3285], "indent": 4, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3370, 3458], "text": [{"text": ["[xyz]"], "type": "code"}, "matches three characters, giving channels ", {"text": ["tx"], "type": "code"}, ", ", {"text": ["ty"], "type": "code"}, " and ", {"text": ["tz"], "type": "code"}, "."]}], "container": true, "text": [{"text": ["t[xyz]"], "type": "code"}], "extent": [3356, 3370], "indent": 4, "type": "dt"}], "container": true, "type": "dt_group"}], "container": true, "text": ["Scope"], "role": "item", "extent": [2423, 2430], "indent": 0, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3477, 3585], "text": ["The Sample Rate Match Options handle cases where multiple input CHOPs\u2019 sample rates are different."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [3621, 3682], "text": ["Use rate of first input to resample others."]}], "container": true, "text": ["Resample At First Input\u2019s Rate"], "extent": [3585, 3621], "indent": 4, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3712, 3758], "text": ["Resample to highest sample rate."]}], "container": true, "text": ["Resample At Maximum Rate"], "extent": [3682, 3712], "indent": 4, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3788, 3841], "text": ["Resample to the lowest sample rate."]}], "container": true, "text": ["Resample At Minimum Rate"], "extent": [3758, 3788], "indent": 4, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3868, 3923], "text": ["Does not accept conflicting sample rates."]}], "container": true, "text": ["Error if Rates Differ"], "extent": [3841, 3868], "indent": 4, "type": "dt"}], "container": true, "type": "dt_group"}], "container": true, "text": ["Sample Rate Match"], "role": "item", "extent": [3458, 3477], "indent": 0, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3930, 3990], "text": ["The units for which time parameters are specified."]}, {"indent": 4, "type": "para", "extent": [3990, 4160], "text": ["For example, you can specify the amount of time a lag should last for in seconds (default), frames (at the Houdini FPS), or samples (in the CHOP\u2019s sample rate)."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [4170, 4282], "text": ["When you change the Units parameter, it does not convert the existing parameters to the new units."]}], "container": true, "role": "item", "extent": [4160, 4170], "indent": 4, "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}], "container": true, "text": ["Units"], "role": "item", "extent": [3923, 3930], "indent": 0, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4294, 4694], "text": ["Time Slicing is a feature which boosts cooking performance and reduces memory usage. Traditionally, CHOPs calculate the channel over its entire frame range. If the channel does need to be evaluated every frame, then cooking the entire range of the channel is unnecessary. It is more efficient to calculate only the fraction of the channel that is needed. This fraction is known as a Time Slice."]}], "container": true, "text": ["Time Slice"], "role": "item", "extent": [4282, 4294], "indent": 0, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4702, 4816], "text": ["Causes the memory consumed by a CHOP to be released after it is cooked and the data passed to the next CHOP."]}], "container": true, "text": ["Unload"], "role": "item", "extent": [4694, 4702], "indent": 0, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4836, 4932], "text": ["The Export prefix is prepended to CHOP channel names to determine where to export to. "]}, {"indent": 4, "type": "para", "extent": [4932, 5071], "text": ["For example, if the CHOP channel was named ", {"text": ["geo1:tx"], "type": "code"}, ", and the prefix was ", {"text": ["/obj"], "type": "code"}, ", the channel would be exported to ", {"text": ["/obj/geo1/tx"], "type": "code"}, "."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [5081, 5214], "text": ["You can leave the ", {"text": ["Export Prefix"], "type": "ui"}, " blank, but then your CHOP track names need to be absolute paths, such as ", {"text": ["obj:geo1:tx"], "type": "code"}, "."]}], "container": true, "role": "item", "extent": [5071, 5081], "indent": 4, "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}], "container": true, "text": ["Export Prefix"], "role": "item", "extent": [4816, 4836], "indent": 0, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5227, 5452], "text": ["Every CHOP has this option. Each CHOP gets a default color assigned for display in the Graph port, but you can override the color in the Common page under Graph Color. There are 36 RGB color combinations in the Palette."]}], "container": true, "text": ["Graph Color"], "role": "item", "extent": [5214, 5227], "indent": 0, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5470, 5661], "text": ["When the graph displays the animation curves and a CHOP has two or more channels, this defines the difference in color from one channel to the next, giving a rainbow spectrum of colors."]}], "container": true, "text": ["Graph Color Step"], "role": "item", "extent": [5452, 5470], "indent": 0, "type": "parameters_item"}], "container": true, "type": "parameters_item_group"}], "container": true, "level": 2, "text": ["Common"], "extent": [2334, 2356], "indent": 0, "type": "h", "id": "common"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [371, 383], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 4, "blevel": 6, "type": "bullet", "extent": [444, 516], "text": [{"text": ["Constraint Parent Blend Shelf Tool"], "fullpath": "/shelf/constraintparentblend", "scheme": null, "type": "link", "value": "/shelf/constraintparentblend"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [516, 550], "text": [{"text": "", "fullpath": "/nodes/chop/constraintblend", "scheme": "Node", "type": "link", "value": "/nodes/chop/constraintblend"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [550, 587], "text": [{"text": "", "fullpath": "/nodes/chop/constraintsequence", "scheme": "Node", "type": "link", "value": "/nodes/chop/constraintsequence"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [587, 628], "text": [{"text": "", "fullpath": "/nodes/chop/constraintsimpleblend", "scheme": "Node", "type": "link", "value": "/nodes/chop/constraintsimpleblend"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [435, 444], "container": true, "type": "related_section", "id": "related"}], "title": ["Constraint Parent"], "summary": ["Reparent an object."], "attrs": {"version": null, "namespace": null, "internal": "constraintparent", "context": "chop", "type": "node", "icon": "SHELF/parent"}, "included": ["/nodes/chop/common"], "type": "root"}