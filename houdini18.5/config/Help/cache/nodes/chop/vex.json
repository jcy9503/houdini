{"body": [{"indent": 0, "text": ["VEX CHOP"], "type": "title", "extent": [59, 72], "level": 0}, {"indent": 0, "type": "summary", "extent": [72, 139], "text": ["References a VEX program that can manipulate channel data."]}, {"indent": 0, "type": "para", "extent": [139, 392], "text": ["This node references a (textual) VEX program which can use\n", {"text": ["CHOP context "], "fullpath": "/vex/contexts/chop", "scheme": null, "type": "link", "value": "/vex/contexts/chop"}, " ", {"text": ["VEX functions"], "fullpath": "/vex/functions/index", "scheme": null, "type": "link", "value": "/vex/functions/"}, " to\nmanipulate channel data. (To define a VOP network instead of a VEX program,\nuse the ", {"text": ["VOP CHOP"], "fullpath": "/nodes/chop/vopchop", "scheme": "Node", "type": "link", "value": "/nodes/chop/vopchop"}, " instead.)"]}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [417, 564], "text": ["Path to the ", {"text": ["compiled"], "type": "em"}, " VEX program. You must use ", {"text": ["vcc"], "fullpath": "/vex/vcc", "scheme": null, "type": "link", "value": "/vex/vcc"}, " to\n    compile your source code and point this node to the compiled file."]}], "indent": 0, "text": ["VEX Script"], "role": "item", "extent": [404, 417], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [586, 633], "text": ["Reloads the referenced compiled VEX file."]}], "indent": 0, "text": ["Reload VEX functions"], "role": "item", "extent": [564, 586], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [640, 674], "text": ["The alignment option to use."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [697, 818], "text": ["Find the earliest start and latest end, and extend all\n        inputs to that range using the extend conditions."]}], "indent": 4, "text": ["Extend to Min/Max"], "extent": [674, 697], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [842, 955], "text": ["Find the earliest start and latest end, and stretch every\n        channel\u2019s start and end to that range."]}], "indent": 4, "text": ["Stretch to Min/Max"], "extent": [818, 842], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [977, 1141], "text": ["Find the earliest start and shift all channels so they all\n        start at that index. All channels are extended to the length\n        of the longest one."]}], "indent": 4, "text": ["Shift to Minimum"], "extent": [955, 977], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [1163, 1315], "text": ["Find the latest end and shift all channels so they all end\n        at that index. Extend all channels to the length of the\n        longest one."]}], "indent": 4, "text": ["Shift to Maximum"], "extent": [1141, 1163], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [1344, 1466], "text": ["Shift all channels to the start of the first channel and\n        sample all inputs using the first input\u2019s range."]}], "indent": 4, "text": ["Shift to First Interval"], "extent": [1315, 1344], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [1494, 1546], "text": ["Trim all channels to first channel\u2019s range."]}], "indent": 4, "text": ["Trim to First Interval"], "extent": [1466, 1494], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [1577, 1636], "text": ["Stretch all channels to the first channel\u2019s range."]}], "indent": 4, "text": ["Stretch to First Interval"], "extent": [1546, 1577], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [1667, 1798], "text": ["Trim all channels to the smallest start/end interval. The\n        start and end values may not come from the same channel."]}], "indent": 4, "text": ["Trim to Smallest Interval"], "extent": [1636, 1667], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [1832, 1971], "text": ["Stretch all channels to the smallest start/end interval. The\n        start and end values may not come from the same channel."]}], "indent": 4, "text": ["Stretch to Smallest Interval"], "extent": [1798, 1832], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Align"], "role": "item", "extent": [633, 640], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [392, 404], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [1980, 2002], "text": [{"text": "", "fullpath": "/nodes/chop/vopchop", "scheme": "Node", "type": "link", "value": "/nodes/chop/vopchop"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [2002, 2051], "text": [{"text": ["Per-node user-defined data"], "fullpath": "/hom/nodeuserdata", "scheme": null, "type": "link", "value": "/hom/nodeuserdata"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [1971, 1980], "container": true, "type": "related_section", "id": "related"}], "summary": ["References a VEX program that can manipulate channel data."], "type": "root", "attrs": {"version": null, "namespace": null, "internal": "vex", "context": "chop", "type": "node", "icon": "CHOP/vex"}, "title": ["VEX CHOP"]}