{"body": [{"indent": 0, "text": ["Mountain"], "type": "title", "extent": [0, 13], "level": 0}, {"indent": 0, "type": "summary", "extent": [140, 208], "text": ["Displaces points along their normals based on fractal noise."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [214, 396], "text": ["This operator uses  ", {"text": ["normal attributes"], "fullpath": "/model/attributes", "scheme": null, "type": "link", "value": "/model/attributes"}, "  on the\n    input geometry. If a normal has 0 length, this operator will not\n    displace the point along that normal."]}], "indent": 0, "role": "item", "extent": [208, 214], "container": true, "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}, {"body": [{"body": [{"type": "ord", "blevel": 6, "indent": 4, "extent": [381, 437], "text": ["Select the points you want to displace."]}, {"type": "ord", "blevel": 6, "indent": 4, "extent": [437, 530], "text": ["Click the ", {"text": "", "fullpath": "/shelf/SOP/mountain", "scheme": "Icon", "type": "link", "value": "SOP/mountain"}, {"text": ["Mountain"], "fullpath": "/nodes/sop/mountain", "scheme": "Node", "type": "link", "value": "/nodes/sop/mountain"}, " tool on the ", {"text": ["Deform"], "type": "ui"}, " tab."]}], "type": "ord_group", "container": true}, {"type": "para", "indent": 4, "extent": [530, 623], "text": ["You can edit the amount of displacement in the ", {"text": ["parameter editor"], "fullpath": "/ref/panes/parms", "scheme": null, "type": "link", "value": "/ref/panes/parms"}, "."]}, {"type": "para", "indent": 4, "extent": [623, 663], "text": [{"text": "", "fullpath": "/images/shelf/mountain.png", "scheme": "Image", "type": "link", "value": "/images/shelf/mountain.png"}]}], "container": true, "level": 2, "text": ["Using Mountain"], "extent": [348, 381], "indent": 0, "type": "h", "id": "includeme"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [453, 506], "text": ["The point group to which to apply displacement."]}], "indent": 0, "text": ["Group"], "role": "item", "extent": [445, 453], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [530, 570], "text": ["Displacement amount of the height."]}], "indent": 0, "text": ["Height"], "role": "item", "attrs": {"id": "height"}, "extent": [506, 514], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [605, 660], "text": ["Distance between peaks of lowest frequency noise."]}], "indent": 0, "text": ["Element Size"], "role": "item", "attrs": {"id": "elementsize"}, "extent": [570, 584], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [667, 739], "text": ["Allow for anistropic scaling of noise in the three principle axes."]}], "indent": 0, "text": ["Scale"], "role": "item", "extent": [660, 667], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [747, 795], "text": ["World space offset for the noise function."]}], "indent": 0, "text": ["Offset"], "role": "item", "extent": [739, 747], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [809, 884], "text": ["The duration of extrema for the lowest frequency of time-based noise."]}], "indent": 0, "text": ["Pulse Length"], "role": "item", "extent": [795, 809], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [890, 962], "text": ["The time to evaluate at.  Use $T to make the noise time dependent."]}], "indent": 0, "text": ["Time"], "role": "item", "extent": [884, 890], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [974, 1078], "text": ["The type of noise to generate. Different algorithms give noise with different characteristics."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [1092, 1291], "text": [{"text": ["Not actually noise"], "type": "strong"}, ". This simply outputs a sine wave instead of adding noise to the input signal. This may be useful for debugging with an output that spans the entire ", {"text": ["0-1"], "type": "code"}, " range."]}, {"indent": 8, "type": "para", "extent": [1291, 1346], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_sine.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_sine.png"}]}], "indent": 4, "text": ["Sinusoid"], "extent": [1078, 1092], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [1358, 1463], "text": ["A noise where the visual details are the same size. ", {"text": ["Wikipedia article"], "scheme": "Wp", "type": "link", "exists": true, "value": "http://en.wikipedia.org/wiki/Perlin_noise"}]}, {"indent": 8, "type": "para", "extent": [1463, 1520], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_perlin.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_perlin.png"}]}], "indent": 4, "text": ["Perlin"], "extent": [1346, 1358], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [1541, 1701], "text": ["A variant of Perlin noise with a repeating pattern. This can be useful for creating images, geometry, and motion that can be tiled and merged."]}, {"indent": 8, "type": "para", "extent": [1701, 1767], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_periodic_perlin.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_periodic_perlin.png"}]}], "indent": 4, "text": ["Periodic Perlin"], "extent": [1520, 1541], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [1798, 1885], "text": [{"text": ["The default"], "type": "strong"}, ". A faster and more interesting variant of Perlin noise."]}, {"indent": 8, "type": "para", "extent": [1885, 1943], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_simplex.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_simplex.png"}]}], "indent": 4, "text": ["Simplex (Improved Perlin)"], "extent": [1767, 1798], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [1967, 2077], "text": ["Sparse Convolution noise is similar to Worley noise. Does not have artifacts at grid points."]}, {"indent": 8, "type": "para", "extent": [2077, 2134], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_sparse.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_sparse.png"}]}], "indent": 4, "text": ["Sparse Convolution"], "extent": [1943, 1967], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2144, 2364], "text": ["A noise that\u2019s stable over time, like a rotated Perlin noise, useful to create noise that seems to swirl and flow smoothly across time. Use the ", {"text": ["Flow rotation"], "type": "ui"}, " parameter below to control the rotation."]}, {"indent": 8, "type": "para", "extent": [2364, 2418], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_flow.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_flow.gif"}]}], "indent": 4, "text": ["Flow"], "extent": [2134, 2144], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2437, 2662], "text": ["A variant of Flow noise with a repeating pattern. This can be useful for creating images, geometry, and motion that can be tiled and merged. Use the ", {"text": ["Flow rotation"], "type": "ui"}, " parameter below to control the rotation."]}, {"indent": 8, "type": "para", "extent": [2662, 2725], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_periodic_flow.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_periodic_flow.gif"}]}], "indent": 4, "text": ["Periodic Flow"], "extent": [2418, 2437], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2751, 2912], "text": ["Produces cellular features similar to plant cells, ocean waves, honeycombs, cratered landscapes, and so on. ", {"text": ["Wikipedia article"], "scheme": "Wp", "type": "link", "exists": true, "value": "http://en.wikipedia.org/wiki/Worley_noise"}]}, {"indent": 8, "type": "para", "extent": [2912, 2972], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_worley_f1.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_worley_f1.png"}]}], "indent": 4, "text": ["Worley (cellular) F1"], "extent": [2725, 2751], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2998, 3086], "text": ["A variant of Worley noise that produces blunted and cornered features."]}, {"indent": 8, "type": "para", "extent": [3086, 3146], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_worley_f2.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_worley_f2.png"}]}], "indent": 4, "text": ["Worley (cellular) F2"], "extent": [2972, 2998], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3161, 3256], "text": ["Produces a bumpy output. Named for its alleged resemblance to alligator skin."]}, {"indent": 8, "type": "para", "extent": [3256, 3313], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_alligator.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_alligator.png"}]}], "indent": 4, "text": ["Alligator"], "extent": [3146, 3161], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Noise type"], "role": "item", "extent": [962, 974], "container": true, "type": "parameters_item"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [3337, 3415], "text": ["Does not add any additional noise on top of the basic noise."]}, {"indent": 8, "type": "para", "extent": [3415, 3478], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_fractal_none.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_fractal_none.png"}]}], "indent": 4, "text": ["None"], "extent": [3327, 3337], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3492, 3562], "text": ["Adds pseudo-random noise on top of the basic output."]}, {"indent": 8, "type": "para", "extent": [3562, 3629], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_fractal_standard.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_fractal_standard.png"}]}], "indent": 4, "text": ["Standard"], "extent": [3478, 3492], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3642, 3780], "text": ["Adds noise like \"Standard\" but dampens the noise in the valleys, which can be useful for generating mountainous terrain."]}, {"indent": 8, "type": "para", "extent": [3780, 3846], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_fractal_terrain.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_fractal_terrain.png"}]}], "indent": 4, "text": ["Terrain"], "extent": [3629, 3642], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3858, 3921], "text": ["Like terrain, but with more sharpness in the valleys."]}], "indent": 4, "text": ["Hybrid"], "extent": [3846, 3858], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Fractal Type"], "role": "item", "extent": [3313, 3327], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3934, 4310], "text": ["The number of iterations of distortion to add to the output of the basic noise. The more iterations you add, the more \"detailed\" the output. Note that the output may have fewer octaves than this parameter (that is, increasing the parameter will eventually stop adding detail), because the node eventually stops when there\u2019s no more room to add more detail in the output."]}], "indent": 0, "text": ["Max octaves"], "role": "item", "extent": [3921, 3934], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4322, 4458], "text": ["The frequency increment between iterations of fractal noise added to the basic output. Note that you can use a negative value."]}, {"indent": 4, "type": "para", "extent": [4458, 4510], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_lacunarity.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_lacunarity.gif"}]}], "indent": 0, "text": ["Lacunarity"], "role": "item", "extent": [4310, 4322], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4521, 4724], "text": ["The scale increment between iterations of fractal noise added to the basic output. The higher the value the larger the \"jaggies\" added to the output. You can use a negative value for roughness."]}, {"indent": 4, "type": "para", "extent": [4724, 4776], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_roughness.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_roughness.gif"}]}], "indent": 0, "text": ["Roughness"], "role": "item", "extent": [4510, 4521], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4791, 5031], "text": ["The rotation of the \"swirl\" when ", {"text": ["Noise type"], "type": "ui"}, " is \"Flow\", from ", {"text": ["0"], "type": "code"}, " to ", {"text": ["1"], "type": "code"}, ". Because this parameter is fractional, you can\u2019t just use ", {"text": ["$F"], "type": "code"}, " to animate it, since all integral values will look the same, representing a complete revolution."]}], "indent": 0, "text": ["Flow Rotation"], "role": "item", "extent": [4776, 4791], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5037, 5235], "text": ["\"Flips\" values below the median to be above the median, so all valleys become peaks. (Note it flips across the ", {"text": ["median"], "type": "em"}, ", not ", {"text": ["0"], "type": "code"}, ".) If the median is ", {"text": ["0"], "type": "code"}, ", this is like taking the absolute value."]}, {"indent": 4, "type": "para", "extent": [5235, 5330], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_fold1.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_fold1.png"}, "\n    ", {"text": "", "fullpath": "/images/nodes/vop/unoise_fold2.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_fold2.png"}]}], "indent": 0, "text": ["Fold"], "role": "item", "extent": [5031, 5037], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5342, 5453], "text": ["Outputs the numerical complement (", {"text": ["1 - x"], "type": "code"}, ") of the computed noise. Basically turns the output upside-down."]}], "indent": 0, "text": ["Complement"], "role": "item", "extent": [5330, 5342], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5459, 5524], "text": ["Increases or decreases the contrast from 0.5 in the output."]}], "indent": 0, "text": ["Gain"], "role": "item", "extent": [5453, 5459], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5530, 5582], "text": ["Moves the output down or up toward ", {"text": ["0"], "type": "code"}, " or ", {"text": ["1"], "type": "code"}, "."]}], "indent": 0, "text": ["Bias"], "role": "item", "extent": [5524, 5530], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5600, 5671], "text": ["The minimum value of the noise, measured in normalized 0..1 space."]}], "indent": 0, "text": ["Clipping Minimum"], "role": "item", "extent": [5582, 5600], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5689, 5761], "text": ["The maximum value of the noise, measured in normalized 0..1 space."]}], "indent": 0, "text": ["Clipping Minimum"], "role": "item", "extent": [5671, 5689], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"indent": 0, "type": "para", "extent": [5761, 5883], "text": ["Lattice warp and gradient warp are two methods for adding \"fractal-ness\" to the basic noises by warping the noise space."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [5904, 5961], "text": ["Adds \"stringiness\" or \"wiriness\" to standard noise."]}, {"indent": 4, "type": "para", "extent": [5961, 6019], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_lattice_warp.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_lattice_warp.gif"}]}], "indent": 0, "text": ["Enable Lattice Warp"], "role": "item", "extent": [5883, 5904], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6044, 6267], "text": ["When ", {"text": ["Lattice Warp"], "type": "ui"}, " is on, this accumulates the warp for each iteration (octave) of added fractal noise. When used in images, this can add interesting smudgy effects, and interesting landmarks when used for terrain."]}], "indent": 0, "text": ["Accumulate Lattice Warp"], "role": "item", "extent": [6019, 6044], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6289, 6347], "text": ["Widens the peaks or valleys of the noise output."]}, {"indent": 4, "type": "para", "extent": [6347, 6402], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_gradient_warp.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_gradient_warp.gif"}]}], "indent": 0, "text": ["Enable Gradient Warp"], "role": "item", "extent": [6267, 6289], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6428, 6541], "text": ["When ", {"text": ["Gradient Warp"], "type": "ui"}, " is on, this accumulates the warp for each iteration (octave) of added fractal noise."]}], "indent": 0, "text": ["Accumulate Gradient Warp"], "role": "item", "extent": [6402, 6428], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6560, 6600], "text": ["Recomputes normals, if they exist."]}], "indent": 0, "text": ["Recompute Normals"], "role": "item", "extent": [6541, 6560], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [], "indent": 0, "text": [" Mountain SOP"], "role": "item", "attrs": {"id": "406959265"}, "extent": [6600, 6621], "container": true, "type": "vimeo"}], "container": true, "role": "item_group", "type": "vimeo_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [433, 445], "container": true, "type": "parameters_section", "id": "parameters"}], "title": ["Mountain"], "summary": ["Displaces points along their normals based on fractal noise."], "attrs": {"version": "2.0", "tags": "fractal, reshape, random", "since": "16.0", "namespace": null, "internal": "mountain", "context": "sop", "type": "node", "icon": "SOP/mountain"}, "included": ["/shelf/mountain"], "type": "root"}