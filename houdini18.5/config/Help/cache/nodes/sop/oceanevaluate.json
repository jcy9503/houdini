{"type": "root", "attrs": {"type": "node", "context": "sop", "icon": "SHELF/wave", "internal": "oceanevaluate", "version": "2.0", "since": "16.0", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Ocean Evaluate"], "extent": [0, 19]}, {"type": "summary", "indent": 0, "text": ["Deforms input geometry based on ocean \"spectrum\" volumes."], "extent": [117, 182]}, {"type": "para", "indent": 0, "text": ["This node uses volumes generated by one or more ", {"scheme": "Node", "value": "/nodes/sop/oceanspectrum", "type": "link", "text": ["Ocean Spectrum"], "fullpath": "/nodes/sop/oceanspectrum"}, " nodes ", {"scheme": "Node", "value": "/nodes/sop/merge", "type": "link", "text": ["Merged"], "fullpath": "/nodes/sop/merge"}, " together and connected to the second input to deform geometry in the first input.  If multiple ocean spectra are input, their waves will be added together during evaluation, possibly modified by any mask or noise parameters on each input ", {"type": "ui", "text": ["Ocean Spectrum"]}, " layer."], "extent": [182, 565]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [565, 577], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Time"], "extent": [577, 584], "body": [{"type": "para", "indent": 4, "text": ["The time at which to evaluate the ocean surface."], "extent": [584, 638]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Downsample"], "extent": [638, 650], "body": [{"type": "para", "indent": 4, "text": ["Downsample the incoming ocean spectra before evaluating any ocean values.  This parameter specifies the number of powers of two to remove from the resolution of the incoming ocean spectrum. For example, if the spectrum was originally specified at resolution 10 to generate a 1024 x 1024 volume, downsampling by 2 will evaluate ocean volumes at resolution 8, a 256 x 256 volume."], "extent": [650, 1033]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [1033, 1042], "body": [{"type": "para", "indent": 8, "text": ["The same high resolution spectrum can be processed by multiple Ocean Evaluate nodes, for example one with no downsampling to deform surface geometry, and another at a downsampled resolution to generate the more expensive volume or point output."], "extent": [1042, 1296]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Resolution"], "extent": [1296, 1312], "body": [{"type": "para", "indent": 4, "text": ["Downsample the incoming ocean spectra to the specified maximum resolution before evaluating any ocean values.  This parameter is useful to avoid evaluation of very high-resolution spectra when only requiring simulation data, for example.  It can also be more convenient than the ", {"type": "ui", "text": ["Downsample"]}, " parameter when there are multiple incoming spectra of different resolutions."], "extent": [1312, 1688]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Depth Falloff"], "extent": [1688, 1703], "body": [{"type": "para", "indent": 4, "text": ["Specifies how deformation and velocity values falloff as the input points lie below the ocean surface.  This value also controls the rank of the calculation volumes that are output if ", {"type": "ui", "text": ["Rest Displacement"]}, " or ", {"type": "ui", "text": ["Rest Velocity"]}, " is enabled: 2D if falloff is ", {"type": "ui", "text": ["None"]}, " but 3D otherwise."], "extent": [1703, 1991]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [1991, 2001], "body": [{"type": "para", "indent": 8, "text": ["Values do not falloff below the surface."], "extent": [2001, 2050]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Exponential"], "extent": [2050, 2067], "body": [{"type": "para", "indent": 8, "text": ["All values have the same exponential falloff below the surface."], "extent": [2067, 2139]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Exponential by Frequency"], "extent": [2139, 2169], "body": [{"type": "para", "indent": 8, "text": ["Values have an exponential falloff that is scaled per wave frequency.  With this setting the contribution from small, high frequency waves falls off very quickly.  It is the most accurate setting and most expensive to compute."], "extent": [2169, 2405]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Falloff Scale"], "extent": [2405, 2420], "body": [{"type": "para", "indent": 4, "text": ["An additional scale applied to the exponential falloff modes in ", {"type": "ui", "text": ["Depth Falloff"]}, ".  For the most physically accurate values this should be set to 1 in conjunction with the ", {"type": "ui", "text": ["Exponential by Frequency"]}, " mode."], "extent": [2420, 2632]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Depth"], "extent": [2632, 2643], "body": [{"type": "para", "indent": 4, "text": ["The maximum depth for the evaluated ocean volumes.  All input positions deeper than this value will be clamped before sampling the ocean values."], "extent": [2643, 2793]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Depth Divisions"], "extent": [2793, 2810], "body": [{"type": "para", "indent": 4, "text": ["The number of divisions along the depth axis if the computed ocean are 3D, as specified by the ", {"type": "ui", "text": ["Depth Falloff"]}, " parameter.  Higher values are more accurate but more expensive to calculate."], "extent": [2810, 3005]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Solo Layer"], "extent": [3005, 3017], "body": [{"type": "para", "indent": 4, "text": ["If multiple ocean spectra are input to this node, limit the evaluation to the specified layer."], "extent": [3017, 3117]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": "geometry", "container": true, "type": "h", "indent": 0, "text": ["Geometry"], "extent": [3117, 3143], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Deform Input Geometry"], "extent": [3143, 3167], "body": [{"type": "para", "indent": 4, "text": ["Deform the input geometry by the calculated ocean deformations."], "extent": [3167, 3236]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Preview Grid"], "extent": [3236, 3250], "body": [{"type": "para", "indent": 4, "text": ["Output a deformed grid exactly the size of the underlying ocean volume.  This preview grid is fastest to evaluate and provides a simple way to view the deforming ocean surface."], "extent": [3250, 3432]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point Velocity"], "extent": [3432, 3448], "body": [{"type": "para", "indent": 4, "text": ["Add a velocity point attribute to the output geometry."], "extent": [3448, 3508]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["UV Attribute"], "extent": [3508, 3522], "body": [{"type": "para", "indent": 4, "text": ["Add a ", {"type": "code", "text": ["uv"]}, " attribute to the output geometry that can be used for texture lookups into the texture maps created with the ", {"type": "ui", "text": ["Export to Texture"]}, " tab.  If ", {"type": "ui", "text": ["Bake All Displacements to One Layer"]}, " is disabled on that tab and there are multiple ", {"scheme": "Node", "value": "/nodes/sop/oceanspectrum", "type": "link", "text": ["Ocean Spectrum"], "fullpath": "/nodes/sop/oceanspectrum"}, " layers input to this node, then each layer will get a separate ", {"type": "code", "text": ["uv"]}, " attribute.  If ", {"type": "ui", "text": ["Bake All Displacements to One Layer"]}, " is enabled, only one layer of ", {"type": "code", "text": ["uv"]}, " attribute is assigned to the input geometry via a planar projection over the entire input geometry."], "extent": [3522, 4063]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cusp Attribute"], "extent": [4063, 4079], "body": [{"type": "para", "indent": 4, "text": ["Add a ", {"type": "code", "text": ["cusp"]}, " point attribute to the output geometry that represents the sharpness of the wave peaks at any point, with values ranging from below 0 if the wave is stretched out, to greater than 1 if the wave peak is so sharp it has inverted."], "extent": [4079, 4325]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cusp Direction Attribute"], "extent": [4325, 4351], "body": [{"type": "para", "indent": 4, "text": ["Add a ", {"type": "code", "text": ["cuspdir"]}, " vector point attribute to the output geometry that points in the direction of the wave peaks."], "extent": [4351, 4466]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Visualize Cusp"], "extent": [4466, 4482], "body": [{"type": "para", "indent": 4, "text": ["Visualize the ", {"type": "code", "text": ["cusp"]}, " attribute by color."], "extent": [4482, 4528]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attribute Ramp"], "extent": [4528, 4544], "body": [{"type": "para", "indent": 4, "text": ["The color ramp with which to visualize the ", {"type": "code", "text": ["cusp"]}, " attribute."], "extent": [4544, 4610]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "volumes", "container": true, "type": "h", "indent": 0, "text": ["Volumes"], "extent": [4610, 4634], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Surface SDF"], "extent": [4634, 4648], "body": [{"type": "para", "indent": 4, "text": ["Generate a ", {"type": "code", "text": ["surface"]}, " SDF volume of the specified size and resolution."], "extent": [4648, 4723]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Height Field"], "extent": [4723, 4737], "body": [{"type": "para", "indent": 4, "text": ["Generate a ", {"type": "code", "text": ["height"]}, " 2-D volume containing the wave height in each voxel.  This output can be manipulated using the HeightField family of SOPs."], "extent": [4737, 4885]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Method"], "extent": [4885, 4893], "body": [{"type": "para", "indent": 4, "text": ["The method used for generating the ", {"type": "code", "text": ["surface"]}, " and ", {"type": "code", "text": ["height"]}, " volumes.  ", {"type": "ui", "text": ["Point Sampling"]}, " is less accurate, but also uses less memory and processing time.  ", {"type": "ui", "text": ["Projection"]}, " is more accurate, but at high resolutions can use a large amount of memory and processing time."], "extent": [4893, 5162]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Surface Depth"], "extent": [5162, 5177], "body": [{"type": "para", "indent": 4, "text": ["The ", {"type": "ui", "text": ["Surface SDF"]}, " will represent the ocean at the specified depth.  \n    This differs from simply offsetting the output surface SDF as it\n    takes into account the ", {"type": "ui", "text": ["Depth Falloff"]}, " setting."], "extent": [5177, 5376]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Smoothing"], "extent": [5376, 5387], "body": [{"type": "para", "indent": 4, "text": ["Controls the radius of the points used to generate volumes when ", {"type": "ui", "text": ["Method"]}, " is set to ", {"type": "ui", "text": ["Point Sampling"]}, ".  Higher values are more expensive, but give smoother volumes."], "extent": [5387, 5559]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Velocity"], "extent": [5559, 5569], "body": [{"type": "para", "indent": 4, "text": ["Generate a ", {"type": "code", "text": ["vel"]}, " velocity volume of the specified size and resolution."], "extent": [5569, 5645]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Size"], "extent": [5645, 5651], "body": [{"type": "para", "indent": 4, "text": ["The size of the generated volumes."], "extent": [5651, 5691]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Center"], "extent": [5691, 5699], "body": [{"type": "para", "indent": 4, "text": ["The origin of the generated volumes."], "extent": [5699, 5741]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Uniform Sampling"], "extent": [5741, 5759], "body": [{"type": "para", "indent": 4, "text": ["It is often advantageous to make sure voxels in a volume are\n    cubes.  This option allows the resolution of the volume to be\n    specified without having to worry about matching the size and\n    resolution fields.  This parameter controls which axis is\n    divided into Uniform Sampling Divisions."], "extent": [5759, 6064]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Uniform Sampling Divs"], "extent": [6064, 6087], "body": [{"type": "para", "indent": 4, "text": ["The number of voxels to divide the ", {"type": "ui", "text": ["Uniform Sampling"]}, " axis into. The other axes will be divided into the number of cells that fit for this voxel size."], "extent": [6087, 6245]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Sampling Divs"], "extent": [6245, 6260], "body": [{"type": "para", "indent": 4, "text": ["When using non-uniform voxel cells, each dimensions resolution can be specified here."], "extent": [6260, 6351]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Div Size"], "extent": [6351, 6361], "body": [{"type": "para", "indent": 4, "text": ["The uniform size of the voxels, when specifying the voxel size directly.  The given sized box will be filled by voxels of this size."], "extent": [6361, 6499]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Extrap Cells"], "extent": [6499, 6517], "body": [{"type": "para", "indent": 4, "text": ["When generating velocity volumes, how many voxels from the ocean surface to extrapolate velocity values. "], "extent": [6517, 6628]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Displacement Frame"], "extent": [6628, 6652], "body": [{"type": "para", "indent": 4, "text": ["When generating volumes and points, this node needs to calculate the maximum horizontal and vertical displacement in the input ocean waves.  If this parameter is enabled, the displacement will be estimated only once at the specified frame, which is fast, gives a stable point output, and it typically accurate enough for good results.  However, in the case of animated wave amplitudes or quickly varying instacing geometry, it may be necessary to continuously re-calculate the displacement by disabling this parameter."], "extent": [6652, 7176]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Rest Volumes"], "extent": [7176, 7197], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Rest Displacement"], "extent": [7197, 7217], "body": [{"type": "para", "indent": 4, "text": ["Output the internally computed displacement volume.  Samples taken from this volume should be in rest position."], "extent": [7217, 7334]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rest Velocity"], "extent": [7334, 7349], "body": [{"type": "para", "indent": 4, "text": ["Output the internally computed velocity volume.  Samples taken from this volume should be in rest position."], "extent": [7349, 7462]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rest Derivatives"], "extent": [7462, 7480], "body": [{"type": "para", "indent": 4, "text": ["Output the internally computed spatial derivatives of displacement.  Samples taken from this volume should be in rest position."], "extent": [7480, 7613]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": "points", "container": true, "type": "h", "indent": 0, "text": ["Points"], "extent": [7613, 7635], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Points from Volume"], "extent": [7635, 7656], "body": [{"type": "para", "indent": 4, "text": ["Generate points with velocity in the volumetric intersection of the ocean surface and the specified box."], "extent": [7656, 7766]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point Separation"], "extent": [7766, 7784], "body": [{"type": "para", "indent": 4, "text": ["The smallest distance between any two of the generated points \n    in the initial configuration."], "extent": [7784, 7886]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Jitter Seed"], "extent": [7886, 7899], "body": [{"type": "para", "indent": 4, "text": ["Random seed for creating jitter."], "extent": [7899, 7937]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Jitter Scale"], "extent": [7937, 7951], "body": [{"type": "para", "indent": 4, "text": ["The amount of jitter to apply to the positional values of the points.  "], "extent": [7951, 8028]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Min Rest Depth"], "extent": [8028, 8044], "body": [{"type": "para", "indent": 4, "text": ["The minimum depth of points relative to the ocean surface."], "extent": [8044, 8108]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Rest Depth"], "extent": [8108, 8124], "body": [{"type": "para", "indent": 4, "text": ["The maximum depth of points relative to the ocean surface."], "extent": [8124, 8188]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Box Size"], "extent": [8188, 8198], "body": [{"type": "para", "indent": 4, "text": ["The size of the box in which to generate points."], "extent": [8198, 8252]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Box Center"], "extent": [8252, 8264], "body": [{"type": "para", "indent": 4, "text": ["The origin of the box in which to generate points."], "extent": [8264, 8320]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pad Scale"], "extent": [8320, 8331], "body": [{"type": "para", "indent": 4, "text": ["The rest configuration of points is generated by evaluating the maximum possible ocean displacement at time zero.  This will usually be sufficient padding, but with extreme displacement it might be necessary to increase the padding scale in this parameter."], "extent": [8331, 8593]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Output Group"], "extent": [8593, 8614], "body": [{"type": "para", "indent": 4, "text": ["Create a group containing the generated points."], "extent": [8614, 8667]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output Group"], "extent": [8667, 8681], "body": [{"type": "para", "indent": 4, "text": ["The name of the generated output point group."], "extent": [8681, 8732]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "export", "container": true, "type": "h", "indent": 0, "text": ["Export to Texture"], "extent": [8732, 8765], "body": [{"type": "para", "indent": 0, "text": ["This tab controls exporting the displacement and cusp volumes to textures that can be sampled during rendering.  Most of the parameters here are exposed from the ", {"scheme": "Node", "value": "/nodes/out/comp", "type": "link", "text": ["Composite"], "fullpath": "/nodes/out/comp"}, " output node.  If there are multiple ", {"scheme": "Node", "value": "/nodes/sop/oceanspectrum", "type": "link", "text": ["Ocean Spectrum"], "fullpath": "/nodes/sop/oceanspectrum"}, " inputs to this node and ", {"type": "ui", "text": ["Bake All Displacements to One Layer"]}, " is disabled, then each layer can be written out to a separate file sequence by using the ", {"type": "code", "text": ["$OCEANLAYER"]}, " global variable in the filename, as it is set to the current layer being exported.  If ", {"type": "ui", "text": ["Bake All Displacements to One Layer"]}, " is enabled then only one layer is output."], "extent": [8765, 9367]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Channels"], "extent": [9367, 9377], "body": [{"type": "para", "indent": 4, "text": ["Controls where the displacement and / or cusp values are stored in the texture."], "extent": [9377, 9462]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Raster Depth"], "extent": [9462, 9476], "body": [{"type": "para", "indent": 4, "text": ["Controls the bit depth of the generated textures.  If the texture format supports 16-bit float, this bit depth can save space with little degradation in rendering."], "extent": [9476, 9645]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bake All Displacements to One Layer"], "extent": [9645, 9682], "body": [{"type": "para", "indent": 4, "text": ["Bake all displacements from the input layers, masks, and noise to a single texture that covers the entire input geometry.  If the ", {"type": "ui", "text": ["UV Attribute"]}, " output is enabled, the 'uv' attribute will span the entire input geometry and this single texture can be used to displace the input geometry at render time.  "], "extent": [9682, 9997]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [9997, 10007], "body": [{"type": "para", "indent": 8, "text": ["The texture will not repeat as the per-layer spectrum output will. However, since it includes all masks and noise in a single texture, it is the most straightforward method for rendering ocean output with a displacement map."], "extent": [10007, 10241]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [10241, 10250], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/oceanspectrum", "type": "link", "text": ["Ocean Spectrum"], "fullpath": "/nodes/sop/oceanspectrum"}], "extent": [10250, 10293]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/vop/wavevector", "type": "link", "text": ["Wave Vector"], "fullpath": "/nodes/vop/wavevector"}], "extent": [10293, 10329]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/volumefft", "type": "link", "text": ["Volume FFT"], "fullpath": "/nodes/sop/volumefft"}], "extent": [10329, 10363]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/volume", "type": "link", "text": ["Volume"], "fullpath": "/nodes/sop/volume"}], "extent": [10363, 10390]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/pointsfromvolume", "type": "link", "text": ["Points from Volume"], "fullpath": "/nodes/sop/pointsfromvolume"}], "extent": [10390, 10439]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/out/comp", "type": "link", "text": ["Composite"], "fullpath": "/nodes/out/comp"}], "extent": [10439, 10467]}], "container": true}], "text": "Related"}], "title": ["Ocean Evaluate"], "summary": ["Deforms input geometry based on ocean \"spectrum\" volumes."]}