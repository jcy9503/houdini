{"body": [{"indent": 0, "text": ["Labs Skinning Converter"], "type": "title", "extent": [0, 28], "level": 0}, {"indent": 0, "type": "summary", "extent": [148, 281], "text": [" Skinning Converter is a SOP that can convert any non-changing topology deforming mesh sequence into a bone based animation. "]}, {"indent": 0, "type": "para", "extent": [281, 652], "text": ["Skinning Converter is a SOP that can convert any non-changing topology deforming mesh sequence into a bone based animation. This is an important conversion if you need to bring a certain animation to a Game Engine. Game engines typically don\u2019t support vertex based animations, and require bones instead.\n", {"text": "", "scheme": null, "type": "link", "exists": true, "value": "https://www.sidefx.com/tutorials/game-tools-skinning-converter/"}]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [657, 858], "text": ["To export the result of the skinningconverter, just plug the three outputs into the corresponding inputs on the ", {"text": ["ROP FBX Character Output"], "fullpath": "/nodes/sop/kinefx--rop_fbxcharacteroutput", "scheme": "Node", "type": "link", "value": "/nodes/sop/kinefx--rop_fbxcharacteroutput"}, " sop from KineFX."]}], "indent": 0, "role": "item", "extent": [652, 657], "container": true, "type": "tip"}, {"body": [{"indent": 4, "type": "para", "extent": [863, 995], "text": ["To preview the result of the skinning decomposition, plug the three output connectors into a ", {"text": ["Bonedeform"], "fullpath": "/nodes/sop/bonedeform", "scheme": "Node", "type": "link", "value": "/nodes/sop/bonedeform"}, "."]}], "indent": 0, "role": "item", "extent": [858, 863], "container": true, "type": "tip"}], "container": true, "role": "item_group", "type": "tip_group"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [1030, 1196], "text": ["This can be used to specify a group that should be separated from the animated geometry conversion. This will be added back to the result as static geometry."]}], "indent": 4, "text": ["Static Primitives"], "role": "item", "extent": [1007, 1030], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1217, 1303], "text": ["Toggling this on will visualize the skinning error as the vertexcolors. "]}], "indent": 4, "text": ["Visualize Error"], "role": "item", "extent": [1196, 1217], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [1356, 1475], "text": ["This links to the generated skinning conversion on OBJ level. (Set automatically by the tool after conversion)"]}], "indent": 4, "text": ["Converted Output"], "role": "item", "extent": [1334, 1356], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1493, 1697], "text": ["This allows you to control what method is used for the error visualization. Accumulated will calculate the sum of the error over all frames, while Max Error will show you the maximum error found."]}], "indent": 4, "text": ["Error Method"], "role": "item", "extent": [1475, 1493], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1725, 1811], "text": ["This scalar controls how much error you deem reasonable in the visualization."]}], "indent": 4, "text": ["Accumulate E Tolerance"], "role": "item", "extent": [1697, 1725], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1832, 1918], "text": ["This scalar controls how much error you deem reasonable in the visualization."]}], "indent": 4, "text": ["Max E Tolerance"], "role": "item", "extent": [1811, 1832], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1928, 1992], "text": ["The bias allows you to offset the visualization error."]}], "indent": 4, "text": ["Bias"], "role": "item", "extent": [1918, 1928], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 4, "level": 2, "text": ["Error Visualization"], "extent": [1303, 1334], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [2039, 2110], "text": ["Allows you to set the frame range which needs to be converted."]}], "indent": 4, "text": ["Frame Range"], "role": "item", "extent": [2022, 2039], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [2132, 2319], "text": ["This menu allow you to pick the method used for calculating the skinning attributes. Biharmonic Capture typically has better results, but takes significantly longer to calculate."]}], "indent": 4, "text": ["Capturing Method"], "role": "item", "extent": [2110, 2132], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [2338, 2417], "text": ["This sets the capture frame used to calculate the skinning weights on."]}], "indent": 4, "text": ["Capture Frame"], "role": "item", "extent": [2319, 2338], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [2442, 2551], "text": ["This controls the maximum number of bone influences a vertex can have when using Proximity Capture."]}], "indent": 4, "text": ["Max Bone Influences"], "role": "item", "extent": [2417, 2442], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 4, "level": 2, "text": ["Conversion Settings"], "extent": [1992, 2022], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [2594, 2803], "text": ["Allows you to set the mode of generating bones. Uniform Placement does a basic scatter without taking the deformation into account. Adaptive Placement lets you place bones somewhat more intelligently."]}], "indent": 4, "text": ["Mode"], "role": "item", "extent": [2584, 2594], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [2815, 2900], "text": ["This controls the method used to determine where the bones should be placed."]}], "indent": 4, "text": ["Method"], "role": "item", "extent": [2803, 2815], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [2917, 2993], "text": ["Sets the scale of the guides that are representing generated bones."]}], "indent": 4, "text": ["Guide Scale"], "role": "item", "extent": [2900, 2917], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3014, 3091], "text": ["This controls the number of desired bones that should get generated."]}], "indent": 4, "text": ["Number of Bones"], "role": "item", "extent": [2993, 3014], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3101, 3200], "text": ["This controls the seed for the internal scatter that is used to place the bones uniformly."]}], "indent": 4, "text": ["Seed"], "role": "item", "extent": [3091, 3101], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3228, 3343], "text": ["This allows you to add some secondary bones that will fill the gaps left behind from the primary bones."]}], "indent": 4, "text": ["Number of Bones Scalar"], "role": "item", "extent": [3200, 3228], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 4, "level": 2, "text": ["Bone Placement Control"], "extent": [2551, 2584], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [3386, 3484], "text": ["When this toggle is on, any points fed into the secondary input will also generate bones."]}], "indent": 4, "text": ["Use Input Bones"], "role": "item", "extent": [3365, 3386], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 4, "level": 2, "text": ["Input Bones"], "extent": [3343, 3365], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [3529, 3698], "text": ["This multiparm allows you to add additional bones to the conversion manually. To use this functionality, activate the tool handle and click on the geometry."]}], "indent": 4, "text": ["Number of Strokes"], "role": "item", "extent": [3506, 3529], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 4, "level": 2, "text": ["Drawn Bones"], "extent": [3484, 3506], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [995, 1007], "container": true, "type": "parameters_section", "id": "parameters"}], "summary": [" Skinning Converter is a SOP that can convert any non-changing topology deforming mesh sequence into a bone based animation. "], "type": "root", "attrs": {"version": "3.0", "tags": "sidefxlabs,  model", "namespace": "labs", "internal": "labs::skinning_converter::3.0", "context": "sop", "type": "node", "icon": "skinningconverter"}, "title": ["Labs Skinning Converter"]}