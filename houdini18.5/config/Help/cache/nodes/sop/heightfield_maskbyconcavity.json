{"body": [{"indent": 0, "text": ["HeightField Mask by Concavity"], "type": "title", "extent": [0, 34], "level": 0}, {"indent": 0, "type": "summary", "extent": [149, 251], "text": ["Creates a mask where the input terrain is hollow/depressed, for example riverbeds and valleys."]}, {"indent": 0, "type": "para", "extent": [251, 459], "text": ["The node measures concavity as \"how much sky is visible from the given point?\" It sends rays from each point in different directions and measures how many hit terrain before reaching their maximum distance."]}, {"indent": 0, "type": "para", "extent": [459, 512], "text": [{"text": "", "fullpath": "/images/nodes/sop/heightfield_concavity,png", "scheme": "Image", "type": "link", "value": "/images/nodes/sop/heightfield_concavity,png"}]}, {"body": [{"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [505, 576], "text": ["How to combine this mask with any existing mask in the input."]}, {"body": [{"body": [{"type": "para", "indent": 8, "extent": [589, 664], "text": ["Clear the existing mask and replace it with the new mask."]}], "container": true, "text": ["Replace"], "extent": [576, 589], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [673, 740], "text": ["Add the values in this mask to any existing mask."]}], "container": true, "text": ["Add"], "extent": [664, 673], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [754, 828], "text": ["Subtract the values in this mask from any existing mask."]}], "container": true, "text": ["Subtract"], "extent": [740, 754], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [844, 927], "text": ["Set the mask values to the difference between the old mask and this mask."]}], "container": true, "text": ["Difference"], "extent": [828, 844], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [941, 1095], "text": ["Multiply the values of the old mask by the values in this mask. This might be useful to \"scale\" existing values while leaving empty areas alone."]}], "container": true, "text": ["Multiply"], "extent": [927, 941], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [1108, 1191], "text": ["Set the mask values to the maximum of the old mask and this mask."]}], "container": true, "text": ["Maximum"], "extent": [1095, 1108], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [1204, 1287], "text": ["Set the mask values to the minimum of the old mask and this mask."]}], "container": true, "text": ["Minimum"], "extent": [1191, 1204], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [1298, 1361], "text": ["Blend the old mask and this mask by a certain amount."]}], "container": true, "text": ["Blend"], "extent": [1287, 1298], "indent": 4, "type": "dt"}], "type": "dt_group", "container": true}], "container": true, "text": ["Combine with Existing"], "role": "item", "attrs": {"id": "combine"}, "extent": [460, 483], "indent": 0, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1388, 1636], "text": ["The amount to blend the old mask with what you draw, when ", {"text": ["Combine with existing"], "type": "ui"}, " is \"blend\". A value of ", {"text": ["0"], "type": "code"}, " leaves the existing mask, a value of ", {"text": ["1"], "type": "code"}, " replaces with the new mask, a value of ", {"text": ["0.5"], "type": "code"}, " blends equally between the old and new mask."]}], "indent": 0, "text": ["Blend"], "role": "item", "attrs": {"id": "blend"}, "extent": [1361, 1368], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [677, 762], "text": ["Areas with concavity equal to or greater than this value are added to the mask."]}], "indent": 0, "text": ["Minimum Concavity"], "role": "item", "attrs": {"id": "minexposure"}, "extent": [632, 651], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"indent": 4, "type": "para", "extent": [835, 921], "text": ["Areas with concavity less than or equal to this value are added to the mask."]}], "indent": 0, "text": ["Maximum Concavity:  Maximum concavity to mask."], "attrs": {"id": "maxexposure"}, "extent": [762, 809], "container": true, "type": "para"}, {"body": [{"indent": 4, "type": "para", "extent": [972, 1066], "text": ["Invert the mask, so values ", {"text": ["outside"], "type": "em"}, " the concavity range are added to the mask instead."]}], "indent": 0, "text": ["Invert Mask: Invert Mask."], "attrs": {"id": "invertmask"}, "extent": [921, 947], "container": true, "type": "para"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [1125, 1265], "text": ["How far to send rays to determine if a point can see the sky. Longer distances give more accurate measurements, but can be slower."]}], "indent": 0, "text": ["View Distance"], "role": "item", "attrs": {"id": "viewdistance"}, "extent": [1082, 1098], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1301, 1440], "text": ["How finely to step along the rays to determine if a point can see the sky. Larger values are faster but might miss thin features."]}], "indent": 0, "text": ["Step Scale"], "role": "item", "attrs": {"id": "stepscale"}, "extent": [1265, 1277], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1486, 1626], "text": ["How many rays to send to determine if a point can see the sky. Larger numbers give more accurate measurements, but can be slower."]}], "indent": 0, "text": ["Number of Searches"], "role": "item", "attrs": {"id": "numsearches"}, "extent": [1440, 1460], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Quality"], "extent": [1066, 1082], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Masking"], "extent": [524, 539], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [161, 460], "text": ["If a mask volume is wired into this node\u2019s second input, this specifies which volume in the second input to use to mask this node\u2019s effect, usually ", {"text": ["mask"], "type": "code"}, ". Click the \"Add mask paint\" button to paint the mask directly in the viewport (this automatically adds a paint node to the second input)."]}], "indent": 0, "text": ["Mask Layer"], "role": "item", "attrs": {"id": "masklayer"}, "extent": [125, 137], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [56, 125], "text": ["The name of the height volume to operate on, usually ", {"text": ["height"], "type": "code"}, "."]}], "indent": 0, "text": ["Height Layer"], "role": "item", "attrs": {"id": "heightlayer"}, "extent": [16, 30], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Layer Bindings"], "extent": [1626, 1647], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [512, 524], "container": true, "type": "parameters_section", "id": "parameters"}], "title": ["HeightField Mask by Concavity"], "summary": ["Creates a mask where the input terrain is hollow/depressed, for example riverbeds and valleys."], "attrs": {"version": null, "namespace": null, "internal": "heightfield_maskbyconcavity", "context": "sop", "type": "node", "icon": "SOP/heightfield_maskbyconcavity"}, "included": ["/nodes/sop/_heightfield_common"], "type": "root"}