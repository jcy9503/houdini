{"body": [{"indent": 0, "text": ["Attribute Noise"], "type": "title", "extent": [0, 20], "level": 0}, {"indent": 0, "type": "summary", "extent": [139, 195], "text": ["Adds or generates noise in geometry attributes."]}, {"body": [{"indent": 0, "type": "para", "extent": [210, 497], "text": ["The Attribute Noise SOP provides a simple interface for quickly adding coherent noise\nto ", {"text": ["float"], "type": "code"}, " and ", {"text": ["vector"], "type": "code"}, " attributes, without needing to create VOP networks or write VEX code. All of the models provided by the ", {"text": ["Unified Noise VOP"], "fullpath": "/nodes/vop/unifiednoise", "scheme": "Node", "type": "link", "value": "/nodes/vop/unifiednoise"}, " can be\nused with this node. "]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [502, 706], "text": ["While this node has a simple and straightforward interface, the following nodes might allow for a finer control over modifying common attributes such as: ", {"text": ["pscale"], "type": "code"}, ", ", {"text": ["life"], "type": "code"}, ", ", {"text": ["variant"], "type": "code"}, ", ", {"text": ["v"], "type": "code"}, ", and ", {"text": ["N"], "type": "code"}, "."]}, {"body": [{"indent": 4, "blevel": 6, "type": "bullet", "extent": [706, 764], "text": [{"text": ["Attribute Adjust Float"], "fullpath": "/nodes/sop/attribadjustfloat", "scheme": "Node", "type": "link", "value": "/nodes/sop/attribadjustfloat"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [764, 826], "text": [{"text": ["Attribute Adjust Integer"], "fullpath": "/nodes/sop/attribadjustinteger", "scheme": "Node", "type": "link", "value": "/nodes/sop/attribadjustinteger"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [826, 888], "text": [{"text": ["Attribute Adjust Vector"], "fullpath": "/nodes/sop/attribadjustvector", "scheme": "Node", "type": "link", "value": "/nodes/sop/attribadjustvector"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "role": "item", "extent": [497, 502], "container": true, "type": "tip"}], "container": true, "role": "item_group", "type": "tip_group"}], "indent": 0, "level": 2, "text": ["Overview"], "extent": [195, 210], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [909, 1100], "text": ["If an attribute exists, you can overwrite or combine the noise with the current values according to the ", {"text": ["Operation"], "type": "ui"}, " parameter. If an attribute doesn\u2019t exist, this node will create it."]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 2, "text": ["Tips and notes"], "extent": [888, 909], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "text": [" General "], "type": "sep", "extent": [1112, 1129], "level": 3}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [1153, 1338], "text": ["The subset of the input geometry to apply the modifications to. Leave this blank to affect all elements.  The type of the group is controlled by the ", {"text": ["Attribute Class"], "type": "ui"}, " parameter."]}], "indent": 0, "text": ["Group"], "role": "item", "attrs": {"id": "group"}, "extent": [1129, 1137], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1375, 1527], "text": ["Choose whether the attributes are float attributes or vector attributes. The node will switch to generate 1D or 3D noise according to this choice."]}], "indent": 0, "text": ["Attribute Type"], "role": "item", "attrs": {"id": "attribtype"}, "extent": [1338, 1354], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1562, 1880], "text": ["The name of the attribute to generate noise into. The class of attribute (such as point, face, or vertex) is controlled by the ", {"text": ["Attribute Class"], "type": "ui"}, " parameter. If the attribute does not exist, this node will create it. You can specify a space-separated list of names to add noise to multiple attributes at once."]}], "indent": 0, "text": ["Attribute Names"], "role": "item", "attrs": {"id": "attribs"}, "extent": [1527, 1544], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1917, 2050], "text": ["The level at which to look for/create the listed attributes: detail (whole geometry), primitives (faces), points, or vertices."]}], "indent": 0, "text": ["Attribute Class"], "role": "item", "attrs": {"id": "class"}, "extent": [1880, 1897], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"indent": 0, "text": [" Noise Range "], "type": "sep", "extent": [2050, 2070], "level": 3}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [2106, 2247], "text": ["How to compute the minimum and maximum noise values. This menu lets you quickly set up common ranges (from zero to N, or from -N to N)."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [2261, 2305], "text": ["From 0 to the ", {"text": ["Amplitude"], "type": "ui"}, " value."]}], "indent": 4, "text": ["Positive"], "extent": [2247, 2261], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2324, 2388], "text": ["From negative ", {"text": ["Amplitude"], "type": "ui"}, " to positive ", {"text": ["Amplitude"], "type": "ui"}, "."]}], "indent": 4, "text": ["Zero Centered"], "extent": [2305, 2324], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2402, 2459], "text": ["Explicitly set ", {"text": ["Min Value"], "type": "ui"}, " and ", {"text": ["Max Value"], "type": "ui"}, "."]}], "indent": 4, "text": ["Min/Max"], "extent": [2388, 2402], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Range Values"], "role": "item", "attrs": {"id": "noiserange"}, "extent": [2070, 2085], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2490, 2648], "text": ["How to combine the generated noise with an existing attribute value. If the target attribute does not exist on the input geometry, this menu is ignored."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [2665, 2775], "text": ["If the attribute doesn\u2019t exist, set its value. If the attribute does already exist, don\u2019t modify it."]}], "indent": 4, "text": ["Set Initial"], "extent": [2648, 2665], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2791, 2830], "text": ["Overwrite any existing value."]}], "indent": 4, "text": ["Set Always"], "extent": [2775, 2791], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2839, 2901], "text": ["Add the generated noise value to the existing value."]}], "indent": 4, "text": ["Add"], "extent": [2830, 2839], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2915, 2984], "text": ["Subtract the generated noise value from the existing value."]}], "indent": 4, "text": ["Subtract"], "extent": [2901, 2915], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2998, 3065], "text": ["Multiply the generated noise value by the existing value."]}], "indent": 4, "text": ["Multiply"], "extent": [2984, 2998], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3078, 3162], "text": ["Use the lower of the generated noise value and the existing value."]}], "indent": 4, "text": ["Minimum"], "extent": [3065, 3078], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3175, 3256], "text": ["Use the higher of the generated noise value and the existing value."]}], "indent": 4, "text": ["Maximum"], "extent": [3162, 3175], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Operation"], "role": "item", "attrs": {"id": "operation"}, "extent": [2459, 2470], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3309, 3512], "text": ["When ", {"text": ["Range"], "type": "ui"}, "  ", {"text": ["Positive Values"], "type": "ui"}, ", the generated noise is from 0 to this value. When ", {"text": ["Range"], "type": "ui"}, " is ", {"text": ["Zero Centered Values"], "type": "ui"}, ", the generated noise is from negative this value to positive this value."]}, {"indent": 4, "type": "para", "extent": [3512, 3674], "text": ["When ", {"text": ["Attribute Type"], "type": "ui"}, " is ", {"text": ["Vector"], "type": "ui"}, ", click the ", {"text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms", "scheme": "Smallicon", "type": "link", "value": "BUTTONS/decompose_transforms"}, " Per Component button for separate amplitudes along each axis."]}], "indent": 0, "text": ["Amplitude"], "role": "item", "attrs": {"also": "amplitudev", "id": "amplitude"}, "extent": [3256, 3267], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3717, 3910], "text": ["When ", {"text": ["Attribute Type"], "type": "ui"}, " is ", {"text": ["Vector"], "type": "ui"}, " and you turn on the ", {"text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms", "scheme": "Smallicon", "type": "link", "value": "BUTTONS/decompose_transforms"}, " Per Component button, this lets you scale the ", {"text": ["Amplitude"], "type": "ui"}, " separately across each axis."]}], "indent": 0, "text": ["Amplitude Scale"], "role": "item", "attrs": {"id": "amplitudescalev"}, "extent": [3674, 3691], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3945, 4018], "text": ["When ", {"text": ["Range Values"], "type": "ui"}, " is ", {"text": ["Min/Max"], "type": "ui"}, ", the lower limit of the range."]}, {"indent": 4, "type": "para", "extent": [4018, 4177], "text": ["When ", {"text": ["Attribute Type"], "type": "ui"}, " is ", {"text": ["Vector"], "type": "ui"}, ", click the ", {"text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms", "scheme": "Smallicon", "type": "link", "value": "BUTTONS/decompose_transforms"}, " Per Component button for separate minimums along each axis."]}], "indent": 0, "text": ["Min Value"], "role": "item", "attrs": {"id": "rangeminv"}, "extent": [3910, 3921], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4223, 4450], "text": ["When ", {"text": ["Attribute Type"], "type": "ui"}, " is ", {"text": ["Vector"], "type": "ui"}, ", ", {"text": ["Range Values"], "type": "ui"}, " is ", {"text": ["Min/Max"], "type": "ui"}, ", and you turn on the ", {"text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms", "scheme": "Smallicon", "type": "link", "value": "BUTTONS/decompose_transforms"}, " Per Component button, this lets you scale the ", {"text": ["Min Value"], "type": "ui"}, " separately across each axis."]}], "indent": 0, "text": ["Min Value Scale"], "role": "item", "attrs": {"id": "rangeminscalev"}, "extent": [4177, 4194], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4490, 4564], "text": ["When ", {"text": ["Range Values"], "type": "ui"}, " is ", {"text": ["Min/Max"], "type": "ui"}, ", the higher limit of the range."]}, {"indent": 4, "type": "para", "extent": [4564, 4719], "text": ["When ", {"text": ["Attribute Type"], "type": "ui"}, " is ", {"text": ["Vector"], "type": "ui"}, ", click the ", {"text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms", "scheme": "Smallicon", "type": "link", "value": "BUTTONS/decompose_transforms"}, " Per Component button for separate minimums along each axis."]}], "indent": 0, "text": ["Max Value"], "role": "item", "attrs": {"id": "rangemaxv     "}, "extent": [4450, 4461], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4765, 4992], "text": ["When ", {"text": ["Attribute Type"], "type": "ui"}, " is ", {"text": ["Vector"], "type": "ui"}, ", ", {"text": ["Range Values"], "type": "ui"}, " is ", {"text": ["Min/Max"], "type": "ui"}, ", and you turn on the ", {"text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms", "scheme": "Smallicon", "type": "link", "value": "BUTTONS/decompose_transforms"}, " Per Component button, this lets you scale the ", {"text": ["Max Value"], "type": "ui"}, " separately across each axis."]}], "indent": 0, "text": ["Max Value Scale"], "role": "item", "attrs": {"id": "rangemaxscalev"}, "extent": [4719, 4736], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5030, 5242], "text": ["When this is on, the distribution of values is non-uniform, being more likely to fall near the center of the range than the edges. When this is off, values have a more uniform distribution across the range."]}, {"indent": 4, "type": "para", "extent": [5242, 5388], "text": ["This example shows noise where the ", {"text": ["Element Size"], "type": "ui"}, " is animated. The left side has this parameter on, the right side has this parameter off."]}, {"indent": 4, "type": "para", "extent": [5388, 5431], "text": [{"text": "", "fullpath": "/images/sop/fitted_values.gif", "scheme": "Image", "type": "link", "value": "/images/sop/fitted_values.gif"}]}], "indent": 0, "text": ["Output Raw Value"], "role": "item", "attrs": {"id": "outputraw"}, "extent": [4992, 5010], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5472, 5540], "text": ["Turn this on to shape the output of the noise with a ramp."]}], "indent": 0, "text": ["Enable Remap Ramp"], "role": "item", "attrs": {"id": "enableremap"}, "extent": [5431, 5450], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5572, 5871], "text": ["When ", {"text": ["Enable Remap Ramp"], "type": "ui"}, " is on, this ramp lets you control the output of the noise function. The horizontal axis represents the range (minimum on the left, maximum on the right). The vertical axis represents the number to output when the noise function generates that point within the range."]}, {"indent": 4, "type": "para", "extent": [5871, 5968], "text": ["The default ramp (diagonal from bottom-left to top-right) outputs each number \"as itself\"."]}], "indent": 0, "text": ["Remap Ramp"], "role": "item", "attrs": {"id": "remapramp"}, "extent": [5540, 5552], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"indent": 0, "text": [" Noise Pattern "], "type": "sep", "extent": [5968, 5988], "level": 2}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [3119, 3223], "text": ["The type of noise to generate. Different algorithms give noise with different characteristics."]}, {"body": [{"body": [{"body": [{"body": [{"indent": 12, "type": "para", "extent": [3264, 3353], "text": ["The default. A faster and more interesting variant of Perlin noise."]}, {"indent": 12, "type": "para", "extent": [3353, 3415], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_simplex.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_simplex.png"}]}], "container": true, "text": ["Fast"], "extent": [3250, 3264], "indent": 8, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [3443, 3557], "text": ["Sparse Convolution noise is similar to Worley noise. Does not have artifacts at grid points."]}, {"indent": 12, "type": "para", "extent": [3557, 3618], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_sparse.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_sparse.png"}]}], "container": true, "text": ["Sparse Convolution"], "extent": [3415, 3443], "indent": 8, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [3637, 3736], "text": ["Produces a bumpy output. Named for its alleged resemblance to alligator skin."]}, {"indent": 12, "type": "para", "extent": [3736, 3800], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_alligator.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_alligator.png"}]}], "container": true, "text": ["Alligator"], "extent": [3618, 3637], "indent": 8, "type": "dt"}], "container": true, "type": "dt_group"}], "container": true, "text": ["Value noise types"], "role": "item", "extent": [3223, 3250], "indent": 4, "type": "box"}, {"body": [{"body": [{"body": [{"indent": 12, "type": "para", "extent": [3844, 3953], "text": ["A noise where the visual details are the same size. ", {"text": ["Wikipedia article"], "scheme": "Wp", "type": "link", "exists": true, "value": "http://en.wikipedia.org/wiki/Perlin_noise"}]}, {"indent": 12, "type": "para", "extent": [3953, 4079], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_perlin.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_perlin.png"}, "\n            ", {"text": "", "fullpath": "/images/nodes/vop/unoise_periodic_perlin.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_periodic_perlin.png"}]}], "container": true, "text": ["Perlin"], "extent": [3828, 3844], "indent": 8, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [4093, 4317], "text": ["A noise that\u2019s stable over time, like a rotated Perlin noise, useful to create noise that seems to swirl and flow smoothly across time. Use the ", {"text": ["Flow rotation"], "type": "ui"}, " parameter below to control the rotation."]}, {"indent": 12, "type": "para", "extent": [4317, 4437], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_flow.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_flow.gif"}, "\n            ", {"text": "", "fullpath": "/images/nodes/vop/unoise_periodic_flow.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_periodic_flow.gif"}]}], "container": true, "text": ["Flow"], "extent": [4079, 4093], "indent": 8, "type": "dt"}], "container": true, "type": "dt_group"}], "container": true, "text": ["Perlin noise types"], "role": "item", "extent": [3800, 3828], "indent": 4, "type": "box"}, {"body": [{"body": [{"body": [{"indent": 12, "type": "para", "extent": [4486, 4651], "text": ["Produces cellular features similar to plant cells, ocean waves, honeycombs, cratered landscapes, and so on. ", {"text": ["Wikipedia article"], "scheme": "Wp", "type": "link", "exists": true, "value": "http://en.wikipedia.org/wiki/Worley_noise"}]}, {"indent": 12, "type": "para", "extent": [4651, 4719], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_worley_f1.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_worley_f1.png"}]}], "container": true, "text": ["F1"], "extent": [4474, 4486], "indent": 8, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [4734, 4826], "text": ["A variant of Worley noise that produces blunted and cornered features."]}, {"indent": 12, "type": "para", "extent": [4826, 4894], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_worley_f2.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_worley_f2.png"}]}], "container": true, "text": ["F2-F1"], "extent": [4719, 4734], "indent": 8, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [4916, 5052], "text": ["A variant of Worley F1 noise that uses Manhattan distance calculation. Useful when you want unusual-looking noise."]}], "container": true, "text": ["Manhattan F1"], "extent": [4894, 4916], "indent": 8, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [5077, 5216], "text": ["A variant of Worley F2-F1 noise that uses Manhattan distance calculation. Useful when you want unusual-looking noise."]}], "container": true, "text": ["Manhattan F2-F1"], "extent": [5052, 5077], "indent": 8, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [5238, 5374], "text": ["A variant of Worley F1 noise that uses Chebyshev distance calculation. Useful when you want unusual-looking noise."]}], "container": true, "text": ["Chebyshev F1"], "extent": [5216, 5238], "indent": 8, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [5399, 5530], "text": ["A variant of Worley F2-F1 noise that uses Chebyshev distance calculation. Useful when you want unusual-looking noise."]}], "container": true, "text": ["Chebyshev F2-F1"], "extent": [5374, 5399], "indent": 8, "type": "dt"}], "container": true, "type": "dt_group"}], "container": true, "text": ["Worley/Cellular noise types"], "role": "item", "extent": [4437, 4474], "indent": 4, "type": "box"}], "container": true, "role": "item_group", "type": "box_group"}], "indent": 0, "text": ["Noise type"], "role": "item", "attrs": {"id": "basis"}, "extent": [3092, 3104], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6078, 6491], "text": ["The node generates values for each element by sampling a noise field at the location specified by this vector attribute on the incoming geometry. If this is ", {"text": ["P"], "type": "code"}, " (point position, the default), the points of the geometry will appear to swim through the noise. If you want the noise to \"stick\" to the points, you can copy the initial point positions into a ", {"text": ["rest"], "type": "code"}, " attribute and use that attribute here instead."]}], "indent": 0, "text": ["Location Attribute"], "role": "item", "attrs": {"id": "locationattrib"}, "extent": [6033, 6053], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6527, 6572], "text": ["Uniform scale of elements in the noise."]}, {"indent": 4, "type": "para", "extent": [6572, 6686], "text": ["Click the ", {"text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms", "scheme": "Smallicon", "type": "link", "value": "BUTTONS/decompose_transforms"}, " Per Component button for separate scales along each axis."]}, {"indent": 4, "type": "para", "extent": [6686, 6739], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_frequency.gif", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_frequency.gif"}]}], "indent": 0, "text": ["Element Size"], "role": "item", "attrs": {"id": "elementsize"}, "extent": [6491, 6505], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6781, 6940], "text": ["When you turn on the ", {"text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms", "scheme": "Smallicon", "type": "link", "value": "BUTTONS/decompose_transforms"}, " Per Component button, this lets you scale the ", {"text": ["Element Size"], "type": "ui"}, " separately across each axis."]}], "indent": 0, "text": ["Element Scale"], "role": "item", "attrs": {"id": "elementscale"}, "extent": [6739, 6754], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6965, 7168], "text": ["Offset within the evaluated noise field (added to each axis). If you have the general noise effect you want, but want to get a different set of values for a different look, try changing the offset."]}, {"indent": 4, "type": "para", "extent": [7168, 7396], "text": ["You can animate the noise using an expression such as ", {"text": ["$T * 0.25"], "type": "code"}, " here. This is faster to compute than ", {"text": ["Animate Noise"], "type": "ui"}, ", but gives the visual effect of \"panning\" across the noise field, which may or may not be acceptable."]}, {"indent": 4, "type": "para", "extent": [7396, 7526], "text": ["Click the ", {"text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms", "scheme": "Smallicon", "type": "link", "value": "BUTTONS/decompose_transforms"}, " Per Component button for separate additional offsets along each axis."]}, {"indent": 4, "type": "para", "extent": [7526, 7577], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_offset.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_offset.gif"}]}], "indent": 0, "text": ["Offset"], "role": "item", "attrs": {"id": "offset"}, "extent": [6940, 6948], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7607, 7753], "text": ["When you turn on the ", {"text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms", "scheme": "Smallicon", "type": "link", "value": "BUTTONS/decompose_transforms"}, " Per Component button, this lets you add the a separate offset along each axis."]}], "indent": 0, "text": ["Offset"], "role": "item", "attrs": {"id": "offsetv"}, "extent": [7577, 7585], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7799, 7906], "text": ["Turn this checkbox on to use a VEXpression to override parameters based on abitrary attribute values."]}], "indent": 0, "text": ["Use VEXpression"], "role": "item", "attrs": {"id": "usenoiseexpression"}, "extent": [7753, 7770], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7948, 8275], "text": ["A VEX expression that can ", {"fragment": "#parameters", "text": ["override noise parameters"], "value": "/vex/snippets#parameters", "fullpath": "/vex/snippets#parameters", "scheme": null, "type": "link"}, " based on arbitrary attributes on the geometry. The comments in the default snippet (and the \"Pass Through\" preset in the menu to the right of the editor) show which parameters you can override, currenly ", {"text": ["pos"], "type": "code"}, ", ", {"text": ["elementsize"], "type": "code"}, ", and ", {"text": ["offset"], "type": "code"}, "."]}, {"indent": 4, "type": "para", "extent": [8275, 8647], "text": ["For instance, you can use ", {"text": ["pos += v@noise_offset;"], "type": "code"}, " to offset the sampling\n    location by the value of each element\u2019s ", {"text": ["noise_offset"], "type": "code"}, " vector attribute. As\n    another example, using ", {"text": ["pos = v@noise_offset;"], "type": "code"}, " will overwrite the incoming\n    value with the ", {"text": ["noise_offset"], "type": "code"}, " attribute: this is effectively the same as\n    using ", {"text": ["noise_offset"], "type": "code"}, " as the ", {"text": ["Location Attribute"], "type": "ui"}, "."]}], "indent": 0, "text": ["VEX Expression"], "role": "item", "attrs": {"id": "noiseexpression"}, "extent": [7906, 7922], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [8736, 8831], "text": ["Vary the generated noise with time. Some noise types do not support this feature."]}, {"indent": 8, "type": "para", "extent": [8831, 9047], "text": ["Applying animation this way on geometries with millions of element count is slower to compute than using expressions such as ", {"text": ["$T * 0.25"], "type": "code"}, " in the ", {"text": ["Offset"], "type": "ui"}, " parameter to \"pan\" across the noise field. "]}], "indent": 4, "text": ["Animate Noise"], "role": "item", "attrs": {"id": "animated"}, "extent": [8694, 8713], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [9095, 9191], "text": ["When ", {"text": ["Animated Noise"], "type": "ui"}, " is on, this controls the rate of change of the noise pattern."]}], "indent": 4, "text": ["Pulse Duration"], "role": "item", "attrs": {"id": "pulseduration"}, "extent": [9047, 9067], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": [" Animation "], "attrs": {"id": "linkanimation"}, "extent": [8647, 8665], "container": true, "type": "sep"}, {"body": [{"indent": 4, "type": "para", "extent": [9237, 9350], "text": ["The fractal controls let you add additional fractal noise on top of the output of the basic noise type."]}, {"body": [{"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [6734, 6812], "text": ["Does not add any additional noise on top of the basic noise."]}, {"indent": 8, "type": "para", "extent": [6812, 6875], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_fractal_none.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_fractal_none.png"}]}], "container": true, "text": ["None"], "extent": [6724, 6734], "indent": 4, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [6889, 6959], "text": ["Adds pseudo-random noise on top of the basic output."]}, {"indent": 8, "type": "para", "extent": [6959, 7026], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_fractal_standard.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_fractal_standard.png"}]}], "container": true, "text": ["Standard"], "extent": [6875, 6889], "indent": 4, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [7039, 7177], "text": ["Adds noise like \"Standard\" but dampens the noise in the valleys, which can be useful for generating mountainous terrain."]}, {"indent": 8, "type": "para", "extent": [7177, 7243], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_fractal_terrain.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_fractal_terrain.png"}]}], "container": true, "text": ["Terrain"], "extent": [7026, 7039], "indent": 4, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [7255, 7318], "text": ["Like terrain, but with more sharpness in the valleys."]}], "container": true, "text": ["Hybrid"], "extent": [7243, 7255], "indent": 4, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Fractal Type"], "role": "item", "attrs": {"id": "fractal"}, "extent": [6688, 6702], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"indent": 4, "type": "para", "extent": [9401, 9508], "text": ["The following parameters are available when Fractal type is anything except ", {"text": ["None"], "type": "ui"}, ".        "]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [7426, 7802], "text": ["The number of iterations of distortion to add to the output of the basic noise. The more iterations you add, the more \"detailed\" the output. Note that the output may have fewer octaves than this parameter (that is, increasing the parameter will eventually stop adding detail), because the node eventually stops when there\u2019s no more room to add more detail in the output."]}], "indent": 0, "text": ["Max octaves"], "role": "item", "attrs": {"id": "oct"}, "extent": [7395, 7408], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7832, 7968], "text": ["The frequency increment between iterations of fractal noise added to the basic output. Note that you can use a negative value."]}, {"indent": 4, "type": "para", "extent": [7968, 8020], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_lacunarity.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_lacunarity.gif"}]}], "indent": 0, "text": ["Lacunarity"], "role": "item", "attrs": {"id": "lac"}, "extent": [7802, 7814], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8051, 8254], "text": ["The scale increment between iterations of fractal noise added to the basic output. The higher the value the larger the \"jaggies\" added to the output. You can use a negative value for roughness."]}, {"indent": 4, "type": "para", "extent": [8254, 8306], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_roughness.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_roughness.gif"}]}], "indent": 0, "text": ["Roughness"], "role": "item", "attrs": {"id": "rough"}, "extent": [8020, 8031], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": [" Fractal "], "attrs": {"id": "linkfractal"}, "extent": [9191, 9207], "container": true, "type": "sep"}, {"body": [{"indent": 4, "type": "para", "extent": [9686, 9824], "text": [{"text": ["Lattice Warp"], "type": "ui"}, " and ", {"text": ["Gradient Warp"], "type": "ui"}, " are two methods for adding \"fractal-ness\" to the basic noises by warping the noise space."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [9865, 9930], "text": ["Adds \"stringiness\" or \"wiriness\" to standard noise."]}, {"indent": 8, "type": "para", "extent": [9930, 9992], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_lattice_warp.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_lattice_warp.gif"}]}], "indent": 4, "text": ["Lattice Warp"], "role": "item", "attrs": {"id": "disp"}, "extent": [9824, 9842], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [10043, 10143], "text": ["Controls base feature size of the generated noise. The value applies to each axis."]}], "indent": 4, "text": ["Lattice Warp Size"], "role": "item", "attrs": {"id": "dispesize"}, "extent": [9992, 10015], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [10186, 10248], "text": ["Widens the peaks or valleys of the noise output."]}, {"indent": 8, "type": "para", "extent": [10248, 10311], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_gradient_warp.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_gradient_warp.gif"}]}], "indent": 4, "text": ["Gradient Warp"], "role": "item", "attrs": {"id": "gflow"}, "extent": [10143, 10162], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [10365, 10561], "text": ["Accumulates the warp for each iteration (octave) of added fractal noise. This can add interesting smudgy effects when used in images, and interesting landmarks when used for terrain."]}], "indent": 4, "text": ["Accumulate Lattice Warp"], "role": "item", "attrs": {"id": "accuml"}, "extent": [10311, 10340], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [10616, 10702], "text": ["Accumulates the warp for each iteration (octave) of added fractal noise."]}], "indent": 4, "text": ["Accumulate Gradient Warp"], "role": "item", "attrs": {"id": "accumg"}, "extent": [10561, 10591], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9331, 9628], "text": ["When ", {"text": ["Noise type"], "type": "ui"}, " is \"Flow\", this controls the rotation of the \"swirl\", from ", {"text": ["0"], "type": "code"}, " to ", {"text": ["1"], "type": "code"}, ". Because this parameter is fractional, you can\u2019t just use ", {"text": ["$F"], "type": "code"}, " to animate it, since all integral values will look the same, representing a complete revolution. Instead, try something like ", {"text": ["$FF / 100"], "type": "code"}, "."]}], "indent": 0, "text": ["Flow Rotation"], "role": "item", "attrs": {"id": "flowrot"}, "extent": [9294, 9309], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": [" Warping "], "attrs": {"id": "linkwarping"}, "extent": [9648, 9664], "container": true, "type": "sep"}, {"indent": 0, "text": [" Post-Process "], "type": "sep", "extent": [10750, 10769], "level": 2}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [10811, 10867], "text": ["Clamp the lower end of the generated noise values."]}], "indent": 0, "text": ["Enable Minimum"], "role": "item", "attrs": {"id": "doclampmin"}, "extent": [10769, 10786], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10904, 11083], "text": ["When the checkbox is on, clamp values so they are never less than this value, after noise is applied. For vector attributes, the node applies this minimum to all components."]}], "indent": 0, "text": ["Minimum"], "role": "item", "attrs": {"id": "clampminvalue"}, "extent": [10867, 10876], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11124, 11181], "text": ["Clamp the higher end of the generated noise values."]}], "indent": 0, "text": ["Enable Maximum"], "role": "item", "attrs": {"id": "doclampmax"}, "extent": [11083, 11099], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11218, 11400], "text": ["When the checkbox is on, clamp values so they are never greater than this value, after noise is applied. For vector attributes, the node applies this maximum to all components."]}], "indent": 0, "text": ["Maximum"], "role": "item", "attrs": {"id": "clampmaxvalue"}, "extent": [11181, 11190], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11446, 11579], "text": ["When the ", {"text": ["Attribute Type"], "type": "ui"}, " is ", {"text": ["Vector"], "type": "ui"}, ", turn this on to normalize the output values so they all have the same length (", {"text": ["1"], "type": "code"}, ")."]}], "indent": 0, "text": ["Make Vectors Unit Length"], "role": "item", "attrs": {"id": "normalize"}, "extent": [11400, 11426], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [1100, 1112], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [11588, 11643], "text": [{"text": ["Attribute Adjust Float"], "fullpath": "/nodes/sop/attribadjustfloat", "scheme": "Node", "type": "link", "value": "/nodes/sop/attribadjustfloat"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [11643, 11701], "text": [{"text": ["Attribute Adjust Integer"], "fullpath": "/nodes/sop/attribadjustinteger", "scheme": "Node", "type": "link", "value": "/nodes/sop/attribadjustinteger"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [11701, 11757], "text": [{"text": ["Attribute Adjust Vector"], "fullpath": "/nodes/sop/attribadjustvector", "scheme": "Node", "type": "link", "value": "/nodes/sop/attribadjustvector"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [11757, 11806], "text": [{"text": ["Attribute Randomize"], "fullpath": "/nodes/sop/attribrandomize", "scheme": "Node", "type": "link", "value": "/nodes/sop/attribrandomize"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [11579, 11588], "container": true, "type": "related_section", "id": "related"}], "title": ["Attribute Noise"], "summary": ["Adds or generates noise in geometry attributes."], "attrs": {"version": "2.0", "since": "18.5", "namespace": null, "internal": "attribnoise::2.0", "context": "sop", "type": "node", "icon": "SOP/attribnoise"}, "included": ["/nodes/vop/unifiednoise"], "type": "root"}