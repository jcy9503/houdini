{"body": [{"indent": 0, "text": ["UV Layout"], "type": "title", "extent": [0, 14], "level": 0}, {"indent": 0, "type": "summary", "extent": [157, 222], "text": ["Tries to pack UV islands efficiently into a limited area."]}, {"indent": 0, "type": "para", "extent": [222, 599], "text": ["UV Layout produces a packing that tries to minimize the wasted UV area. This is achieved by translating and uniform scaling of the UV islands. The result is a non-overlapping placement of all islands into one or several UV tiles according to the ", {"text": ["Packing Method"], "type": "ui"}, ". The input geometry should have a valid vertex UV attribute. UV Layout uses this attribute to rewrite the UVs."]}, {"body": [{"body": [], "indent": 0, "text": ["UV layout"], "role": "item", "attrs": {"id": "116671421"}, "extent": [599, 616], "container": true, "type": "vimeo"}], "container": true, "role": "item_group", "type": "vimeo_group"}, {"indent": 0, "type": "para", "extent": [636, 750], "text": ["The node\u2019s packing algorithm is very good at finding good layouts, however you should keep a few things in mind:"]}, {"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [750, 964], "text": ["There is a theoretical limit to the amount of packing it can do in a square. For example, if you're packing two equal sized square islands into a square tile, the algorithm can\u2019t achieve more than 50% coverage."]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [964, 1105], "text": ["Packing is a hard problem for computers, which the node can only solve by trying different sizes and orientations and seeing if they fit."]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [1105, 1454], "text": ["Increasing iterations ", {"text": ["might"], "type": "em"}, " eventually find a better solution than the initial (iterations=1) packing, and often will, but it might not. The only way to know is to try increasing the iterations and waiting for the result. Unfortunately, when looking at a given packing, there\u2019s not even a way of knowing how much room there is for improvement."]}], "container": true, "type": "bullet_group"}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [1460, 1509], "text": [{"text": "", "fullpath": "/images/nodes/sop/uvlayout_after.jpg", "scheme": "Image", "type": "link", "value": "/images/nodes/sop/uvlayout_after.jpg"}]}], "indent": 0, "role": "item", "extent": [1454, 1460], "container": true, "type": "col"}, {"body": [{"indent": 4, "type": "para", "extent": [1515, 1566], "text": [{"text": "", "fullpath": "/images/nodes/sop/uvlayout_detail.jpg", "scheme": "Image", "type": "link", "value": "/images/nodes/sop/uvlayout_detail.jpg"}]}], "indent": 0, "role": "item", "extent": [1509, 1515], "container": true, "type": "col"}], "container": true, "role": "item_group", "type": "col_group"}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [1571, 1797], "text": ["If you have \"Descriptive Parameter\" text badges on in the network editor (", {"text": ["View \u25b8 Display Options"], "type": "ui"}, ", ", {"text": ["Text Badges"], "type": "ui"}, " tab), the node displays the current coverage percentage (for packing methods where that makes sense)."]}], "indent": 0, "role": "item", "extent": [1566, 1571], "container": true, "type": "tip"}], "container": true, "role": "item_group", "type": "tip_group"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [1841, 1923], "text": ["The name of the texture coordinate attribute to lay out, defaulting to ", {"text": ["uv"], "type": "code"}, "."]}], "indent": 0, "text": ["UV Attribute"], "role": "item", "attrs": {"id": "uvattr"}, "extent": [1809, 1824], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1950, 2042], "text": ["Only pack UVs for polygons in this group. If this is blank, pack UVs for all polygons."]}], "indent": 0, "text": ["Group"], "role": "item", "attrs": {"id": "group"}, "extent": [1923, 1930], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2100, 2356], "text": ["When this is on, the node tries to pack the islands selected in the ", {"text": ["Group"], "type": "ui"}, " field in-between any other islands that might exist in the same tile. When this is off, the node ignores any other islands and just lays out the selected islands over them."]}], "indent": 0, "text": ["Pack Between Non-group Islands"], "role": "item", "attrs": {"id": "packbetween"}, "extent": [2042, 2074], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2404, 2706], "text": ["The node determines \"island\" connectivity by points with the same UV values (within the ", {"text": ["Connectivity tolerance"], "type": "ui"}, " value). If you specify an edge group in this parameter, the group\u2019s edges are split apart in the UV islands. This allows you to break up large UV islands, potentially allowing "]}], "indent": 0, "text": ["Additional Seams"], "role": "item", "attrs": {"id": "additionalseams"}, "extent": [2356, 2374], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"indent": 0, "text": [" Packing style "], "type": "sep", "extent": [2706, 2728], "level": 3}, {"body": [{"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [2784, 2966], "text": ["Packs all islands into a single tile (by default, the unit square (", {"text": ["0,0"], "type": "code"}, " to ", {"text": ["1,1"], "type": "code"}, ")). You can use the ", {"text": ["Center"], "type": "ui"}, " and ", {"text": ["Size"], "type": "ui"}, " parameters to change the tile to pack into."]}, {"indent": 8, "type": "para", "extent": [2966, 3008], "text": [{"text": "", "fullpath": "/images/uv/uvlayout1.png", "scheme": "Image", "type": "link", "value": "/images/uv/uvlayout1.png"}]}], "indent": 4, "text": ["Single Tile"], "extent": [2767, 2784], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3025, 3131], "text": ["Packs all islands, scaled by the ", {"text": ["Scale"], "type": "ui"}, " parameter, into as few tiles as possible."]}, {"indent": 8, "type": "para", "extent": [3131, 3173], "text": [{"text": "", "fullpath": "/images/uv/uvlayout2.png", "scheme": "Image", "type": "link", "value": "/images/uv/uvlayout2.png"}]}], "indent": 4, "text": ["Fixed Scale"], "extent": [3008, 3025], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3195, 3392], "text": ["Packs islands into individual tiles based on the ", {"text": ["udim"], "type": "code"}, " attribute. Islands are packed into a tile numbered with the value of the ", {"text": ["udim"], "type": "code"}, " attribute. Valid ", {"text": ["udim"], "type": "code"}, " values start at ", {"text": ["1000"], "type": "code"}, "."]}, {"indent": 8, "type": "para", "extent": [3392, 3649], "text": ["It is enough for one polygon in an island to have a valid ", {"text": ["udim"], "type": "code"}, " number for the island to be packed into the tile with that number. If multiple polygons in an island have valid ", {"text": ["udim"], "type": "code"}, " numbers, the nodes uses the smallest of these numbers. "]}, {"indent": 8, "type": "para", "extent": [3649, 3781], "text": ["Islands with invalid ", {"text": ["udim"], "type": "code"}, " values are assumed to have ", {"text": ["udim"], "type": "code"}, " of 1000 and are placed into the first tile (", {"text": ["0,0"], "type": "code"}, " to ", {"text": ["1,1"], "type": "code"}, ")."]}, {"indent": 8, "type": "para", "extent": [3781, 3827], "text": [{"text": "", "fullpath": "/images/uv/uvlayout3.png", "scheme": "Image", "type": "link", "value": "/images/uv/uvlayout3.png"}, "    "]}], "indent": 4, "text": [{"text": ["udim"], "type": "code"}, " Attribute"], "extent": [3173, 3195], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3845, 3955], "text": ["Groups the islands into the tile they currently occupy (based on the island\u2019s top-left most vertex)."]}], "indent": 4, "text": ["Current Tile"], "extent": [3827, 3845], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Packing Method"], "role": "item", "attrs": {"id": "packing"}, "extent": [2728, 2745], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3982, 4080], "text": ["Indicates the distance between distinct islands, measured in 1/1000 of the\n    frame length."]}], "indent": 0, "text": ["Padding"], "role": "item", "attrs": {"id": "padding"}, "extent": [3955, 3964], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4140, 4228], "text": ["Indicates whether the padding should be also applied to the frame \n    boundaries."]}], "indent": 0, "text": ["Apply Padding to Tile Boundaries"], "role": "item", "attrs": {"id": "paddingboundary"}, "extent": [4080, 4114], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4283, 4375], "text": ["If islands have \"holes\" of unused texture space, pack other smaller islands into them."]}], "indent": 0, "text": ["Pack Islands in Cavities"], "role": "item", "attrs": {"id": "packincavities"}, "extent": [4228, 4254], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4408, 4579], "text": ["When ", {"text": ["Packing method"], "type": "ui"}, " is \"Single tile\", sets the center of the tile to pack into. The default is ", {"text": ["0.5,0.5"], "type": "code"}, ", centering the tile on the unit square (", {"text": ["0,0"], "type": "code"}, " to ", {"text": ["1,1"], "type": "code"}, ")."]}], "indent": 0, "text": ["Center"], "role": "item", "attrs": {"id": "bboxcenter"}, "extent": [4375, 4383], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4608, 4733], "text": ["When ", {"text": ["Packing method"], "type": "ui"}, " is \"Single tile\", sets the size of the tile to pack into. The default is one unit by one unit."]}], "indent": 0, "text": ["Size"], "role": "item", "attrs": {"id": "bboxsize"}, "extent": [4579, 4585], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"indent": 0, "text": [" Island transformations "], "type": "sep", "extent": [4733, 4764], "level": 3}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [4788, 4844], "text": ["The scale parameter for the second packing method."]}], "indent": 0, "text": ["Scale"], "role": "item", "attrs": {"id": "scale"}, "extent": [4764, 4772], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4904, 5094], "text": ["Resizes the islands before packing (maintaining their combined area) so that the relative areas of any two islands is the same as their corresponding surface areas on the 3D mesh. "]}], "indent": 0, "text": ["Correct Island Area Proportions"], "role": "item", "attrs": {"id": "correctareas"}, "extent": [4844, 4877], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5145, 5362], "text": ["Performs a computation of the oriented bounding boxes for each UV island and uses the information to axis align each island. This should produce much better packing results, especially for rectangular geometry."]}], "indent": 0, "text": ["Axis Align Islands"], "role": "item", "attrs": {"id": "axisalignislands"}, "extent": [5094, 5114], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"indent": 0, "text": [" Packing optimizations "], "type": "sep", "extent": [5362, 5392], "level": 3}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [5431, 5742], "text": ["Try this many orientations of each island when trying to pack islands tighter. For example, the default ", {"text": ["4"], "type": "code"}, " tries each island at 0\u00b0, 90\u00b0, 180\u00b0, and 270\u00b0. Increasing this ", {"text": ["may"], "type": "em"}, " allow the algorithm to find a better packing, especially when you have some non-square islands, but will make packing slower."]}, {"indent": 4, "type": "para", "extent": [5742, 5926], "text": ["If you have fat and mostly convex polygons, there\u2019s little to achieve from rotating them in small increments. Elongated highly concave shapes on the other hand can benefit a lot."]}], "indent": 0, "text": ["Orientations"], "role": "item", "attrs": {"id": "rotations"}, "extent": [5392, 5407], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5963, 6475], "text": ["How many times the algorithm will try packing the islands together in different ways to try to find the most efficient packing. Increasing this ", {"text": ["may"], "type": "em"}, " allow the algorithm to find a better packing, but will make packing slower. Note that the first iteration sorts islands by area and so represents the best possible \"first guess\". Additional iterations use random sorting, so 2 iterations isn\u2019t necessarily \"twice as good\" as 1, and you might need a lot more iterations to see any improvement over just ", {"text": ["1"], "type": "code"}, ". "]}], "indent": 0, "text": ["Iterations"], "role": "item", "attrs": {"id": "iterations"}, "extent": [5926, 5938], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6511, 6695], "text": ["Iterations greater than ", {"text": ["1"], "type": "code"}, " use random sorting. This number seeds the random order generator. You can change it to get different permutations with the same number of iterations."]}], "indent": 0, "text": ["Random Seed"], "role": "item", "attrs": {"id": "randseed"}, "extent": [6475, 6488], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"indent": 0, "text": [" Advanced "], "type": "sep", "extent": [6695, 6712], "level": 3}, {"indent": 0, "type": "para", "extent": [6712, 6931], "text": ["Generally, you shouldn\u2019t need to change these values unless you're dealing with unusually detailed geometry. They may allow slightly finer placement of islands but the difference will probably be too small to matter."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [6944, 7143], "text": ["The packing algorithm is based on a rasterization of the islands.\n    This controls the resolution of the rasterized bitmap.\n    Increasing this allows finer placement of islands but is slower."]}], "indent": 0, "text": ["Frame Width"], "role": "item", "extent": [6931, 6944], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7167, 7416], "text": ["UV coordinates within this tolerance are considered to be at the same position and connected.\n    This is necessary because of the imprecision of floating-point math.\n    If islands come apart unexpectedly you can try increasing this slightly."]}], "indent": 0, "text": ["Connectivity Tolerance"], "role": "item", "extent": [7143, 7167], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7439, 7748], "text": ["When doing a binary search of sizes to find the largest island size that still fits in available space, the algorithm will stop when the difference between the size that doesn\u2019t fit and the size that does fit is within this tolerance.\n    Decreasing this allows finer placement of island but is slower."]}], "indent": 0, "text": ["Scale Error Tolerance"], "role": "item", "extent": [7416, 7439], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [1797, 1809], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [7757, 7781], "text": [{"text": "", "fullpath": "/nodes/sop/uvproject", "scheme": "Node", "type": "link", "value": "/nodes/sop/uvproject"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [7781, 7807], "text": [{"text": "", "fullpath": "/nodes/sop/uvquickshade", "scheme": "Node", "type": "link", "value": "/nodes/sop/uvquickshade"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [7807, 7828], "text": [{"text": "", "fullpath": "/nodes/sop/texture", "scheme": "Node", "type": "link", "value": "/nodes/sop/texture"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [7828, 7848], "text": [{"text": "", "fullpath": "/nodes/sop/uvpelt", "scheme": "Node", "type": "link", "value": "/nodes/sop/uvpelt"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [7848, 7871], "text": [{"text": "", "fullpath": "/nodes/sop/uvunwrap", "scheme": "Node", "type": "link", "value": "/nodes/sop/uvunwrap"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [7748, 7757], "container": true, "type": "related_section", "id": "related"}], "summary": ["Tries to pack UV islands efficiently into a limited area."], "type": "root", "attrs": {"version": "2.0", "tags": "uvs, textures, cleanup", "since": "16.5", "namespace": null, "verb_since": "16.5", "internal": "uvlayout", "context": "sop", "type": "node", "icon": "SOP/uvlayout"}, "title": ["UV Layout"]}