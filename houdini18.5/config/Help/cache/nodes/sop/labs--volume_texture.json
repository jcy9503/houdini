{"body": [{"indent": 0, "text": ["Labs ROP Volume Texture"], "type": "title", "extent": [0, 28], "level": 0}, {"indent": 0, "type": "summary", "extent": [146, 224], "text": [" Take a volume as an input and export a texture of the density field. "]}, {"indent": 0, "type": "para", "extent": [224, 495], "text": ["The Volume Texture ROP is useful for converting volumes into textures that can be used in a realtime engine. Instead of creating a custom 3D texture, this outputs a 2D texture that can be read by all engines and then processed to be used as volumetric data at realtime."]}, {"indent": 0, "type": "para", "extent": [495, 568], "text": ["Use the dropdown presets to match UE4's expected volume texture inputs."]}, {"indent": 0, "type": "para", "extent": [568, 711], "text": ["Internally the volume is converted to the target output resolution. That means one voxel equals one pixel and the resulting volume is a cube."]}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [735, 765], "text": ["Generate the texture."]}], "indent": 4, "text": ["Render"], "role": "item", "extent": [723, 735], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [788, 853], "text": ["Use the dropdown to render a single frame or a sequence."]}], "indent": 4, "text": ["Valid Frame Range"], "role": "item", "extent": [765, 788], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [872, 943], "text": ["Start and End Frame as well as how many increments in between."]}], "indent": 4, "text": ["Start/End/Inc"], "role": "item", "extent": [853, 872], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [975, 1043], "text": ["By default, the texture is exported with Z up to match UE4."]}], "indent": 4, "text": ["Up Axis"], "role": "item", "extent": [962, 975], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 4, "level": 2, "text": ["Sampling"], "extent": [943, 962], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [1081, 1264], "text": ["This is the resolution in voxels of the converted volume. Remember one voxel generally equals one pixel. It\u2019s recommened to use the resolution dropdown to set this parameter."]}], "indent": 4, "text": ["Slices (res^3)"], "role": "item", "extent": [1061, 1081], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1285, 1363], "text": ["It\u2019s recommened to use the resolution dropdown to set this parameter."]}], "indent": 4, "text": ["Images Per Line"], "role": "item", "extent": [1264, 1285], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1388, 1481], "text": ["Based on the slices and images per line this is the ideal resolution of the texture."]}], "indent": 4, "text": ["Expected Resolution"], "role": "item", "extent": [1363, 1388], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1497, 1596], "text": ["The final output of the texture. It\u2019s recommended that this match the expected resolution."]}], "indent": 4, "text": ["Resolution"], "role": "item", "extent": [1481, 1497], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 4, "level": 2, "text": ["Slicing"], "extent": [1043, 1061], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [1626, 1685], "text": ["Generate a preview of the texture in the viewport."]}], "indent": 4, "text": ["Preview"], "role": "item", "extent": [1613, 1626], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1704, 1802], "text": ["When working with SDF\u2019s this can be useful to return the complement of the volume sample."]}], "indent": 4, "text": ["Invert Values"], "role": "item", "extent": [1685, 1704], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1822, 1858], "text": ["Path of exported image."]}], "indent": 4, "text": ["Output Picture"], "role": "item", "extent": [1802, 1822], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 4, "level": 2, "text": ["Output"], "extent": [1596, 1613], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [711, 723], "container": true, "type": "parameters_section", "id": "parameters"}], "summary": [" Take a volume as an input and export a texture of the density field. "], "type": "root", "attrs": {"version": null, "tags": "sidefxlabs, gamedev, volumes", "namespace": "labs", "internal": "labs::volume_texture", "context": "sop", "type": "node", "icon": "volume_texture"}, "title": ["Labs ROP Volume Texture"]}