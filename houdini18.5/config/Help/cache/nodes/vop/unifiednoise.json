{"body": [{"indent": 0, "text": ["Unified Noise"], "type": "title", "extent": [0, 18], "level": 0}, {"indent": 0, "type": "summary", "extent": [121, 224], "text": ["Presents a unified interface and uniform output range for all the noise types available in VEX."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [252, 622], "text": ["Houdini ships with the ", {"text": ["Unified Noise VOP "], "fullpath": "/nodes/vop/unifiednoise", "scheme": "Node", "type": "link", "value": "/nodes/vop/unifiednoise"}, " and the ", {"text": ["Unified Noise - Static VOP"], "fullpath": "/nodes/vop/unifiednoise_static", "scheme": "Node", "type": "link", "value": "/nodes/vop/unifiednoise_static"}, ". The \"static\" variant is pre-compiled so it is faster inside a VOP network. The only difference with the static node is that you must set the noise type and fractal type in the parameters (you cannot vary them using VOP inputs)."]}, {"indent": 4, "type": "para", "extent": [622, 798], "text": ["If you are working interactively in a VOP network and don\u2019t need to dynamically change the noise type, you probably want to use the \"static\" version for better speed."]}, {"indent": 4, "type": "para", "extent": [798, 964], "text": ["(If you promote parameters from a regular Unified Noise up to a subnetwork or material, it will also be compiled and will become as fast as the static version.)"]}], "indent": 0, "role": "item", "attrs": {"id": "static_note"}, "extent": [224, 230], "container": true, "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}, {"indent": 0, "type": "para", "extent": [964, 1180], "text": ["This node lets you play with parameters on the ", {"text": ["Construction"], "type": "ui"}, " tab to design an interesting noise with ", {"text": ["0-1"], "type": "code"}, " output, and then use the parameters on the ", {"text": ["Output"], "type": "ui"}, " tab to condition the output to the range you need."]}, {"body": [{"indent": 0, "role": "item", "type": "fig", "extent": [1180, 1235], "text": [{"text": "", "fullpath": "/images/nodes/vop/unifiednoise_types.jpg", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unifiednoise_types.jpg"}]}], "container": true, "role": "item_group", "type": "fig_group"}, {"indent": 0, "type": "para", "extent": [1235, 1506], "text": ["This node is designed to have most of its interface promoted up to the parent\nmaterial. to promote the UI for this node, you must choose \n", {"text": ["Promote Interface \u25b8 UI + Links + Inputs"], "type": "ui"}, " to trigger scripts on the node \nto promote and create parameters up on the parent node."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [1511, 1700], "text": ["The noise functions sometimes give artifacts or an area of static results around offset ", {"text": ["0"], "type": "code"}, ", so you want want to always begin designing your noise with non-zero values in the offset."]}], "indent": 0, "role": "item", "extent": [1506, 1511], "container": true, "type": "tip"}], "container": true, "role": "item_group", "type": "tip_group"}, {"body": [{"indent": 0, "type": "para", "extent": [1708, 1800], "text": ["The data type of the position (", {"text": ["pos"], "type": "code"}, ") input is controlled by the ", {"text": ["Signature"], "type": "ui"}, " parameter."]}, {"indent": 0, "type": "para", "extent": [1800, 2283], "text": ["The VOP has inputs for dual positions (", {"text": ["pos"], "type": "code"}, " and ", {"text": ["pos2"], "type": "code"}, ") and weights (", {"text": ["kpos"], "type": "code"}, " and ", {"text": ["kpos2"], "type": "code"}, "). These fields are output by ", {"text": ["Pyro simulations"], "fullpath": "/pyro/pyro", "scheme": null, "type": "link", "value": "/pyro/pyro"}, " when using dual rest fields. The weights allow you to indicate the current importance of each rest field. For example, if the first rest field is the most important, you would set ", {"text": ["kpos"], "type": "code"}, " high and ", {"text": ["kpos2"], "type": "code"}, " low, and then as you gradually switch to the second rest field, lower ", {"text": ["kpos"], "type": "code"}, " and raise ", {"text": ["kpos2"], "type": "code"}, ". These values are output by DOPs."]}], "indent": 0, "level": 1, "text": "Inputs", "role": "section", "extent": [1700, 1708], "container": true, "type": "inputs_section", "id": "inputs"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [2302, 2416], "text": ["The output of the noise function. The data type of this output is controlled by the ", {"text": ["Signature"], "type": "ui"}, " parameter."]}], "indent": 0, "text": [{"text": ["noise"], "type": "code"}], "extent": [2292, 2302], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [2425, 2467], "text": ["The calculated average of the noise."]}], "indent": 0, "text": [{"text": ["x_avg"], "type": "code"}], "extent": [2416, 2425], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [2476, 2714], "text": ["The actual number of octaves in the output. This may differ from the number of octaves requested in the parameters. For example, if you request 2000 octaves but the filtering of the output means that number of octaves can\u2019t be used."]}], "indent": 0, "text": [{"text": ["x_oct"], "type": "code"}], "extent": [2467, 2476], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [2723, 2771], "text": ["The offset of warping in the noise space."]}], "indent": 0, "text": [{"text": ["x_off"], "type": "code"}], "extent": [2714, 2723], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "level": 1, "text": "Outputs", "role": "section", "extent": [2283, 2292], "container": true, "type": "outputs_section", "id": "outputs"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [2795, 3092], "text": ["Sets the data types this node expects for the inputs, and the data type of the output. This allows you to integrate the noise with various other VOPs. If you choose a ", {"text": ["Noise type"], "type": "ui"}, " that doesn\u2019t need this many components, the node will simply not use/set every component of the input/output."]}], "indent": 0, "text": ["Signature"], "role": "item", "extent": [2783, 2795], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3119, 3223], "text": ["The type of noise to generate. Different algorithms give noise with different characteristics."]}, {"body": [{"body": [{"body": [{"body": [{"indent": 12, "type": "para", "extent": [3264, 3353], "text": ["The default. A faster and more interesting variant of Perlin noise."]}, {"indent": 12, "type": "para", "extent": [3353, 3415], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_simplex.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_simplex.png"}]}], "indent": 8, "text": ["Fast"], "extent": [3250, 3264], "container": true, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [3443, 3557], "text": ["Sparse Convolution noise is similar to Worley noise. Does not have artifacts at grid points."]}, {"indent": 12, "type": "para", "extent": [3557, 3618], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_sparse.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_sparse.png"}]}], "indent": 8, "text": ["Sparse Convolution"], "extent": [3415, 3443], "container": true, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [3637, 3736], "text": ["Produces a bumpy output. Named for its alleged resemblance to alligator skin."]}, {"indent": 12, "type": "para", "extent": [3736, 3800], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_alligator.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_alligator.png"}]}], "indent": 8, "text": ["Alligator"], "extent": [3618, 3637], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 4, "text": ["Value noise types"], "role": "item", "extent": [3223, 3250], "container": true, "type": "box"}, {"body": [{"body": [{"body": [{"indent": 12, "type": "para", "extent": [3844, 3953], "text": ["A noise where the visual details are the same size. ", {"text": ["Wikipedia article"], "scheme": "Wp", "type": "link", "exists": true, "value": "http://en.wikipedia.org/wiki/Perlin_noise"}]}, {"indent": 12, "type": "para", "extent": [3953, 4079], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_perlin.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_perlin.png"}, "\n            ", {"text": "", "fullpath": "/images/nodes/vop/unoise_periodic_perlin.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_periodic_perlin.png"}]}], "indent": 8, "text": ["Perlin"], "extent": [3828, 3844], "container": true, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [4093, 4317], "text": ["A noise that\u2019s stable over time, like a rotated Perlin noise, useful to create noise that seems to swirl and flow smoothly across time. Use the ", {"text": ["Flow rotation"], "type": "ui"}, " parameter below to control the rotation."]}, {"indent": 12, "type": "para", "extent": [4317, 4437], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_flow.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_flow.gif"}, "\n            ", {"text": "", "fullpath": "/images/nodes/vop/unoise_periodic_flow.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_periodic_flow.gif"}]}], "indent": 8, "text": ["Flow"], "extent": [4079, 4093], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 4, "text": ["Perlin noise types"], "role": "item", "extent": [3800, 3828], "container": true, "type": "box"}, {"body": [{"body": [{"body": [{"indent": 12, "type": "para", "extent": [4486, 4651], "text": ["Produces cellular features similar to plant cells, ocean waves, honeycombs, cratered landscapes, and so on. ", {"text": ["Wikipedia article"], "scheme": "Wp", "type": "link", "exists": true, "value": "http://en.wikipedia.org/wiki/Worley_noise"}]}, {"indent": 12, "type": "para", "extent": [4651, 4719], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_worley_f1.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_worley_f1.png"}]}], "indent": 8, "text": ["F1"], "extent": [4474, 4486], "container": true, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [4734, 4826], "text": ["A variant of Worley noise that produces blunted and cornered features."]}, {"indent": 12, "type": "para", "extent": [4826, 4894], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_worley_f2.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_worley_f2.png"}]}], "indent": 8, "text": ["F2-F1"], "extent": [4719, 4734], "container": true, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [4916, 5052], "text": ["A variant of Worley F1 noise that uses Manhattan distance calculation. Useful when you want unusual-looking noise."]}], "indent": 8, "text": ["Manhattan F1"], "extent": [4894, 4916], "container": true, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [5077, 5216], "text": ["A variant of Worley F2-F1 noise that uses Manhattan distance calculation. Useful when you want unusual-looking noise."]}], "indent": 8, "text": ["Manhattan F2-F1"], "extent": [5052, 5077], "container": true, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [5238, 5374], "text": ["A variant of Worley F1 noise that uses Chebyshev distance calculation. Useful when you want unusual-looking noise."]}], "indent": 8, "text": ["Chebyshev F1"], "extent": [5216, 5238], "container": true, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [5399, 5530], "text": ["A variant of Worley F2-F1 noise that uses Chebyshev distance calculation. Useful when you want unusual-looking noise."]}], "indent": 8, "text": ["Chebyshev F2-F1"], "extent": [5374, 5399], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 4, "text": ["Worley/Cellular noise types"], "role": "item", "extent": [4437, 4474], "container": true, "type": "box"}], "container": true, "role": "item_group", "type": "box_group"}], "indent": 0, "text": ["Noise type"], "role": "item", "attrs": {"id": "basis"}, "extent": [3092, 3104], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5560, 5653], "text": ["The frequency of the noise. Higher values give smaller scaled details in the noise."]}, {"indent": 4, "type": "para", "extent": [5653, 5704], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_frequency.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_frequency.gif"}]}], "indent": 0, "text": ["Frequency"], "role": "item", "attrs": {"id": "freq"}, "extent": [5530, 5541], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5733, 6069], "text": ["The offset of the input into the noise function. If you visualize the noise as a 2D graph or 3D height field, this has the effect of \"panning\" across the space of possible noise outputs. If you have the general noise effect you want but just want to get a different set of values for a different look, try changing the offset."]}, {"indent": 4, "type": "para", "extent": [6069, 6117], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_offset.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_offset.gif"}]}], "indent": 0, "text": ["Offset"], "role": "item", "attrs": {"id": "offset"}, "extent": [5704, 5712], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6127, 6251], "text": ["Turn this on to use a variant of the chosen ", {"text": ["Noise type"], "type": "ui"}, " that repeats. This can be useful for making tiled patterns."]}], "indent": 0, "text": ["Periodic"], "role": "item", "extent": [6117, 6127], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6280, 6382], "text": ["When ", {"text": ["Periodic"], "type": "ui"}, " is on, the multiple of the input range before the noise pattern repeats.  "]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [6392, 6515], "text": ["If Lacunarity is not 2, successive octaves will not have matching periods so a periodic noise won\u2019t be built."]}], "indent": 4, "role": "item", "extent": [6382, 6392], "container": true, "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}, {"indent": 4, "type": "para", "extent": [6515, 6564], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_period.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_period.gif"}]}], "indent": 0, "text": ["Period"], "role": "item", "attrs": {"id": "period"}, "extent": [6251, 6259], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"indent": 0, "text": [" Fractal "], "type": "sep", "extent": [6564, 6580], "level": 3}, {"indent": 0, "type": "para", "extent": [6580, 6688], "text": ["The fractal controls let you add additional fractal noise ", {"text": ["on top of"], "type": "em"}, " the output of the basic noise type."]}, {"body": [{"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [6734, 6812], "text": ["Does not add any additional noise on top of the basic noise."]}, {"indent": 8, "type": "para", "extent": [6812, 6875], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_fractal_none.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_fractal_none.png"}]}], "indent": 4, "text": ["None"], "extent": [6724, 6734], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [6889, 6959], "text": ["Adds pseudo-random noise on top of the basic output."]}, {"indent": 8, "type": "para", "extent": [6959, 7026], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_fractal_standard.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_fractal_standard.png"}]}], "indent": 4, "text": ["Standard"], "extent": [6875, 6889], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [7039, 7177], "text": ["Adds noise like \"Standard\" but dampens the noise in the valleys, which can be useful for generating mountainous terrain."]}, {"indent": 8, "type": "para", "extent": [7177, 7243], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_fractal_terrain.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_fractal_terrain.png"}]}], "indent": 4, "text": ["Terrain"], "extent": [7026, 7039], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [7255, 7318], "text": ["Like terrain, but with more sharpness in the valleys."]}], "indent": 4, "text": ["Hybrid"], "extent": [7243, 7255], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Fractal Type"], "role": "item", "attrs": {"id": "fractal"}, "extent": [6688, 6702], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"indent": 0, "type": "para", "extent": [7318, 7395], "text": ["The following parameters are available when ", {"text": ["Fractal type"], "type": "ui"}, " is not \"None\"."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [7426, 7802], "text": ["The number of iterations of distortion to add to the output of the basic noise. The more iterations you add, the more \"detailed\" the output. Note that the output may have fewer octaves than this parameter (that is, increasing the parameter will eventually stop adding detail), because the node eventually stops when there\u2019s no more room to add more detail in the output."]}], "indent": 0, "text": ["Max octaves"], "role": "item", "attrs": {"id": "oct"}, "extent": [7395, 7408], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7832, 7968], "text": ["The frequency increment between iterations of fractal noise added to the basic output. Note that you can use a negative value."]}, {"indent": 4, "type": "para", "extent": [7968, 8020], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_lacunarity.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_lacunarity.gif"}]}], "indent": 0, "text": ["Lacunarity"], "role": "item", "attrs": {"id": "lac"}, "extent": [7802, 7814], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8051, 8254], "text": ["The scale increment between iterations of fractal noise added to the basic output. The higher the value the larger the \"jaggies\" added to the output. You can use a negative value for roughness."]}, {"indent": 4, "type": "para", "extent": [8254, 8306], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_roughness.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_roughness.gif"}]}], "indent": 0, "text": ["Roughness"], "role": "item", "attrs": {"id": "rough"}, "extent": [8020, 8031], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"indent": 0, "text": [" Warping "], "type": "sep", "extent": [8306, 8322], "level": 3}, {"indent": 0, "type": "para", "extent": [8322, 8445], "text": ["Lattice warp and gradient warp are two methods for adding \"fractal-ness\" to the basic noises by warping the noise space."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [8483, 8540], "text": ["Adds \"stringiness\" or \"wiriness\" to standard noise."]}, {"indent": 4, "type": "para", "extent": [8540, 8598], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_lattice_warp.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_lattice_warp.gif"}]}], "indent": 0, "text": ["Enable Lattice Warp"], "role": "item", "attrs": {"id": "dolwarp"}, "extent": [8445, 8466], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8639, 8862], "text": ["When ", {"text": ["Lattice Warp"], "type": "ui"}, " is on, this accumulates the warp for each iteration (octave) of added fractal noise. When used in images, this can add interesting smudgy effects, and interesting landmarks when used for terrain."]}], "indent": 0, "text": ["Accumulate Lattice Warp"], "role": "item", "attrs": {"id": "accuml"}, "extent": [8598, 8623], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8906, 8983], "text": ["Enables a slider to widen the peaks or valleys of the noise output."]}, {"indent": 4, "type": "para", "extent": [8983, 9038], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_gradient_warp.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_gradient_warp.gif"}]}], "indent": 0, "text": ["Enable Gradient Warp"], "role": "item", "attrs": {"id": "dogwarp"}, "extent": [8862, 8884], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9085, 9205], "text": ["When ", {"text": ["Enable Gradient Warp"], "type": "ui"}, " is on, this accumulates the warp for each iteration (octave) of added fractal noise."]}], "indent": 0, "text": ["Accumulate Gradient Warp"], "role": "item", "attrs": {"id": "accumg"}, "extent": [9038, 9064], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9240, 9294], "text": ["Widens the peaks or valleys of the noise output."]}], "indent": 0, "text": ["Gradient Warp"], "role": "item", "attrs": {"id": "gflow"}, "extent": [9205, 9220], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9331, 9628], "text": ["When ", {"text": ["Noise type"], "type": "ui"}, " is \"Flow\", this controls the rotation of the \"swirl\", from ", {"text": ["0"], "type": "code"}, " to ", {"text": ["1"], "type": "code"}, ". Because this parameter is fractional, you can\u2019t just use ", {"text": ["$F"], "type": "code"}, " to animate it, since all integral values will look the same, representing a complete revolution. Instead, try something like ", {"text": ["$FF / 100"], "type": "code"}, "."]}], "indent": 0, "text": ["Flow Rotation"], "role": "item", "attrs": {"id": "flowrot"}, "extent": [9294, 9309], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"indent": 0, "text": [" Output correction "], "type": "sep", "extent": [9628, 9654], "level": 3}, {"indent": 0, "type": "para", "extent": [9654, 9857], "text": ["The output is guaranteed to be in the range ", {"text": ["0-1"], "type": "code"}, ". If you need different output, you can use the parameters on this tab to conveniently condition the output without messing with your noise parameters."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [9885, 10083], "text": ["\"Flips\" values below the median to be above the median, so all valleys become peaks. (Note it flips across the ", {"text": ["median"], "type": "em"}, ", not ", {"text": ["0"], "type": "code"}, ".) If the median is ", {"text": ["0"], "type": "code"}, ", this is like taking the absolute value."]}, {"indent": 4, "type": "para", "extent": [10083, 10178], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_fold1.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_fold1.png"}, "\n    ", {"text": "", "fullpath": "/images/nodes/vop/unoise_fold2.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_fold2.png"}]}], "indent": 0, "text": ["Fold"], "role": "item", "attrs": {"id": "cc_fold"}, "extent": [9857, 9863], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10219, 10278], "text": ["Enables the bias controls to nudge values up or down."]}], "indent": 0, "text": ["Bias (checkbox)"], "role": "item", "attrs": {"id": "cc_dobias"}, "extent": [10178, 10195], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10306, 10358], "text": ["Moves the output down or up toward ", {"text": ["0"], "type": "code"}, " or ", {"text": ["1"], "type": "code"}, "."]}], "indent": 0, "text": ["Bias"], "role": "item", "attrs": {"id": "cc_bias"}, "extent": [10278, 10284], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10388, 10461], "text": ["Enables the gain controls to increase or decrease the contrast."]}], "indent": 0, "text": ["Gain"], "role": "item", "attrs": {"id": "cc_dogain"}, "extent": [10358, 10364], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10489, 10554], "text": ["Increases or decreases the contrast from 0.5 in the output."]}], "indent": 0, "text": ["Gain"], "role": "item", "attrs": {"id": "cc_gain"}, "extent": [10461, 10467], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10587, 10702], "text": ["Outputs the numerical complement (", {"text": ["1 - x"], "type": "code"}, ") of the computed noise. Basically turns the output upside-down."]}, {"indent": 4, "type": "para", "extent": [10702, 10801], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_sine.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_sine.png"}, "\n    ", {"text": "", "fullpath": "/images/nodes/vop/unoise_complement.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_complement.png"}]}], "indent": 0, "text": ["Complement"], "role": "item", "attrs": {"id": "cc_inv"}, "extent": [10554, 10566], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10848, 11015], "text": ["Enables the ", {"text": ["New minimum"], "type": "ui"}, " and ", {"text": ["New maximum"], "type": "ui"}, " parameters to allow you to map the noise, which is normally in the ", {"text": ["[0,1]"], "type": "code"}, " range, to a different range of values."]}], "indent": 0, "text": ["Output range (clamped)"], "role": "item", "attrs": {"id": "cc_dorng"}, "extent": [10801, 10825], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11051, 11136], "text": ["When ", {"text": ["Output range"], "type": "ui"}, " is on, remaps the output so ", {"text": ["0"], "type": "code"}, " values become this value."]}], "indent": 0, "text": ["New minimum"], "role": "item", "attrs": {"id": "cc_rnglo"}, "extent": [11015, 11028], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11172, 11257], "text": ["When ", {"text": ["Output range"], "type": "ui"}, " is on, remaps the output so ", {"text": ["1"], "type": "code"}, " values become this value."]}], "indent": 0, "text": ["New maximum"], "role": "item", "attrs": {"id": "cc_rnghi"}, "extent": [11136, 11149], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11295, 11349], "text": ["Scales the final conditioned output up or down."]}], "indent": 0, "text": ["Final amplitude"], "role": "item", "attrs": {"id": "cc_amp"}, "extent": [11257, 11274], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"indent": 0, "type": "sep", "extent": [11349, 11355], "level": 5}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [11386, 11462], "text": ["A scale on the filter width to use in shading a shading context."]}], "indent": 0, "text": ["Filter Scale"], "role": "item", "attrs": {"id": "fscale"}, "extent": [11355, 11370], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [2771, 2783], "container": true, "type": "parameters_section", "id": "parameters"}], "summary": ["Presents a unified interface and uniform output range for all the noise types available in VEX."], "type": "root", "attrs": {"version": "3.0", "since": "17.0", "namespace": null, "internal": "unifiednoise", "context": "vop", "type": "node", "icon": "VOP/unifiednoise"}, "title": ["Unified Noise"]}