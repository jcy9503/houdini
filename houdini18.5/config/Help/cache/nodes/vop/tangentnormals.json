{"body": [{"indent": 0, "text": ["Tangent Normals"], "type": "title", "extent": [66, 86], "level": 0}, {"indent": 0, "type": "summary", "extent": [86, 136], "text": ["Exports shader normals as a render plane."]}, {"indent": 0, "type": "para", "extent": [136, 336], "text": ["This node takes existing normals in the shader and outputs them as an optional parameter called ", {"text": ["export_normals"], "type": "code"}, ". You can set this as an extra image plane in the render node to bake out normal maps."]}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [375, 516], "text": ["Choose whether to output normals that have been modified by the shader, or output a difference between a high res and low res geometry."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [536, 607], "text": ["Output normals that have been modified by the shader."]}], "indent": 4, "text": ["Shader Normals"], "extent": [516, 536], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [632, 973], "text": ["Output normals in the space of the low res geometry using the high resolution geometry. Specify a low-res geometry using the ", {"fragment": "#vm_uvobject", "text": ["UV Render Object"], "value": "/props/mantra#vm_uvobject", "fallback_text": "vm_uvobject", "fullpath": "/props/mantra#vm_uvobject", "scheme": "Mantra", "type": "link"}, " render property on the render node. Both objects must be visible. This will lookup the normals from the high-res geometry and output them in the low-res geometry space."]}], "indent": 4, "text": ["Geometry Difference"], "extent": [607, 632], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [982, 1160], "text": ["When using \"Geometry Different\" with a high res and low res object, you should use a ", {"text": ["Peak SOP"], "fullpath": "/nodes/sop/peak", "scheme": "Node", "type": "link", "value": "/nodes/sop/peak"}, " to prevent inter-penetrations artifacts in the normal map."]}], "indent": 4, "role": "item", "extent": [973, 982], "container": true, "type": "tip"}], "container": true, "role": "item_group", "type": "tip_group"}], "indent": 0, "text": ["Source"], "attrs": {"id": "source"}, "extent": [345, 354], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [1187, 1343], "text": ["The coordinate system in which to output the normals. Use tangent space for deforming objects, so the normals stay relative to the moving surface."]}, {"indent": 4, "type": "para", "extent": [1343, 1496], "text": ["Some target applications might require a certain space for tangent maps. Commonly, game engines and other real time systems use tangent space maps."]}], "indent": 0, "text": ["Space"], "attrs": {"id": "space"}, "extent": [1160, 1167], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [1523, 1594], "text": ["Map the normal data into specific range. Either -1 to 1 or 0 to 1."]}], "indent": 0, "text": ["Range"], "attrs": {"id": "range"}, "extent": [1496, 1503], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "level": 1, "text": "Outputs", "role": "section", "extent": [336, 345], "container": true, "type": "outputs_section", "id": "outputs"}], "summary": ["Exports shader normals as a render plane."], "type": "root", "attrs": {"since": "13.0", "namespace": null, "version": null, "context": "vop", "type": "node", "internal": "tangentnormals"}, "title": ["Tangent Normals"]}