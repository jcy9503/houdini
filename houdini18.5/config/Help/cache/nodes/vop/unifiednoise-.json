{"body": [{"indent": 0, "text": ["Unified Noise"], "type": "title", "extent": [0, 18], "level": 0}, {"indent": 0, "type": "summary", "extent": [107, 210], "text": ["Presents a unified interface and uniform output range for all the noise types available in VEX."]}, {"indent": 0, "type": "para", "extent": [210, 426], "text": ["This node lets you play with parameters on the ", {"text": ["Construction"], "type": "ui"}, " tab to design an interesting noise with ", {"text": ["0-1"], "type": "code"}, " output, and then use the parameters on the ", {"text": ["Output"], "type": "ui"}, " tab to condition the output to the range you need."]}, {"body": [{"indent": 0, "role": "item", "type": "fig", "extent": [426, 481], "text": [{"text": "", "fullpath": "/images/nodes/vop/unifiednoise_types.jpg", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unifiednoise_types.jpg"}]}], "container": true, "role": "item_group", "type": "fig_group"}, {"indent": 0, "type": "para", "extent": [481, 752], "text": ["This node is designed to have most of its interface promoted up to the parent\nmaterial. to promote the UI for this node, you must choose \n", {"text": ["Promote Interface \u25b8 UI + Links + Inputs"], "type": "ui"}, " to trigger scripts on the node \nto promote and create parameters up on the parent node."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [757, 945], "text": ["The noise functions sometimes give artifacts or an area of static results around offset ", {"text": ["0"], "type": "code"}, ", so you want want to always begin designing your noise with non-zero values in the offset."]}], "indent": 0, "role": "item", "extent": [752, 757], "container": true, "type": "tip"}], "container": true, "role": "item_group", "type": "tip_group"}, {"body": [{"indent": 0, "type": "para", "extent": [953, 1045], "text": ["The data type of the position (", {"text": ["pos"], "type": "code"}, ") input is controlled by the ", {"text": ["Signature"], "type": "ui"}, " parameter."]}, {"indent": 0, "type": "para", "extent": [1045, 1527], "text": ["The VOP has inputs for dual positions (", {"text": ["pos"], "type": "code"}, " and ", {"text": ["pos2"], "type": "code"}, ") and weights (", {"text": ["kpos"], "type": "code"}, " and ", {"text": ["kpos2"], "type": "code"}, "). These fields are output by ", {"text": ["Pyro simulations"], "fullpath": "/pyro/pyro", "scheme": null, "type": "link", "value": "/pyro/pyro"}, " when using dual rest fields. The weights allow you to indicate the current importance of each rest field. For example, if the first rest field is the most important, you would set ", {"text": ["kpos"], "type": "code"}, " high and ", {"text": ["kpos2"], "type": "code"}, " low, and then as you gradually switch to the second rest field, lower ", {"text": ["kpos"], "type": "code"}, " and raise ", {"text": ["kpos2"], "type": "code"}, ". These values are output by DOPs."]}], "indent": 0, "level": 1, "text": "Inputs", "role": "section", "extent": [945, 953], "container": true, "type": "inputs_section", "id": "inputs"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [1546, 1660], "text": ["The output of the noise function. The data type of this output is controlled by the ", {"text": ["Signature"], "type": "ui"}, " parameter."]}], "indent": 0, "text": [{"text": ["noise"], "type": "code"}], "extent": [1536, 1546], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [1669, 1711], "text": ["The calculated average of the noise."]}], "indent": 0, "text": [{"text": ["x_avg"], "type": "code"}], "extent": [1660, 1669], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [1720, 1958], "text": ["The actual number of octaves in the output. This may differ from the number of octaves requested in the parameters. For example, if you request 2000 octaves but the filtering of the output means that number of octaves can\u2019t be used."]}], "indent": 0, "text": [{"text": ["x_oct"], "type": "code"}], "extent": [1711, 1720], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [1967, 2014], "text": ["The offset of warping in the noise space."]}], "indent": 0, "text": [{"text": ["x_off"], "type": "code"}], "extent": [1958, 1967], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "level": 1, "text": "Outputs", "role": "section", "extent": [1527, 1536], "container": true, "type": "outputs_section", "id": "outputs"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [2038, 2335], "text": ["Sets the data types this node expects for the inputs, and the data type of the output. This allows you to integrate the noise with various other VOPs. If you choose a ", {"text": ["Noise type"], "type": "ui"}, " that doesn\u2019t need this many components, the node will simply not use/set every component of the input/output."]}], "indent": 0, "text": ["Signature"], "role": "item", "extent": [2026, 2038], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2343, 2521], "text": ["Whether to add noise to the input. When this checkbox is off value of ", {"text": ["Inactive Output"], "type": "ui"}, " is used as the ", {"text": ["noise"], "type": "code"}, " output. This is useful for checking the effect of the node."]}], "indent": 0, "text": ["Active"], "role": "item", "extent": [2335, 2343], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2538, 2631], "text": ["When ", {"text": ["Active"], "type": "ui"}, " is off, this value is used as the output instead of the noise function."]}], "indent": 0, "text": ["Inactive output"], "role": "item", "extent": [2521, 2538], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2661, 2754], "text": ["The frequency of the noise. Higher values give smaller scaled details in the noise."]}, {"indent": 4, "type": "para", "extent": [2754, 2805], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_frequency.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_frequency.gif"}]}], "indent": 0, "text": ["Frequency"], "role": "item", "attrs": {"id": "freq"}, "extent": [2631, 2642], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2834, 3170], "text": ["The offset of the input into the noise function. If you visualize the noise as a 2D graph or 3D height field, this has the effect of \"panning\" across the space of possible noise outputs. If you have the general noise effect you want but just want to get a different set of values for a different look, try changing the offset."]}, {"indent": 4, "type": "para", "extent": [3170, 3222], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_offset.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_offset.gif"}]}], "indent": 0, "text": ["Offset"], "role": "item", "attrs": {"id": "offset"}, "extent": [2805, 2813], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3251, 3354], "text": ["For periodic noise types, the multiple of the input range before the noise pattern repeats.  "]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [3364, 3487], "text": ["If Lacunarity is not 2, successive octaves will not have matching periods so a periodic noise won\u2019t be built."]}], "indent": 4, "role": "item", "extent": [3354, 3364], "container": true, "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}, {"indent": 4, "type": "para", "extent": [3487, 3535], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_period.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_period.gif"}]}], "indent": 0, "text": ["Period"], "role": "item", "attrs": {"id": "period"}, "extent": [3222, 3230], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"indent": 0, "type": "para", "extent": [3569, 3803], "text": ["The output of the noise constructed by the parameters on this tab is always in the range ", {"text": ["0"], "type": "code"}, " to ", {"text": ["1"], "type": "code"}, ". You can the condition the output, for example remap it to the range ", {"text": ["-1"], "type": "code"}, " to ", {"text": ["1"], "type": "code"}, ", using the parameters on the ", {"fragment": "#output", "text": ["Output tab"], "value": "#output", "fullpath": "/nodes/vop/unifiednoise-#output", "scheme": null, "type": "link"}, "."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [3830, 3934], "text": ["The type of noise to generate. Different algorithms give noise with different characteristics."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [3948, 4147], "text": [{"text": ["Not actually noise"], "type": "strong"}, ". This simply outputs a sine wave instead of adding noise to the input signal. This may be useful for debugging with an output that spans the entire ", {"text": ["0-1"], "type": "code"}, " range."]}, {"indent": 8, "type": "para", "extent": [4147, 4202], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_sine.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_sine.png"}]}], "indent": 4, "text": ["Sinusoid"], "extent": [3934, 3948], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [4214, 4319], "text": ["A noise where the visual details are the same size. ", {"text": ["Wikipedia article"], "scheme": "Wp", "type": "link", "exists": true, "value": "http://en.wikipedia.org/wiki/Perlin_noise"}]}, {"indent": 8, "type": "para", "extent": [4319, 4376], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_perlin.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_perlin.png"}]}], "indent": 4, "text": ["Perlin"], "extent": [4202, 4214], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [4397, 4557], "text": ["A variant of Perlin noise with a repeating pattern. This can be useful for creating images, geometry, and motion that can be tiled and merged."]}, {"indent": 8, "type": "para", "extent": [4557, 4623], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_periodic_perlin.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_periodic_perlin.png"}]}], "indent": 4, "text": ["Periodic Perlin"], "extent": [4376, 4397], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [4654, 4739], "text": ["The default. A faster and more interesting variant of Perlin noise."]}, {"indent": 8, "type": "para", "extent": [4739, 4797], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_simplex.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_simplex.png"}]}], "indent": 4, "text": ["Simplex (Improved Perlin)"], "extent": [4623, 4654], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [4821, 4931], "text": ["Sparse Convolution noise is similar to Worley noise. Does not have artifacts at grid points."]}, {"indent": 8, "type": "para", "extent": [4931, 4988], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_sparse.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_sparse.png"}]}], "indent": 4, "text": ["Sparse Convolution"], "extent": [4797, 4821], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [4998, 5218], "text": ["A noise that\u2019s stable over time, like a rotated Perlin noise, useful to create noise that seems to swirl and flow smoothly across time. Use the ", {"text": ["Flow rotation"], "type": "ui"}, " parameter below to control the rotation."]}, {"indent": 8, "type": "para", "extent": [5218, 5272], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_flow.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_flow.gif"}]}], "indent": 4, "text": ["Flow"], "extent": [4988, 4998], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [5291, 5516], "text": ["A variant of Flow noise with a repeating pattern. This can be useful for creating images, geometry, and motion that can be tiled and merged. Use the ", {"text": ["Flow rotation"], "type": "ui"}, " parameter below to control the rotation."]}, {"indent": 8, "type": "para", "extent": [5516, 5579], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_periodic_flow.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_periodic_flow.gif"}]}], "indent": 4, "text": ["Periodic Flow"], "extent": [5272, 5291], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [5605, 5766], "text": ["Produces cellular features similar to plant cells, ocean waves, honeycombs, cratered landscapes, and so on. ", {"text": ["Wikipedia article"], "scheme": "Wp", "type": "link", "exists": true, "value": "http://en.wikipedia.org/wiki/Worley_noise"}]}, {"indent": 8, "type": "para", "extent": [5766, 5826], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_worley_f1.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_worley_f1.png"}]}], "indent": 4, "text": ["Worley (cellular) F1"], "extent": [5579, 5605], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [5852, 5940], "text": ["A variant of Worley noise that produces blunted and cornered features."]}, {"indent": 8, "type": "para", "extent": [5940, 6000], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_worley_f2.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_worley_f2.png"}]}], "indent": 4, "text": ["Worley (cellular) F2"], "extent": [5826, 5852], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [6015, 6110], "text": ["Produces a bumpy output. Named for its alleged resemblance to alligator skin."]}, {"indent": 8, "type": "para", "extent": [6110, 6166], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_alligator.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_alligator.png"}]}], "indent": 4, "text": ["Alligator"], "extent": [6000, 6015], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Noise type"], "role": "item", "attrs": {"id": "basis"}, "extent": [3803, 3815], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6178, 6293], "text": ["Outputs the numerical complement (", {"text": ["1 - x"], "type": "code"}, ") of the computed noise. Basically turns the output upside-down."]}, {"indent": 4, "type": "para", "extent": [6293, 6392], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_sine.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_sine.png"}, "\n    ", {"text": "", "fullpath": "/images/nodes/vop/unoise_complement.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_complement.png"}]}], "indent": 0, "text": ["Complement"], "role": "item", "extent": [6166, 6178], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6402, 6576], "text": ["Raises the output to this exponent. For example, a value of ", {"text": ["2"], "type": "code"}, " would square all output values. This has the effect of raising or lowering the values toward ", {"text": ["1"], "type": "code"}, " or ", {"text": ["0"], "type": "code"}, "."]}], "indent": 0, "text": ["Exponent"], "role": "item", "extent": [6392, 6402], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"indent": 0, "type": "para", "extent": [6576, 6698], "text": ["Lattice warp and gradient warp are two methods for adding \"fractal-ness\" to the basic noises by warping the noise space."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [6736, 6793], "text": ["Adds \"stringiness\" or \"wiriness\" to standard noise."]}, {"indent": 4, "type": "para", "extent": [6793, 6851], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_lattice_warp.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_lattice_warp.gif"}]}], "indent": 0, "text": ["Enable Lattice Warp"], "role": "item", "attrs": {"id": "dolwarp"}, "extent": [6698, 6719], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6892, 7115], "text": ["When ", {"text": ["Lattice Warp"], "type": "ui"}, " is on, this accumulates the warp for each iteration (octave) of added fractal noise. When used in images, this can add interesting smudgy effects, and interesting landmarks when used for terrain."]}], "indent": 0, "text": ["Accumulate Lattice Warp"], "role": "item", "attrs": {"id": "accuml"}, "extent": [6851, 6876], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7154, 7212], "text": ["Widens the peaks or valleys of the noise output."]}, {"indent": 4, "type": "para", "extent": [7212, 7267], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_gradient_warp.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_gradient_warp.gif"}]}], "indent": 0, "text": ["Enable Gradient Warp"], "role": "item", "attrs": {"id": "dogwarp"}, "extent": [7115, 7137], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7309, 7422], "text": ["When ", {"text": ["Gradient Warp"], "type": "ui"}, " is on, this accumulates the warp for each iteration (octave) of added fractal noise."]}], "indent": 0, "text": ["Accumulate Gradient Warp"], "role": "item", "attrs": {"id": "accumg"}, "extent": [7267, 7293], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7454, 7694], "text": ["The rotation of the \"swirl\" when ", {"text": ["Noise type"], "type": "ui"}, " is \"Flow\", from ", {"text": ["0"], "type": "code"}, " to ", {"text": ["1"], "type": "code"}, ". Because this parameter is fractional, you can\u2019t just use ", {"text": ["$F"], "type": "code"}, " to animate it, since all integral values will look the same, representing a complete revolution."]}], "indent": 0, "text": ["Flow Rotation"], "role": "item", "attrs": {"id": "flowrot"}, "extent": [7422, 7437], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"indent": 0, "type": "para", "extent": [7694, 7801], "text": ["The fractal controls let you add additional fractal noise ", {"text": ["on top of"], "type": "em"}, " the output of the basic noise type."]}, {"body": [{"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [7842, 7920], "text": ["Does not add any additional noise on top of the basic noise."]}, {"indent": 8, "type": "para", "extent": [7920, 7983], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_fractal_none.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_fractal_none.png"}]}], "indent": 4, "text": ["None"], "extent": [7832, 7842], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [7997, 8067], "text": ["Adds pseudo-random noise on top of the basic output."]}, {"indent": 8, "type": "para", "extent": [8067, 8134], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_fractal_standard.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_fractal_standard.png"}]}], "indent": 4, "text": ["Standard"], "extent": [7983, 7997], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [8147, 8285], "text": ["Adds noise like \"Standard\" but dampens the noise in the valleys, which can be useful for generating mountainous terrain."]}, {"indent": 8, "type": "para", "extent": [8285, 8351], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_fractal_terrain.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_fractal_terrain.png"}]}], "indent": 4, "text": ["Terrain"], "extent": [8134, 8147], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [8363, 8426], "text": ["Like terrain, but with more sharpness in the valleys."]}], "indent": 4, "text": ["Hybrid"], "extent": [8351, 8363], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Fractal Type"], "role": "item", "attrs": {"id": "fractal"}, "extent": [7801, 7815], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8452, 8828], "text": ["The number of iterations of distortion to add to the output of the basic noise. The more iterations you add, the more \"detailed\" the output. Note that the output may have fewer octaves than this parameter (that is, increasing the parameter will eventually stop adding detail), because the node eventually stops when there\u2019s no more room to add more detail in the output."]}], "indent": 0, "text": ["Max octaves"], "role": "item", "attrs": {"id": "oct"}, "extent": [8426, 8439], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8853, 8989], "text": ["The frequency increment between iterations of fractal noise added to the basic output. Note that you can use a negative value."]}, {"indent": 4, "type": "para", "extent": [8989, 9041], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_lacunarity.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_lacunarity.gif"}]}], "indent": 0, "text": ["Lacunarity"], "role": "item", "attrs": {"id": "lac"}, "extent": [8828, 8840], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9067, 9270], "text": ["The scale increment between iterations of fractal noise added to the basic output. The higher the value the larger the \"jaggies\" added to the output. You can use a negative value for roughness."]}, {"indent": 4, "type": "para", "extent": [9270, 9321], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_roughness.gif", "scheme": "Anim", "type": "link", "value": "/images/nodes/vop/unoise_roughness.gif"}]}], "indent": 0, "text": ["Roughness"], "role": "item", "attrs": {"id": "rough"}, "extent": [9041, 9052], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Construction"], "extent": [3535, 3569], "container": true, "type": "h", "id": "construction"}, {"body": [{"indent": 0, "type": "para", "extent": [9343, 9605], "text": ["The output generated using the parameters on the ", {"text": ["Construction"], "type": "ui"}, " tab is guaranteed to be in the range ", {"text": ["0-1"], "type": "code"}, ". If you need different output, you can use the parameters on this tab to conveniently condition the output without messing with your noise parameters."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [9628, 9826], "text": ["\"Flips\" values below the median to be above the median, so all valleys become peaks. (Note it flips across the ", {"text": ["median"], "type": "em"}, ", not ", {"text": ["0"], "type": "code"}, ".) If the median is ", {"text": ["0"], "type": "code"}, ", this is like taking the absolute value."]}, {"indent": 4, "type": "para", "extent": [9826, 9921], "text": [{"text": "", "fullpath": "/images/nodes/vop/unoise_fold1.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_fold1.png"}, "\n    ", {"text": "", "fullpath": "/images/nodes/vop/unoise_fold2.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/unoise_fold2.png"}]}], "indent": 0, "text": ["Fold"], "role": "item", "attrs": {"id": "cc_fold"}, "extent": [9605, 9611], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9946, 9998], "text": ["Moves the output down or up toward ", {"text": ["0"], "type": "code"}, " or ", {"text": ["1"], "type": "code"}, "."]}], "indent": 0, "text": ["Bias"], "role": "item", "attrs": {"id": "cc_dobias"}, "extent": [9921, 9927], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10023, 10088], "text": ["Increases or decreases the contrast from 0.5 in the output."]}], "indent": 0, "text": ["Gain"], "role": "item", "attrs": {"id": "cc_dogain"}, "extent": [9998, 10004], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10116, 10227], "text": ["Outputs the numerical complement (", {"text": ["1 - x"], "type": "code"}, ") of the computed noise. Basically turns the output upside-down."]}], "indent": 0, "text": ["Complement"], "role": "item", "attrs": {"id": "cc_inv"}, "extent": [10088, 10100], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10269, 10436], "text": ["Enables the ", {"text": ["New minimum"], "type": "ui"}, " and ", {"text": ["New maximum"], "type": "ui"}, " parameters to allow you to map the noise, which is normally in the ", {"text": ["[0,1]"], "type": "code"}, " range, to a different range of values."]}], "indent": 0, "text": ["Output range (clamped)"], "role": "item", "attrs": {"id": "cc_dorng"}, "extent": [10227, 10251], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10467, 10523], "text": ["Remaps the output so ", {"text": ["0"], "type": "code"}, " values become this value."]}], "indent": 0, "text": ["New minimum"], "role": "item", "attrs": {"id": "cc_rnglo"}, "extent": [10436, 10449], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10554, 10610], "text": ["Remaps the output so ", {"text": ["1"], "type": "code"}, " values become this value."]}], "indent": 0, "text": ["New maximum"], "role": "item", "attrs": {"id": "cc_rnghi"}, "extent": [10523, 10536], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10643, 10696], "text": ["Scales the final conditioned output up or down."]}], "indent": 0, "text": ["Final amplitude"], "role": "item", "attrs": {"id": "cc_amp"}, "extent": [10610, 10627], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10726, 10795], "text": ["A scale on the filter width to use in shading a shading context."]}], "indent": 0, "text": ["Filter Scale"], "role": "item", "attrs": {"id": "fscale"}, "extent": [10696, 10710], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Output"], "extent": [9321, 9343], "container": true, "type": "h", "id": "output"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [2014, 2026], "container": true, "type": "parameters_section", "id": "parameters"}], "summary": ["Presents a unified interface and uniform output range for all the noise types available in VEX."], "type": "root", "attrs": {"since": "12.0", "namespace": null, "version": "", "context": "vop", "type": "node", "internal": "unifiednoise", "icon": "VOP/unifiednoise"}, "title": ["Unified Noise"]}