{"body": [{"indent": 0, "text": ["Ramp Filter"], "type": "title", "extent": [0, 16], "level": 0}, {"indent": 0, "type": "summary", "extent": [93, 178], "text": ["Adds anti-aliased analytical filtering to the output of a Ramp Parameter\nVOP."]}, {"indent": 0, "type": "para", "extent": [178, 281], "text": ["This can be desirable for texture shading where a high-frequency lookup may \ngive aliasing artifacts."]}, {"indent": 0, "type": "para", "extent": [281, 362], "text": ["Connect the outputs of the Ramp Parameter to the Ramp Filter\u2019s inputs\nthis way:"]}, {"body": [{"body": [{"indent": 0, "text": ["Parameter "], "role": "td", "extent": [412, 424], "container": true, "type": "cell"}, {"body": [{"indent": 4, "type": "para", "extent": [424, 444], "text": ["Lookup Position"]}], "role": "td", "type": "cell"}], "divider": false, "type": "row"}, {"body": [{"indent": 0, "text": ["Bases "], "role": "td", "extent": [444, 452], "container": true, "type": "cell"}, {"body": [{"indent": 4, "type": "para", "extent": [452, 467], "text": ["Ramp Bases"]}], "role": "td", "type": "cell"}], "divider": false, "type": "row"}, {"body": [{"indent": 0, "text": ["Key Positions "], "role": "td", "extent": [467, 483], "container": true, "type": "cell"}, {"body": [{"indent": 4, "type": "para", "extent": [483, 497], "text": ["Ramp Keys"]}], "role": "td", "type": "cell"}], "divider": false, "type": "row"}, {"body": [{"indent": 0, "text": ["Key Values "], "role": "td", "extent": [497, 510], "container": true, "type": "cell"}, {"body": [{"indent": 4, "type": "para", "extent": [510, 527], "text": ["Ramp Values"]}], "role": "td", "type": "cell"}], "divider": false, "type": "row"}], "type": "table", "thead": [{"body": [{"indent": 0, "text": ["Ramp Parameter output "], "role": "th", "extent": [362, 387], "container": true, "type": "cell"}, {"indent": 4, "role": "th", "type": "cell", "extent": [387, 412], "text": ["Ramp Filter input "]}], "divider": false, "type": "row"}]}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [559, 912], "text": ["Controls the size of the anti-aliasing filter. In some contexts the node \n    can choose a proper width based on the available global variables. In \n    other contexts, such as SOPs, the width will default to ", {"text": ["0"], "type": "code"}, ". If you \n    connect a node to the input, the input value will be used even if the \n    node can deduce a default width automatically."]}], "indent": 0, "text": ["Filter width override"], "extent": [535, 559], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [926, 993], "text": ["The amount of anti-alias blurring to add to the output value."]}], "indent": 0, "text": ["Filter scale"], "extent": [912, 926], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "level": 1, "text": "Inputs", "role": "section", "extent": [527, 535], "container": true, "type": "inputs_section", "id": "inputs"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [1017, 1081], "text": ["The datatypes of the position input and the ramped output."]}], "indent": 0, "text": ["Signature"], "role": "item", "extent": [1005, 1017], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1089, 1230], "text": ["Whether to filter the output. When this checkbox is off, the inputs are\n    passed through unchanged. This may be useful for debugging."]}], "indent": 0, "text": ["Active"], "role": "item", "extent": [1081, 1089], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1257, 1317], "text": ["The color/coordinate space in which the ramp operates."]}], "indent": 0, "text": ["Space"], "role": "item", "attrs": {"id": "spacename"}, "extent": [1230, 1237], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1348, 1394], "text": ["The gamma to apply to the ramp ", {"text": ["output"], "type": "em"}, "."]}], "indent": 0, "text": ["Gamma"], "role": "item", "attrs": {"id": "gammaname"}, "extent": [1317, 1324], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1424, 1731], "text": ["The range of values the ramp applies to. For example, when the range is\n    ", {"text": ["0"], "type": "code"}, " to ", {"text": ["1"], "type": "code"}, ", the leftmost value on the ramp represents ", {"text": ["0"], "type": "code"}, ", and the\n    rightmost value on the ramp represents ", {"text": ["1"], "type": "code"}, ". The node computes the\n    results of inputs outside this range according to the \"extend\" parameters\n    below."]}], "indent": 0, "text": ["Range"], "role": "item", "attrs": {"id": "rangemin"}, "extent": [1394, 1401], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1768, 1844], "text": ["How to compute the result for inputs below/above the ramp\u2019s range."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [1854, 2040], "text": ["Returns the value at the nearest end of the ramp (for example, if the\n        ramp\u2019s range is ", {"text": ["0-1"], "type": "code"}, ", and the input is ", {"text": ["-10"], "type": "code"}, ", it will return the\n        ramp value for ", {"text": ["0"], "type": "code"}, ")."]}], "indent": 4, "text": ["Hold"], "extent": [1844, 1854], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2051, 2117], "text": ["Repeats the ramp continuously outside the range."]}, {"indent": 8, "type": "para", "extent": [2117, 2177], "text": [{"text": "", "fullpath": "/images/nodes/vop/rampfilter_cycle.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/rampfilter_cycle.png"}]}], "indent": 4, "text": ["Cycle"], "extent": [2040, 2051], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2199, 2310], "text": ["Like \"Cycle\", but starts each cycle relative to the end value \n        of the previous cycle."]}, {"indent": 8, "type": "para", "extent": [2310, 2381], "text": [{"text": "", "fullpath": "/images/nodes/vop/rampfilter_cycle_accumulate.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/rampfilter_cycle_accumulate.png"}]}], "indent": 4, "text": ["Cycle-Accumulate"], "extent": [2177, 2199], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2393, 2526], "text": ["Cycles before/after the range are mirror images (reversed) of\n        one another. The first cycle is not mirrored."]}, {"indent": 8, "type": "para", "extent": [2526, 2587], "text": [{"text": "", "fullpath": "/images/nodes/vop/rampfilter_mirror.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/rampfilter_mirror.png"}]}], "indent": 4, "text": ["Mirror"], "extent": [2381, 2393], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2598, 2695], "text": ["Extends a line using the slope at the beginning/end of the ramp \n        range."]}, {"indent": 8, "type": "para", "extent": [2695, 2751], "text": [{"text": "", "fullpath": "/images/nodes/vop/rampfilter_slope.png", "scheme": "Image", "type": "link", "value": "/images/nodes/vop/rampfilter_slope.png"}]}], "indent": 4, "text": ["Slope"], "extent": [2587, 2598], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Extend left/right"], "role": "item", "attrs": {"id": "lbt"}, "extent": [1731, 1750], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2779, 2863], "text": ["The type of filtering to use. The default is \"Point\" meaning no\n    filtering."]}], "indent": 0, "text": ["Filter"], "role": "item", "attrs": {"id": "ftype"}, "extent": [2751, 2759], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2891, 2981], "text": ["When ", {"text": ["Filter"], "type": "ui"}, " is \"Box\" or \"Gaussian\", controls the scale of the filter\n    effect."]}], "indent": 0, "text": ["Scale"], "role": "item", "attrs": {"id": "fscale"}, "extent": [2863, 2870], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [993, 1005], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [2990, 3014], "text": [{"text": "", "fullpath": "/nodes/vop/rampparm", "scheme": "Node", "type": "link", "value": "/nodes/vop/rampparm"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [2981, 2990], "container": true, "type": "related_section", "id": "related"}], "summary": ["Adds anti-aliased analytical filtering to the output of a Ramp Parameter\nVOP."], "type": "root", "attrs": {"version": "2.0", "since": "14.5", "namespace": null, "internal": "rampfilter", "context": "vop", "type": "node"}, "title": ["Ramp Filter"]}