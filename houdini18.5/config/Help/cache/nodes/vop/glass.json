{"body": [{"indent": 0, "text": ["Glass Shader"], "type": "title", "extent": [61, 78], "level": 0}, {"indent": 0, "type": "summary", "extent": [78, 186], "text": ["Simulates a translucent material such as glass, and returns the\ncombined color, opacity, and alpha."]}, {"indent": 0, "type": "para", "extent": [186, 301], "text": ["This operator simulates a translucent material such as glass, and\nreturns the combined color, opacity, and alpha."]}, {"indent": 0, "type": "para", "extent": [301, 647], "text": ["The index of refraction (", {"text": ["eta"], "type": "code"}, ") is the most important parameter because it\ncontrols the amount of the transmission (ie. refraction) of the surface.\nIts neutral value is 1. The environment color is ignored unless you\nspecify a valid environment map. The reflection bias is used to help\neliminate self-reflection, and is typically a small number."]}, {"indent": 0, "type": "para", "extent": [647, 859], "text": ["In order to prevent the renderer from computing standard transparency\n(i.e. non-refracted transparency), as is the case with glass-like\nsurfaces, the opacity is set internally to 1 to make the surface\n\"opaque\"."]}, {"indent": 0, "type": "para", "extent": [859, 1394], "text": ["If the Position (", {"text": ["P"], "type": "code"}, ") input and the Normal (", {"text": ["N"], "type": "code"}, ") input are not connected,\nthe global variables by the same names will be used instead. Typically\nyou will use ", {"text": ["Rest Position"], "fullpath": "/nodes/vop/restpos", "scheme": "Node", "type": "link", "value": "/nodes/vop/restpos"}, " or ", {"text": ["UV Space Change"], "fullpath": "/nodes/vop/uvspacechg", "scheme": "Node", "type": "link", "value": "/nodes/vop/uvspacechg"}, " as inputs for ", {"text": ["P"], "type": "code"}, ", and\nwill not touch ", {"text": ["N"], "type": "code"}, " unless you want to apply additional displacement to\nthe glass surface using an operator such as ", {"text": ["Bump Noise"], "fullpath": "/nodes/vop/bumpnoise", "scheme": "Node", "type": "link", "value": "/nodes/vop/bumpnoise"}, ". If you need need\nto access the global variables directly, they are available from the\n", {"text": ["Global Variables"], "fullpath": "/nodes/vop/global", "scheme": "Node", "type": "link", "value": "/nodes/vop/global"}, " operator."]}, {"indent": 0, "type": "para", "extent": [1394, 1462], "text": ["See ", {"text": ["how to create an environment/reflection map"], "fullpath": "/render/envmaps", "scheme": null, "type": "link", "value": "/render/envmaps"}, "."]}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [1471, 1504], "text": [{"text": "", "fullpath": "/nodes/vop/brushedmetalshader", "scheme": "Node", "type": "link", "value": "/nodes/vop/brushedmetalshader"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [1504, 1532], "text": [{"text": "", "fullpath": "/nodes/vop/carpaintshader", "scheme": "Node", "type": "link", "value": "/nodes/vop/carpaintshader"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [1532, 1562], "text": [{"text": "", "fullpath": "/nodes/vop/principledshader", "scheme": "Node", "type": "link", "value": "/nodes/vop/principledshader"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [1562, 1588], "text": [{"text": "", "fullpath": "/nodes/vop/surfacemodel", "scheme": "Node", "type": "link", "value": "/nodes/vop/surfacemodel"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [1588, 1611], "text": [{"text": "", "fullpath": "/nodes/vop/layercomp", "scheme": "Node", "type": "link", "value": "/nodes/vop/layercomp"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [1611, 1633], "text": [{"text": "", "fullpath": "/nodes/vop/layermix", "scheme": "Node", "type": "link", "value": "/nodes/vop/layermix"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [1633, 1656], "text": [{"text": "", "fullpath": "/nodes/vop/layerpack", "scheme": "Node", "type": "link", "value": "/nodes/vop/layerpack"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [1656, 1681], "text": [{"text": "", "fullpath": "/nodes/vop/layerunpack", "scheme": "Node", "type": "link", "value": "/nodes/vop/layerunpack"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [1681, 1712], "text": [{"text": "", "fullpath": "/nodes/vop/setlayercomponent", "scheme": "Node", "type": "link", "value": "/nodes/vop/setlayercomponent"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [1462, 1471], "container": true, "type": "related_section", "id": "related"}], "summary": ["Simulates a translucent material such as glass, and returns the\ncombined color, opacity, and alpha."], "type": "root", "attrs": {"version": null, "namespace": null, "internal": "glass", "context": "vop", "type": "node", "icon": "VOP/glass"}, "title": ["Glass Shader"]}