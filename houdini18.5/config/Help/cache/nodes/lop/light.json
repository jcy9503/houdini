{"body": [{"indent": 0, "text": ["Light"], "type": "title", "extent": [0, 10], "level": 0}, {"indent": 0, "type": "summary", "extent": [102, 203], "text": ["Creates or edits a USD Light prim. This node also adds some useful Karma-specific attributes."]}, {"body": [{"type": "para", "indent": 0, "extent": [5095, 5427], "text": ["This node belongs to a class of ", {"text": ["nodes that create or edit USD prims directly"], "type": "strong"}, ". These nodes operate in ", {"text": ["Create mode"], "type": "em"}, " or ", {"text": ["Edit mode"], "type": "em"}, ". This is controlled by a ", {"text": ["Create primitives"], "type": "ui"}, " checkbox or a ", {"text": ["Create/Edit popup menu"], "type": "em"}, ". In create mode, the node creates new prims. In edit mode, the node changes the attributes on an existing prim."]}, {"type": "para", "indent": 0, "extent": [5427, 5557], "text": ["Parameters that correspond to a USD attribute have a pop-up menu to the left that controls ", {"text": ["how"], "type": "em"}, " the node authors the attribute."]}, {"body": [{"body": [{"body": [{"body": [{"container": true, "text": ["Set or Create "], "role": "td", "extent": [5653, 5674], "indent": 4, "type": "cell"}, {"body": [{"type": "para", "indent": 8, "extent": [5674, 5760], "text": ["Sets the attribute to the given value, whether it previously existed or not."]}], "type": "cell", "role": "td"}], "type": "row", "divider": false}, {"body": [{"container": true, "text": ["Set If Exists "], "role": "td", "extent": [5760, 5780], "indent": 4, "type": "cell"}, {"body": [{"type": "para", "indent": 8, "extent": [5780, 5857], "text": ["Only set the attribute to the given value if it previously existed."]}, {"type": "para", "indent": 8, "extent": [5857, 6039], "text": ["Use this mode to make sure an attribute is only set on primitives of the correct type. For example, only ", {"text": ["UsdGeomSphere"], "type": "code"}, " primitives are likely to have a ", {"text": ["radius"], "type": "code"}, " attribute."]}], "type": "cell", "role": "td"}], "type": "row", "divider": false}, {"body": [{"container": true, "text": ["Block "], "role": "td", "extent": [6039, 6051], "indent": 4, "type": "cell"}, {"body": [{"type": "para", "indent": 8, "extent": [6051, 6208], "text": ["Makes the attribute appear to not exist, so it takes on its default value. (If the attribute doesn\u2019t already exist on the prim, this does nothing.)"]}], "type": "cell", "role": "td"}], "type": "row", "divider": false}, {"body": [{"container": true, "text": ["Do Nothing "], "role": "td", "extent": [6208, 6225], "indent": 4, "type": "cell"}, {"body": [{"type": "para", "indent": 8, "extent": [6225, 6307], "text": ["Ignore this parameter, don\u2019t create or change the attribute in any way."]}], "type": "cell", "role": "td"}], "type": "row", "divider": false}], "type": "table", "thead": [{"body": [{"container": true, "text": ["Pop-up menu item "], "role": "th", "attrs": {"width": "25%"}, "extent": [5590, 5614], "indent": 4, "type": "cell"}, {"role": "th", "text": ["Meaning "], "indent": 8, "extent": [5634, 5653], "type": "cell"}], "type": "row", "divider": false}]}], "container": true, "role": "item", "attrs": {"id": "control_menu"}, "extent": [5557, 5563], "indent": 0, "type": "box"}], "role": "item_group", "container": true, "type": "box_group"}], "container": true, "level": 2, "text": ["Creating vs. editing prims"], "extent": [5054, 5095], "indent": 0, "type": "h", "id": "oview"}, {"body": [{"body": [{"body": [], "indent": 0, "role": "item", "attrs": {"src": "/videos/light_tool.mp4"}, "extent": [286, 295], "container": true, "type": "video"}], "container": true, "role": "item_group", "type": "video_group"}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [360, 489], "text": ["Select the Light node in the network, then in the viewport click the ", {"text": "", "fullpath": "/nodes/lop/TOOLS/handles", "scheme": "Icon", "type": "link", "value": "TOOLS/handles"}, " Handles tool, or press ", {"keys": ["Enter"], "text": null, "type": "keys"}, "."]}], "indent": 0, "text": [" Enter the Light state"], "role": "item", "extent": [329, 360], "container": true, "type": "task"}], "container": true, "role": "item_group", "type": "task_group"}, {"body": [{"body": [{"indent": 0, "text": ["Default "], "role": "td", "extent": [531, 542], "container": true, "type": "cell"}, {"indent": 4, "text": [{"keys": ["Shift", "A"], "text": null, "type": "keys"}, " "], "role": "td", "extent": [542, 562], "container": true, "type": "cell"}, {"body": [{"indent": 8, "type": "para", "extent": [562, 605], "text": ["Position the light using handles."]}], "role": "td", "type": "cell"}], "divider": false, "type": "row"}, {"body": [{"indent": 0, "text": ["Diffuse "], "role": "td", "extent": [605, 615], "container": true, "type": "cell"}, {"indent": 4, "text": [{"keys": ["Shift", "D"], "text": null, "type": "keys"}, " "], "role": "td", "extent": [615, 635], "container": true, "type": "cell"}, {"body": [{"indent": 8, "type": "para", "extent": [635, 712], "text": ["Click or drag on a surface to place the light normal to that point."]}], "role": "td", "type": "cell"}], "divider": false, "type": "row"}, {"body": [{"indent": 0, "text": ["Specular "], "role": "td", "extent": [712, 723], "container": true, "type": "cell"}, {"indent": 4, "text": [{"keys": ["Shift", "S"], "text": null, "type": "keys"}, " "], "role": "td", "extent": [723, 743], "container": true, "type": "cell"}, {"body": [{"indent": 8, "type": "para", "extent": [743, 846], "text": ["Click or drag on a surface to place the light so there\u2019s a reflected highlight at that point."]}, {"indent": 8, "type": "para", "extent": [846, 1016], "text": ["You should look through the render camera when using this mode, since it only sets the highlight to show up a certain location ", {"text": ["from the current point of view"], "type": "em"}, "."]}], "role": "td", "type": "cell"}], "divider": false, "type": "row"}, {"body": [{"indent": 0, "text": ["Shadow "], "role": "td", "extent": [1016, 1025], "container": true, "type": "cell"}, {"indent": 4, "text": [{"keys": ["Shift", "F"], "text": null, "type": "keys"}, " "], "role": "td", "extent": [1025, 1045], "container": true, "type": "cell"}, {"body": [{"indent": 8, "type": "para", "extent": [1045, 1103], "text": ["Click on a lit surface to place the pivot point."]}, {"indent": 8, "type": "para", "extent": [1103, 1267], "text": ["This should be on the part of the model you want to control the shadow for (for example, the edge of a window frame, or a prominent feature of the model)."]}, {"indent": 8, "type": "para", "extent": [1267, 1398], "text": [{"keys": ["Shift"], "text": null, "type": "keys"}, "-click or drag a point on the shadowed surface to move the point on the shadow corresponding to the pivot point."]}], "role": "td", "type": "cell"}], "divider": false, "type": "row"}, {"body": [{"indent": 0, "text": ["Look at "], "role": "td", "extent": [1398, 1408], "container": true, "type": "cell"}, {"indent": 4, "text": [{"keys": ["Shift", "T"], "text": null, "type": "keys"}, " "], "role": "td", "extent": [1408, 1428], "container": true, "type": "cell"}, {"body": [{"indent": 8, "type": "para", "extent": [1428, 1583], "text": ["Position the look-at handle to set a look-at constraint on the light. Use the handles to orbit or elevate the light relative to the target point."]}, {"indent": 8, "type": "para", "extent": [1583, 1675], "text": ["This turns on the ", {"text": ["Enable look at"], "type": "ui"}, " parameter in the Light\u2019s Constraints section."]}, {"indent": 8, "type": "para", "extent": [1675, 1781], "text": ["To constrain the light to look at another USD prim, fill in the ", {"text": ["Look at primitive"], "type": "ui"}, " parameter."]}], "role": "td", "type": "cell"}], "divider": false, "type": "row"}, {"body": [{"indent": 0, "text": ["All "], "role": "td", "extent": [1781, 1787], "container": true, "type": "cell"}, {"indent": 4, "role": "td", "extent": [1787, 1793], "container": true, "type": "cell"}, {"body": [{"body": [{"indent": 8, "blevel": 10, "type": "bullet", "extent": [1793, 1859], "text": [{"keys": ["Ctrl"], "text": null, "type": "keys"}, "-drag left/right to move light closer/farther."]}, {"indent": 8, "blevel": 10, "type": "bullet", "extent": [1859, 1945], "text": [{"keys": ["Ctrl", "Shift"], "text": null, "type": "keys"}, "-drag left/right to change intensity/exposure (see below)."]}, {"indent": 8, "blevel": 10, "type": "bullet", "extent": [1945, 2011], "text": [{"keys": ["mouse_wheel"], "text": null, "type": "keys"}, " to change step size of ", {"keys": ["Ctrl"], "text": null, "type": "keys"}, "-drags."]}, {"indent": 8, "blevel": 10, "type": "bullet", "extent": [2011, 2055], "text": [{"keys": ["RMB"], "text": null, "type": "keys"}, " to show an options menu."]}, {"indent": 8, "blevel": 10, "type": "bullet", "extent": [2055, 2203], "text": ["Turn on ", {"text": [{"keys": ["RMB"], "text": null, "type": "keys"}, " \u25b8 Keep Brightness"], "type": "ui"}, " to adjust the light to maintain the same brightness on the surface while moving it closer/farther."]}, {"indent": 8, "blevel": 10, "type": "bullet", "extent": [2203, 2346], "text": ["Turn on ", {"text": [{"keys": ["RMB"], "text": null, "type": "keys"}, " \u25b8 Keep Orientation"], "type": "ui"}, " to prevent the light from rotating as it moves to be normal to where you click on a surface."]}, {"indent": 8, "blevel": 10, "type": "bullet", "extent": [2346, 2475], "text": ["In the ", {"keys": ["RMB"], "text": null, "type": "keys"}, " menu, you can choose whether ", {"keys": ["Ctrl", "Shift"], "text": null, "type": "keys"}, "-drag changes the light\u2019s ", {"text": ["Intensity"], "type": "ui"}, " or ", {"text": ["Exposure"], "type": "ui"}, "."]}], "container": true, "type": "bullet_group"}], "role": "td", "type": "cell"}], "divider": false, "type": "row"}], "type": "table", "thead": [{"body": [{"indent": 0, "text": ["Mode "], "role": "th", "extent": [489, 497], "container": true, "type": "cell"}, {"indent": 4, "text": ["Key "], "role": "th", "extent": [497, 508], "container": true, "type": "cell"}, {"indent": 8, "role": "th", "type": "cell", "extent": [508, 531], "text": ["Description "]}], "divider": false, "type": "row"}]}], "indent": 0, "level": 2, "text": ["Editing lights in the viewport"], "extent": [235, 286], "container": true, "type": "h", "id": "light_state"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [88, 164], "text": ["Whether this node should create new prims, or edit existing prims."]}], "indent": 4, "text": ["Action"], "role": "item", "attrs": {"id": "createprims"}, "extent": [50, 62], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [207, 302], "text": ["In create mode, this lets you control where in the scene graph to create the prim(s)."]}, {"indent": 8, "type": "para", "extent": [302, 631], "text": ["The default is usually ", {"text": ["/$OS"], "type": "code"}, ". This creates a primitive at the root level with the same name as the node (for example, ", {"text": ["/tube1"], "type": "code"}, "). This is a useful default for preventing naming conflicts, but terrible for organization. You should try to remember to change the ", {"text": ["Primitive path"], "type": "ui"}, " to a better value when you create prims."]}, {"indent": 8, "type": "para", "extent": [631, 811], "text": ["For example, instead of naming models after the node that created them, you might want to name them after the geometry inside, and organize them under a ", {"text": ["/Models"], "type": "code"}, " branch."]}, {"indent": 8, "type": "para", "extent": [811, 911], "text": ["The \"Create primitives\" section contains basic controls for how to create the new prim(s)."]}], "indent": 4, "text": ["Primitive Path"], "role": "item", "attrs": {"id": "primpath"}, "extent": [164, 184], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [953, 1314], "text": ["In edit mode, the node has a ", {"text": ["Primitive pattern"], "type": "ui"}, " parameter. This lets you specify the prim(s) the node should operate on. You can click the select button beside the text box to select the primitives from the scene graph tree. You can also use ", {"text": ["primitive patterns"], "fullpath": "/solaris/pattern", "scheme": null, "type": "link", "value": "/solaris/pattern"}, " for advanced matching, including matching all prims in a collection."]}], "indent": 4, "text": ["Primitives"], "role": "item", "attrs": {"id": "primpattern"}, "extent": [911, 927], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1376, 1873], "text": ["In edit mode, changes the state of all control menu parameters to ", {"text": ["Do Nothing"], "type": "code"}, ", so that this node will not apply any changes. Also grabs the current values of each property from the first ", {"text": ["Primitives"], "type": "ui"}, " match, and sets the values of the corresponding parameters to match. This means that changing any parameter\u2019s control menu to ", {"text": ["Set or Create"], "type": "code"}, " mode will set the property to its current value, making it easier to apply changes to an existing value rather than setting a brand new value."]}], "indent": 4, "text": ["Initialize Parameters For Edit"], "role": "item", "attrs": {"id": "initforedit"}, "extent": [1314, 1350], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6374, 6443], "text": ["This section only appears when the node is creating primitives."]}, {"indent": 4, "type": "para", "extent": [6443, 6461], "text": ["For example:"]}, {"body": [{"indent": 4, "blevel": 6, "type": "bullet", "extent": [6461, 6643], "text": ["If you want to create a new cube primitive at ", {"text": ["/world/objects/cube1"], "type": "code"}, " on an empty stage: Set ", {"text": ["Primitive Specifier"], "type": "ui"}, " to \"Define\", and the ", {"text": ["Parent Primitive Type"], "type": "ui"}, " to \"Xform\"."]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [6643, 6909], "text": ["If you want to override the radius of a sphere at ", {"text": ["/world/objects/sphere1"], "type": "code"}, ": Set ", {"text": ["Primitive Specifier"], "type": "ui"}, " to \"Over\", and the ", {"text": ["Parent Primitive Type"], "type": "ui"}, " to None. This makes sure the primitive types of any existing ancestor prims are not be modified by this node."]}], "container": true, "type": "bullet_group"}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [6930, 6975], "text": ["The number of primitives to create."]}], "container": true, "text": ["Primitive Count"], "extent": [6909, 6930], "indent": 4, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [7018, 7089], "text": ["Set all created prims to have this ", {"fragment": "#kinds", "text": ["kind"], "value": "/solaris/usd#kinds", "fullpath": "/solaris/usd#kinds", "scheme": null, "type": "link"}, "."]}], "indent": 4, "text": ["Primitive Kind"], "attrs": {"id": "primkind"}, "extent": [6975, 6995], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [7145, 7314], "text": ["If any parents of a path in ", {"text": ["Primitive paths"], "type": "ui"}, " do not exist, this node will automatically create them. In this case, it will create parent nodes of this type."]}], "indent": 4, "text": ["Parent Primitive Type"], "attrs": {"id": "parentprimtype"}, "extent": [7089, 7116], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [7363, 7425], "text": ["The USD operator to use when creating the new prims."]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [7441, 7562], "text": ["Authors a completely new prim. Use this if you want to create a brand new prim or replace an existing prim."]}], "container": true, "text": ["Define"], "extent": [7425, 7441], "indent": 8, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [7576, 7743], "text": ["Authors an override of an existing prim. Attributes not explicitly authored on this prim will get their values from the existing prim on the lower layer."]}], "container": true, "text": ["Over"], "extent": [7562, 7576], "indent": 8, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [7758, 7865], "text": ["Define a primitive class. This is usually not necessary unless you are doing deep USD magic."]}], "container": true, "text": ["Class"], "extent": [7743, 7758], "indent": 8, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 4, "text": ["Primitive Specifier"], "attrs": {"id": "specifier"}, "extent": [7314, 7339], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "container": true, "text": ["Create Primitives"], "role": "item", "extent": [6354, 6374], "indent": 0, "type": "parameters_item"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [2617, 2816], "text": ["Light emitted outward from a cylinder.\n        The cylinder is centered at the origin and has its major axis on the X \n        axis. The cylinder does not emit light from the flat end-caps."]}], "indent": 4, "text": ["Cylinder Light"], "extent": [2597, 2617], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2835, 2942], "text": ["Light emitted from a distant source along the -Z axis.\n        Also known as a directional light."]}], "indent": 4, "text": ["Distant Light"], "extent": [2816, 2835], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2958, 3095], "text": ["Light emitted from one side of a circular disk.\n        The disk is centered in the XY plane and emits light along the -Z axis."]}], "indent": 4, "text": ["Disk Light"], "extent": [2942, 2958], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3115, 3219], "text": ["Light emitted outward from a geometric prim (UsdGeomGprim),\n        which is typically a mesh."]}], "indent": 4, "text": ["Geometry Light"], "extent": [3095, 3115], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3236, 3289], "text": ["Like a sphere light, but with zero radius. "]}], "indent": 4, "text": ["Point Light"], "extent": [3219, 3236], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3310, 3643], "text": ["Light emitted from one side of a rectangle.\n        The rectangle is centered in the XY plane and emits light along the -Z \n        axis. The rectangle is 1 unit in length in the X and Y axis.  In the \n        default position, a texture file\u2019s min coordinates should be at (+X, +Y)\n        and max coordinates at (-X, -Y)."]}], "indent": 4, "text": ["Rectangle Light"], "extent": [3289, 3310], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3661, 3707], "text": ["Light emitted outward from a sphere."]}], "indent": 4, "text": ["Sphere Light"], "extent": [3643, 3661], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Type"], "role": "item", "attrs": {"id": "lighttype"}, "extent": [2571, 2577], "container": true, "type": "parameters_item"}], "container": true, "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [1959, 2179], "text": ["How the transform parameters below apply to the primitive. (Because each USD prim can contain multiple transforms, ", {"text": ["and"], "type": "em"}, " be affected by parent transforms, there are many different ways to apply new transforms.)"]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [2195, 2261], "text": ["Apply the parameters as a new, most local transform."]}], "container": true, "text": ["Append"], "extent": [2179, 2195], "indent": 8, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [2278, 2347], "text": ["Apply the parameters as a new, ", {"text": ["least"], "type": "em"}, " local transform."]}], "container": true, "text": ["Prepend"], "extent": [2261, 2278], "indent": 8, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [2376, 2540], "text": ["If a local transform exists with the name ", {"text": ["xformOp:transform"], "type": "code"}, ", ", {"text": ["overwrite"], "type": "em"}, " it with the parameters. Otherwise, apply it as a new, most local transform."]}, {"indent": 12, "type": "para", "extent": [2540, 2662], "text": ["If this replaces an existing transform, that transform\u2019s order in the local transform stack is not affected."]}], "container": true, "text": ["Overwrite or Append"], "extent": [2347, 2376], "indent": 8, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [2692, 2752], "text": ["Like \"Overwrite or Append\", but ", {"text": ["least"], "type": "em"}, " local."]}], "container": true, "text": ["Overwrite or Prepend"], "extent": [2662, 2692], "indent": 8, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [2792, 3088], "text": ["Apply the parameters as a new, most local transform. However, prior to applying the transform, it is updated so that the result of the transform appears as if the transform was being applied in world space, before any local or ancestor transformations were applied to the primitive."]}], "container": true, "text": ["Apply Transform in World Space"], "extent": [2752, 2792], "indent": 8, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [3126, 3472], "text": ["The transform specified in the remaining transform parameters is always applied as a new transform. Prior to applying this transform, all existing transform operations on the local transform stack are cleared so that only the supplied transform remains on the local transform stack (though ancestor transforms still have an effect)."]}], "container": true, "text": ["Replace All Local Transforms"], "extent": [3088, 3126], "indent": 8, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 4, "text": ["Transform"], "attrs": {"id": "xn__xformOptransform_51a"}, "extent": [1905, 1920], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3512, 3633], "text": ["The order in which Houdini applies translates, rotates, and scales, and the order in which it applies rotation."]}], "indent": 4, "text": ["Transform order"], "attrs": {"id": "xOrd"}, "extent": [3472, 3493], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3664, 3705], "text": ["Movement amount along XYZ axes."]}], "indent": 4, "text": ["Translate"], "attrs": {"id": "t"}, "extent": [3633, 3648], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3733, 3776], "text": ["Degrees rotation around XYZ axes."]}], "indent": 4, "text": ["Rotate"], "attrs": {"id": "r"}, "extent": [3705, 3717], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3803, 3848], "text": ["Non-uniform scaling along XYZ axes."]}], "indent": 4, "text": ["Scale"], "attrs": {"id": "s"}, "extent": [3776, 3787], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3887, 3947], "text": ["Scales the object uniformly along all three axes."]}], "indent": 4, "text": ["Uniform scale"], "attrs": {"id": "scale"}, "extent": [3848, 3867], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}, {"body": [{"body": [{"body": [{"indent": 12, "type": "para", "extent": [4046, 4097], "text": ["Moves the local origin of the object."]}], "indent": 8, "text": ["Pivot translate"], "attrs": {"id": "p"}, "extent": [4001, 4026], "container": true, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [4140, 4212], "text": ["Rotates the local origin of the object after translation."]}], "indent": 8, "text": ["Pivot rotate"], "attrs": {"id": "pr"}, "extent": [4097, 4119], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 4, "level": 3, "text": [" Pivot Transform "], "attrs": {"id": "pivot_xform"}, "extent": [3947, 3975], "container": true, "type": "sep"}], "indent": 0, "role": "item", "attrs": {"id": "transform_block"}, "extent": [1873, 1879], "container": true, "type": "box"}], "container": true, "role": "item_group", "type": "box_group"}], "indent": 0, "level": 2, "text": ["Transform"], "extent": [3707, 3723], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [83, 157], "text": ["When ", {"text": ["Type"], "type": "ui"}, " is Cylinder, Disk, or Sphere, the radius of the light."]}], "container": true, "text": ["Radius"], "role": "item", "attrs": {"id": "radius"}, "extent": [57, 66], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [182, 255], "text": ["When ", {"text": ["Type"], "type": "ui"}, " is Cylinder, the length of the light from end to end."]}], "container": true, "text": ["Length"], "role": "item", "attrs": {"id": "length"}, "extent": [157, 165], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [284, 371], "text": ["When ", {"text": ["Type"], "type": "ui"}, " is Geometry, the path to a geometry prim to use as the light shape."]}], "container": true, "text": ["Geometry"], "role": "item", "attrs": {"id": "geometry"}, "extent": [255, 265], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [394, 456], "text": ["When ", {"text": ["Type"], "type": "ui"}, " is Rectangle, the width of the light area."]}], "container": true, "text": ["Width"], "role": "item", "attrs": {"id": "width"}, "extent": [371, 378], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [481, 544], "text": ["When ", {"text": ["Type"], "type": "ui"}, " is Rectangle, the height of the light area."]}], "container": true, "text": ["Height"], "role": "item", "attrs": {"id": "height"}, "extent": [456, 464], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [567, 640], "text": ["When ", {"text": ["Type"], "type": "ui"}, " is Distant, the angular size of the light in degrees."]}, {"type": "para", "indent": 4, "extent": [640, 785], "text": ["As an example, the Sun is approximately 0.53 degrees as seen from Earth. Higher values broaden the light and therefore soften shadow edges."]}], "container": true, "text": ["Angle"], "role": "item", "attrs": {"id": "angle"}, "extent": [544, 551], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [814, 1150], "text": ["Scales the power output exponentially as a power of 2, similar to an F-stop control. ", {"text": ["0"], "type": "code"}, " does not scale intensity, negative numbers scale intensity down by the square, positive numbers scale intensity up. Often you will set the ", {"text": ["Intensity"], "type": "ui"}, " to what looks like the right amount of light, and then use this parameter to \"tweak\" it."]}], "container": true, "text": ["Exposure"], "role": "item", "attrs": {"id": "exposure"}, "extent": [785, 795], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [1181, 1235], "text": ["A linear scale on the power output of the light."]}], "container": true, "text": ["Intensity"], "role": "item", "attrs": {"id": "intensity"}, "extent": [1150, 1161], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [1258, 1311], "text": ["The color of the light, in energy-linear terms."]}], "container": true, "text": ["Color"], "role": "item", "attrs": {"id": "color"}, "extent": [1235, 1242], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [1350, 1460], "text": ["Maps a texture to the area geometry of lights. This is currently only supported with rectangular lights."]}], "container": true, "text": ["Texture"], "role": "item", "attrs": {"id": "xn__texturefile_0ta"}, "extent": [1311, 1320], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [1519, 1761], "text": ["Use ", {"text": ["Color temperature"], "type": "ui"}, " to control the light color. The color calculated by ", {"text": ["Color temperature"], "type": "ui"}, " is ", {"text": ["multiplied"], "type": "strong"}, " by the RGB color in ", {"text": ["Color"], "type": "ui"}, ", so if you want the \"pure\" temperature color, you should set ", {"text": ["Color"], "type": "ui"}, " to ", {"text": ["1.0, 1.0, 1.0"], "type": "code"}, "."]}], "container": true, "text": ["Enable color temperature"], "role": "item", "attrs": {"id": "enableColorTemperature"}, "extent": [1460, 1486], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [1807, 2041], "text": ["When ", {"text": ["Enable color temperature"], "type": "ui"}, " is on, the temperature (in degrees Kelvin) to simulate. The valid range is from ", {"text": ["1000"], "type": "code"}, " to ", {"text": ["10000"], "type": "code"}, ". Lower values are warmer and higher values are cooler. The default is a common white point, D65."]}, {"type": "para", "indent": 4, "extent": [2041, 2174], "text": ["If necessary, you can compute the same color value using the ", {"text": ["UsdLuxBlackbodyTemperatureAsRgb()"], "type": "code"}, " function from the USD library."]}], "container": true, "text": ["Color temperature"], "role": "item", "attrs": {"id": "colorTemperature"}, "extent": [1761, 1780], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [2211, 2435], "text": ["Divides the set power output (intensity scaled by exposure) by the surface area or angular size of the light. This makes it easier to adjust and compare energy output without it being affected by the size of the light."]}], "container": true, "text": ["Normalize power"], "role": "item", "attrs": {"id": "normalize"}, "extent": [2174, 2191], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [2473, 2579], "text": ["Scales the effect this light has on the diffuse response of shaders. This is a non-physical \"tweak\"."]}], "container": true, "text": ["Diffuse multiplier"], "role": "item", "attrs": {"id": "diffuse"}, "extent": [2435, 2455], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [2619, 2726], "text": ["Scales the effect this light has on the specular response of shaders. This is a non-physical \"tweak\"."]}], "container": true, "text": ["Specular multiplier"], "role": "item", "attrs": {"id": "specular"}, "extent": [2579, 2600], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [2784, 3039], "text": ["Applies a uniform scaling factor the the guide geometry drawn for the light in the viewport. The default value is an expression that inverts the \"meters per unit\" value of the USD stage to produce a consistent real-world size for the guide geometry."]}], "container": true, "text": ["Scale Guide Geometry"], "role": "item", "attrs": {"id": "xn__houdiniguidescale_s3a"}, "extent": [2726, 2748], "indent": 0, "type": "parameters_item"}], "type": "parameters_item_group", "container": true}], "container": true, "level": 2, "text": ["Base properties"], "extent": [16, 57], "indent": 0, "type": "h", "id": "light_base_props"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [3113, 3182], "text": ["Add the necessary API to the light to turn it into a spotlight."]}], "indent": 0, "text": ["Spotlight"], "role": "item", "attrs": {"id": "spotlightenable"}, "extent": [3075, 3087], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3225, 3282], "text": ["The spread angle of the spotlight beam, in degrees."]}], "indent": 0, "text": ["Angle"], "role": "item", "attrs": {"id": "xn__shapingconeangle_51ae"}, "extent": [3182, 3189], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3331, 3412], "text": ["Blurs the edges of the spotlight beam, simulating light leakage and bounce."]}], "indent": 0, "text": ["Softness"], "role": "item", "attrs": {"id": "xn__shapingconesoftness_16ae"}, "extent": [3282, 3292], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3450, 3596], "text": ["Slides in a light blocker from the left, covering part of the spotlight cone. ", {"text": ["1.0"], "type": "code"}, " reaches all the way across the cone, blocking all light."]}], "indent": 0, "text": ["Left barndoor"], "role": "item", "attrs": {"id": "barndoorleft"}, "extent": [3412, 3427], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3643, 3770], "text": ["Extends the solid light blocker above by an additional soft edge. ", {"text": ["1.0"], "type": "code"}, " creates a gradient as wide as the spotlight cone."]}], "indent": 0, "text": ["Left barndoor edge"], "role": "item", "attrs": {"id": "barndoorleftedge"}, "extent": [3596, 3616], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3810, 3957], "text": ["Slides in a light blocker from the right, covering part of the spotlight cone. ", {"text": ["1.0"], "type": "code"}, " reaches all the way across the cone, blocking all light."]}], "indent": 0, "text": ["Right barndoor"], "role": "item", "attrs": {"id": "barndoorright"}, "extent": [3770, 3786], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4006, 4133], "text": ["Extends the solid light blocker above by an additional soft edge. ", {"text": ["1.0"], "type": "code"}, " creates a gradient as wide as the spotlight cone."]}], "indent": 0, "text": ["Right barndoor edge"], "role": "item", "attrs": {"id": "barndoorrightedge"}, "extent": [3957, 3978], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4169, 4314], "text": ["Slides in a light blocker from the top, covering part of the spotlight cone. ", {"text": ["1.0"], "type": "code"}, " reaches all the way across the cone, blocking all light."]}], "indent": 0, "text": ["Top barndoor"], "role": "item", "attrs": {"id": "barndoortop"}, "extent": [4133, 4147], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4359, 4486], "text": ["Extends the solid light blocker above by an additional soft edge. ", {"text": ["1.0"], "type": "code"}, " creates a gradient as wide as the spotlight cone."]}], "indent": 0, "text": ["Top barndoor edge"], "role": "item", "attrs": {"id": "barndoortopedge"}, "extent": [4314, 4333], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4528, 4676], "text": ["Slides in a light blocker from the bottom, covering part of the spotlight cone. ", {"text": ["1.0"], "type": "code"}, " reaches all the way across the cone, blocking all light."]}], "indent": 0, "text": ["Bottom barndoor"], "role": "item", "attrs": {"id": "barndoorbottom"}, "extent": [4486, 4503], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4727, 4855], "text": ["Extends the solid light blocker above by an additional soft edge. ", {"text": ["1.0"], "type": "code"}, " creates a gradient as wide as the spotlight cone."]}], "indent": 0, "text": ["Bottom barndoor edge"], "role": "item", "attrs": {"id": "barndoorbottomedge"}, "extent": [4676, 4698], "container": true, "type": "parameters_item"}], "container": true, "type": "parameters_item_group"}, {"indent": 0, "type": "sep", "extent": [4855, 4861], "level": 5}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [4902, 4972], "text": ["Add the necessary API to the light to be able to focus the beam."]}], "indent": 0, "text": ["Focus (checkbox)"], "role": "item", "attrs": {"id": "focusenable"}, "extent": [4861, 4880], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5010, 5188], "text": ["A control to shape the spread of light. Higher focus values pull light towards the center and narrow the spread. (This is implemented as an off-axis cosine power exponent.)"]}], "indent": 0, "text": ["Focus"], "role": "item", "attrs": {"id": "xn__shapingfocus_nva"}, "extent": [4972, 4979], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5235, 5323], "text": ["Off-axis color tint, tints the light in the falloff region. The default is black."]}], "indent": 0, "text": ["Focus tint"], "role": "item", "attrs": {"id": "xn__shapingfocusTint_51a"}, "extent": [5188, 5200], "container": true, "type": "parameters_item"}], "container": true, "type": "parameters_item_group"}, {"indent": 0, "type": "sep", "extent": [5323, 5329], "level": 5}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [5355, 5456], "text": ["Add the necessary API to the light to use an IES file describing angular distribution of light."]}], "indent": 0, "text": ["IES"], "role": "item", "attrs": {"id": "iesenable"}, "extent": [5329, 5335], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5496, 5604], "text": ["An IES (Illumination Engineering Society) format file to use to control angular distribution of light."]}], "indent": 0, "text": ["File"], "role": "item", "attrs": {"id": "xn__shapingiesfile_wyad"}, "extent": [5456, 5462], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5657, 5711], "text": ["A global scale on angles found in the IES file."]}], "indent": 0, "text": ["Angle scale"], "role": "item", "attrs": {"id": "xn__shapingiesangleScale_o8ad"}, "extent": [5604, 5617], "container": true, "type": "parameters_item"}], "container": true, "type": "parameters_item_group"}], "container": true, "level": 2, "text": ["Shaping"], "extent": [3039, 3075], "indent": 0, "type": "h", "id": "light_shaping_props"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [5779, 5872], "text": ["When this is on, objects hit by this light will cast shadows (subject to shadow masks)."]}], "indent": 0, "text": ["Enable"], "role": "item", "attrs": {"id": "xn__shadowenable_mva"}, "extent": [5739, 5748], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5909, 6025], "text": ["Tints the color of shadows cast by this light. Changing this from black (", {"text": ["0, 0, 0"], "type": "code"}, ") is a non-physical \"tweak\"."]}], "indent": 0, "text": ["Color"], "role": "item", "attrs": {"id": "xn__shadowcolor_zta"}, "extent": [5872, 5879], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6066, 6121], "text": ["The near distance at which shadow falloff begins."]}, {"indent": 4, "type": "para", "extent": [6121, 6171], "text": ["The default value (-1) indicates no falloff."]}], "indent": 0, "text": ["Falloff"], "role": "item", "attrs": {"id": "xn__shadowfalloff_8wa"}, "extent": [6025, 6034], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6223, 6369], "text": ["A gamma (i.e., exponential) control over shadow strength with linear distance within the falloff zone (between ", {"text": ["Falloff"], "type": "ui"}, " and ", {"text": ["Distance"], "type": "ui"}, "."]}], "indent": 0, "text": ["Falloff Gamma"], "role": "item", "attrs": {"id": "xn__shadowfalloffGamma_e5a"}, "extent": [6171, 6186], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6412, 6630], "text": ["The maximum distance to check for objects shadowing this light. The default is ", {"text": ["-1"], "type": "code"}, ", meaning no limit. Setting this may speed up rendering if you know all objects you want shadowed are within a certain distance."]}], "indent": 0, "text": ["Distance"], "role": "item", "attrs": {"id": "xn__shadowdistance_vya"}, "extent": [6369, 6379], "container": true, "type": "parameters_item"}], "container": true, "type": "parameters_item_group"}], "container": true, "level": 2, "text": ["Shadow"], "extent": [5711, 5739], "indent": 0, "type": "h", "id": "shadow_props"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [18293, 18350], "text": ["Outside this radius, the light will have no effect."]}], "indent": 0, "text": ["Active Radius"], "role": "item", "attrs": {"kagroup": "Light", "hprop": "karma:light:activeradius"}, "extent": [18218, 18235], "container": true, "type": "parameters_item", "id": "karma:light:activeradius"}, {"body": [{"type": "para", "indent": 4, "extent": [19053, 19174], "text": ["Controls whether multiple importance sampling will sample from the BSDF,\n    the light, or both the BSDF and light."]}], "indent": 0, "text": ["MIS Bias"], "role": "item", "attrs": {"hprop": "karma:light:misbias", "kagroup": "Shading"}, "extent": [18986, 18998], "container": true, "type": "parameters_item", "id": "karma:light:misbias"}, {"body": [{"type": "para", "indent": 4, "extent": [19258, 19464], "text": ["This is the per-light sampling quality.  Increasing the quality will add\n    additional samples for this light source, improving the sampling quality\n    of this light relative to other light sources."]}], "indent": 0, "text": ["Sampling Quality"], "role": "item", "attrs": {"hprop": "karma:light:samplingquality", "kagroup": "Sampling"}, "extent": [19174, 19194], "container": true, "type": "parameters_item", "id": "karma:light:samplingquality"}, {"body": [{"type": "para", "indent": 4, "extent": [22109, 22427], "text": ["When using the light tree for rendering, Karma will try to put any light\n    source that\u2019s compatible into the tree.  This option can force a light to\n    be excluded from the tree and subject to uniform sampling, which can \n    sometimes yield an improved sampling quality the light at the expense\n    of speed."]}], "indent": 0, "text": ["Force Uniform Sampling"], "role": "item", "attrs": {"hprop": "karma:light:force_uniform_sampling", "kagroup": "Sampling"}, "extent": [22012, 22038], "container": true, "type": "parameters_item", "id": "karma:light:force_uniform_sampling"}, {"body": [{"type": "para", "indent": 4, "extent": [22654, 22734], "text": ["The category identifier used to select this light source for illumination."]}], "indent": 0, "text": ["Category"], "role": "item", "attrs": {"hprop": "karma:light:category", "kagroup": "Shading"}, "extent": [22586, 22598], "container": true, "type": "parameters_item", "id": "karma:light:category"}, {"body": [{"type": "para", "indent": 4, "extent": [22818, 23075], "text": ["If an environment map is larger than this resolution, it will be scaled\n    down when performing texture analysis.  If the map has some very small,\n    very bright values, this filtering may affect how sampling of the\n    environment map is performed."]}], "indent": 0, "text": ["Maximum HDRI Size"], "role": "item", "attrs": {"hprop": "karma:light:hdri_max_isize", "kagroup": "Sampling"}, "extent": [22734, 22755], "container": true, "type": "parameters_item", "id": "karma:light:hdri_max_isize"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "container": true, "level": 2, "text": ["Karma"], "extent": [6630, 6662], "indent": 0, "type": "h", "id": "karma_light_props"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [2475, 2487], "container": true, "type": "parameters_section", "id": "parameters"}], "title": ["Light"], "summary": ["Creates or edits a USD Light prim. This node also adds some useful Karma-specific attributes."], "attrs": {"group": "lighting", "version": null, "since": "18.0", "namespace": null, "internal": "light", "context": "lop", "type": "node", "icon": "OBJ/hlight"}, "included": ["/nodes/lop/_render_prims", "/nodes/lop/_simple_prims", "/props/karma"], "type": "root"}