{"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [84, 757], "text": ["If enabled, the geometry in this object will collide with external objects that belong to a different solver. These other objects may be ", {"text": ["Static Objects"], "fullpath": "/nodes/dop/staticobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/staticobject"}, ", ", {"text": ["RBD Objects"], "fullpath": "/nodes/dop/rbdobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdobject"}, ", or the ", {"text": ["Ground Plane"], "fullpath": "/nodes/dop/groundplane", "scheme": "Node", "type": "link", "value": "/nodes/dop/groundplane"}, ". When ", {"text": ["Collision Detection"], "type": "ui"}, " is set to Use Volume Collisions on the Static Object, then the polygon vertices will be tested for collision against the signed distance field (SDF) of the Static Object. When ", {"text": ["Collision Detection"], "type": "ui"}, " is set to Use Surface Collisions, then surface-based continuous collision detection is used. The surface-based collisions collide points against polygons, and edges against edges."]}, {"indent": 4, "type": "para", "extent": [757, 1089], "text": ["When surface-based collisions are used, only polygons and tetrahedrons are considered. Other types of primitives, for example spheres, are be ignored. The geometry of the external objects (e.g. Static Object) is treated as being one-sided; only the outside of the polygons, determined by the winding order, opposes collisions."]}, {"indent": 4, "type": "para", "extent": [1089, 1382], "text": ["When volume-based collisions are enabled, only points will be colliding against the volumes, not the interiors of polygons and tetrahedrons. When colliding against small volumes, this may mean that you need to increase the number of points on your mesh to get accurate collision results."]}], "indent": 0, "text": ["Collide with objects in other solvers"], "attrs": {"id": "collideindependent"}, "extent": [16, 55], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [1448, 1859], "text": ["When enabled, this object will collide with other objects that have the same solver. These collisions are handled using continuous collision detection, based on the geometry (polygons and/or tetrahedrons). For collisions between objects on the same solver, the polygons are treated as two-sided. Both sides of the polygons collide. The surface of a tetrahedral mesh only collides on one side: the outside."]}], "indent": 0, "text": ["Collide with objects in this solver"], "attrs": {"id": "collidecodependent"}, "extent": [1382, 1419], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [1900, 2251], "text": ["If enabled, any two distinct polygons or tetrahedrons that belong on the same object may collide with each other. This prevents the simulation geometry from penetrating itself. Self collisions are handled using surface-based continuous collision detection. All polygons are treated as two-sides, and all tetrahedrons collide only on the outside."]}], "indent": 0, "text": ["Collide with self"], "attrs": {"id": "collideself"}, "extent": [1859, 1878], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [2282, 2890], "text": ["Creates an imaginary layer around the object. This layer consists of the region of space that has a distance of at most ", {"text": ["Thickness"], "type": "ui"}, " to some polygon or tetrahedron. For two-sided collision surfaces, such as cloth geometry, the layer is applied to both sides of each polygon.        For one-sided collision surfaces, such as tetrahedron surfaces the thickness layer is applied only on the back side of the tetrahedron surface (in the interior of the tetrahedron). The ", {"text": ["FEM Solver"], "scheme": null, "type": "link", "exists": true, "value": "node:dop/femsolver"}, " tries to ensure that the layers for the objects don\u2019t penetrate each other or pass through each other."]}, {"indent": 4, "type": "para", "extent": [2890, 3096], "text": ["For example, when a pair of two-sided polygons collide, one with a thickness of 0.01 and one with a thickness of 0.02, the solver will try to separate polygons of these objects by a distance of 0.03. "]}, {"indent": 4, "type": "para", "extent": [3096, 3304], "text": ["The ", {"text": ["Thickness"], "type": "ui"}, " parameter is one of the very few parameters that is scale dependent. It is very important that you adjust this parameter when you change the scale or amount of detail of your geometry."]}, {"indent": 4, "type": "para", "extent": [3304, 3751], "text": ["Use a ", {"text": ["Thickness"], "type": "ui"}, " that is significantly smaller than the length of the shortest edge in your simulation geometry. Typically, the ", {"text": ["Thickness"], "type": "ui"}, " should not exceed 1% percent of the average edge length. To avoid problems with self collisions, you should keep the polygons (and/or tetrahedrons) in your geometry fairly even-sized. Avoid polygons that have very small edges, compared to the average size of the polygons in your cloth geometry."]}], "indent": 0, "text": ["Thickness"], "attrs": {"id": "thickness"}, "extent": [2251, 2262], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [3780, 4146], "text": ["The coefficient of friction of the object. A value of 0 means the object is frictionless. This governs how much the velocity that is tangential to the contact plane is affected by collisions. When two objects are in contact, then the solver multiplies the friction coefficients of the involved object to get the effective friction coefficient for that contact."]}], "indent": 0, "text": ["Friction"], "attrs": {"id": "friction"}, "extent": [3751, 3761], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "type": "root", "attrs": {"type": "include"}}