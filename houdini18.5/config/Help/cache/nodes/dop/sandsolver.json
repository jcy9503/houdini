{"body": [{"indent": 0, "text": ["Sand Solver"], "type": "title", "extent": [82, 98], "level": 0}, {"indent": 0, "type": "summary", "extent": [98, 142], "text": ["Sets and configures a Sand solver. "]}, {"indent": 0, "type": "para", "extent": [142, 209], "text": ["The Sand Solver DOP sets objects to use the Sand Dynamics solver."]}, {"indent": 0, "type": "para", "extent": [209, 323], "text": ["If an object has this DOP as its \"Solver\" subdata, it will evolve\nitself as a ", {"text": ["Sand Object"], "fullpath": "/nodes/dop/sandobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/sandobject"}, "."]}, {"indent": 0, "type": "para", "extent": [323, 437], "text": ["This solver takes an SDF field called \"origsurface\" and creates\nparticles inside of it to represent the surface."]}, {"indent": 0, "type": "para", "extent": [437, 710], "text": ["This solver uses a set of particles to store the velocity and position\nof a fluid.   These particles are then stamped into a voxel grid to\ndefine a surface for the purpose of pressure correction.  In addition,\nthere are sand-like forces to link rigid components together."]}, {"indent": 0, "type": "para", "extent": [710, 824], "text": ["To setup an object with the requisite subdata, use the ", {"text": ["Sand Configure\nObject DOP"], "fullpath": "/nodes/dop/sandconfigureobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/sandconfigureobject"}, "."]}, {"body": [{"body": [{"body": [{"body": [{"indent": 12, "type": "para", "extent": [883, 1086], "text": ["While the Sand Solver tries to estimate the correct\n            substep size for a stable simulation, if unusual forces are\n            present it may take too large of a step. "]}, {"indent": 12, "type": "para", "extent": [1086, 1168], "text": ["By setting the\n            minimum substep one can enforce stability."]}], "indent": 8, "text": ["Minimum Substeps"], "role": "item", "extent": [856, 883], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [1194, 1313], "text": ["The Sand Solver will not break the simulation down into\n            more substeps than this. "]}, {"indent": 12, "type": "para", "extent": [1313, 1563], "text": ["It is a very good idea to always\n            have a maximum to ensure frames will be finished regardless\n            of their complexity. Lowering this ceiling can ensure a\n            minimum computation time at the expense of accuracy."]}], "indent": 8, "text": ["Maximum Substeps"], "role": "item", "extent": [1168, 1194], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [1586, 1854], "text": ["The CFL Condition is a factor used for automatically\n            determining what size substep a scene requires. The idea is\n            that any substep should not allow any objects to\n            interpenetrate by more than one voxel cell. "]}, {"indent": 12, "type": "para", "extent": [1854, 2106], "text": ["This condition is met when this parameter is at 1. A value of 10 would\n            allow a substep to move the fluid by as much as 10 voxel\n            cells, possibly tunneling through objects rather than\n            properly deflecting."]}], "indent": 8, "text": ["CFL Condition"], "role": "item", "extent": [1563, 1586], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 4, "level": 2, "text": ["Substeps"], "extent": [836, 856], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 12, "type": "para", "extent": [2152, 2281], "text": ["Viscosity is a force which tries to ensure that\n            neighboring voxels have the same velocity. "]}, {"indent": 12, "type": "para", "extent": [2281, 2530], "text": ["A zero value allows fluid in adjacent voxels to move any direction\n            without resistance. Higher values introduce a penalty effect\n            when a voxel\u2019s velocity varies from that of its neighbors."]}, {"indent": 12, "type": "para", "extent": [2530, 2637], "text": ["This is currently implemented by applying a diffusive term\n            to the velocity field."]}], "indent": 8, "text": ["Viscosity"], "role": "item", "extent": [2132, 2152], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [2665, 2736], "text": ["Controls if the sand specific forces are computed or not."]}], "indent": 8, "text": ["Enable Sand Forces"], "role": "item", "extent": [2637, 2665], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [2760, 2878], "text": ["Voxels that are not rigid still under go friction proportional\n            to their stress. "]}, {"indent": 12, "type": "para", "extent": [2878, 3082], "text": ["The Friction Angle represents the scale of this\n            friction. The Friction Angle is also used to determine at what\n            effective rest angle the sand is considered to be rigid."]}], "indent": 8, "text": ["Friction Angle"], "role": "item", "extent": [2736, 2760], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [3109, 3292], "text": ["In addition to the friction angle, when determining if\n            components should be classified as rigid, the cohesive strength\n            is also used. "]}, {"indent": 12, "type": "para", "extent": [3292, 3497], "text": ["While the friction angle represents how the sand\n            grains stack and thus move rigidly, the cohesive strength\n            measures how they stick together and hence for rigid clumps."]}], "indent": 8, "text": ["Cohesive Strength"], "role": "item", "extent": [3082, 3109], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [3523, 3714], "text": ["External forces will be scaled by an estimate of how much\n            of the cell contains liquid.  This allows for sub-voxel\n            waves to be evened out under gravity.  "]}, {"indent": 12, "type": "para", "extent": [3714, 3881], "text": ["However, it also\n            means that the edges of containers will have less gravity\n            and hence will creep upwards in an undesirable manner."]}], "indent": 8, "text": ["Scale by Surface"], "role": "item", "extent": [3497, 3523], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 4, "level": 2, "text": ["Internal Forces"], "extent": [2106, 2132], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 12, "type": "para", "extent": [3930, 4098], "text": ["When converting the origsurface scalar field into particles,\n            this is the number of particles that will generated inside\n            each voxel."]}], "indent": 8, "text": ["Particles Per Voxel"], "role": "item", "extent": [3900, 3930], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [4121, 4205], "text": ["The radius, in terms of voxels, of each generated\n            particle."]}], "indent": 8, "text": ["Particle Size"], "role": "item", "extent": [4098, 4121], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [4226, 4442], "text": ["When copying the velocities from the vector field to the\n            particles they can either overwrite the existing\n            velocities (PIC, 0) or add the change in velocity (FLIP, 1)."]}, {"indent": 12, "type": "para", "extent": [4442, 4603], "text": ["The PIC method results in more diffusive, viscous, fluid\n            while the FLIP lets the particles move with no numerical\n            viscosity."]}], "indent": 8, "text": ["FLIP vs PIC"], "role": "item", "extent": [4205, 4226], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [4630, 4788], "text": ["In reconstructing the surface field from the particle\n            values this is the bandwidth, in terms of voxels, that is\n            searched."]}], "indent": 8, "text": ["Surface Bandwidth"], "role": "item", "extent": [4603, 4630], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [4826, 5016], "text": ["When extrapolating the velocity field into non-fluid\n            cells, the extrapolation is stopped when a certain number\n            of cells has been filled along the border."]}], "indent": 8, "text": ["Limit Velocity Extrapolation"], "role": "item", "extent": [4788, 4826], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [5050, 5217], "text": ["The number of non-fluid cells that should be filled with\n            velocity values on the non-fluid side of the velocity\n            field."]}], "indent": 8, "text": ["Max Cells to Extrapolate"], "role": "item", "extent": [5016, 5050], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 4, "level": 2, "text": ["Advanced"], "extent": [3881, 3900], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 12, "type": "para", "extent": [5282, 5425], "text": ["Determines if changes in point positions of the collision\n            object will be used to find a local velocity.  "]}, {"indent": 12, "type": "para", "extent": [5425, 5539], "text": ["This is\n            useful for deforming colliders which have consistent point\n            topology."]}], "indent": 8, "text": ["Use Point Velocity for Collisions"], "role": "item", "extent": [5238, 5282], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [5583, 5720], "text": ["Determines if changes in volume size of the collision\n            object will be used to find local velocity.  "]}, {"indent": 12, "type": "para", "extent": [5720, 5911], "text": ["This can be\n            used for deforming colliders that don\u2019t have a consistent\n            point topology.  Tangential deformational velocities are\n            lost, however."]}], "indent": 8, "text": ["Use Volume Velocity for Collisions"], "role": "item", "extent": [5539, 5583], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [5941, 6059], "text": ["Allows the fluid to collide with objects that don\u2019t have\n            Geometry/SDF, such as other fluids."]}], "indent": 8, "text": ["Collide with Non-SDF"], "role": "item", "extent": [5911, 5941], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 4, "level": 2, "text": ["Collisions"], "extent": [5217, 5238], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"type": "para", "indent": 4, "extent": [38, 142], "text": ["Each data option parameter has an associated menu which specifies\n    how that parameter operates."]}, {"body": [{"body": [{"type": "para", "indent": 8, "extent": [160, 215], "text": ["Use the value from the Default Operation menu."]}], "container": true, "text": ["Use Default "], "extent": [142, 160], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [233, 479], "text": ["Set the value of this parameter only when this data is created.\n        On all subsequent timesteps, the value of this parameter is not\n        altered. This is useful for setting up initial conditions like\n        position and velocity."]}], "container": true, "text": ["Set Initial "], "extent": [215, 233], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [496, 823], "text": ["Always set the value of this parameter. This is useful when\n        specific keyframed values are required over time. This could be\n        used to keyframe the position of an object over time, or to\n        cause the geometry from a SOP to be refetched at each timestep\n        if the geometry is deforming. "]}, {"type": "para", "indent": 8, "extent": [823, 1119], "text": ["You can also use this setting in\n        conjunction with the local variables for a parameter value to\n        modify a value over time. For example, in the X Position, an\n        expression like ", {"text": ["$tx + 0.1"], "type": "code"}, " would cause the object to\n        move 0.1 units to the right on each timestep."]}], "container": true, "text": ["Set Always "], "extent": [479, 496], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [1135, 1333], "text": ["Do not ever set the value of this parameter. This option is most\n        useful when using this node to modify an existing piece of data\n        connected through the first input. "]}, {"type": "para", "indent": 8, "extent": [1333, 1608], "text": ["For example, an ", {"text": ["RBD State\n        DOP"], "fullpath": "/nodes/dop/rbdstate", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdstate"}, " may want to animate just the mass of an\n        object, and nothing else. The ", {"text": ["Set Never"], "type": "ui"}, " option could be used\n        on all parameters except for ", {"text": ["Mass"], "type": "ui"}, ", which would use ", {"text": ["Set\n        Always"], "type": "ui"}, "."]}], "container": true, "text": ["Set Never "], "extent": [1119, 1135], "indent": 4, "type": "dt"}], "type": "dt_group", "container": true}], "container": true, "text": ["Parameter Operations"], "role": "item", "extent": [16, 38], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [1627, 1762], "text": ["For any parameters with their ", {"text": ["Operation"], "type": "ui"}, " menu set to ", {"text": ["Use\n    Default"], "type": "ui"}, ", this parameter controls what operation is used. "]}, {"type": "para", "indent": 4, "extent": [1762, 1908], "text": ["This\n    parameter has the same menu options and meanings as the ", {"text": ["Parameter\n    Operations"], "type": "ui"}, " menus, but without the ", {"text": ["Use Default"], "type": "ui"}, " choice."]}], "container": true, "text": ["Default Operation"], "role": "item", "extent": [1608, 1627], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [46, 139], "text": ["All objects connected to the first input of this node become mutual\n    affectors. "]}, {"type": "para", "indent": 4, "extent": [139, 412], "text": ["This is equivalent to using an ", {"text": ["Affector\n    DOP"], "fullpath": "/nodes/dop/affector", "scheme": "Node", "type": "link", "value": "/nodes/dop/affector"}, " to create an affector relationship between\n    ", {"text": ["*"], "type": "code"}, " and ", {"text": ["*"], "type": "code"}, " before connecting it to this node. This option makes it\n    convenient to have all objects feeding into a solver node affect\n    each other."]}], "container": true, "text": ["Make Objects Mutual Affectors"], "role": "item", "extent": [15, 46], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [45, 219], "text": ["When an object connector is attached to the first input of this\n    node, this parameter can be used to choose a subset of those objects\n    to be affected by this node."]}], "container": true, "text": ["Group"], "role": "item", "attrs": {"channels": "/group"}, "extent": [15, 22], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [26, 227], "text": ["Indicates the name that should be used to attach the data to an\n    object or other piece of data. If the Data Name contains a \"/\" (or\n    several), that indicates traversing inside subdata. "]}, {"type": "para", "indent": 4, "extent": [227, 530], "text": ["For example, if the ", {"text": ["Fan Force DOP"], "fullpath": "/nodes/dop/fan", "scheme": "Node", "type": "link", "value": "/nodes/dop/fan"}, " has the default Data Name\n    \"Forces/Fan\". This attaches the data with the name \"Fan\" to an\n    existing piece of data named \"Forces\". If no data named \"Forces\"\n    exists, a simple piece of container data is created to hold the\n    \"Fan\" subdata."]}, {"type": "para", "indent": 4, "extent": [530, 833], "text": ["Different pieces of data have different requirements on what names\n    should be used for them. Except in very rare situations, the default\n    value should be used. Some exceptions are described with particular\n    pieces of data or with solvers that make use of some particular type\n    of data."]}], "container": true, "text": ["Data Name"], "role": "item", "extent": [15, 26], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [851, 1058], "text": ["Turning on this parameter modifies the ", {"text": ["Data Name"], "type": "ui"}, " parameter\n    value to ensure that the data created by this node is attached with\n    a unique name so it will not overwrite any existing data. "]}, {"type": "para", "indent": 4, "extent": [1058, 1271], "text": ["With this\n    parameter turned off, attaching two pieces of data with the same\n    name will cause the second one to replace the first. There are\n    situations where each type of behavior is desirable. "]}, {"type": "para", "indent": 4, "extent": [1271, 1585], "text": ["If an object\n    needs to have several ", {"text": ["Fan Forces"], "fullpath": "/nodes/dop/fan", "scheme": "Node", "type": "link", "value": "/nodes/dop/fan"}, " blowing on it, it is\n    much easier to use the ", {"text": ["Unique Data Name"], "type": "ui"}, " feature to ensure that\n    each fan does not overwrite a previous fan rather than trying to\n    change the ", {"text": ["Data Name"], "type": "ui"}, " of each fan individually to avoid\n    conflicts. "]}, {"type": "para", "indent": 4, "extent": [1585, 1827], "text": ["On the other hand, if an object is known to have ", {"text": ["RBD\n    State"], "fullpath": "/nodes/dop/rbdstate", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdstate"}, " data already attached to it, leaving this\n    option turned off will allow some new ", {"text": ["RBD State"], "fullpath": "/nodes/dop/rbdstate", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdstate"}, "\n    data to overwrite the existing data."]}], "container": true, "text": ["Unique Data Name"], "role": "item", "extent": [833, 851], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [178, 731], "text": ["The default behavior for solvers is to attach the exact same solver to all\n    of the objects specified in the group.  This allows the objects to be\n    processed in a single pass by the solver, since the parameters are identical\n    for each object.  However, some objects operate more logically on a single\n    object at a time.  In these cases, one may want to use ", {"text": ["$OBJID"], "type": "code"}, " expressions\n    to vary the solver parameters across the objects.  Setting this toggle will\n    create a separate solver per object, allowing ", {"text": ["$OBJID"], "type": "code"}, " to vary as expected."]}], "container": true, "text": ["Solver Per Object"], "role": "item", "extent": [159, 178], "indent": 0, "type": "parameters_item"}], "type": "parameters_item_group", "container": true}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [824, 836], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [28, 246], "text": ["This optional input can be used to control which simulation objects\n    are modified by this node. Any objects connected through this input\n    and which match the ", {"text": ["Group"], "type": "ui"}, " parameter field will be modified. "]}, {"type": "para", "indent": 4, "extent": [246, 397], "text": ["If this input is not connected, this node can be used in conjunction with an\n    Apply Data node, or can be used as an input to another data node."]}], "container": true, "text": ["First Input"], "extent": [15, 28], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [415, 557], "text": ["If this node has more input connectors, other data nodes can be\n    attached to act as modifiers for the data created by this node. "]}, {"type": "para", "indent": 4, "extent": [557, 749], "text": ["The specific types of subdata that are meaningful vary from node to\n    node. Click ", {"keys": ["MMB"], "text": null, "type": "keys"}, " an input connector to see a list of available\n    data nodes that can be meaningfully attached."]}], "container": true, "text": ["All Other Inputs"], "extent": [397, 415], "indent": 0, "type": "dt"}], "type": "dt_group", "container": true}], "indent": 0, "level": 1, "text": "Inputs", "role": "section", "extent": [6096, 6104], "container": true, "type": "inputs_section", "id": "inputs"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [29, 296], "text": ["The operation of this output depends on what inputs are connected\n    to this node. If an object stream is input to this node, the output\n    is also an object stream containing the same objects as the input\n    (but with the data from this node attached). "]}, {"type": "para", "indent": 4, "extent": [296, 606], "text": ["If no object stream is\n    connected to this node, the output is a data output. This data\n    output can be connected to an ", {"text": ["Apply Data DOP"], "fullpath": "/nodes/dop/applydata", "scheme": "Node", "type": "link", "value": "/nodes/dop/applydata"}, ",\n    or connected directly to a data input of another data node, to\n    attach the data from this node to an object or another piece of\n    data."]}], "container": true, "text": ["First Output"], "extent": [15, 29], "indent": 0, "type": "dt"}], "type": "dt_group", "container": true}], "indent": 0, "level": 1, "text": "Outputs", "role": "section", "extent": [6140, 6149], "container": true, "type": "outputs_section", "id": "outputs"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [29, 325], "text": ["This DOP node defines a local variable for each channel and\n    parameter on the Data Options page, with the same name as the\n    channel. So for example, the node may have channels for Position\n    (positionx, positiony, positionz) and a parameter for an object name\n    (objectname). "]}, {"type": "para", "indent": 4, "extent": [325, 519], "text": ["Then there will also be local variables with the names\n    positionx, positiony, positionz, and objectname. These variables\n    will evaluate to the previous value for that parameter. "]}, {"type": "para", "indent": 4, "extent": [519, 692], "text": ["This previous value is always stored as part of the data attached to the\n    object being processed. This is essentially a shortcut for a\n    dopfield expression like:"]}, {"lang": null, "type": "pre", "indent": 4, "extent": [692, 775], "text": ["\n    dopfield($DOPNET, $OBJID, dataName, \"Options\", 0, channelname)\n    "]}, {"type": "para", "indent": 4, "extent": [775, 883], "text": ["If the data does not already exist, then a value of zero or an\n    empty string will be returned."]}], "container": true, "text": ["channelname"], "extent": [16, 29], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [891, 1132], "text": ["This value is the simulation time (see variable ST) at which the\n    current data was created. This value may not be the same as the\n    current simulation time if this node is modifying existing data,\n    rather than creating new data."]}], "container": true, "text": ["DATACT"], "extent": [883, 891], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [1140, 1383], "text": ["This value is the simulation frame (see variable SF) at which the\n    current data was created. This value may not be the same as the\n    current simulation frame if this node is modifying existing data,\n    rather than creating new data."]}], "container": true, "text": ["DATACF"], "extent": [1132, 1140], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [1392, 1594], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [1594, 1712], "text": ["In this case, this value is set to the\n    name of the relationship the data to which the data is being attached."]}], "container": true, "text": ["RELNAME"], "extent": [1383, 1392], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [1723, 1925], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [1925, 2128], "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affected Objects of the relationship to which the data is being\n    attached."]}], "container": true, "text": ["RELOBJIDS"], "extent": [1712, 1723], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [2141, 2343], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [2343, 2528], "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affected\n    Objects of the relationship to which the data is being attached."]}], "container": true, "text": ["RELOBJNAMES"], "extent": [2128, 2141], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [2542, 2744], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [2744, 2947], "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affector Objects of the relationship to which the data is being\n    attached."]}], "container": true, "text": ["RELAFFOBJIDS"], "extent": [2528, 2542], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [2963, 3165], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [3165, 3350], "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affector\n    Objects of the relationship to which the data is being attached."]}], "container": true, "text": ["RELAFFOBJNAMES"], "extent": [2947, 2963], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [20, 107], "text": ["This value is the simulation time for which the node is being\n    evaluated. "]}, {"type": "para", "indent": 4, "extent": [107, 326], "text": ["This value may not be equal to the current Houdini time\n    represented by the variable T, depending on the settings of the ", {"text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet", "scheme": "Node", "type": "link", "value": "/nodes/obj/dopnet"}, " ", {"text": ["Offset Time"], "type": "ui"}, " and ", {"text": ["Time Scale"], "type": "ui"}, "\n    parameters. "]}, {"type": "para", "indent": 4, "extent": [326, 555], "text": ["This value is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"text": ["$ST == 0"], "type": "code"}, " rather than\n    ", {"text": ["$T == 0"], "type": "code"}, " or ", {"text": ["$FF == 1"], "type": "code"}, "."]}], "container": true, "text": ["ST"], "extent": [16, 20], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [559, 700], "text": ["This value is the simulation frame (or more accurately, the\n    simulation time step number) for which the node is being evaluated."]}, {"type": "para", "indent": 4, "extent": [700, 999], "text": ["This value may not be equal to the current Houdini frame number\n    represented by the variable F, depending on the settings of the ", {"text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet", "scheme": "Node", "type": "link", "value": "/nodes/obj/dopnet"}, " parameters. Instead, this value is equal to\n    the simulation time (ST) divided by the simulation timestep size\n    (TIMESTEP)."]}], "container": true, "text": ["SF"], "extent": [555, 559], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [1009, 1181], "text": ["This value is the size of a simulation timestep. This value is\n    useful to scale values that are expressed in units per second, but\n    are applied on each timestep."]}], "container": true, "text": ["TIMESTEP"], "extent": [999, 1009], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [1187, 1305], "text": ["This value is the inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."]}], "container": true, "text": ["SFPS"], "extent": [1181, 1187], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [1312, 1523], "text": ["This is the number of objects in the simulation. For nodes that\n    create objects such as the ", {"text": ["Empty Object"], "fullpath": "/nodes/dop/emptyobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/emptyobject"}, " node,\n    this value will increase for each object that is evaluated. "]}, {"type": "para", "indent": 4, "extent": [1523, 1621], "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"text": ["object_$SNOBJ"], "type": "code"}, "."]}], "container": true, "text": ["SNOBJ"], "extent": [1305, 1312], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [1627, 1859], "text": ["This value is the number of objects that will be evaluated by the\n    current node during this timestep. This value will often be\n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "]}, {"type": "para", "indent": 4, "extent": [1859, 1991], "text": ["This value may return 0 if the node does not\n    process each object sequentially (such as the ", {"text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "container": true, "text": ["NOBJ"], "extent": [1621, 1627], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [1996, 2322], "text": ["This value is the index of the specific object being processed by\n    the node. This value will always run from zero to NOBJ-1 in a given\n    timestep. This value does not identify the current object within the\n    simulation like OBJID or OBJNAME, just the object\u2019s position in the\n    current order of processing. "]}, {"type": "para", "indent": 4, "extent": [2322, 2616], "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    will be -1 if the node does not process objects sequentially (such\n    as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "container": true, "text": ["OBJ"], "extent": [1991, 1996], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [2623, 2883], "text": ["This is the unique object identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. "]}, {"type": "para", "indent": 4, "extent": [2883, 3168], "text": ["The object identifier\n    can always be used to uniquely identify a given object. This makes\n    this variable very useful in situations where each object needs to\n    be treated differently. It can be used to produce a unique random\n    number for each object, for example. "]}, {"type": "para", "indent": 4, "extent": [3168, 3406], "text": ["This value is also the best way\n    to look up information on an object using the dopfield expression\n    function. This value will be -1 if the node does not process objects\n    sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "container": true, "text": ["OBJID"], "extent": [2616, 2623], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [3417, 3556], "text": ["This string contains a space separated list of the unique object\n    identifiers for every object being processed by the current node."]}], "container": true, "text": ["ALLOBJIDS"], "extent": [3406, 3417], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [3569, 3687], "text": ["This string contains a space separated list of the names of every\n    object being processed by the current node."]}], "container": true, "text": ["ALLOBJNAMES"], "extent": [3556, 3569], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [3694, 3801], "text": ["This value is the simulation time (see variable ST) at which the\n    current object was created. "]}, {"type": "para", "indent": 4, "extent": [3801, 4057], "text": ["Therefore, to check if an object was created\n    on the current timestep, the expression ", {"text": ["$ST == $OBJCT"], "type": "code"}, " should\n    always be used. This value will be zero if the node does not process\n    objects sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "container": true, "text": ["OBJCT"], "extent": [3687, 3694], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [4064, 4172], "text": ["This value is the simulation frame (see variable SF) at which the\n    current object was created. "]}, {"type": "para", "indent": 4, "extent": [4172, 4389], "text": ["This value is equivalent to using the\n    dopsttoframe expression on the OBJCT variable. This value will be\n    zero if the node does not process objects sequentially (such as the\n    ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "container": true, "text": ["OBJCF"], "extent": [4057, 4064], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [4398, 4486], "text": ["This is a string value containing the name of the object being\n    processed. "]}, {"type": "para", "indent": 4, "extent": [4486, 4748], "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "]}, {"type": "para", "indent": 4, "extent": [4748, 5194], "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named \"myobject\",\n    specifying ", {"text": ["strcmp($OBJNAME, \"myobject\") == 0"], "type": "code"}, " in the activation field\n    of a DOP will cause that DOP to operate only on those 20 objects. This\n    value will be the empty string if the node does not process objects\n    sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "container": true, "text": ["OBJNAME"], "extent": [4389, 4398], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [5202, 5425], "text": ["This is a string value containing the full path of the current DOP\n    Network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP Network that contains the\n    node."]}], "container": true, "text": ["DOPNET"], "extent": [5194, 5202], "indent": 0, "type": "dt"}], "type": "dt_group", "container": true}, {"body": [{"body": [{"type": "para", "indent": 4, "extent": [5431, 5620], "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"text": ["Position node"], "fullpath": "/nodes/dop/position", "scheme": "Node", "type": "link", "value": "/nodes/dop/position"}, ",\n    you could write the expression:"]}, {"lang": null, "type": "pre", "indent": 4, "extent": [5620, 5650], "text": ["\n    $tx + 0.1\n    "]}, {"type": "para", "indent": 4, "extent": [5650, 5730], "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."]}], "container": true, "role": "item", "extent": [5425, 5431], "indent": 0, "type": "note"}], "role": "item_group", "container": true, "type": "note_group"}], "indent": 0, "level": 1, "text": "Locals", "role": "section", "extent": [6186, 6194], "container": true, "type": "locals_section", "id": "locals"}], "title": ["Sand Solver"], "summary": ["Sets and configures a Sand solver. "], "attrs": {"index": "no", "version": null, "namespace": null, "internal": "sandsolver", "context": "dop", "type": "node", "icon": "DOP/sandsolver"}, "included": ["/nodes/dop/standard_data_inputs", "/nodes/dop/standard_data_locals", "/nodes/dop/standard_data_outputs", "/nodes/dop/standard_datagroup_parms", "/nodes/dop/standard_dataname_parms", "/nodes/dop/standard_dataop_parms", "/nodes/dop/standard_locals", "/nodes/dop/standard_solver_mutualparms", "/nodes/dop/standard_solver_parms"], "type": "root"}