{"type": "root", "attrs": {"type": "node", "context": "dop", "internal": "sopsolver", "icon": "DOP/sopsolver", "version": "2.0", "since": "14.0", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["SOP Solver"], "extent": [96, 111]}, {"type": "para", "indent": 0, "text": ["The SOP Solver DOP lets the DOP simulation use a SOP Network or chain\nof SOPs to evolve an object\u2019s geometry over time. At each timestep, the\nSOP specified in the ", {"type": "ui", "text": ["SOP Path"]}, " parameter is set up with a number of\nglobal parameters accessible with the ", {"type": "code", "text": ["stamp"]}, " or ", {"type": "code", "text": ["stamps"]}, " expression\nfunction. Since these global parameters are modified at each timestep,\nany SOPs that feed into the output SOP are forced to recook."], "extent": [111, 527]}, {"type": "para", "indent": 0, "text": ["The available global parameters are:"], "extent": [527, 565]}, {"tag": "table", "attrs": {}, "type": "pxml", "indent": 0, "extent": [565, 573], "body": [{"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [573, 582], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "extent": [582, 595], "body": [{"type": "para", "indent": 12, "text": [{"type": "code", "text": ["ST"]}], "extent": [595, 612]}], "container": true}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Current simulation time being solved for."], "extent": [612, 667]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [667, 676], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "extent": [676, 689], "body": [{"type": "para", "indent": 12, "text": [{"type": "code", "text": ["TIMESTEP"]}], "extent": [689, 712]}], "container": true}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Length of timestep."], "extent": [712, 745]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [745, 754], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "extent": [754, 767], "body": [{"type": "para", "indent": 12, "text": [{"type": "code", "text": ["OBJID"]}], "extent": [767, 787]}], "container": true}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" The object identifier for the object being solved."], "extent": [787, 851]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [851, 860], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "extent": [860, 873], "body": [{"type": "para", "indent": 12, "text": [{"type": "code", "text": ["OBJNAME"]}], "extent": [873, 895]}], "container": true}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" The name of the object being solved."], "extent": [895, 945]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [945, 954], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "extent": [954, 967], "body": [{"type": "para", "indent": 12, "text": [{"type": "code", "text": ["DOPNET"]}], "extent": [967, 988]}], "container": true}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "extent": [988, 1001], "body": [{"type": "para", "indent": 12, "text": ["This is the full path to the DOP Network that is being solved."], "extent": [1001, 1076]}], "container": true}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [1076, 1085], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "extent": [1085, 1098], "body": [{"type": "para", "indent": 12, "text": [{"type": "code", "text": ["DATANAME"]}], "extent": [1098, 1121]}], "container": true}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "extent": [1121, 1134], "body": [{"type": "para", "indent": 12, "text": ["This is the name of the data on the object that is to be solved\n            by the SOP Solver."], "extent": [1134, 1241]}], "container": true}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [1241, 1250], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "extent": [1250, 1263], "body": [{"type": "para", "indent": 12, "text": [{"type": "code", "text": ["DATAPATH"]}], "extent": [1263, 1286]}], "container": true}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "extent": [1286, 1299], "body": [{"type": "para", "indent": 12, "text": ["This is the full path to the piece of data within the DOP Network\n            that is being solved by the SOP Solver.  It is equivalent to ", {"type": "code", "text": ["$DOPNET:$OBJID/$DATANAME"]}, "."], "extent": [1299, 1479]}], "container": true}], "container": true}], "container": true}, {"type": "para", "indent": 0, "text": ["By using an expression like ", {"type": "code", "text": ["stamps(\"../OUT\", \"DATAPATH\", \"../.:objname/Geometry\")"]}, " in an ", {"scheme": "Node", "value": "/nodes/sop/object_merge", "type": "link", "text": ["Object Merge SOP"], "fullpath": "/nodes/sop/object_merge"}, ", the output of the previous timestep can be used as the starting point for the next timestep within the SOP Network."], "extent": [1479, 1728]}, {"type": "para", "indent": 0, "text": ["The SOP Solver is itself a SOP network.  This means that the SOP Path\ncan point to itself, using '.', to cook its contents as the SOP\nsolving network.  The default SOP Solver will contain an DOP import\nalready set up with the appropriate stamp expression, and a Impacts\nnetwork setup with the usual need to grab the impact data for an RBD\nobject."], "extent": [1728, 2076]}, {"type": "para", "indent": 0, "text": ["When a SOP Solver is applied to multiple objects, each object is\nsolved individually in a separate pass.  Likewise, when you dive in\nand view the SOP network you are not seeing the DOP solve, but\ninstead the network as a normal SOP network.  This usually results\nin the same thing as the default stamps are setup to behave the\nsame in DOP and SOP modes."], "extent": [2076, 2432]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [2432, 2444], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Use External SOP"], "extent": [2444, 2463], "body": [{"type": "para", "indent": 8, "text": ["Since this node is itself a SOP network, if this toggle is not\n        set the SOP network used for solving is the contained network."], "extent": [2463, 2606]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["SOP Path"], "extent": [2606, 2616], "body": [{"type": "para", "indent": 4, "text": ["Points to the SOP that is accessed on each timestep. "], "extent": [2641, 2704]}, {"type": "para", "indent": 4, "text": ["The global parameter listed above are set on this SOP node, so this is the\n    node that should be used as the first parameter in ", {"type": "code", "text": ["stamp"]}, " or ", {"type": "code", "text": ["stamps"]}, " expressions to access this information."], "extent": [2704, 2903]}], "container": true, "attrs": {"channels": "/soppath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Data Name"], "extent": [2903, 2914], "body": [{"type": "para", "indent": 4, "text": ["The name of the Geometry data on the simulation object that\n    should be processed by this solver. "], "extent": [2940, 3050]}, {"type": "para", "indent": 4, "text": ["Usually this will be the\n    main geometry for an object, named ", {"type": "code", "text": ["Geometry"]}, ", but this is not\n    required."], "extent": [3050, 3161]}, {"type": "para", "indent": 4, "text": ["The type of the data should be ", {"type": "code", "text": ["Geometry"]}, ", ", {"type": "code", "text": ["Scalar Field"]}, ", ", {"type": "code", "text": ["Vector\n    Field"]}, ", or ", {"type": "code", "text": ["Matrix Field"]}, ".  If it is ", {"type": "code", "text": ["Geometry"]}, ", the output of the\n    SOP network is made the new data value.  If it is a field\n    type, the first volumes (regardless of name) in the output\n    will be sampled to become the new field values.  The fields\n    will not change size or resolution. "], "extent": [3161, 3534]}], "container": true, "attrs": {"channels": "/datapath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Invoke Compiled Block"], "extent": [3534, 3557], "body": [{"type": "para", "indent": 4, "text": ["To run a SOP solver, a copy of the geometry has to be made to\n    ensure the SOPs can still read the original, unmodified, geometry\n    during the solve.  This adds a considerable overhead to a SOP\n    solver, however."], "extent": [3557, 3781]}, {"type": "para", "indent": 4, "text": ["If the SOP Path refers to a compiled block, or an Output SOP\n    connected directly to a compiled block, the block can be directly\n    invoked.  Doing so allows the copy to be avoided and instead the\n    geometry manipulated in-place."], "extent": [3781, 4021]}, {"type": "para", "indent": 4, "text": ["The compile block\u2019s output becomes the new version of the solved data.\n    An input named \"data\" will be given the original version solved\n    data."], "extent": [4021, 4175]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [4175, 4185], "body": [{"type": "para", "indent": 8, "text": ["This only works with processing Geometry, not with fields."], "extent": [4185, 4253]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Primary Input"], "extent": [4253, 4268], "body": [{"type": "para", "indent": 4, "text": ["Controls which input gets the original version of the solved data.\n    By default this is \"data\"."], "extent": [4268, 4371]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [4371, 4381], "body": [{"type": "para", "indent": 8, "text": ["If you try to load this data using an ", {"scheme": "Node", "value": "/nodes/sop/object_merge", "type": "link", "text": ["Object Merge"], "fullpath": "/nodes/sop/object_merge"}, " or ", {"scheme": "Node", "value": "/nodes/sop/dopimport", "type": "link", "text": ["DOP Import"], "fullpath": "/nodes/sop/dopimport"}, ", you will get an empty geometry as it has been removed from\n        the DOP simulation so it can be solved in place."], "extent": [4381, 4617]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Num Extra Inputs"], "extent": [4617, 4635], "body": [{"type": "para", "indent": 4, "text": ["It is possible to bind additional inputs to the invoked compile\n    block.  If the compile block has a named input matching one of these,\n    it will gain the corresponding geometry when invoked.  The normal\n    rules to transform DOP Data into Geometry are performed, so Scalar\n    Fields will be imported as Volumes, etc."], "extent": [4635, 4964]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Input Name"], "extent": [4964, 4980], "body": [{"type": "para", "indent": 8, "text": ["The name of the input to bind to.  The compile block begin with the matching name will be wired to this data."], "extent": [4980, 5099]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Source"], "extent": [5099, 5111], "body": [{"type": "para", "indent": 8, "text": ["Where to gain the geometry from."], "extent": [5111, 5161]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["This Object\u2019s Data"], "extent": [5161, 5189], "body": [{"type": "para", "indent": 16, "text": ["Data attached to the currently solved object will be used."], "extent": [5189, 5281]}, {"type": "note_group", "body": [{"type": "note", "indent": 16, "role": "item", "extent": [5281, 5303], "body": [{"type": "para", "indent": 20, "text": ["You cannot refer to the data being currently solved as it is being solved in-place.  Specifically, the data specified by the Data Name parameter and any extra output is not available."], "extent": [5303, 5528]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 8, "text": ["Object\u2019s Data"], "extent": [5528, 5551], "body": [{"type": "para", "indent": 16, "text": ["Data attached to another object in the simulation."], "extent": [5551, 5635]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Relationship\u2019s Data (Packed)"], "extent": [5635, 5673], "body": [{"type": "para", "indent": 16, "text": ["A relationship defines a link between this object and many other objects.  This brings in all the other objects that match that relationship.  The resulting         geometry consists of many packed primitives, one per object, that contain the respective data."], "extent": [5673, 5950]}, {"type": "para", "indent": 12, "text": ["Additional primitive attributes are present on each packed\n            primitive to describe the object"], "extent": [5950, 6067]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": [{"type": "code", "text": ["objid"]}], "extent": [6067, 6088], "body": [{"type": "para", "indent": 16, "text": ["Unique integer id of the object."], "extent": [6088, 6137]}], "container": true}, {"type": "dt", "indent": 12, "text": [{"type": "code", "text": ["objname"]}], "extent": [6137, 6160], "body": [{"type": "para", "indent": 16, "text": ["The name of the object, note DOPs allows duplicate names."], "extent": [6160, 6234]}], "container": true}, {"type": "dt", "indent": 12, "text": [{"type": "code", "text": ["bounce"]}], "extent": [6234, 6256], "body": [{"type": "para", "indent": 16, "text": ["The Bounce Physical Parameter."], "extent": [6256, 6303]}], "container": true}, {"type": "dt", "indent": 12, "text": [{"type": "code", "text": ["bounceforward"]}], "extent": [6303, 6332], "body": [{"type": "para", "indent": 16, "text": ["The Bounce Forward Physical Parameter."], "extent": [6332, 6387]}], "container": true}, {"type": "dt", "indent": 12, "text": [{"type": "code", "text": ["friction"]}], "extent": [6387, 6411], "body": [{"type": "para", "indent": 16, "text": ["The Friction Physical Parameter."], "extent": [6411, 6460]}], "container": true}, {"type": "dt", "indent": 12, "text": [{"type": "code", "text": ["dynamicfriction"]}], "extent": [6460, 6491], "body": [{"type": "para", "indent": 16, "text": ["The Dynamic Friction Physical Parameter."], "extent": [6491, 6548]}], "container": true}, {"type": "dt", "indent": 12, "text": [{"type": "code", "text": ["temperature"]}], "extent": [6548, 6575], "body": [{"type": "para", "indent": 16, "text": ["The Temperature Physical Parameter."], "extent": [6575, 6627]}], "container": true}, {"type": "dt", "indent": 12, "text": [{"type": "code", "text": ["pscale"]}], "extent": [6627, 6649], "body": [{"type": "para", "indent": 16, "text": ["The Thickness of the Surface Collision Parameter."], "extent": [6649, 6716]}], "container": true}], "container": true}], "container": true}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["Solve Metadata"], "extent": [6716, 6736], "body": [{"type": "para", "indent": 8, "text": ["An empty geometry with detail attributes that provide the current status of the solver.\n        This geometry will also contain the variables defined in ", {"type": "ui", "text": ["Stamps"]}, "."], "extent": [6736, 6918]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": [{"type": "code", "text": ["simtime"]}], "extent": [6918, 6937], "body": [{"type": "para", "indent": 12, "text": ["Current simulation time."], "extent": [6937, 6974]}], "container": true}, {"type": "dt", "indent": 8, "text": [{"type": "code", "text": ["startsimtime"]}], "extent": [6974, 6998], "body": [{"type": "para", "indent": 12, "text": ["Simulation time of the start of the current solve step."], "extent": [6998, 7066]}], "container": true}, {"type": "dt", "indent": 8, "text": [{"type": "code", "text": ["endsimtime"]}], "extent": [7066, 7088], "body": [{"type": "para", "indent": 12, "text": ["Simulation time of the end of the current solve step."], "extent": [7088, 7154]}], "container": true}, {"type": "dt", "indent": 8, "text": [{"type": "code", "text": ["time"]}], "extent": [7154, 7170], "body": [{"type": "para", "indent": 12, "text": ["Current Houdini time."], "extent": [7170, 7204]}], "container": true}, {"type": "dt", "indent": 8, "text": [{"type": "code", "text": ["timestep"]}], "extent": [7204, 7224], "body": [{"type": "para", "indent": 12, "text": ["Duration of current solve step."], "extent": [7224, 7268]}], "container": true}, {"type": "dt", "indent": 8, "text": [{"type": "code", "text": ["objid"]}], "extent": [7268, 7285], "body": [{"type": "para", "indent": 12, "text": ["Unique object id of object currently being solved\n            by this sop solver.  This doesn\u2019t exist when\n            solving relationships."], "extent": [7285, 7439]}], "container": true}, {"type": "dt", "indent": 8, "text": [{"type": "code", "text": ["objname"]}], "extent": [7439, 7458], "body": [{"type": "para", "indent": 12, "text": ["Current name of the solving object.  May be duplicate\n            in DOPs.  Will be present for relationships."], "extent": [7458, 7581]}], "container": true}, {"type": "dt", "indent": 8, "text": [{"type": "code", "text": ["dopnet"]}], "extent": [7581, 7599], "body": [{"type": "para", "indent": 12, "text": ["Path of the DOP network currently solving."], "extent": [7599, 7654]}], "container": true}, {"type": "dt", "indent": 8, "text": [{"type": "code", "text": ["datapath"]}], "extent": [7654, 7674], "body": [{"type": "para", "indent": 12, "text": ["Full path to geometry this sop solver is being\n            asked to process."], "extent": [7674, 7763]}], "container": true}, {"type": "dt", "indent": 8, "text": [{"type": "code", "text": ["dataname"]}], "extent": [7763, 7783], "body": [{"type": "para", "indent": 12, "text": ["Name of the data this sop solver is being\n            asked to process."], "extent": [7783, 7880]}], "container": true}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["Object Name"], "extent": [7880, 7897], "body": [{"type": "para", "indent": 8, "text": ["Which object to fetch data from."], "extent": [7897, 7938]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Relationship"], "extent": [7938, 7956], "body": [{"type": "para", "indent": 8, "text": ["The relationship to use to determine which objects to fetch."], "extent": [7956, 8025]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Collider Labels"], "extent": [8025, 8046], "body": [{"type": "para", "indent": 8, "text": ["Objects can have a collider label to provide a hint of how the\n        user wants them to be used by various solvers.  The Use Solver\n        Default, Use Volume Collisions and Use Surface Collisions options\n        of the Static Object are such an example.  This lets you filter\n        the objects found in a relationship collision by a label in addition\n        to by the relationship type."], "extent": [8046, 8448]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Data Name"], "extent": [8448, 8463], "body": [{"type": "para", "indent": 8, "text": ["What data on the object to acquire and convert to geometry."], "extent": [8463, 8531]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Fetch Time"], "extent": [8531, 8547], "body": [{"type": "para", "indent": 8, "text": ["When to fetch the data.  A SOP Solver solves a window of\n        time, so it may be necessary to get the data either at\n        the start or end of that window."], "extent": [8547, 8717]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Num Extra Outputs"], "extent": [8717, 8736], "body": [{"type": "para", "indent": 4, "text": ["It is possible to define a compiled sop network with more than\n    one output node.  This is done with the Primary Path.  In order\n    to process multiple geometry in-place, these extra outputs can\n    be specified here."], "extent": [8736, 8962]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Input Name"], "extent": [8962, 8978], "body": [{"type": "para", "indent": 8, "text": ["The name of the Block Begin Compile SOP that will receive\n        the original version of this geometry."], "extent": [8978, 9091]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Data Name"], "extent": [9091, 9106], "body": [{"type": "para", "indent": 8, "text": ["The data on this object to solve with this output."], "extent": [9106, 9165]}], "container": true}, {"type": "dt", "indent": 4, "text": ["SOP Path"], "extent": [9165, 9179], "body": [{"type": "para", "indent": 8, "text": ["The path to the compile end node whose results will replace\n        the data.  Note this is relative to this node, so often\n        can simply be the name of the node."], "extent": [9179, 9356]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["SOP Output is in Simulation Space"], "extent": [9356, 9391], "body": [{"type": "para", "indent": 4, "text": ["When extracting the geometry from the SOP at each timestep,\n    turning on this parameter will cause the SOP Solver to transform\n    the geometry from world space to local object space. "], "extent": [9391, 9587]}, {"type": "para", "indent": 4, "text": ["NOTE:\n    When data is pulled into SOP using the ", {"scheme": "Node", "value": "/nodes/sop/object_merge", "type": "link", "text": ["Object Merge\n    SOP"], "fullpath": "/nodes/sop/object_merge"}, ", it is extracted into world space, so\n    this option will often need to be turned on. Alternatively a DOP\n    Transform SOP can be used at the SOP level to change the geometry\n    from one space to another, rather than using this option."], "extent": [9587, 9925]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Solve Objects on Creation Frame"], "extent": [9925, 9958], "body": [{"type": "para", "indent": 4, "text": ["Causes the SOP Solver to operate on an object even on the frame\n    in which the object enters the simulation. "], "extent": [9958, 10079]}, {"type": "para", "indent": 4, "text": ["If you want to bring an object into a simulation and not modify it on the initial frame, turn this option off."], "extent": [10079, 10195]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stamps"], "extent": [10195, 10203], "body": [{"type": "para", "indent": 4, "text": ["Extra variables can be stamped here and accessed from within the SOP network\n    with ", {"type": "code", "text": ["stamp"]}, " expressions. For example, if you stamp a variable called ", {"type": "code", "text": ["FOO"]}, ",\n    its value can be queried with ", {"type": "code", "text": ["stamp(\"..\", \"FOO\", -1)"]}, " for a ", {"type": "ui", "text": ["Float"]}, "\n    variable or ", {"type": "code", "text": ["stamps(\"..\", \"FOO\", \"\")"]}, " if the variable is of type ", {"type": "ui", "text": ["String"]}, "."], "extent": [10203, 10522]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [10522, 10532], "body": [{"type": "para", "indent": 8, "text": ["When used with compiled blocks, these variables are added to the extra\n        ", {"type": "ui", "text": ["Solve Metadata"]}, " input as detail attributes."], "extent": [10532, 10667]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Variable Name"], "extent": [10667, 10682], "body": [{"type": "para", "indent": 4, "text": ["Name of the variable to stamp; this is the identifier that would be used as\n    the second argument in a ", {"type": "code", "text": ["stamp"]}, " or ", {"type": "code", "text": ["stamps"]}, " expression."], "extent": [10682, 10824]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Variable Type"], "extent": [10824, 10839], "body": [{"type": "para", "indent": 4, "text": ["Type of the variable to stamp. ", {"type": "ui", "text": ["Float"]}, " refers to a numeric value, and can\n    be accessed using the ", {"type": "code", "text": ["stamp"]}, " expression function. ", {"type": "ui", "text": ["String"]}, " variables can\n    hold an arbitrary string of characters, and can be accessed using the\n    ", {"type": "code", "text": ["stamps"]}, " expression function."], "extent": [10839, 11108]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Float Value"], "extent": [11108, 11121], "body": [{"type": "para", "indent": 4, "text": ["The value to assign to the numeric variable. This value will be returned by\n    a relevant ", {"type": "code", "text": ["stamp"]}, " expression from within the SOP network."], "extent": [11121, 11265]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["String Value"], "extent": [11265, 11279], "body": [{"type": "para", "indent": 4, "text": ["The value to assign to a string variable. This value will be returned by a\n    relevant ", {"type": "code", "text": ["stamps"]}, " expression from within the SOP network."], "extent": [11279, 11421]}], "container": true, "role": "item"}, {"body": [{"indent": 4, "type": "para", "extent": [38, 142], "text": ["Each data option parameter has an associated menu which specifies\n    how that parameter operates."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [160, 215], "text": ["Use the value from the Default Operation menu."]}], "indent": 4, "text": ["Use Default "], "extent": [142, 160], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [233, 479], "text": ["Set the value of this parameter only when this data is created.\n        On all subsequent timesteps, the value of this parameter is not\n        altered. This is useful for setting up initial conditions like\n        position and velocity."]}], "indent": 4, "text": ["Set Initial "], "extent": [215, 233], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [496, 823], "text": ["Always set the value of this parameter. This is useful when\n        specific keyframed values are required over time. This could be\n        used to keyframe the position of an object over time, or to\n        cause the geometry from a SOP to be refetched at each timestep\n        if the geometry is deforming. "]}, {"indent": 8, "type": "para", "extent": [823, 1119], "text": ["You can also use this setting in\n        conjunction with the local variables for a parameter value to\n        modify a value over time. For example, in the X Position, an\n        expression like ", {"text": ["$tx + 0.1"], "type": "code"}, " would cause the object to\n        move 0.1 units to the right on each timestep."]}], "indent": 4, "text": ["Set Always "], "extent": [479, 496], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [1135, 1333], "text": ["Do not ever set the value of this parameter. This option is most\n        useful when using this node to modify an existing piece of data\n        connected through the first input. "]}, {"indent": 8, "type": "para", "extent": [1333, 1608], "text": ["For example, an ", {"text": ["RBD State\n        DOP"], "fullpath": "/nodes/dop/rbdstate", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdstate"}, " may want to animate just the mass of an\n        object, and nothing else. The ", {"text": ["Set Never"], "type": "ui"}, " option could be used\n        on all parameters except for ", {"text": ["Mass"], "type": "ui"}, ", which would use ", {"text": ["Set\n        Always"], "type": "ui"}, "."]}], "indent": 4, "text": ["Set Never "], "extent": [1119, 1135], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Parameter Operations"], "extent": [16, 38], "container": true, "type": "parameters_item", "role": "item"}, {"body": [{"indent": 4, "type": "para", "extent": [1627, 1762], "text": ["For any parameters with their ", {"text": ["Operation"], "type": "ui"}, " menu set to ", {"text": ["Use\n    Default"], "type": "ui"}, ", this parameter controls what operation is used. "]}, {"indent": 4, "type": "para", "extent": [1762, 1908], "text": ["This\n    parameter has the same menu options and meanings as the ", {"text": ["Parameter\n    Operations"], "type": "ui"}, " menus, but without the ", {"text": ["Use Default"], "type": "ui"}, " choice."]}], "indent": 0, "text": ["Default Operation"], "extent": [1608, 1627], "container": true, "type": "parameters_item", "role": "item"}, {"body": [{"indent": 4, "type": "para", "extent": [46, 139], "text": ["All objects connected to the first input of this node become mutual\n    affectors. "]}, {"indent": 4, "type": "para", "extent": [139, 412], "text": ["This is equivalent to using an ", {"text": ["Affector\n    DOP"], "fullpath": "/nodes/dop/affector", "scheme": "Node", "type": "link", "value": "/nodes/dop/affector"}, " to create an affector relationship between\n    ", {"text": ["*"], "type": "code"}, " and ", {"text": ["*"], "type": "code"}, " before connecting it to this node. This option makes it\n    convenient to have all objects feeding into a solver node affect\n    each other."]}], "indent": 0, "text": ["Make Objects Mutual Affectors"], "extent": [15, 46], "container": true, "type": "parameters_item", "role": "item"}, {"body": [{"indent": 4, "type": "para", "extent": [45, 219], "text": ["When an object connector is attached to the first input of this\n    node, this parameter can be used to choose a subset of those objects\n    to be affected by this node."]}], "indent": 0, "text": ["Group"], "attrs": {"channels": "/group"}, "extent": [15, 22], "container": true, "type": "parameters_item", "role": "item"}, {"body": [{"indent": 4, "type": "para", "extent": [26, 227], "text": ["Indicates the name that should be used to attach the data to an\n    object or other piece of data. If the Data Name contains a \"/\" (or\n    several), that indicates traversing inside subdata. "]}, {"indent": 4, "type": "para", "extent": [227, 530], "text": ["For example, if the ", {"text": ["Fan Force DOP"], "fullpath": "/nodes/dop/fan", "scheme": "Node", "type": "link", "value": "/nodes/dop/fan"}, " has the default Data Name\n    \"Forces/Fan\". This attaches the data with the name \"Fan\" to an\n    existing piece of data named \"Forces\". If no data named \"Forces\"\n    exists, a simple piece of container data is created to hold the\n    \"Fan\" subdata."]}, {"indent": 4, "type": "para", "extent": [530, 833], "text": ["Different pieces of data have different requirements on what names\n    should be used for them. Except in very rare situations, the default\n    value should be used. Some exceptions are described with particular\n    pieces of data or with solvers that make use of some particular type\n    of data."]}], "indent": 0, "text": ["Data Name"], "extent": [15, 26], "container": true, "type": "parameters_item", "role": "item"}, {"body": [{"indent": 4, "type": "para", "extent": [851, 1058], "text": ["Turning on this parameter modifies the ", {"text": ["Data Name"], "type": "ui"}, " parameter\n    value to ensure that the data created by this node is attached with\n    a unique name so it will not overwrite any existing data. "]}, {"indent": 4, "type": "para", "extent": [1058, 1271], "text": ["With this\n    parameter turned off, attaching two pieces of data with the same\n    name will cause the second one to replace the first. There are\n    situations where each type of behavior is desirable. "]}, {"indent": 4, "type": "para", "extent": [1271, 1585], "text": ["If an object\n    needs to have several ", {"text": ["Fan Forces"], "fullpath": "/nodes/dop/fan", "scheme": "Node", "type": "link", "value": "/nodes/dop/fan"}, " blowing on it, it is\n    much easier to use the ", {"text": ["Unique Data Name"], "type": "ui"}, " feature to ensure that\n    each fan does not overwrite a previous fan rather than trying to\n    change the ", {"text": ["Data Name"], "type": "ui"}, " of each fan individually to avoid\n    conflicts. "]}, {"indent": 4, "type": "para", "extent": [1585, 1827], "text": ["On the other hand, if an object is known to have ", {"text": ["RBD\n    State"], "fullpath": "/nodes/dop/rbdstate", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdstate"}, " data already attached to it, leaving this\n    option turned off will allow some new ", {"text": ["RBD State"], "fullpath": "/nodes/dop/rbdstate", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdstate"}, "\n    data to overwrite the existing data."]}], "indent": 0, "text": ["Unique Data Name"], "extent": [833, 851], "container": true, "type": "parameters_item", "role": "item"}, {"body": [{"indent": 4, "type": "para", "extent": [178, 731], "text": ["The default behavior for solvers is to attach the exact same solver to all\n    of the objects specified in the group.  This allows the objects to be\n    processed in a single pass by the solver, since the parameters are identical\n    for each object.  However, some objects operate more logically on a single\n    object at a time.  In these cases, one may want to use ", {"text": ["$OBJID"], "type": "code"}, " expressions\n    to vary the solver parameters across the objects.  Setting this toggle will\n    create a separate solver per object, allowing ", {"text": ["$OBJID"], "type": "code"}, " to vary as expected."]}], "indent": 0, "text": ["Solver Per Object"], "extent": [159, 178], "container": true, "type": "parameters_item", "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [11454, 11462], "body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [27, 184], "text": ["Any microsolvers wired into these inputs will be executed prior to this node executing.  The chain of nodes will thus be processed in a top-down manner."]}], "indent": 0, "text": ["All Inputs"], "extent": [15, 27], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "text": "Inputs"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [11505, 11514], "body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [29, 296], "text": ["The operation of this output depends on what inputs are connected\n    to this node. If an object stream is input to this node, the output\n    is also an object stream containing the same objects as the input\n    (but with the data from this node attached). "]}, {"indent": 4, "type": "para", "extent": [296, 606], "text": ["If no object stream is\n    connected to this node, the output is a data output. This data\n    output can be connected to an ", {"text": ["Apply Data DOP"], "fullpath": "/nodes/dop/applydata", "scheme": "Node", "type": "link", "value": "/nodes/dop/applydata"}, ",\n    or connected directly to a data input of another data node, to\n    attach the data from this node to an object or another piece of\n    data."]}], "indent": 0, "text": ["First Output"], "extent": [15, 29], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "text": "Outputs"}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [11551, 11559], "body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [29, 325], "text": ["This DOP node defines a local variable for each channel and\n    parameter on the Data Options page, with the same name as the\n    channel. So for example, the node may have channels for Position\n    (positionx, positiony, positionz) and a parameter for an object name\n    (objectname). "]}, {"indent": 4, "type": "para", "extent": [325, 519], "text": ["Then there will also be local variables with the names\n    positionx, positiony, positionz, and objectname. These variables\n    will evaluate to the previous value for that parameter. "]}, {"indent": 4, "type": "para", "extent": [519, 692], "text": ["This previous value is always stored as part of the data attached to the\n    object being processed. This is essentially a shortcut for a\n    dopfield expression like:"]}, {"lang": null, "indent": 4, "type": "pre", "extent": [692, 775], "text": ["\n    dopfield($DOPNET, $OBJID, dataName, \"Options\", 0, channelname)\n    "]}, {"indent": 4, "type": "para", "extent": [775, 883], "text": ["If the data does not already exist, then a value of zero or an\n    empty string will be returned."]}], "indent": 0, "text": ["channelname"], "extent": [16, 29], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [891, 1132], "text": ["This value is the simulation time (see variable ST) at which the\n    current data was created. This value may not be the same as the\n    current simulation time if this node is modifying existing data,\n    rather than creating new data."]}], "indent": 0, "text": ["DATACT"], "extent": [883, 891], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [1140, 1383], "text": ["This value is the simulation frame (see variable SF) at which the\n    current data was created. This value may not be the same as the\n    current simulation frame if this node is modifying existing data,\n    rather than creating new data."]}], "indent": 0, "text": ["DATACF"], "extent": [1132, 1140], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [1392, 1594], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"indent": 4, "type": "para", "extent": [1594, 1712], "text": ["In this case, this value is set to the\n    name of the relationship the data to which the data is being attached."]}], "indent": 0, "text": ["RELNAME"], "extent": [1383, 1392], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [1723, 1925], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"indent": 4, "type": "para", "extent": [1925, 2128], "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affected Objects of the relationship to which the data is being\n    attached."]}], "indent": 0, "text": ["RELOBJIDS"], "extent": [1712, 1723], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [2141, 2343], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"indent": 4, "type": "para", "extent": [2343, 2528], "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affected\n    Objects of the relationship to which the data is being attached."]}], "indent": 0, "text": ["RELOBJNAMES"], "extent": [2128, 2141], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [2542, 2744], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"indent": 4, "type": "para", "extent": [2744, 2947], "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affector Objects of the relationship to which the data is being\n    attached."]}], "indent": 0, "text": ["RELAFFOBJIDS"], "extent": [2528, 2542], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [2963, 3165], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"indent": 4, "type": "para", "extent": [3165, 3350], "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affector\n    Objects of the relationship to which the data is being attached."]}], "indent": 0, "text": ["RELAFFOBJNAMES"], "extent": [2947, 2963], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [20, 107], "text": ["This value is the simulation time for which the node is being\n    evaluated. "]}, {"indent": 4, "type": "para", "extent": [107, 326], "text": ["This value may not be equal to the current Houdini time\n    represented by the variable T, depending on the settings of the ", {"text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet", "scheme": "Node", "type": "link", "value": "/nodes/obj/dopnet"}, " ", {"text": ["Offset Time"], "type": "ui"}, " and ", {"text": ["Time Scale"], "type": "ui"}, "\n    parameters. "]}, {"indent": 4, "type": "para", "extent": [326, 555], "text": ["This value is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"text": ["$ST == 0"], "type": "code"}, " rather than\n    ", {"text": ["$T == 0"], "type": "code"}, " or ", {"text": ["$FF == 1"], "type": "code"}, "."]}], "indent": 0, "text": ["ST"], "extent": [16, 20], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [559, 700], "text": ["This value is the simulation frame (or more accurately, the\n    simulation time step number) for which the node is being evaluated."]}, {"indent": 4, "type": "para", "extent": [700, 999], "text": ["This value may not be equal to the current Houdini frame number\n    represented by the variable F, depending on the settings of the ", {"text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet", "scheme": "Node", "type": "link", "value": "/nodes/obj/dopnet"}, " parameters. Instead, this value is equal to\n    the simulation time (ST) divided by the simulation timestep size\n    (TIMESTEP)."]}], "indent": 0, "text": ["SF"], "extent": [555, 559], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [1009, 1181], "text": ["This value is the size of a simulation timestep. This value is\n    useful to scale values that are expressed in units per second, but\n    are applied on each timestep."]}], "indent": 0, "text": ["TIMESTEP"], "extent": [999, 1009], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [1187, 1305], "text": ["This value is the inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."]}], "indent": 0, "text": ["SFPS"], "extent": [1181, 1187], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [1312, 1523], "text": ["This is the number of objects in the simulation. For nodes that\n    create objects such as the ", {"text": ["Empty Object"], "fullpath": "/nodes/dop/emptyobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/emptyobject"}, " node,\n    this value will increase for each object that is evaluated. "]}, {"indent": 4, "type": "para", "extent": [1523, 1621], "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"text": ["object_$SNOBJ"], "type": "code"}, "."]}], "indent": 0, "text": ["SNOBJ"], "extent": [1305, 1312], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [1627, 1859], "text": ["This value is the number of objects that will be evaluated by the\n    current node during this timestep. This value will often be\n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "]}, {"indent": 4, "type": "para", "extent": [1859, 1991], "text": ["This value may return 0 if the node does not\n    process each object sequentially (such as the ", {"text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "indent": 0, "text": ["NOBJ"], "extent": [1621, 1627], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [1996, 2322], "text": ["This value is the index of the specific object being processed by\n    the node. This value will always run from zero to NOBJ-1 in a given\n    timestep. This value does not identify the current object within the\n    simulation like OBJID or OBJNAME, just the object\u2019s position in the\n    current order of processing. "]}, {"indent": 4, "type": "para", "extent": [2322, 2616], "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    will be -1 if the node does not process objects sequentially (such\n    as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "indent": 0, "text": ["OBJ"], "extent": [1991, 1996], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [2623, 2883], "text": ["This is the unique object identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. "]}, {"indent": 4, "type": "para", "extent": [2883, 3168], "text": ["The object identifier\n    can always be used to uniquely identify a given object. This makes\n    this variable very useful in situations where each object needs to\n    be treated differently. It can be used to produce a unique random\n    number for each object, for example. "]}, {"indent": 4, "type": "para", "extent": [3168, 3406], "text": ["This value is also the best way\n    to look up information on an object using the dopfield expression\n    function. This value will be -1 if the node does not process objects\n    sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "indent": 0, "text": ["OBJID"], "extent": [2616, 2623], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [3417, 3556], "text": ["This string contains a space separated list of the unique object\n    identifiers for every object being processed by the current node."]}], "indent": 0, "text": ["ALLOBJIDS"], "extent": [3406, 3417], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [3569, 3687], "text": ["This string contains a space separated list of the names of every\n    object being processed by the current node."]}], "indent": 0, "text": ["ALLOBJNAMES"], "extent": [3556, 3569], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [3694, 3801], "text": ["This value is the simulation time (see variable ST) at which the\n    current object was created. "]}, {"indent": 4, "type": "para", "extent": [3801, 4057], "text": ["Therefore, to check if an object was created\n    on the current timestep, the expression ", {"text": ["$ST == $OBJCT"], "type": "code"}, " should\n    always be used. This value will be zero if the node does not process\n    objects sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "indent": 0, "text": ["OBJCT"], "extent": [3687, 3694], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [4064, 4172], "text": ["This value is the simulation frame (see variable SF) at which the\n    current object was created. "]}, {"indent": 4, "type": "para", "extent": [4172, 4389], "text": ["This value is equivalent to using the\n    dopsttoframe expression on the OBJCT variable. This value will be\n    zero if the node does not process objects sequentially (such as the\n    ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "indent": 0, "text": ["OBJCF"], "extent": [4057, 4064], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [4398, 4486], "text": ["This is a string value containing the name of the object being\n    processed. "]}, {"indent": 4, "type": "para", "extent": [4486, 4748], "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "]}, {"indent": 4, "type": "para", "extent": [4748, 5194], "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named \"myobject\",\n    specifying ", {"text": ["strcmp($OBJNAME, \"myobject\") == 0"], "type": "code"}, " in the activation field\n    of a DOP will cause that DOP to operate only on those 20 objects. This\n    value will be the empty string if the node does not process objects\n    sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "indent": 0, "text": ["OBJNAME"], "extent": [4389, 4398], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [5202, 5425], "text": ["This is a string value containing the full path of the current DOP\n    Network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP Network that contains the\n    node."]}], "indent": 0, "text": ["DOPNET"], "extent": [5194, 5202], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [5431, 5620], "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"text": ["Position node"], "fullpath": "/nodes/dop/position", "scheme": "Node", "type": "link", "value": "/nodes/dop/position"}, ",\n    you could write the expression:"]}, {"lang": null, "indent": 4, "type": "pre", "extent": [5620, 5650], "text": ["\n    $tx + 0.1\n    "]}, {"indent": 4, "type": "para", "extent": [5650, 5730], "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."]}], "indent": 0, "role": "item", "extent": [5425, 5431], "container": true, "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}], "text": "Locals"}], "title": ["SOP Solver"], "included": ["/nodes/dop/standard_data_locals", "/nodes/dop/standard_data_outputs", "/nodes/dop/standard_datagroup_parms", "/nodes/dop/standard_dataname_parms", "/nodes/dop/standard_dataop_parms", "/nodes/dop/standard_locals", "/nodes/dop/standard_microsolver_inputs", "/nodes/dop/standard_solver_mutualparms", "/nodes/dop/standard_solver_parms"]}