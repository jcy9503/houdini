{"body": [{"indent": 0, "text": ["Fluid Solver"], "type": "title", "extent": [84, 101], "level": 0}, {"indent": 0, "type": "summary", "extent": [101, 146], "text": ["Sets and configures a Fluid solver. "]}, {"indent": 0, "type": "para", "extent": [146, 215], "text": ["The Fluid Solver DOP sets objects to use the Fluid Dynamics solver."]}, {"indent": 0, "type": "para", "extent": [215, 308], "text": ["If an object has this DOP as its \"Solver\" subdata, it will evolve\nitself as a Fluid object."]}, {"indent": 0, "type": "para", "extent": [308, 560], "text": ["This solver makes use of various field subdata on the object. The\nobject should have a scalar field \"surface\" to track the surface of the\nfluid in space. The object should have a vector field called \"vel\" to\ntrack the velocity of each point in space."]}, {"indent": 0, "type": "para", "extent": [560, 676], "text": ["To setup an object with the requisite subdata, use the ", {"text": ["Fluid Configure\nObject DOP"], "fullpath": "/nodes/dop/fluidconfigureobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/fluidconfigureobject"}, "."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [681, 1062], "text": ["If you have a problem where your fluid appears to be disappearing from your simulation you could try and turn off the build outside markers, as they delete fluid. Also, setting the marker escape threshold to 0 will help to keep fluid inside. If you have a water streamer that is less than a few voxels in size, you might finds it keeps disappearing from the fluid simulation."]}], "indent": 0, "role": "item", "extent": [676, 681], "container": true, "type": "tip"}, {"body": [{"indent": 4, "type": "para", "extent": [1067, 1318], "text": ["If you are sourcing from an object that deforms, or collides with a deforming object, the solver will not pay attention to the per-point deformation. You need to set the ", {"text": ["Velocity Type"], "type": "ui"}, " to ", {"text": ["Point Velocity"], "type": "ui"}, " on the ", {"text": ["Fields \u25b8 Sources"], "type": "ui"}, " subtab."]}], "indent": 0, "role": "item", "extent": [1062, 1067], "container": true, "type": "tip"}], "container": true, "role": "item_group", "type": "tip_group"}, {"body": [{"body": [{"body": [{"body": [{"indent": 12, "type": "para", "extent": [1377, 1569], "text": ["While the Fluid Solver tries to estimate the correct\n            substep size for a stable simulation, if unusual forces are\n            present it may take too large of a step. "]}, {"indent": 12, "type": "para", "extent": [1569, 1651], "text": ["By setting the\n            minimum substep one can enforce stability."]}], "indent": 8, "text": ["Minimum Substeps"], "role": "item", "extent": [1350, 1377], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [1677, 1785], "text": ["The Fluid Solver will not break the simulation down into\n            more substeps than this. "]}, {"indent": 12, "type": "para", "extent": [1785, 2035], "text": ["It is a very good idea to always\n            have a maximum to ensure frames will be finished regardless\n            of their complexity. Lowering this ceiling can ensure a\n            minimum computation time at the expense of accuracy."]}], "indent": 8, "text": ["Maximum Substeps"], "role": "item", "extent": [1651, 1677], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [2058, 2185], "text": ["The CFL Condition is a factor used for automatically\n            determining what size substep a scene requires. "]}, {"indent": 12, "type": "para", "extent": [2185, 2578], "text": ["The idea is\n            that any substep should not allow any objects to\n            interpenetrate by more than one voxel cell. This condition\n            is met when this parameter is at 1. A value of 10 would\n            allow a substep to move the fluid by as much as 10 voxel\n            cells, possibly tunneling through objects rather than\n            properly deflecting."]}], "indent": 8, "text": ["CFL Condition"], "role": "item", "extent": [2035, 2058], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [2602, 2837], "text": ["The type of advection to use.  The ", {"text": ["Single Stage"], "type": "ui"}, " method is equivalent to the ", {"text": ["Gas Advect DOP"], "fullpath": "/nodes/dop/gasadvect", "scheme": "Node", "type": "link", "value": "/nodes/dop/gasadvect"}, ", where each point is back traced\n            through the velocity field once to find the new voxel value."]}, {"indent": 12, "type": "para", "extent": [2837, 3150], "text": ["The ", {"text": ["BFECC"], "type": "ui"}, " and ", {"text": ["Modified MacCormack"], "type": "ui"}, " methods do a second basic\n            advection stage to compute an estimate of the error introduced by the\n            advection process.  The field can then be corrected by this error,\n            resulting in a sharper fluid that doesn\u2019t disperse as much."]}], "indent": 8, "text": ["Advection Type"], "role": "item", "extent": [2578, 2602], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [3172, 3458], "text": ["The error correction factor can result in the new voxel values lying\n            outside the range of the original field, resulting in negative density\n            values, for example.  Clamping will enforce a global maximum and\n            minimum to the original values."]}], "indent": 8, "text": ["Clamp Values"], "role": "item", "extent": [3150, 3172], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [3483, 3758], "text": ["The advection type of the velocity field can be controlled separately from\n            the base fields.  Using the higher advection methods will reduce the\n            apparent viscosity of the field, but may end up adding energy or causing\n            chatter."]}], "indent": 8, "text": ["Advect Vel Type"], "role": "item", "extent": [3458, 3483], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [3784, 3836], "text": ["Controls particle tracing."]}, {"body": [{"body": [{"indent": 16, "type": "para", "extent": [3861, 4157], "text": ["Takes the velocity at each voxel and makes a single step in\n                that direction for the time step.  This is fastest and is\n                independent of the speed of the velocity field, but will start\n                to break up for large time steps."]}], "indent": 12, "text": ["Single step"], "extent": [3836, 3861], "container": true, "type": "dt"}, {"body": [{"indent": 16, "type": "para", "extent": [4176, 4369], "text": ["Ensures the backtracking does not move more than a single\n                voxel before its velocity is updated, allowing for larger\n                time steps."]}], "indent": 12, "text": ["Trace"], "extent": [4157, 4176], "container": true, "type": "dt"}, {"body": [{"indent": 16, "type": "para", "extent": [4391, 4514], "text": ["Like ", {"text": ["Trace"], "type": "ui"}, " but uses a higher order advection for more accuracy\n                but slower simulation."]}], "indent": 12, "text": ["Midpoint"], "extent": [4369, 4391], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 8, "text": ["Advection Method"], "role": "item", "extent": [3758, 3784], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 4, "level": 2, "text": ["Substeps"], "extent": [1330, 1350], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 12, "type": "para", "extent": [4560, 4677], "text": ["Viscosity is a force which tries to ensure that\n            neighboring voxels have the same velocity. "]}, {"indent": 12, "type": "para", "extent": [4677, 5018], "text": ["A zero value\n            allows fluid in adjacent voxels to move any direction\n            without resistance. Higher values introduce a penalty effect\n            when a voxel\u2019s velocity varies from that of its neighbors.\n            This is currently implemented by applying a diffusive term\n            to the velocity field."]}], "indent": 8, "text": ["Viscosity"], "role": "item", "extent": [4540, 4560], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [5038, 5194], "text": ["An additional Strain Field will be added to track the\n            amount of deformation that any part of the fluid has\n            undergone. "]}, {"indent": 12, "type": "para", "extent": [5194, 5299], "text": ["This can be used to provide a restorative force\n            to create a visco-elastic fluid."]}], "indent": 8, "text": ["Use Strain"], "role": "item", "extent": [5018, 5038], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [5326, 5522], "text": ["This is the rate of plastic flow. The current strain is\n            dissipated at this rate per second. A value greater than the\n            timestep per second can lead to overshoot."]}], "indent": 8, "text": ["Plastic Flow Rate"], "role": "item", "extent": [5299, 5326], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [5554, 5745], "text": ["This is the threshold for plastic flow. When the norm of\n            the strain exceeds this threshold, the strain is dissipated\n            according to the plastic flow term. "]}, {"indent": 12, "type": "para", "extent": [5745, 5868], "text": ["This causes the fluid to\n            lose its history and permanently enter its new\n            configuration."]}], "indent": 8, "text": ["Plastic Flow Threshold"], "role": "item", "extent": [5522, 5554], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [5900, 6069], "text": ["Similar to a drag coefficient, the elastic modulus provides the scale factor for how to translate a certain amount of distortion into a restorative force. "]}, {"indent": 12, "type": "para", "extent": [6069, 6224], "text": ["A larger value will cause the fluid to spring back faster. However, large values may require more timesteps to keep the simulation stable.    "]}], "indent": 8, "text": ["Strain Elastic Modulus"], "role": "item", "extent": [5868, 5900], "container": true, "type": "parameters_item"}, {"body": [{"body": [{"body": [{"indent": 16, "type": "para", "extent": [6418, 6518], "text": ["Vorticle forces are only present if data named vorticles is attached to the object."]}], "indent": 12, "text": ["An overall scale adjustment for the vorticle forces.  Vorticle forces are small pin-wheel like forces that add turbulence to fluids. \n            NOTE"], "extent": [6254, 6418], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 8, "text": ["Confinement Strength"], "role": "item", "extent": [6224, 6254], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [6542, 6702], "text": ["A scale factor used in applying feedback forces to other\n            objects.  A value of zero prevents any feedback from\n            occurring.  "]}, {"indent": 12, "type": "para", "extent": [6702, 6855], "text": ["The value can be thought of as a density, so to\n            have a default RBD object to balance a value of 1000 should\n            be used."]}], "indent": 8, "text": ["Feedback Scale"], "role": "item", "extent": [6518, 6542], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [6876, 7175], "text": ["If set, each axis of the velocity field will be clamped to\n            this maximum speed.  This is done after the force\n            computation and before the divergence or advection, so it\n            is possible for the speed to end up slightly larger than\n            this value.  "]}, {"body": [{"body": [{"indent": 16, "type": "para", "extent": [7193, 7304], "text": ["As the clamping is done per-axis, the velocity along the diagonal can be up to sqrt(3) higher."]}], "indent": 12, "role": "item", "extent": [7175, 7193], "container": true, "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 8, "text": ["Speed Limit"], "role": "item", "extent": [6855, 6876], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [7337, 7542], "text": ["Determines if the fluid\u2019s physical parameters will be used\n            to apply friction and bounce to collisions.  If not set,\n            it will be treated as zero friction and zero bounce."]}], "indent": 8, "text": ["Use Friction and Bounce"], "role": "item", "extent": [7304, 7337], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [7568, 7759], "text": ["External forces will be scaled by an estimate of how much\n            of the cell contains liquid.  This allows for sub-voxel\n            waves to be evened out under gravity.  "]}, {"indent": 12, "type": "para", "extent": [7759, 7926], "text": ["However, it also\n            means that the edges of containers will have less gravity\n            and hence will creep upwards in an undesirable manner."]}], "indent": 8, "text": ["Scale by Surface"], "role": "item", "extent": [7542, 7568], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 4, "level": 2, "text": ["Internal Forces"], "extent": [4514, 4540], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 12, "type": "para", "extent": [7973, 8117], "text": ["The rebuilding and reinitialization of the SDF will only be performed every every N frames where N is the reinitialization rate.  "]}, {"indent": 12, "type": "para", "extent": [8117, 8340], "text": ["The rebuilding introduces artifacts into the simulation so ideally this should be as large as possible without the resulting distortions in the signed distance field introducing their own problems."]}], "indent": 8, "text": ["Reinitialize Rate"], "role": "item", "extent": [7945, 7973], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [8361, 8546], "text": ["The voxels that border the zero isocontour are used to determine the initial zero isocontour. The rest of the field is then rebuilt from these values directly."]}], "indent": 8, "text": ["Rebuild SDF"], "role": "item", "extent": [8340, 8361], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [8572, 8823], "text": ["If the field is already almost a signed distance field, a less drastic error correction can be performed. The reinitialization equation is applied which will converge on a signed distance field without affecting the boundary."]}], "indent": 8, "text": ["Reinitialize SDF"], "role": "item", "extent": [8546, 8572], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [8856, 8941], "text": ["The number of times to apply the reinitialization equation."]}], "indent": 8, "text": ["Reinitialize Iterations"], "role": "item", "extent": [8823, 8856], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [8971, 9139], "text": ["Construct marker surfels on the inside of the surface. Inside surfels increase volume as they correct the surface by pushing out the boundary."]}], "indent": 8, "text": ["Build Inside Markers"], "role": "item", "extent": [8941, 8971], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [9170, 9339], "text": ["Construct marker surfels on the outside of the surface. Outside surfels decrease volume as they correct the surface by pushing in the boundary."]}], "indent": 8, "text": ["Build Outside Markers"], "role": "item", "extent": [9139, 9170], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [9366, 9626], "text": ["The desired number of markers to maintain inside each voxel.  More\n            markers allows for a better capturing of the surface behaviour, but\n            can require a lot of memory and processing time for large\n            complicated sims."]}], "indent": 8, "text": ["Markers Per Voxel"], "role": "item", "extent": [9339, 9366], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [9657, 9753], "text": ["The minimum radius of marker surfels, measured in terms of voxel size."]}], "indent": 8, "text": ["Minimum Marker Radius"], "role": "item", "extent": [9626, 9657], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [9784, 9880], "text": ["The maximum radius of marker surfels, measured in terms of voxel size."]}], "indent": 8, "text": ["Maximum Marker Radius"], "role": "item", "extent": [9753, 9784], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [9913, 10125], "text": ["The distance the marker must be on the wrong side of the surface, as measured in terms of the marker\u2019s radius, to qualify as escaped.  Only escaped markers will update the surface value."]}], "indent": 8, "text": ["Marker Escape Threshold"], "role": "item", "extent": [9880, 9913], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [10150, 10343], "text": ["The motion of the collision objects may cause the fluid to interpenetrate the fluid objects. The Correct Surface step will remove any fluid that is penetrating a collision object."]}], "indent": 8, "text": ["Correct Surface"], "role": "item", "extent": [10125, 10150], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [10381, 10572], "text": ["When extrapolating the velocity field into non-fluid\n            cells, the extrapolation is stopped when a certain number\n            of cells has been filled along the border."]}], "indent": 8, "text": ["Limit Velocity Extrapolation"], "role": "item", "extent": [10343, 10381], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [10606, 10773], "text": ["The number of non-fluid cells that should be filled with\n            velocity values on the non-fluid side of the velocity\n            field."]}], "indent": 8, "text": ["Max Cells to Extrapolate"], "role": "item", "extent": [10572, 10606], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [10799, 11089], "text": ["Trapped air will be given a pressure value independent of the boundary pressure conditions. This prevents the bubbles from collapsing in on themselves. If not set, fluid will be free to flow into bubbles from all sides ensuring their\n            swift dissipation."]}], "indent": 8, "text": ["Preserve Bubbles"], "role": "item", "extent": [10773, 10799], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [11111, 11330], "text": ["Determine if collision objects should prevent fluid from leaving their surface instead of just preventing the\n            fluid from entering their surface.  This should be left\n            on."]}], "indent": 8, "text": ["Sticky Fluid"], "role": "item", "extent": [11089, 11111], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [11351, 11537], "text": ["Pressures are extrapolated into air cells rather than just set\n            to zero.  This causes sub-voxel ripples in the air side to be\n            suppressed."]}], "indent": 8, "text": ["Ghost Fluid"], "role": "item", "extent": [11330, 11351], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [11558, 11819], "text": ["Contribution to the pressure equation is proportional to the amount of the cell in the liquid.  This attempts to avoid stairstep boundaries on solid boundaries.  Currently, only\n            at most one of Ghost Fluid and Variational should be set."]}], "indent": 8, "text": ["Variational"], "role": "item", "extent": [11537, 11558], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 4, "level": 2, "text": ["Advanced"], "extent": [7926, 7945], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"body": [{"indent": 12, "type": "para", "extent": [11897, 12098], "text": ["The collision mask is an SDF built storing the distance to the collision geometry for each node.  By default, it is only calculated up to a certain distance from the collision geometry.  "]}, {"indent": 12, "type": "para", "extent": [12098, 12285], "text": ["However, if one wishes to use this field for special effects (such as having things react before they reach the object), one might want to compute the full range of the mask."]}], "indent": 8, "text": ["Restrict Mask to Bandwidth"], "role": "item", "extent": [11860, 11897], "container": true, "type": "parameters_item"}, {"body": [{"body": [{"body": [{"indent": 16, "type": "para", "extent": [12336, 12593], "text": ["The collision velocity of the object is calculated by\n                treating it as a rigid body.  Only the angular\n                velocity and linear velocity will be used, no local\n                deformation will be taken into account."]}], "indent": 12, "text": ["Rigid Velocity"], "extent": [12308, 12336], "container": true, "type": "dt"}, {"body": [{"indent": 16, "type": "para", "extent": [12621, 12818], "text": ["The collision velocity of the object tries to take into\n                account deformation by using point history.  This only\n                works if the topology doesn\u2019t change."]}], "indent": 12, "text": ["Point Velocity"], "extent": [12593, 12621], "container": true, "type": "dt"}, {"body": [{"indent": 16, "type": "para", "extent": [12847, 13048], "text": ["Uses the SDF representation of the object to detect\n                deformation.  Does not require a fixed topology over\n                time, but cannot detect tangential velocities."]}], "indent": 12, "text": ["Volume Velocity"], "extent": [12818, 12847], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 8, "text": ["Velocity Type"], "role": "item", "extent": [12285, 12308], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [13078, 13197], "text": ["Allows the fluid to collide with objects that don\u2019t have\n            Geometry/SDF, such as other fluids."]}], "indent": 8, "text": ["Collide with Non-SDF"], "role": "item", "extent": [13048, 13078], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 4, "level": 3, "text": ["Collisions"], "extent": [11836, 11860], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"body": [{"body": [{"body": [{"indent": 20, "type": "para", "extent": [13371, 13430], "text": ["The source\u2019s velocity will be ignored."]}], "indent": 16, "text": ["None"], "extent": [13349, 13371], "container": true, "type": "dt"}, {"body": [{"indent": 20, "type": "para", "extent": [13462, 13592], "text": ["Velocity will be set in those areas where fluid\n                    will be added this frame from the source."]}], "indent": 16, "text": ["Net New Source"], "extent": [13430, 13462], "container": true, "type": "dt"}, {"body": [{"indent": 20, "type": "para", "extent": [13620, 13726], "text": ["Velocity will be set in those areas where the\n                    source is present."]}], "indent": 16, "text": ["New Source"], "extent": [13592, 13620], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 12, "text": ["Controls how the source object\u2019s velocity will affect the\n            liquid\u2019s velocity field."], "extent": [13242, 13349], "container": true, "type": "para"}], "indent": 8, "text": ["Velocity Merge"], "role": "item", "extent": [13217, 13242], "container": true, "type": "parameters_item"}, {"body": [{"body": [{"body": [{"indent": 16, "type": "para", "extent": [13777, 14007], "text": ["The velocity of the object treating it as a rigid\n                body.  Only the angular velocity and linear velocity\n                will be used, no local deformation will be taken into\n                account."]}], "indent": 12, "text": ["Rigid Velocity"], "extent": [13749, 13777], "container": true, "type": "dt"}, {"body": [{"indent": 16, "type": "para", "extent": [14035, 14227], "text": ["The velocity of the object attempting to take into\n                account deformation by using point history.  This only\n                works if the topology doesn\u2019t change."]}], "indent": 12, "text": ["Point Velocity"], "extent": [14007, 14035], "container": true, "type": "dt"}, {"body": [{"indent": 16, "type": "para", "extent": [14256, 14457], "text": ["Uses the SDF representation of the object to detect\n                deformation.  Does not require a fixed topology over\n                time, but cannot detect tangential velocities."]}], "indent": 12, "text": ["Volume Velocity"], "extent": [14227, 14256], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 8, "text": ["Velocity Type"], "role": "item", "extent": [13726, 13749], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 4, "level": 3, "text": ["Sources"], "extent": [13197, 13217], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"body": [{"body": [{"body": [{"indent": 20, "type": "para", "extent": [14626, 14872], "text": ["The velocity of the object treating it as a rigid\n                    body.  Only the angular velocity and linear velocity\n                    will be used, no local deformation will be taken into\n                    account."]}], "indent": 16, "text": ["Rigid Velocity"], "extent": [14594, 14626], "container": true, "type": "dt"}, {"body": [{"indent": 20, "type": "para", "extent": [14904, 15108], "text": ["The velocity of the object attempting to take into\n                    account deformation by using point history.  This only\n                    works if the topology doesn\u2019t change."]}], "indent": 16, "text": ["Point Velocity"], "extent": [14872, 14904], "container": true, "type": "dt"}, {"body": [{"indent": 20, "type": "para", "extent": [15141, 15354], "text": ["Uses the SDF representation of the object to detect\n                    deformation.  Does not require a fixed topology over\n                    time, but cannot detect tangential velocities."]}], "indent": 16, "text": ["Volume Velocity"], "extent": [15108, 15141], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 12, "text": ["Controls how the pump object\u2019s per point velocity is\n            computed."], "extent": [14507, 14594], "container": true, "type": "para"}], "indent": 8, "text": ["Velocity Type"], "role": "item", "extent": [14475, 14507], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 4, "level": 3, "text": ["Pumps"], "extent": [14457, 14475], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"body": [{"body": [{"body": [{"indent": 20, "type": "para", "extent": [15685, 15744], "text": ["No special clearing of fields is done."]}], "indent": 16, "text": ["None"], "extent": [15663, 15685], "container": true, "type": "dt"}, {"body": [{"indent": 20, "type": "para", "extent": [15768, 15896], "text": ["Fields not needed for the next time step that do\n                    not have guide parameters are cleared."]}], "indent": 16, "text": ["Hidden"], "extent": [15744, 15768], "container": true, "type": "dt"}, {"body": [{"indent": 20, "type": "para", "extent": [15920, 16124], "text": ["Fields not needed for next time step are cleared.\n                    Note that some guides will thus start showing up\n                    as zero as the underlying field got cleared."]}], "indent": 16, "text": ["Static"], "extent": [15896, 15920], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 12, "text": ["Zeros out the specified types of fields after the solve\n            step.  This ensures the .sim files, which store the\n            complete state of the simulation, do not have any\n            information not needed, reducing their size and save time."], "extent": [15398, 15663], "container": true, "type": "para"}], "indent": 8, "text": ["Fields to Clear"], "role": "item", "extent": [15372, 15398], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [16144, 16243], "text": ["A space separated list of extra fields that should be\n            cleared post-solve."]}], "indent": 8, "text": ["Additional"], "role": "item", "extent": [16124, 16144], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 4, "level": 3, "text": ["Clear"], "extent": [15354, 15372], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"type": "para", "indent": 4, "extent": [38, 142], "text": ["Each data option parameter has an associated menu which specifies\n    how that parameter operates."]}, {"body": [{"body": [{"type": "para", "indent": 8, "extent": [160, 215], "text": ["Use the value from the Default Operation menu."]}], "container": true, "text": ["Use Default "], "extent": [142, 160], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [233, 479], "text": ["Set the value of this parameter only when this data is created.\n        On all subsequent timesteps, the value of this parameter is not\n        altered. This is useful for setting up initial conditions like\n        position and velocity."]}], "container": true, "text": ["Set Initial "], "extent": [215, 233], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [496, 823], "text": ["Always set the value of this parameter. This is useful when\n        specific keyframed values are required over time. This could be\n        used to keyframe the position of an object over time, or to\n        cause the geometry from a SOP to be refetched at each timestep\n        if the geometry is deforming. "]}, {"type": "para", "indent": 8, "extent": [823, 1119], "text": ["You can also use this setting in\n        conjunction with the local variables for a parameter value to\n        modify a value over time. For example, in the X Position, an\n        expression like ", {"text": ["$tx + 0.1"], "type": "code"}, " would cause the object to\n        move 0.1 units to the right on each timestep."]}], "container": true, "text": ["Set Always "], "extent": [479, 496], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [1135, 1333], "text": ["Do not ever set the value of this parameter. This option is most\n        useful when using this node to modify an existing piece of data\n        connected through the first input. "]}, {"type": "para", "indent": 8, "extent": [1333, 1608], "text": ["For example, an ", {"text": ["RBD State\n        DOP"], "fullpath": "/nodes/dop/rbdstate", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdstate"}, " may want to animate just the mass of an\n        object, and nothing else. The ", {"text": ["Set Never"], "type": "ui"}, " option could be used\n        on all parameters except for ", {"text": ["Mass"], "type": "ui"}, ", which would use ", {"text": ["Set\n        Always"], "type": "ui"}, "."]}], "container": true, "text": ["Set Never "], "extent": [1119, 1135], "indent": 4, "type": "dt"}], "type": "dt_group", "container": true}], "container": true, "text": ["Parameter Operations"], "role": "item", "extent": [16, 38], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [1627, 1762], "text": ["For any parameters with their ", {"text": ["Operation"], "type": "ui"}, " menu set to ", {"text": ["Use\n    Default"], "type": "ui"}, ", this parameter controls what operation is used. "]}, {"type": "para", "indent": 4, "extent": [1762, 1908], "text": ["This\n    parameter has the same menu options and meanings as the ", {"text": ["Parameter\n    Operations"], "type": "ui"}, " menus, but without the ", {"text": ["Use Default"], "type": "ui"}, " choice."]}], "container": true, "text": ["Default Operation"], "role": "item", "extent": [1608, 1627], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [46, 139], "text": ["All objects connected to the first input of this node become mutual\n    affectors. "]}, {"type": "para", "indent": 4, "extent": [139, 412], "text": ["This is equivalent to using an ", {"text": ["Affector\n    DOP"], "fullpath": "/nodes/dop/affector", "scheme": "Node", "type": "link", "value": "/nodes/dop/affector"}, " to create an affector relationship between\n    ", {"text": ["*"], "type": "code"}, " and ", {"text": ["*"], "type": "code"}, " before connecting it to this node. This option makes it\n    convenient to have all objects feeding into a solver node affect\n    each other."]}], "container": true, "text": ["Make Objects Mutual Affectors"], "role": "item", "extent": [15, 46], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [45, 219], "text": ["When an object connector is attached to the first input of this\n    node, this parameter can be used to choose a subset of those objects\n    to be affected by this node."]}], "container": true, "text": ["Group"], "role": "item", "attrs": {"channels": "/group"}, "extent": [15, 22], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [26, 227], "text": ["Indicates the name that should be used to attach the data to an\n    object or other piece of data. If the Data Name contains a \"/\" (or\n    several), that indicates traversing inside subdata. "]}, {"type": "para", "indent": 4, "extent": [227, 530], "text": ["For example, if the ", {"text": ["Fan Force DOP"], "fullpath": "/nodes/dop/fan", "scheme": "Node", "type": "link", "value": "/nodes/dop/fan"}, " has the default Data Name\n    \"Forces/Fan\". This attaches the data with the name \"Fan\" to an\n    existing piece of data named \"Forces\". If no data named \"Forces\"\n    exists, a simple piece of container data is created to hold the\n    \"Fan\" subdata."]}, {"type": "para", "indent": 4, "extent": [530, 833], "text": ["Different pieces of data have different requirements on what names\n    should be used for them. Except in very rare situations, the default\n    value should be used. Some exceptions are described with particular\n    pieces of data or with solvers that make use of some particular type\n    of data."]}], "container": true, "text": ["Data Name"], "role": "item", "extent": [15, 26], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [851, 1058], "text": ["Turning on this parameter modifies the ", {"text": ["Data Name"], "type": "ui"}, " parameter\n    value to ensure that the data created by this node is attached with\n    a unique name so it will not overwrite any existing data. "]}, {"type": "para", "indent": 4, "extent": [1058, 1271], "text": ["With this\n    parameter turned off, attaching two pieces of data with the same\n    name will cause the second one to replace the first. There are\n    situations where each type of behavior is desirable. "]}, {"type": "para", "indent": 4, "extent": [1271, 1585], "text": ["If an object\n    needs to have several ", {"text": ["Fan Forces"], "fullpath": "/nodes/dop/fan", "scheme": "Node", "type": "link", "value": "/nodes/dop/fan"}, " blowing on it, it is\n    much easier to use the ", {"text": ["Unique Data Name"], "type": "ui"}, " feature to ensure that\n    each fan does not overwrite a previous fan rather than trying to\n    change the ", {"text": ["Data Name"], "type": "ui"}, " of each fan individually to avoid\n    conflicts. "]}, {"type": "para", "indent": 4, "extent": [1585, 1827], "text": ["On the other hand, if an object is known to have ", {"text": ["RBD\n    State"], "fullpath": "/nodes/dop/rbdstate", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdstate"}, " data already attached to it, leaving this\n    option turned off will allow some new ", {"text": ["RBD State"], "fullpath": "/nodes/dop/rbdstate", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdstate"}, "\n    data to overwrite the existing data."]}], "container": true, "text": ["Unique Data Name"], "role": "item", "extent": [833, 851], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [178, 731], "text": ["The default behavior for solvers is to attach the exact same solver to all\n    of the objects specified in the group.  This allows the objects to be\n    processed in a single pass by the solver, since the parameters are identical\n    for each object.  However, some objects operate more logically on a single\n    object at a time.  In these cases, one may want to use ", {"text": ["$OBJID"], "type": "code"}, " expressions\n    to vary the solver parameters across the objects.  Setting this toggle will\n    create a separate solver per object, allowing ", {"text": ["$OBJID"], "type": "code"}, " to vary as expected."]}], "container": true, "text": ["Solver Per Object"], "role": "item", "extent": [159, 178], "indent": 0, "type": "parameters_item"}], "type": "parameters_item_group", "container": true}], "indent": 4, "level": 2, "text": ["Fields"], "extent": [11819, 11836], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [1318, 1330], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [28, 246], "text": ["This optional input can be used to control which simulation objects\n    are modified by this node. Any objects connected through this input\n    and which match the ", {"text": ["Group"], "type": "ui"}, " parameter field will be modified. "]}, {"indent": 4, "type": "para", "extent": [246, 397], "text": ["If this input is not connected, this node can be used in conjunction with an\n    Apply Data node, or can be used as an input to another data node."]}], "indent": 0, "text": ["First Input"], "extent": [15, 28], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [415, 557], "text": ["If this node has more input connectors, other data nodes can be\n    attached to act as modifiers for the data created by this node. "]}, {"indent": 4, "type": "para", "extent": [557, 749], "text": ["The specific types of subdata that are meaningful vary from node to\n    node. Click ", {"keys": ["MMB"], "text": null, "type": "keys"}, " an input connector to see a list of available\n    data nodes that can be meaningfully attached."]}], "indent": 0, "text": ["All Other Inputs"], "extent": [397, 415], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "level": 1, "text": "Inputs", "role": "section", "extent": [16280, 16288], "container": true, "type": "inputs_section", "id": "inputs"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [29, 296], "text": ["The operation of this output depends on what inputs are connected\n    to this node. If an object stream is input to this node, the output\n    is also an object stream containing the same objects as the input\n    (but with the data from this node attached). "]}, {"type": "para", "indent": 4, "extent": [296, 606], "text": ["If no object stream is\n    connected to this node, the output is a data output. This data\n    output can be connected to an ", {"text": ["Apply Data DOP"], "fullpath": "/nodes/dop/applydata", "scheme": "Node", "type": "link", "value": "/nodes/dop/applydata"}, ",\n    or connected directly to a data input of another data node, to\n    attach the data from this node to an object or another piece of\n    data."]}], "container": true, "text": ["First Output"], "extent": [15, 29], "indent": 0, "type": "dt"}], "type": "dt_group", "container": true}], "indent": 0, "level": 1, "text": "Outputs", "role": "section", "extent": [16324, 16333], "container": true, "type": "outputs_section", "id": "outputs"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [29, 325], "text": ["This DOP node defines a local variable for each channel and\n    parameter on the Data Options page, with the same name as the\n    channel. So for example, the node may have channels for Position\n    (positionx, positiony, positionz) and a parameter for an object name\n    (objectname). "]}, {"indent": 4, "type": "para", "extent": [325, 519], "text": ["Then there will also be local variables with the names\n    positionx, positiony, positionz, and objectname. These variables\n    will evaluate to the previous value for that parameter. "]}, {"indent": 4, "type": "para", "extent": [519, 692], "text": ["This previous value is always stored as part of the data attached to the\n    object being processed. This is essentially a shortcut for a\n    dopfield expression like:"]}, {"lang": null, "indent": 4, "type": "pre", "extent": [692, 775], "text": ["\n    dopfield($DOPNET, $OBJID, dataName, \"Options\", 0, channelname)\n    "]}, {"indent": 4, "type": "para", "extent": [775, 883], "text": ["If the data does not already exist, then a value of zero or an\n    empty string will be returned."]}], "indent": 0, "text": ["channelname"], "extent": [16, 29], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [891, 1132], "text": ["This value is the simulation time (see variable ST) at which the\n    current data was created. This value may not be the same as the\n    current simulation time if this node is modifying existing data,\n    rather than creating new data."]}], "indent": 0, "text": ["DATACT"], "extent": [883, 891], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [1140, 1383], "text": ["This value is the simulation frame (see variable SF) at which the\n    current data was created. This value may not be the same as the\n    current simulation frame if this node is modifying existing data,\n    rather than creating new data."]}], "indent": 0, "text": ["DATACF"], "extent": [1132, 1140], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [1392, 1594], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"indent": 4, "type": "para", "extent": [1594, 1712], "text": ["In this case, this value is set to the\n    name of the relationship the data to which the data is being attached."]}], "indent": 0, "text": ["RELNAME"], "extent": [1383, 1392], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [1723, 1925], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"indent": 4, "type": "para", "extent": [1925, 2128], "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affected Objects of the relationship to which the data is being\n    attached."]}], "indent": 0, "text": ["RELOBJIDS"], "extent": [1712, 1723], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [2141, 2343], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"indent": 4, "type": "para", "extent": [2343, 2528], "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affected\n    Objects of the relationship to which the data is being attached."]}], "indent": 0, "text": ["RELOBJNAMES"], "extent": [2128, 2141], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [2542, 2744], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"indent": 4, "type": "para", "extent": [2744, 2947], "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affector Objects of the relationship to which the data is being\n    attached."]}], "indent": 0, "text": ["RELAFFOBJIDS"], "extent": [2528, 2542], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [2963, 3165], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"indent": 4, "type": "para", "extent": [3165, 3350], "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affector\n    Objects of the relationship to which the data is being attached."]}], "indent": 0, "text": ["RELAFFOBJNAMES"], "extent": [2947, 2963], "container": true, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [20, 107], "text": ["This value is the simulation time for which the node is being\n    evaluated. "]}, {"type": "para", "indent": 4, "extent": [107, 326], "text": ["This value may not be equal to the current Houdini time\n    represented by the variable T, depending on the settings of the ", {"text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet", "scheme": "Node", "type": "link", "value": "/nodes/obj/dopnet"}, " ", {"text": ["Offset Time"], "type": "ui"}, " and ", {"text": ["Time Scale"], "type": "ui"}, "\n    parameters. "]}, {"type": "para", "indent": 4, "extent": [326, 555], "text": ["This value is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"text": ["$ST == 0"], "type": "code"}, " rather than\n    ", {"text": ["$T == 0"], "type": "code"}, " or ", {"text": ["$FF == 1"], "type": "code"}, "."]}], "container": true, "text": ["ST"], "extent": [16, 20], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [559, 700], "text": ["This value is the simulation frame (or more accurately, the\n    simulation time step number) for which the node is being evaluated."]}, {"type": "para", "indent": 4, "extent": [700, 999], "text": ["This value may not be equal to the current Houdini frame number\n    represented by the variable F, depending on the settings of the ", {"text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet", "scheme": "Node", "type": "link", "value": "/nodes/obj/dopnet"}, " parameters. Instead, this value is equal to\n    the simulation time (ST) divided by the simulation timestep size\n    (TIMESTEP)."]}], "container": true, "text": ["SF"], "extent": [555, 559], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [1009, 1181], "text": ["This value is the size of a simulation timestep. This value is\n    useful to scale values that are expressed in units per second, but\n    are applied on each timestep."]}], "container": true, "text": ["TIMESTEP"], "extent": [999, 1009], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [1187, 1305], "text": ["This value is the inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."]}], "container": true, "text": ["SFPS"], "extent": [1181, 1187], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [1312, 1523], "text": ["This is the number of objects in the simulation. For nodes that\n    create objects such as the ", {"text": ["Empty Object"], "fullpath": "/nodes/dop/emptyobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/emptyobject"}, " node,\n    this value will increase for each object that is evaluated. "]}, {"type": "para", "indent": 4, "extent": [1523, 1621], "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"text": ["object_$SNOBJ"], "type": "code"}, "."]}], "container": true, "text": ["SNOBJ"], "extent": [1305, 1312], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [1627, 1859], "text": ["This value is the number of objects that will be evaluated by the\n    current node during this timestep. This value will often be\n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "]}, {"type": "para", "indent": 4, "extent": [1859, 1991], "text": ["This value may return 0 if the node does not\n    process each object sequentially (such as the ", {"text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "container": true, "text": ["NOBJ"], "extent": [1621, 1627], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [1996, 2322], "text": ["This value is the index of the specific object being processed by\n    the node. This value will always run from zero to NOBJ-1 in a given\n    timestep. This value does not identify the current object within the\n    simulation like OBJID or OBJNAME, just the object\u2019s position in the\n    current order of processing. "]}, {"type": "para", "indent": 4, "extent": [2322, 2616], "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    will be -1 if the node does not process objects sequentially (such\n    as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "container": true, "text": ["OBJ"], "extent": [1991, 1996], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [2623, 2883], "text": ["This is the unique object identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. "]}, {"type": "para", "indent": 4, "extent": [2883, 3168], "text": ["The object identifier\n    can always be used to uniquely identify a given object. This makes\n    this variable very useful in situations where each object needs to\n    be treated differently. It can be used to produce a unique random\n    number for each object, for example. "]}, {"type": "para", "indent": 4, "extent": [3168, 3406], "text": ["This value is also the best way\n    to look up information on an object using the dopfield expression\n    function. This value will be -1 if the node does not process objects\n    sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "container": true, "text": ["OBJID"], "extent": [2616, 2623], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [3417, 3556], "text": ["This string contains a space separated list of the unique object\n    identifiers for every object being processed by the current node."]}], "container": true, "text": ["ALLOBJIDS"], "extent": [3406, 3417], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [3569, 3687], "text": ["This string contains a space separated list of the names of every\n    object being processed by the current node."]}], "container": true, "text": ["ALLOBJNAMES"], "extent": [3556, 3569], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [3694, 3801], "text": ["This value is the simulation time (see variable ST) at which the\n    current object was created. "]}, {"type": "para", "indent": 4, "extent": [3801, 4057], "text": ["Therefore, to check if an object was created\n    on the current timestep, the expression ", {"text": ["$ST == $OBJCT"], "type": "code"}, " should\n    always be used. This value will be zero if the node does not process\n    objects sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "container": true, "text": ["OBJCT"], "extent": [3687, 3694], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [4064, 4172], "text": ["This value is the simulation frame (see variable SF) at which the\n    current object was created. "]}, {"type": "para", "indent": 4, "extent": [4172, 4389], "text": ["This value is equivalent to using the\n    dopsttoframe expression on the OBJCT variable. This value will be\n    zero if the node does not process objects sequentially (such as the\n    ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "container": true, "text": ["OBJCF"], "extent": [4057, 4064], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [4398, 4486], "text": ["This is a string value containing the name of the object being\n    processed. "]}, {"type": "para", "indent": 4, "extent": [4486, 4748], "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "]}, {"type": "para", "indent": 4, "extent": [4748, 5194], "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named \"myobject\",\n    specifying ", {"text": ["strcmp($OBJNAME, \"myobject\") == 0"], "type": "code"}, " in the activation field\n    of a DOP will cause that DOP to operate only on those 20 objects. This\n    value will be the empty string if the node does not process objects\n    sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "container": true, "text": ["OBJNAME"], "extent": [4389, 4398], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [5202, 5425], "text": ["This is a string value containing the full path of the current DOP\n    Network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP Network that contains the\n    node."]}], "container": true, "text": ["DOPNET"], "extent": [5194, 5202], "indent": 0, "type": "dt"}], "container": true, "type": "dt_group"}, {"body": [{"body": [{"type": "para", "indent": 4, "extent": [5431, 5620], "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"text": ["Position node"], "fullpath": "/nodes/dop/position", "scheme": "Node", "type": "link", "value": "/nodes/dop/position"}, ",\n    you could write the expression:"]}, {"lang": null, "type": "pre", "indent": 4, "extent": [5620, 5650], "text": ["\n    $tx + 0.1\n    "]}, {"type": "para", "indent": 4, "extent": [5650, 5730], "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."]}], "container": true, "role": "item", "extent": [5425, 5431], "indent": 0, "type": "note"}], "role": "item_group", "container": true, "type": "note_group"}], "indent": 0, "level": 1, "text": "Locals", "role": "section", "extent": [16370, 16378], "container": true, "type": "locals_section", "id": "locals"}], "title": ["Fluid Solver"], "summary": ["Sets and configures a Fluid solver. "], "attrs": {"index": "no", "version": "", "namespace": null, "internal": "fluidsolver", "context": "dop", "type": "node", "icon": "DOP/fluidsolver"}, "included": ["/nodes/dop/standard_data_inputs", "/nodes/dop/standard_data_locals", "/nodes/dop/standard_data_outputs", "/nodes/dop/standard_datagroup_parms", "/nodes/dop/standard_dataname_parms", "/nodes/dop/standard_dataop_parms", "/nodes/dop/standard_locals", "/nodes/dop/standard_solver_mutualparms", "/nodes/dop/standard_solver_parms"], "type": "root"}