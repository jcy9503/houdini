{"body": [{"indent": 0, "text": ["Pyro Solver"], "type": "title", "extent": [95, 111], "level": 0}, {"indent": 0, "type": "summary", "extent": [111, 154], "text": ["Sets and configures a Pyro solver."]}, {"indent": 0, "type": "para", "extent": [154, 261], "text": ["See ", {"text": ["how to use the pyro tools"], "fullpath": "/pyro/pyro", "scheme": null, "type": "link", "value": "/pyro/pyro"}, " for information\non the general workflow surrounding this node."]}, {"indent": 0, "type": "para", "extent": [261, 328], "text": ["The Pyro Solver DOP sets objects to use the Pyro Dynamics solver."]}, {"indent": 0, "type": "para", "extent": [328, 421], "text": ["If an object has this DOP as its \"Solver\" subdata, it will evolve\nitself as a Smoke object."]}, {"indent": 0, "type": "para", "extent": [421, 771], "text": ["This solver makes use of various field subdata on the object. The\nobject should have a scalar field ", {"text": ["density"], "type": "code"}, " to track the density of the\nsmoke in space. The object should have a vector field called ", {"text": ["vel"], "type": "code"}, " to\ntrack the velocity of each point in space. Optionally, a scalar field\ncalled ", {"text": ["temperature"], "type": "code"}, " is needed for the internal buoyancy calculations."]}, {"indent": 0, "type": "para", "extent": [771, 887], "text": ["To setup an object with the requisite subdata, use the ", {"text": ["Smoke Configure\nObject DOP"], "fullpath": "/nodes/dop/smokeconfigureobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/smokeconfigureobject"}, "."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [892, 1154], "text": ["If you are sourcing from an object that deforms, or collides with a deforming object, the solver will not pay attention to the per-point deformation. You need to set the ", {"text": ["Velocity Type"], "type": "ui"}, " to ", {"text": ["Point Velocity"], "type": "ui"}, " on the ", {"text": ["Advanced \u25b8 Forces \u25b8 Sources"], "type": "ui"}, " subtab."]}], "indent": 0, "role": "item", "extent": [887, 892], "container": true, "type": "tip"}], "container": true, "role": "item_group", "type": "tip_group"}, {"body": [{"body": [{"indent": 0, "type": "para", "extent": [1181, 1454], "text": ["Any object with the source relationship will be unioned together and\nused as a source.  Solid objects are converted into a field that is 1\ninside the object and 0 outside.  The maximum of this source field and\nthe destination field is used for the new destination field."]}, {"indent": 0, "type": "para", "extent": [1454, 1694], "text": ["Note that there are two possible fuel choices.  One applies to fuel\nadded to the main smoke object.  The second controls how the sources\non the second fuel object will behave.  The fuel object can only\ninject fuel, thus the single option."]}, {"body": [{"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [1720, 1769], "text": ["Source objects add to the density field."]}], "indent": 4, "text": ["Emit Smoke"], "extent": [1704, 1720], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [1787, 1884], "text": ["Scalar multiple for the source prior to computing the maximum\n        with the density."]}], "indent": 4, "text": ["Smoke Amount"], "extent": [1769, 1787], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [1899, 1945], "text": ["Source objects add to the fuel field."]}], "indent": 4, "text": ["Emit Fuel"], "extent": [1884, 1899], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [1962, 2056], "text": ["Scalar multiple for the source prior to computing the maximum\n        with the fuel."]}], "indent": 4, "text": ["Fuel Amount"], "extent": [1945, 1962], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2079, 2132], "text": ["Source objects add to the temperature field."]}], "indent": 4, "text": ["Apply Temperature"], "extent": [2056, 2079], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2155, 2469], "text": ["Scales the object\u2019s temperature.  Note that unlike fuel and\n        smoke amounts, whether a voxel gets overwritten is unaffected\n        by the temperature amount.  A temperature amount of 0 does not\n        turn off the addition of temperature, it just causes the newly\n        set temperature to be 0."]}], "indent": 4, "text": ["Temperature Scale"], "extent": [2132, 2155], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Emitters"], "role": "item", "extent": [1694, 1704], "container": true, "type": "parameters_item"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [2491, 2677], "text": ["Noise will multiply the source field with a noise field.  This\n        will turn the solid object into a Swiss cheesy object, often\n        resulting in nicer chaotic behavior."]}], "indent": 4, "text": ["Add Noise"], "extent": [2476, 2491], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2689, 2937], "text": ["How much to mix the result of this calculation with the\n        original source.  A value of 0 is the same as not adding\n        noise, 0.5 will blend 50% of each, and 1 will use the remapped\n        noise value as the final source value."]}], "indent": 4, "text": ["Amount"], "extent": [2677, 2689], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2967, 3022], "text": ["These control an anti-aliased flow noise VOP."]}], "indent": 4, "text": ["Frequency-Flow Roughness"], "extent": [2937, 2967], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3036, 3249], "text": ["How harsh the transition from 0 to 1 should be.  A high\n        contrast results in a sharp boundary between the kept and\n        discarded regions, a low contrast results in a smoother drop\n        off."]}], "indent": 4, "text": ["Contrast"], "extent": [3022, 3036], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3287, 3555], "text": ["Remaps the source value.  This allows remapping the fall-off\n        of the transition from sourced to non-sourced voxels.\n        Alternately, by building a hill shaped ramp, one can extract\n        a contour of the source shape rather than a solid version."]}], "indent": 4, "text": ["Map Noise Output to Final Source"], "extent": [3249, 3287], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Noise"], "role": "item", "extent": [2469, 2476], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Sources"], "extent": [1166, 1181], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [3572, 3643], "text": ["These controls govern how the simulation advances with time."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [3669, 3932], "text": ["If set, each axis of the velocity field will be clamped to\n    this maximum speed.  This is done after the force\n    computation and before the divergence or advection, so it\n    is possible for the speed to end up slightly larger than\n    this value.  "]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [3942, 4048], "text": ["As the clamping is done per-axis, the velocity along the diagonal can be up to ", {"text": ["sqrt(3)"], "type": "code"}, " higher."]}], "indent": 4, "role": "item", "extent": [3932, 3942], "container": true, "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 0, "text": ["Limit Speed, Speed Limit"], "role": "item", "extent": [3643, 3669], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4059, 4259], "text": ["Viscosity is a force which tries to ensure that\n    neighboring voxels have the same velocity. A zero value\n    allows fluid in adjacent voxels to move any direction\n    without resistance. "]}, {"indent": 4, "type": "para", "extent": [4259, 4462], "text": ["Higher values introduce a penalty effect\n    when a voxel\u2019s velocity varies from that of its neighbors.\n    This is currently implemented by applying a diffusive term\n    to the velocity field."]}], "indent": 0, "text": ["Viscosity"], "role": "item", "extent": [4048, 4059], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4476, 4658], "text": ["Controls how fast the temperature field trends to zero.  A\n    value of 0.9 will cause the temperature of hot gas to fall\n    to 90% of its original value after one second."]}], "indent": 0, "text": ["Cooling Rate"], "role": "item", "extent": [4462, 4476], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4673, 4952], "text": ["An upwards force proportional to the difference between the\n    ambient temperature and this voxel\u2019s temperature will be\n    applied with this scale factor. Thus voxel\u2019s whose\n    temperatures are higher than average will rise and those\n    with values lower will sink."]}], "indent": 0, "text": ["Buoyancy Lift"], "role": "item", "extent": [4658, 4673], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4972, 5093], "text": ["The buoyancy force will be applied in this direction. It\n    usually corresponds to the logical \"up\" direction."]}], "indent": 0, "text": ["Buoyancy Direction"], "role": "item", "extent": [4952, 4972], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5113, 5488], "text": ["Instead of using explicit vorticles, the vortex locations can be\n    detected from the velocity field directly.  This parameter will\n    cause existing vortices to be boosted by this value, increasing\n    turbulence in the simulation that would otherwise be lost by the\n    grid resolution.  Too high a value can cause the simulation to\n    become unstable and blow up."]}, {"indent": 4, "type": "para", "extent": [5488, 5653], "text": ["Negative numbers can be used to suppress vortices and smooth out\n    the simulation - but usually a better solution is just to use a\n    lower resolution grid."]}, {"indent": 4, "type": "para", "extent": [5653, 5861], "text": ["The scalar field called \"confinement\" is also multiplied into the\n    vortex confinement value, allowing you to vary the amount of\n    vortex boosting over space, or using a Gas Ramp, another field."]}], "indent": 0, "text": ["Vortex Confinement"], "role": "item", "extent": [5093, 5113], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5876, 5924], "text": ["A global drag force on the velocity field."]}], "indent": 0, "text": ["Velocity Damp"], "role": "item", "extent": [5861, 5876], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5930, 6260], "text": ["The physically correct thing is for fuel to move through the voxel\n    grid in the same way as the smoke.  However, in practice it is often useful\n    to artificially speed up or slow down the fuel.  For more complete control\n    of the fuel, a separate smoke simulation can be run and used as a Source\n    for the pyro sim."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [6277, 6358], "text": ["If not advected, fuel will never move from where it is\n        created."]}], "indent": 4, "text": ["Advect Fuel"], "extent": [6260, 6277], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [6374, 6573], "text": ["A scalar multiple for how fast the fuel should move relative\n        to the other fields, such as temperature and smoke.  Making\n        the fuel move slower can keep a fire more contained."]}], "indent": 4, "text": ["Fuel Speed"], "extent": [6358, 6374], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Fuel"], "role": "item", "extent": [5924, 5930], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6585, 6775], "text": ["The combustion model takes the fuel field and turns it into a\n    burn, temperature, and density fields.  If combustion is not\n    enabled, the fuel field is ignored in the simulation."]}, {"indent": 4, "type": "para", "extent": [6775, 6864], "text": ["Most of these options are documented in ", {"text": ["Gas Combustion DOP"], "fullpath": "/nodes/dop/gascombustion", "scheme": "Node", "type": "link", "value": "/nodes/dop/gascombustion"}]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [6881, 7418], "text": ["Controls what initializes the heat field.  If set to None, the\n        heat field will not be changed by the smoke solver, which means it\n        also will not cool down.  Source means objects with a source\n        relationship will set the heat field to 1 inside of the objects.\n        Burn means to apply a maximum operation with the burn field, this\n        is most sensible if a Use Fuel Model is enabled.  The heat field\n        tracks the velocity of the fluid so is useful to create a history\n        of the burn field."]}], "indent": 4, "text": ["Heat Source"], "extent": [6864, 6881], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [7438, 7646], "text": ["How many seconds it takes the heat field to drop from a value of 1\n        to a value of 0.  Note that the heat field will keep dropping\n        below 0, becoming a sort of time-since-sourced field."]}], "indent": 4, "text": ["Heat Cool Time"], "extent": [7418, 7438], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Combustion"], "role": "item", "extent": [6573, 6585], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7657, 7913], "text": ["Turbulence operating at a finer scale than the sim will spread the\n    the fields out.  This can be modeled by blurring the fields over\n    time.  A diffusion of 2 will cause the field, after one second, to\n    be blurred by a guassian with radius 2."]}], "indent": 0, "text": ["Diffusion"], "role": "item", "extent": [7646, 7657], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7925, 8197], "text": ["Creates a global turbulence field.  This turbulent velocity field\n    is modulated by the ", {"text": ["Force Scale Field"], "type": "ui"}, " and the lookup ramps\n    provided.   This controls where the turbulence shows up, so you can\n    ensure it occurs only in the regions of the sim you want."]}, {"indent": 4, "type": "para", "extent": [8197, 8253], "text": ["The noise parameters come from the Curl Noise VOP."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [8264, 8325], "text": ["Strength of the force to add to the velocity field."]}], "indent": 4, "text": ["Scale"], "extent": [8253, 8264], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [8339, 8564], "text": ["These ramps allow one to control the specifics of the\n        turbulence noise according to the ", {"text": ["forcescale"], "type": "code"}, " value.  The\n        result of using the ramp is multiplied with the corresponding\n        noise parameter."]}], "indent": 4, "text": ["Mappings"], "extent": [8325, 8339], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Turbulence"], "role": "item", "extent": [7913, 7925], "container": true, "type": "parameters_item"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [8589, 8726], "text": ["A global scale factor on all forces applied to the simulation.  2\n        will make forces twice as strong, 0.5 half as strong."]}], "indent": 4, "text": ["Force Scale"], "extent": [8572, 8589], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [8748, 9075], "text": ["Diffuses the force scale.  This occurs instantaneously, so is\n        the radius of blur to apply on this specific frame.  Since the\n        ", {"text": ["forcescale"], "type": "code"}, " is regenerated every frame, this does not\n        accumulate.  Ensures the resulting turbulent velocity field\n        has smooth edges avoiding boundary artifacts."]}], "indent": 4, "text": ["Force Scale Blur"], "extent": [8726, 8748], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [9099, 9423], "text": ["Controls the source of the initial ", {"text": ["Force Scale Field"], "type": "ui"}, ".  Density and\n        temperature mean it is copied verbatim from those fields.\n        Density and Burn will take the maximum of the two fields,\n        useful for ensuring frame one has as much force as later\n        frames when the density fills in more."]}], "indent": 4, "text": ["Force Scale Source"], "extent": [9075, 9099], "container": true, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [9446, 9567], "text": ["When the ", {"text": ["Force Scale Source"], "type": "ui"}, " is ", {"text": ["Other"], "type": "ui"}, ", this is the field used for the initial ", {"text": ["Force Scale Field"], "type": "ui"}, "."]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [9581, 9773], "text": ["This parameter will scale down all the forces that match the ", {"text": ["Scaled Forces"], "type": "ui"}, " parameter. For example, if you add your own drag, by default it will be scaled by the ", {"text": ["forcescale"], "type": "code"}, "."]}], "indent": 8, "role": "item", "extent": [9567, 9581], "container": true, "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 4, "text": ["Force Scale Field"], "extent": [9423, 9446], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [9796, 9900], "text": ["The range of the initial force scale field that will be\n        remapped to the 0..1 interval."]}], "indent": 4, "text": ["Force Scale Range"], "extent": [9773, 9796], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [9943, 10004], "text": ["Remaps the force scale ramp with respect to itself."]}], "indent": 4, "text": ["Map Force Scale Source to Force Scale"], "extent": [9900, 9943], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [10023, 10222], "text": ["Determines which DOP Forces will be scaled by the ", {"text": ["forcescale"], "type": "code"}, "\n        value before being applied.  These forces will be\n        proportional to the ", {"text": ["Force Scale Field"], "type": "ui"}, " on each voxel."]}], "indent": 4, "text": ["Scaled Forces"], "extent": [10004, 10023], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [10243, 10446], "text": ["Determines which DOP Forces will be applied uniformly to\n        all of the voxels of the simulation.  The ", {"text": ["Force Scale Field"], "type": "ui"}, "\n        will not be taken into account when evaluating these"]}], "indent": 4, "text": ["Absolute Forces"], "extent": [10222, 10243], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Forces"], "role": "item", "extent": [8564, 8572], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Simulation"], "extent": [3555, 3572], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [10497, 10925], "text": ["Controls how fast the rest field moves in response to the velocity\n    field.  To get the rest field to stick perfectly to the smoke a\n    value of 1 would be used.  This, however, quickly results in the\n    rest field smearing out in streaks which is often not desired.  By\n    moving it slower than the actual smoke velocity the streaking can\n    be diminished while still letting the rest field move with the\n    smoke."]}], "indent": 0, "text": ["Speed"], "role": "item", "extent": [10489, 10497], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10946, 11110], "text": ["Which frame the rest field will be reset on.  Delaying the\n    initialization of the rest field until after any pre-roll is done\n    can give a better result."]}], "indent": 0, "text": ["Initial Reset Frame"], "role": "item", "extent": [10925, 10946], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11130, 11210], "text": ["The rest field will be reset every time this number of frames goes\n    by."]}], "indent": 0, "text": ["Reset Every Frames"], "role": "item", "extent": [11110, 11130], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11228, 11368], "text": ["Creates a rest2 field that is reset in a leapfrog fashion with the\n    main rest field, allowing one to run long sims without popping."]}], "indent": 0, "text": ["Dual Rest Fields"], "role": "item", "extent": [11210, 11228], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Rest Field"], "extent": [10469, 10489], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [11388, 11581], "text": ["Note that if you are using the alternate fuel model, the sub-stepping\noccurs independently for each object.  In this case you are probably\nbetter off using dop simulation level sub-stepping."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [11599, 11771], "text": ["While the Pyro Solver tries to estimate the correct\n    sub-step size for a stable simulation, if unusual forces are\n    present it may take too large of a step. "]}, {"indent": 4, "type": "para", "extent": [11771, 11839], "text": ["By setting the minimum sub-step you can enforce stability."]}], "indent": 0, "text": ["Minimum Substeps"], "role": "item", "extent": [11581, 11599], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11857, 11953], "text": ["The Pyro Solver will not break the simulation down into\n    more sub-steps than this. "]}, {"indent": 4, "type": "para", "extent": [11953, 12176], "text": ["It is a very good idea to always\n    have a maximum to ensure frames will be finished regardless\n    of their complexity. Lowering this ceiling can ensure a\n    minimum computation time at the expense of accuracy."]}], "indent": 0, "text": ["Maximum Substeps"], "role": "item", "extent": [11839, 11857], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [12191, 12421], "text": ["The CFL Condition is a factor used for automatically\n    determining what size sub-step a scene requires. The idea is\n    that any sub-step should not allow any objects to\n    interpenetrate by more than one voxel cell. "]}, {"indent": 4, "type": "para", "extent": [12421, 12646], "text": ["This condition\n    is met when this parameter is at 1. A value of 10 would\n    allow a sub-step to move the smoke by as much as 10 voxel\n    cells, possibly tunneling through objects rather than\n    properly deflecting."]}], "indent": 0, "text": ["CFL Condition"], "role": "item", "extent": [12176, 12191], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [12662, 12881], "text": ["The type of advection to use.  The ", {"text": ["Single Stage"], "type": "ui"}, " method is equivalent to the ", {"text": ["Gas Advect DOP"], "fullpath": "/nodes/dop/gasadvect", "scheme": "Node", "type": "link", "value": "/nodes/dop/gasadvect"}, ", where each point is back traced\n    through the velocity field once to find the new voxel value."]}, {"indent": 4, "type": "para", "extent": [12881, 13162], "text": ["The ", {"text": ["BFECC"], "type": "ui"}, " and ", {"text": ["Modified MacCormack"], "type": "ui"}, " methods do a second basic\n    advection stage to compute an estimate of the error introduced by the\n    advection process.  The field can then be corrected by this error,\n    resulting in a sharper fluid that doesn\u2019t disperse as much."]}], "indent": 0, "text": ["Advection Type"], "role": "item", "extent": [12646, 12662], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13176, 13658], "text": ["The error correction factor can result in the new voxel values lying\n    outside the range of the original field, resulting in negative density\n    values, for example.  Clamping will restrict each voxel to the range of\n    values that are possible given its eight original values.  Revert will, if\n    the error-corrected voxel is out of range, revert back to the single-stage\n    value.  Reverting can avoid checker like artifacts where the error\n    correction breaks down."]}], "indent": 0, "text": ["Clamp Values"], "role": "item", "extent": [13162, 13176], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13675, 13918], "text": ["The advection type of the velocity field can be controlled separately from\n    the base fields.  Using the higher advection methods will reduce the\n    apparent viscosity of the field, but may end up adding energy or causing\n    chatter."]}], "indent": 0, "text": ["Advect Vel Type"], "role": "item", "extent": [13658, 13675], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13936, 13972], "text": ["Controls particle tracing."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [13989, 14245], "text": ["Takes the velocity at each voxel and makes a single step in\n        that direction for the time step.  This is fastest and is\n        independent of the speed of the velocity field, but will start\n        to break up for large time steps."]}], "indent": 4, "text": ["Single step"], "extent": [13972, 13989], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [14256, 14417], "text": ["Ensures the backtracking does not move more than a single\n        voxel before its velocity is updated, allowing for larger\n        time steps."]}], "indent": 4, "text": ["Trace"], "extent": [14245, 14256], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [14431, 14533], "text": ["Like Trace but uses a higher order advection for more accuracy\n        but slower simulation."]}], "indent": 4, "text": ["Midpoint"], "extent": [14417, 14431], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Advection Method"], "role": "item", "extent": [13918, 13936], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [14548, 14749], "text": ["When tracing the particles, this controls how many voxels may be\n    stepped in a single iterations.  Higher values will result in faster\n    tracing, and hence faster advection, but more errors."]}], "indent": 0, "text": ["Advection CFL"], "role": "item", "extent": [14533, 14548], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [14768, 15069], "text": ["Controls what method is used to make the velocity field non-divergent.  The\n    PCG method has more accurate boundary conditions.  It also avoids\n    computations inside collision objects.  The Multigrid method, however, is\n    significantly faster, especially as the number of voxels increases."]}], "indent": 0, "text": ["Projection Method"], "role": "item", "extent": [14749, 14768], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [15094, 15298], "text": ["When a velocity field\u2019s ", {"text": ["Velocity Sampling"], "type": "ui"}, " is \"Center\" (on the\n    ", {"text": ["Initial Data"], "type": "ui"}, " tab of the ", {"text": ["Smoke object DOP"], "fullpath": "/nodes/dop/smokeobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/smokeobject"}, "),\n    this specifies the number of iterations to project it."]}, {"indent": 4, "type": "para", "extent": [15298, 15542], "text": ["The number of iterations also controls the maximum distance any change\n    in the velocity field can have, so it should be about the width of the\n    volume in voxels. Lower iterations will be faster but the field will\n    not be as nice."]}], "indent": 0, "text": ["Gauss Seidel Iterations"], "role": "item", "extent": [15069, 15094], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [15564, 15788], "text": ["The multigrid method has inaccurate boundary enforcement.  By repeating the\n    enforcement/projection multiple times, it can quickly converge to an\n    accurate solution.  This should not have to be higher than 5."]}], "indent": 0, "text": ["Multigrid Iterations"], "role": "item", "extent": [15542, 15564], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Substepping"], "extent": [11368, 11388], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [15823, 15979], "text": ["An overall scale adjustment for the vorticle forces.  Note\n    vorticle forces are only present if data named vorticles\n    is attached to the object."]}], "indent": 0, "text": ["Vorticle Strength"], "role": "item", "extent": [15803, 15823], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [15995, 16135], "text": ["A scale factor used in applying feedback forces to other\n    objects.  A value of zero prevents any feedback from\n    occurring.  "]}, {"indent": 4, "type": "para", "extent": [16135, 16265], "text": ["The value can be thought of as a density, so to\n    have a default RBD object to balance a value of 1000 should\n    be used."]}], "indent": 0, "text": ["Feedback Scale"], "role": "item", "extent": [15979, 15995], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [16295, 16650], "text": ["The velocity field is often an offset field.  To compute a\n    turbulence, three passes are needed for the x, y, and z\n    components.  Enabling this option will compute the turbulence onto\n    an aligned field and then average the result into the offset\n    velocity field, which significantly reduces the amount of noise calculations\n    required."]}], "indent": 0, "text": ["Align Turbulence Calculation"], "role": "item", "extent": [16265, 16295], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Forces"], "extent": [15788, 15803], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [16730, 16939], "text": ["The collision mask is an SDF built storing the distance to\n    the collision geometry for each node.  By default, it is\n    only calculated up to a certain distance from the\n    collision geometry.  "]}, {"indent": 4, "type": "para", "extent": [16939, 17133], "text": ["However, if you want to use this\n    field for special effects (such as having things react\n    before they reach the object), one might want to compute\n    the full range of the mask."]}], "indent": 0, "text": ["Restrict Mask to Bandwidth"], "role": "item", "extent": [16701, 16730], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [17168, 17295], "text": ["When building the collision field for the smoke use the\n    collision objects per-point motion to detect deformation."]}, {"indent": 4, "type": "para", "extent": [17295, 17443], "text": ["This allows one to properly react to deforming objects. This\n    only will work if the objects have a consistent point count,\n    however."]}], "indent": 0, "text": ["Use Point Velocity for Collisions"], "role": "item", "extent": [17133, 17168], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [17479, 17626], "text": ["When building the collision field for the smoke use the\n    collision objects change in volume representation to detect\n    deformation. "]}, {"indent": 4, "type": "para", "extent": [17626, 17749], "text": ["This allows objects that are deforming over\n    time and changing point count to still properly affect the\n    smoke."]}], "indent": 0, "text": ["Use Volume Velocity for Collisions"], "role": "item", "extent": [17443, 17479], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [17768, 17933], "text": ["Controls how the source object\u2019s temperature physical\n    parameter will affect the smoke\u2019s temperature field.  The\n    options match those for Velocity Merge."]}], "indent": 0, "text": ["Temperature Merge"], "role": "item", "extent": [17749, 17768], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [17955, 18057], "text": ["Allows the fluid to collide with objects that don\u2019t have\n    Geometry/SDF, such as other fluids."]}], "indent": 0, "text": ["Collide with Non-SDF"], "role": "item", "extent": [17933, 17955], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [18086, 18363], "text": ["The density and fuel fields are copied into the collision field, causing\n    the smoke to become sticky and not have an air gap\n    between it and the collision surface when rendered.  This also\n    helps prevent smoke from tunneling through moving collision\n    objects."]}], "indent": 0, "text": ["Extrapolate into Collisions"], "role": "item", "extent": [18057, 18086], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [18383, 18544], "text": ["Density and fuel fields that are inside the collision object are\n    set to 0.  This helps ensure fuel and density can not leak\n    through moving objects."]}], "indent": 0, "text": ["Correct Collisions"], "role": "item", "extent": [18363, 18383], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 4, "text": ["Collisions"], "extent": [16679, 16701], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [18579, 18674], "text": ["Controls how the source object\u2019s velocity will affect the\n    smoke\u2019s velocity field."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [18684, 18729], "text": ["The source velocity will be ignored."]}], "indent": 4, "text": ["None"], "extent": [18674, 18684], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [18751, 18920], "text": ["A blend of the gas\u2019s velocity field and the source\n        object\u2019s velocity will be done with the weights\n        for each dependent on the relative densities."]}], "indent": 4, "text": ["Weighted Average"], "extent": [18729, 18751], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [18940, 19096], "text": ["The object\u2019s velocity will affect the field to an\n        extent that the source\u2019s density is greater than\n        the original density.  "]}, {"indent": 8, "type": "para", "extent": [19096, 19276], "text": ["If you add smoke with a\n        maximum operator (the default) this has the effect\n        of only having newly added smoke affect the\n        velocity field."]}], "indent": 4, "text": ["Net New Source"], "extent": [18920, 18940], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Velocity Merge"], "role": "item", "extent": [18562, 18579], "container": true, "type": "parameters_item"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [19311, 19509], "text": ["The velocity of the object treating it as a rigid\n        body.  Only the angular velocity and linear velocity\n        will be used, no local deformation will be taken into\n        account."]}], "indent": 4, "text": ["Rigid Velocity"], "extent": [19291, 19311], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [19529, 19697], "text": ["The velocity of the object attempting to take into\n        account deformation by using point history.  This only\n        works if the topology doesn\u2019t change."]}], "indent": 4, "text": ["Point Velocity"], "extent": [19509, 19529], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [19718, 19903], "text": ["Uses the SDF representation of the object to detect\n        deformation.  Does not require a fixed topology over\n        time, but cannot detect tangential velocities."]}], "indent": 4, "text": ["Volume Velocity"], "extent": [19697, 19718], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Velocity Type"], "role": "item", "extent": [19276, 19291], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [19922, 20087], "text": ["Controls how the source object\u2019s temperature physical\n    parameter will affect the smoke\u2019s temperature field.  The\n    options match those for Velocity Merge."]}], "indent": 0, "text": ["Temperature Merge"], "role": "item", "extent": [19903, 19922], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 4, "text": ["Sources"], "extent": [18544, 18562], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [20119, 20195], "text": ["Controls how the pump object\u2019s per point velocity is\n    computed."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [20215, 20413], "text": ["The velocity of the object treating it as a rigid\n        body.  Only the angular velocity and linear velocity\n        will be used, no local deformation will be taken into\n        account."]}], "indent": 4, "text": ["Rigid Velocity"], "extent": [20195, 20215], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [20433, 20601], "text": ["The velocity of the object attempting to take into\n        account deformation by using point history.  This only\n        works if the topology doesn\u2019t change."]}], "indent": 4, "text": ["Point Velocity"], "extent": [20413, 20433], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [20622, 20799], "text": ["Uses the SDF representation of the object to detect\n        deformation.  Does not require a fixed topology over\n        time, but cannot detect tangential velocities."]}], "indent": 4, "text": ["Volume Velocity"], "extent": [20601, 20622], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Velocity Type"], "role": "item", "extent": [20103, 20119], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [20818, 20938], "text": ["Controls how the pump object\u2019s temperature physical\n    parameter will affect the smoke\u2019s temperature field.  "]}, {"indent": 4, "type": "para", "extent": [20938, 21059], "text": ["The choices are to leave it unaffected or to directly set the\n    interior of the pump to the pump temperature."]}], "indent": 0, "text": ["Temperature Merge"], "role": "item", "extent": [20799, 20818], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 4, "text": ["Pumps"], "extent": [20087, 20103], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [21097, 21357], "text": ["Zeros out the specified types of fields after the solve\n        step.  This ensures the ", {"text": [".sim"], "type": "code"}, " files, which store the\n        complete state of the simulation, do not have any\n        information not needed, reducing their size and save time."]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [21371, 21422], "text": ["No special clearing of fields is done."]}], "indent": 8, "text": ["None"], "extent": [21357, 21371], "container": true, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [21438, 21550], "text": ["Fields not needed for the next time step that do\n            not have guide parameters are cleared."]}], "indent": 8, "text": ["Hidden"], "extent": [21422, 21438], "container": true, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [21566, 21747], "text": ["Fields not needed for next time step are cleared.\n            Note that some guides will thus start showing up\n            as zero as the underlying field got cleared."]}], "indent": 8, "text": ["Static"], "extent": [21550, 21566], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 4, "text": ["Fields to Clear"], "role": "item", "extent": [21075, 21097], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [21763, 21854], "text": ["A space separated list of extra fields that should be\n        cleared post-solve."]}], "indent": 4, "text": ["Additional"], "role": "item", "extent": [21747, 21763], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 4, "text": ["Clear"], "extent": [21059, 21075], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"type": "para", "indent": 4, "extent": [38, 142], "text": ["Each data option parameter has an associated menu which specifies\n    how that parameter operates."]}, {"body": [{"body": [{"type": "para", "indent": 8, "extent": [160, 215], "text": ["Use the value from the Default Operation menu."]}], "container": true, "text": ["Use Default "], "extent": [142, 160], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [233, 479], "text": ["Set the value of this parameter only when this data is created.\n        On all subsequent timesteps, the value of this parameter is not\n        altered. This is useful for setting up initial conditions like\n        position and velocity."]}], "container": true, "text": ["Set Initial "], "extent": [215, 233], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [496, 823], "text": ["Always set the value of this parameter. This is useful when\n        specific keyframed values are required over time. This could be\n        used to keyframe the position of an object over time, or to\n        cause the geometry from a SOP to be refetched at each timestep\n        if the geometry is deforming. "]}, {"type": "para", "indent": 8, "extent": [823, 1119], "text": ["You can also use this setting in\n        conjunction with the local variables for a parameter value to\n        modify a value over time. For example, in the X Position, an\n        expression like ", {"text": ["$tx + 0.1"], "type": "code"}, " would cause the object to\n        move 0.1 units to the right on each timestep."]}], "container": true, "text": ["Set Always "], "extent": [479, 496], "indent": 4, "type": "dt"}, {"body": [{"type": "para", "indent": 8, "extent": [1135, 1333], "text": ["Do not ever set the value of this parameter. This option is most\n        useful when using this node to modify an existing piece of data\n        connected through the first input. "]}, {"type": "para", "indent": 8, "extent": [1333, 1608], "text": ["For example, an ", {"text": ["RBD State\n        DOP"], "fullpath": "/nodes/dop/rbdstate", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdstate"}, " may want to animate just the mass of an\n        object, and nothing else. The ", {"text": ["Set Never"], "type": "ui"}, " option could be used\n        on all parameters except for ", {"text": ["Mass"], "type": "ui"}, ", which would use ", {"text": ["Set\n        Always"], "type": "ui"}, "."]}], "container": true, "text": ["Set Never "], "extent": [1119, 1135], "indent": 4, "type": "dt"}], "type": "dt_group", "container": true}], "container": true, "text": ["Parameter Operations"], "role": "item", "extent": [16, 38], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [1627, 1762], "text": ["For any parameters with their ", {"text": ["Operation"], "type": "ui"}, " menu set to ", {"text": ["Use\n    Default"], "type": "ui"}, ", this parameter controls what operation is used. "]}, {"type": "para", "indent": 4, "extent": [1762, 1908], "text": ["This\n    parameter has the same menu options and meanings as the ", {"text": ["Parameter\n    Operations"], "type": "ui"}, " menus, but without the ", {"text": ["Use Default"], "type": "ui"}, " choice."]}], "container": true, "text": ["Default Operation"], "role": "item", "extent": [1608, 1627], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [46, 139], "text": ["All objects connected to the first input of this node become mutual\n    affectors. "]}, {"type": "para", "indent": 4, "extent": [139, 412], "text": ["This is equivalent to using an ", {"text": ["Affector\n    DOP"], "fullpath": "/nodes/dop/affector", "scheme": "Node", "type": "link", "value": "/nodes/dop/affector"}, " to create an affector relationship between\n    ", {"text": ["*"], "type": "code"}, " and ", {"text": ["*"], "type": "code"}, " before connecting it to this node. This option makes it\n    convenient to have all objects feeding into a solver node affect\n    each other."]}], "container": true, "text": ["Make Objects Mutual Affectors"], "role": "item", "extent": [15, 46], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [45, 219], "text": ["When an object connector is attached to the first input of this\n    node, this parameter can be used to choose a subset of those objects\n    to be affected by this node."]}], "container": true, "text": ["Group"], "role": "item", "attrs": {"channels": "/group"}, "extent": [15, 22], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [26, 227], "text": ["Indicates the name that should be used to attach the data to an\n    object or other piece of data. If the Data Name contains a \"/\" (or\n    several), that indicates traversing inside subdata. "]}, {"type": "para", "indent": 4, "extent": [227, 530], "text": ["For example, if the ", {"text": ["Fan Force DOP"], "fullpath": "/nodes/dop/fan", "scheme": "Node", "type": "link", "value": "/nodes/dop/fan"}, " has the default Data Name\n    \"Forces/Fan\". This attaches the data with the name \"Fan\" to an\n    existing piece of data named \"Forces\". If no data named \"Forces\"\n    exists, a simple piece of container data is created to hold the\n    \"Fan\" subdata."]}, {"type": "para", "indent": 4, "extent": [530, 833], "text": ["Different pieces of data have different requirements on what names\n    should be used for them. Except in very rare situations, the default\n    value should be used. Some exceptions are described with particular\n    pieces of data or with solvers that make use of some particular type\n    of data."]}], "container": true, "text": ["Data Name"], "role": "item", "extent": [15, 26], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [851, 1058], "text": ["Turning on this parameter modifies the ", {"text": ["Data Name"], "type": "ui"}, " parameter\n    value to ensure that the data created by this node is attached with\n    a unique name so it will not overwrite any existing data. "]}, {"type": "para", "indent": 4, "extent": [1058, 1271], "text": ["With this\n    parameter turned off, attaching two pieces of data with the same\n    name will cause the second one to replace the first. There are\n    situations where each type of behavior is desirable. "]}, {"type": "para", "indent": 4, "extent": [1271, 1585], "text": ["If an object\n    needs to have several ", {"text": ["Fan Forces"], "fullpath": "/nodes/dop/fan", "scheme": "Node", "type": "link", "value": "/nodes/dop/fan"}, " blowing on it, it is\n    much easier to use the ", {"text": ["Unique Data Name"], "type": "ui"}, " feature to ensure that\n    each fan does not overwrite a previous fan rather than trying to\n    change the ", {"text": ["Data Name"], "type": "ui"}, " of each fan individually to avoid\n    conflicts. "]}, {"type": "para", "indent": 4, "extent": [1585, 1827], "text": ["On the other hand, if an object is known to have ", {"text": ["RBD\n    State"], "fullpath": "/nodes/dop/rbdstate", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdstate"}, " data already attached to it, leaving this\n    option turned off will allow some new ", {"text": ["RBD State"], "fullpath": "/nodes/dop/rbdstate", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdstate"}, "\n    data to overwrite the existing data."]}], "container": true, "text": ["Unique Data Name"], "role": "item", "extent": [833, 851], "indent": 0, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [178, 731], "text": ["The default behavior for solvers is to attach the exact same solver to all\n    of the objects specified in the group.  This allows the objects to be\n    processed in a single pass by the solver, since the parameters are identical\n    for each object.  However, some objects operate more logically on a single\n    object at a time.  In these cases, one may want to use ", {"text": ["$OBJID"], "type": "code"}, " expressions\n    to vary the solver parameters across the objects.  Setting this toggle will\n    create a separate solver per object, allowing ", {"text": ["$OBJID"], "type": "code"}, " to vary as expected."]}], "container": true, "text": ["Solver Per Object"], "role": "item", "extent": [159, 178], "indent": 0, "type": "parameters_item"}], "type": "parameters_item_group", "container": true}], "indent": 0, "level": 3, "text": ["Object Merge Options"], "extent": [16650, 16679], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Advanced Options"], "extent": [10446, 10469], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [1154, 1166], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [28, 246], "text": ["This optional input can be used to control which simulation objects\n    are modified by this node. Any objects connected through this input\n    and which match the ", {"text": ["Group"], "type": "ui"}, " parameter field will be modified. "]}, {"type": "para", "indent": 4, "extent": [246, 397], "text": ["If this input is not connected, this node can be used in conjunction with an\n    Apply Data node, or can be used as an input to another data node."]}], "container": true, "text": ["First Input"], "extent": [15, 28], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [415, 557], "text": ["If this node has more input connectors, other data nodes can be\n    attached to act as modifiers for the data created by this node. "]}, {"type": "para", "indent": 4, "extent": [557, 749], "text": ["The specific types of subdata that are meaningful vary from node to\n    node. Click ", {"keys": ["MMB"], "text": null, "type": "keys"}, " an input connector to see a list of available\n    data nodes that can be meaningfully attached."]}], "container": true, "text": ["All Other Inputs"], "extent": [397, 415], "indent": 0, "type": "dt"}], "type": "dt_group", "container": true}], "indent": 0, "level": 1, "text": "Inputs", "role": "section", "extent": [21887, 21895], "container": true, "type": "inputs_section", "id": "inputs"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [29, 296], "text": ["The operation of this output depends on what inputs are connected\n    to this node. If an object stream is input to this node, the output\n    is also an object stream containing the same objects as the input\n    (but with the data from this node attached). "]}, {"type": "para", "indent": 4, "extent": [296, 606], "text": ["If no object stream is\n    connected to this node, the output is a data output. This data\n    output can be connected to an ", {"text": ["Apply Data DOP"], "fullpath": "/nodes/dop/applydata", "scheme": "Node", "type": "link", "value": "/nodes/dop/applydata"}, ",\n    or connected directly to a data input of another data node, to\n    attach the data from this node to an object or another piece of\n    data."]}], "container": true, "text": ["First Output"], "extent": [15, 29], "indent": 0, "type": "dt"}], "type": "dt_group", "container": true}], "indent": 0, "level": 1, "text": "Outputs", "role": "section", "extent": [21928, 21937], "container": true, "type": "outputs_section", "id": "outputs"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [29, 325], "text": ["This DOP node defines a local variable for each channel and\n    parameter on the Data Options page, with the same name as the\n    channel. So for example, the node may have channels for Position\n    (positionx, positiony, positionz) and a parameter for an object name\n    (objectname). "]}, {"type": "para", "indent": 4, "extent": [325, 519], "text": ["Then there will also be local variables with the names\n    positionx, positiony, positionz, and objectname. These variables\n    will evaluate to the previous value for that parameter. "]}, {"type": "para", "indent": 4, "extent": [519, 692], "text": ["This previous value is always stored as part of the data attached to the\n    object being processed. This is essentially a shortcut for a\n    dopfield expression like:"]}, {"lang": null, "type": "pre", "indent": 4, "extent": [692, 775], "text": ["\n    dopfield($DOPNET, $OBJID, dataName, \"Options\", 0, channelname)\n    "]}, {"type": "para", "indent": 4, "extent": [775, 883], "text": ["If the data does not already exist, then a value of zero or an\n    empty string will be returned."]}], "container": true, "text": ["channelname"], "extent": [16, 29], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [891, 1132], "text": ["This value is the simulation time (see variable ST) at which the\n    current data was created. This value may not be the same as the\n    current simulation time if this node is modifying existing data,\n    rather than creating new data."]}], "container": true, "text": ["DATACT"], "extent": [883, 891], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [1140, 1383], "text": ["This value is the simulation frame (see variable SF) at which the\n    current data was created. This value may not be the same as the\n    current simulation frame if this node is modifying existing data,\n    rather than creating new data."]}], "container": true, "text": ["DATACF"], "extent": [1132, 1140], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [1392, 1594], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [1594, 1712], "text": ["In this case, this value is set to the\n    name of the relationship the data to which the data is being attached."]}], "container": true, "text": ["RELNAME"], "extent": [1383, 1392], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [1723, 1925], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [1925, 2128], "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affected Objects of the relationship to which the data is being\n    attached."]}], "container": true, "text": ["RELOBJIDS"], "extent": [1712, 1723], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [2141, 2343], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [2343, 2528], "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affected\n    Objects of the relationship to which the data is being attached."]}], "container": true, "text": ["RELOBJNAMES"], "extent": [2128, 2141], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [2542, 2744], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [2744, 2947], "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affector Objects of the relationship to which the data is being\n    attached."]}], "container": true, "text": ["RELAFFOBJIDS"], "extent": [2528, 2542], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [2963, 3165], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [3165, 3350], "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affector\n    Objects of the relationship to which the data is being attached."]}], "container": true, "text": ["RELAFFOBJNAMES"], "extent": [2947, 2963], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [20, 107], "text": ["This value is the simulation time for which the node is being\n    evaluated. "]}, {"type": "para", "indent": 4, "extent": [107, 326], "text": ["This value may not be equal to the current Houdini time\n    represented by the variable T, depending on the settings of the ", {"text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet", "scheme": "Node", "type": "link", "value": "/nodes/obj/dopnet"}, " ", {"text": ["Offset Time"], "type": "ui"}, " and ", {"text": ["Time Scale"], "type": "ui"}, "\n    parameters. "]}, {"type": "para", "indent": 4, "extent": [326, 555], "text": ["This value is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"text": ["$ST == 0"], "type": "code"}, " rather than\n    ", {"text": ["$T == 0"], "type": "code"}, " or ", {"text": ["$FF == 1"], "type": "code"}, "."]}], "container": true, "text": ["ST"], "extent": [16, 20], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [559, 700], "text": ["This value is the simulation frame (or more accurately, the\n    simulation time step number) for which the node is being evaluated."]}, {"type": "para", "indent": 4, "extent": [700, 999], "text": ["This value may not be equal to the current Houdini frame number\n    represented by the variable F, depending on the settings of the ", {"text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet", "scheme": "Node", "type": "link", "value": "/nodes/obj/dopnet"}, " parameters. Instead, this value is equal to\n    the simulation time (ST) divided by the simulation timestep size\n    (TIMESTEP)."]}], "container": true, "text": ["SF"], "extent": [555, 559], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [1009, 1181], "text": ["This value is the size of a simulation timestep. This value is\n    useful to scale values that are expressed in units per second, but\n    are applied on each timestep."]}], "container": true, "text": ["TIMESTEP"], "extent": [999, 1009], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [1187, 1305], "text": ["This value is the inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."]}], "container": true, "text": ["SFPS"], "extent": [1181, 1187], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [1312, 1523], "text": ["This is the number of objects in the simulation. For nodes that\n    create objects such as the ", {"text": ["Empty Object"], "fullpath": "/nodes/dop/emptyobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/emptyobject"}, " node,\n    this value will increase for each object that is evaluated. "]}, {"type": "para", "indent": 4, "extent": [1523, 1621], "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"text": ["object_$SNOBJ"], "type": "code"}, "."]}], "container": true, "text": ["SNOBJ"], "extent": [1305, 1312], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [1627, 1859], "text": ["This value is the number of objects that will be evaluated by the\n    current node during this timestep. This value will often be\n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "]}, {"type": "para", "indent": 4, "extent": [1859, 1991], "text": ["This value may return 0 if the node does not\n    process each object sequentially (such as the ", {"text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "container": true, "text": ["NOBJ"], "extent": [1621, 1627], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [1996, 2322], "text": ["This value is the index of the specific object being processed by\n    the node. This value will always run from zero to NOBJ-1 in a given\n    timestep. This value does not identify the current object within the\n    simulation like OBJID or OBJNAME, just the object\u2019s position in the\n    current order of processing. "]}, {"type": "para", "indent": 4, "extent": [2322, 2616], "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    will be -1 if the node does not process objects sequentially (such\n    as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "container": true, "text": ["OBJ"], "extent": [1991, 1996], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [2623, 2883], "text": ["This is the unique object identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. "]}, {"type": "para", "indent": 4, "extent": [2883, 3168], "text": ["The object identifier\n    can always be used to uniquely identify a given object. This makes\n    this variable very useful in situations where each object needs to\n    be treated differently. It can be used to produce a unique random\n    number for each object, for example. "]}, {"type": "para", "indent": 4, "extent": [3168, 3406], "text": ["This value is also the best way\n    to look up information on an object using the dopfield expression\n    function. This value will be -1 if the node does not process objects\n    sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "container": true, "text": ["OBJID"], "extent": [2616, 2623], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [3417, 3556], "text": ["This string contains a space separated list of the unique object\n    identifiers for every object being processed by the current node."]}], "container": true, "text": ["ALLOBJIDS"], "extent": [3406, 3417], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [3569, 3687], "text": ["This string contains a space separated list of the names of every\n    object being processed by the current node."]}], "container": true, "text": ["ALLOBJNAMES"], "extent": [3556, 3569], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [3694, 3801], "text": ["This value is the simulation time (see variable ST) at which the\n    current object was created. "]}, {"type": "para", "indent": 4, "extent": [3801, 4057], "text": ["Therefore, to check if an object was created\n    on the current timestep, the expression ", {"text": ["$ST == $OBJCT"], "type": "code"}, " should\n    always be used. This value will be zero if the node does not process\n    objects sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "container": true, "text": ["OBJCT"], "extent": [3687, 3694], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [4064, 4172], "text": ["This value is the simulation frame (see variable SF) at which the\n    current object was created. "]}, {"type": "para", "indent": 4, "extent": [4172, 4389], "text": ["This value is equivalent to using the\n    dopsttoframe expression on the OBJCT variable. This value will be\n    zero if the node does not process objects sequentially (such as the\n    ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "container": true, "text": ["OBJCF"], "extent": [4057, 4064], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [4398, 4486], "text": ["This is a string value containing the name of the object being\n    processed. "]}, {"type": "para", "indent": 4, "extent": [4486, 4748], "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "]}, {"type": "para", "indent": 4, "extent": [4748, 5194], "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named \"myobject\",\n    specifying ", {"text": ["strcmp($OBJNAME, \"myobject\") == 0"], "type": "code"}, " in the activation field\n    of a DOP will cause that DOP to operate only on those 20 objects. This\n    value will be the empty string if the node does not process objects\n    sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "container": true, "text": ["OBJNAME"], "extent": [4389, 4398], "indent": 0, "type": "dt"}, {"body": [{"type": "para", "indent": 4, "extent": [5202, 5425], "text": ["This is a string value containing the full path of the current DOP\n    Network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP Network that contains the\n    node."]}], "container": true, "text": ["DOPNET"], "extent": [5194, 5202], "indent": 0, "type": "dt"}], "type": "dt_group", "container": true}, {"body": [{"body": [{"type": "para", "indent": 4, "extent": [5431, 5620], "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"text": ["Position node"], "fullpath": "/nodes/dop/position", "scheme": "Node", "type": "link", "value": "/nodes/dop/position"}, ",\n    you could write the expression:"]}, {"lang": null, "type": "pre", "indent": 4, "extent": [5620, 5650], "text": ["\n    $tx + 0.1\n    "]}, {"type": "para", "indent": 4, "extent": [5650, 5730], "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."]}], "container": true, "role": "item", "extent": [5425, 5431], "indent": 0, "type": "note"}], "role": "item_group", "container": true, "type": "note_group"}], "indent": 0, "level": 1, "text": "Locals", "role": "section", "extent": [21971, 21979], "container": true, "type": "locals_section", "id": "locals"}], "title": ["Pyro Solver"], "summary": ["Sets and configures a Pyro solver."], "attrs": {"index": "no", "version": "", "since": "10.0", "namespace": null, "internal": "pyrosolver", "context": "dop", "type": "node", "icon": "DOP/pyrosolver"}, "included": ["/nodes/dop/standard_data_inputs", "/nodes/dop/standard_data_locals", "/nodes/dop/standard_data_outputs", "/nodes/dop/standard_datagroup_parms", "/nodes/dop/standard_dataname_parms", "/nodes/dop/standard_dataop_parms", "/nodes/dop/standard_locals", "/nodes/dop/standard_solver_mutualparms", "/nodes/dop/standard_solver_parms"], "type": "root"}