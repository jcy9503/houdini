{"body": [{"indent": 0, "text": ["Fur"], "type": "title", "extent": [104, 112], "level": 0}, {"indent": 0, "type": "summary", "extent": [112, 185], "text": ["Creates fur geometry for rendering with a Mantra Fur Procedural."]}, {"body": [{"indent": 0, "type": "para", "extent": [200, 268], "text": ["The Fur object creates fur rooted on the specified skin geometry."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [274, 384], "text": ["You need UV coordinates when using any of the texture map parameters. See ", {"text": ["UV Texture"], "fullpath": "/nodes/sop/texture", "scheme": "Node", "type": "link", "value": "/nodes/sop/texture"}, "."]}], "indent": 0, "role": "item", "extent": [268, 274], "container": true, "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}, {"body": [{"body": [], "indent": 0, "text": [" Hair transfer"], "role": "item", "attrs": {"id": "116797623"}, "extent": [384, 406], "container": true, "type": "vimeo"}], "container": true, "role": "item_group", "type": "vimeo_group"}], "indent": 0, "level": 2, "text": ["Overview"], "extent": [185, 200], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [437, 582], "text": ["Memory usage can be reduced by transferring values as primitive attributes from the skin instead of point/vertex attributes from the guides."]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [582, 935], "text": ["The ", {"text": ["Radius"], "type": "ui"}, " parameter on the ", {"text": ["Guide"], "type": "ui"}, " tab affects how big of an area is influenced by each guide hair. You can also create a primitive attribute called for more control. If this value is too small, some hairs might not have any guide hairs influencing them. If the value is too big, the effect of individual guide hairs will be difficult to see."]}, {"body": [{"body": [{"indent": 4, "blevel": 6, "type": "bullet", "extent": [1170, 1283], "text": ["The guides are used as the rest pose of the wires and needs to be deformed to match animation on the skin."]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [1283, 1425], "text": ["The guides should have a primitive attribute called ", {"text": ["guideorigin"], "type": "code"}, " indicating where the guide attaches to the skin in its rest position."]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [1425, 1560], "text": ["If you are adding dynamics, a point attribute called ", {"text": ["pintoanimation"], "type": "code"}, " should be used to constrain the root point of each curve."]}], "container": true, "type": "bullet_group"}], "indent": 0, "text": ["The ", {"text": ["guides"], "type": "code"}, " subnet inside the ", {"text": ["Fur Object"], "fullpath": "/nodes/obj/fur", "scheme": "Node", "type": "link", "value": "/nodes/obj/fur"}, " creates the initial guide hair curves.  This network can be replaced with one defining hand-modeled guides.  There are a few items to keep in mind when creating this network:"], "extent": [935, 1170], "container": true, "blevel": 2, "type": "bullet"}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 2, "text": ["Tips"], "extent": [426, 437], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [1615, 1850], "text": ["Whether or not this object is displayed. Turn on the checkbox to\n    have Houdini use this parameter, then set the value to 0 to hide\n    the object, or 1 to show the object. If the checkbox is off,\n    Houdini ignores the value."]}], "indent": 0, "text": ["Display"], "role": "item", "attrs": {"id": "displayfur"}, "extent": [1585, 1595], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1870, 1903], "text": ["Type of geometry to create."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [1916, 1943], "text": ["Create a polyline."]}], "indent": 4, "text": ["Polygon"], "extent": [1903, 1916], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [1954, 1984], "text": ["Create a NURBS curve."]}], "indent": 4, "text": ["NURBS"], "extent": [1943, 1954], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2008, 2073], "text": ["Create a polygon curve. This is much faster than NURBS."]}], "indent": 4, "text": ["Subdivision Curves"], "extent": [1984, 2008], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Type"], "role": "item", "attrs": {"id": "type"}, "extent": [1850, 1856], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2097, 2148], "text": ["Specifies the length of the generated curves."]}], "indent": 0, "text": ["Length"], "role": "item", "attrs": {"id": "length"}, "extent": [2073, 2081], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2172, 2282], "text": ["Number of segments in each generated curve (ignored if geometry is\n    provided by the ", {"text": ["Guides"], "type": "ui"}, " input)"]}], "indent": 0, "text": ["Segments"], "role": "item", "attrs": {"id": "segs"}, "extent": [2148, 2158], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2315, 2363], "text": ["Seed value for the random number generator"]}], "indent": 0, "text": ["Distribution Seed"], "role": "item", "attrs": {"id": "seed"}, "extent": [2282, 2301], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2404, 2652], "text": ["The number of displayed curves is a result of the density\n    multiplied by the area of the skin polygons.  The value of this\n    parameter acts as a scalar multiplier to the optional ", {"text": ["furdensity"], "type": "code"}, "\n    attribute to determine the curve density."]}], "indent": 0, "text": ["Display Density"], "role": "item", "attrs": {"id": "displaydensity"}, "extent": [2363, 2380], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2689, 2741], "text": ["Specifies a fraction of the curves to display."]}], "indent": 0, "text": ["Display Ratio"], "role": "item", "attrs": {"id": "displayratio"}, "extent": [2652, 2667], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2780, 3027], "text": ["The number of rendered curves is a result of the density\n    multiplied by the area of the skin polygons.  The value of this\n    parameter acts as a scalar multiplier to the optional ", {"text": ["furdensity"], "type": "code"}, "\n    attribute to determine the curve density."]}], "indent": 0, "text": ["Render Density"], "role": "item", "attrs": {"id": "renderdensity"}, "extent": [2741, 2757], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3062, 3112], "text": ["Specifies a fraction of the hairs to render."]}], "indent": 0, "text": ["Render Ratio"], "role": "item", "attrs": {"id": "renderratio"}, "extent": [3027, 3041], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3140, 3176], "text": ["Path to the Material node."]}], "indent": 0, "text": ["Material"], "role": "item", "attrs": {"id": "material"}, "extent": [3112, 3122], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3199, 3381], "text": ["It enables shaded open curve rendering in the viewport, which draws the hair curves as ribbons (instead of lines) and uses a hair-based lighting model for shading those curves."]}], "indent": 0, "text": ["Shade Fur in Viewport"], "role": "item", "extent": [3176, 3199], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Basic"], "extent": [1572, 1585], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [3426, 3520], "text": ["When enabled, the shape of rendered hairs will be interpolated from the\n    guide hairs."]}], "indent": 0, "text": ["Use Guides"], "role": "item", "attrs": {"id": "useguides"}, "extent": [3394, 3407], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3552, 3603], "text": ["Whether or not the guide hairs are displayed."]}], "indent": 0, "text": ["Display"], "role": "item", "attrs": {"id": "displayguides"}, "extent": [3520, 3529], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3655, 3709], "text": ["Remove all hairs not influenced by a guide hair."]}], "indent": 0, "text": ["Remove Unguided Hairs"], "role": "item", "attrs": {"id": "removeunguidedhairs"}, "extent": [3603, 3626], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3737, 3774], "text": ["Color used to draw guide hairs."]}], "indent": 0, "text": ["Color"], "role": "item", "attrs": {"id": "guidescolor"}, "extent": [3709, 3716], "container": true, "type": "parameters_item"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [3820, 3872], "text": ["Creates a guide at every point of the skin."]}], "indent": 4, "text": ["Place At Every Surface Point"], "extent": [3786, 3820], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3896, 4024], "text": ["Indicates guide hairs should be scattered across the skin instead of\n        placed at points within the skin geometry."]}], "indent": 4, "text": ["Scatter On Surface"], "extent": [3872, 3896], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [4042, 4225], "text": ["Fetches guides from an external geometry. In this mode, additional parameters will be displayed below, which can be useful for fixing common errors in imported guide curves."]}], "indent": 4, "text": ["Use External"], "extent": [4024, 4042], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [4251, 4414], "text": ["Doesn\u2019t generate any guides, instead allowing the user to create them from scratch, for example using tools on the ", {"text": ["Grooming Shelf"], "fullpath": "/shelf/guidebrushes/index", "scheme": null, "type": "link", "value": "/shelf/guidebrushes/"}, "."]}], "indent": 4, "text": ["Draw Guides Manually"], "extent": [4225, 4251], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Guide Type"], "role": "item", "extent": [3774, 3786], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4442, 4492], "text": ["Path to an object containing guide geometry."]}], "indent": 0, "text": ["Geometry"], "role": "item", "attrs": {"id": "guidegeo"}, "extent": [4414, 4424], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4524, 4592], "text": ["Resamples external guides to match the ", {"text": ["Segments"], "type": "ui"}, " parameter."]}], "indent": 0, "text": ["Resample To Match Fur Segments"], "role": "item", "extent": [4492, 4524], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4608, 4780], "text": ["When importing external guides, reverses the order of vertices within each each curve. This should be used when the root vertex is not the first vertex in the curve. "]}], "indent": 0, "text": ["Reverse Curves"], "role": "item", "extent": [4592, 4608], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4794, 4859], "text": ["Moves external guides so the root sits exactly on the skin."]}], "indent": 0, "text": ["Snap To Skin"], "role": "item", "extent": [4780, 4794], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4897, 4950], "text": ["The seed value for the random number generator."]}], "indent": 0, "text": ["Distribution Seed"], "role": "item", "attrs": {"id": "guideseed"}, "extent": [4859, 4878], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4981, 5224], "text": ["The number of guide hairs is a result of the density multiplied by the area\n    of the skin polygons.  The value of this parameter acts as a scalar\n    multiplier to the optional ", {"text": ["furdensity"], "type": "code"}, " attribute to determine the curve\n    density."]}], "indent": 0, "text": ["Density"], "role": "item", "attrs": {"id": "guidedensity"}, "extent": [4950, 4959], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5242, 5379], "text": ["The number of relax iterations to perform when scattering guides. More\n    iterations result in a more even distribution of guides."]}], "indent": 0, "text": ["Relax Iterations"], "role": "item", "extent": [5224, 5242], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5418, 5520], "text": ["Maximum distance a hair can be from a guide hair and still be influenced\n    by the guide hair."]}], "indent": 0, "text": ["Influence Radius"], "role": "item", "attrs": {"id": "guideradius"}, "extent": [5379, 5397], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [5577, 5619], "text": ["The class for transferred attribute."]}], "indent": 0, "text": ["New Class"], "role": "item", "attrs": {"id": "guideattribclass"}, "extent": [5539, 5551], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5669, 5884], "text": ["Specifies a list of attributes from the guide and clump curves\n    that will be transferred to the generated curves.  The\n    resulting attribute values will contain any modifications made\n    by CVEX shaders."]}], "indent": 0, "text": ["Transfer Attributes"], "role": "item", "attrs": {"id": "guidetextureattribs"}, "extent": [5619, 5640], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Attributes"], "extent": [5520, 5539], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [5936, 6009], "text": ["Specifies a texture map used to modulate the length of guide hairs."]}], "indent": 0, "text": ["Length Map"], "role": "item", "attrs": {"id": "guidelengthmap"}, "extent": [5899, 5912], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6056, 6147], "text": ["Specifies how much the ", {"text": ["Length Map"], "type": "ui"}, " can modulate the length of\n    each guide hair."]}], "indent": 0, "text": ["Length Map Blend"], "role": "item", "attrs": {"id": "guidelengthmapblend"}, "extent": [6009, 6027], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Length"], "extent": [5884, 5899], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [6192, 6281], "text": ["Specifies how much additive noise to apply to the direction of each guide\n    hair."]}], "indent": 0, "text": ["Comb Noise"], "role": "item", "attrs": {"id": "combnoise"}, "extent": [6160, 6173], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6319, 6391], "text": ["Specifies a texture map used to modulate the amount of comb noise."]}], "indent": 0, "text": ["Comb Noise Map"], "role": "item", "attrs": {"id": "combnoisemap"}, "extent": [6281, 6297], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6440, 6530], "text": ["Specifies how much the ", {"text": ["Comb Noise Map"], "type": "ui"}, " can modulate the amount of comb\n    noise."]}], "indent": 0, "text": ["Comb Noise Map Blend"], "role": "item", "attrs": {"id": "combnoisemapblend"}, "extent": [6391, 6413], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Comb"], "extent": [6147, 6160], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [6564, 6636], "text": ["Specifies how much a guide hair will bend in the combed direction."]}, {"indent": 4, "type": "para", "extent": [6636, 6769], "text": ["NOTE:\n    Guide hairs must be combed away from the normal or have comb noise applied for the bend direction to be well-defined."]}], "indent": 0, "text": ["Bend"], "role": "item", "attrs": {"id": "bend"}, "extent": [6543, 6550], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6796, 6867], "text": ["Specifies a texture map used to modulate the bend of guide hairs."]}], "indent": 0, "text": ["Bend Map"], "role": "item", "attrs": {"id": "bendmap"}, "extent": [6769, 6779], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6905, 6992], "text": ["Specifies how much the ", {"text": ["Bend Map"], "type": "ui"}, " can modulate the bend of each guide\n    hair."]}], "indent": 0, "text": ["Bend Map Blend"], "role": "item", "attrs": {"id": "bendmapblend"}, "extent": [6867, 6883], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7023, 7101], "text": ["Specifies how much additive noise to apply when bending each guide hair."]}], "indent": 0, "text": ["Bend Noise"], "role": "item", "attrs": {"id": "bendnoise"}, "extent": [6992, 7004], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7139, 7211], "text": ["Specifies a texture map used to modulate the amount of bend noise."]}], "indent": 0, "text": ["Bend Noise Map"], "role": "item", "attrs": {"id": "bendnoisemap"}, "extent": [7101, 7117], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7260, 7350], "text": ["Specifies how much the ", {"text": ["Bend Noise Map"], "type": "ui"}, " can modulate the amount of bend\n    noise."]}], "indent": 0, "text": ["Bend Noise Map Blend"], "role": "item", "attrs": {"id": "bendnoisemapblend"}, "extent": [7211, 7233], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Bend"], "extent": [6530, 6543], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [7387, 7460], "text": ["Specifies how much a guide hair will twist in the combed direction."]}], "indent": 0, "text": ["Twist"], "role": "item", "attrs": {"id": "twist"}, "extent": [7364, 7372], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7489, 7561], "text": ["Specifies a texture map used to modulate the twist of guide hairs."]}], "indent": 0, "text": ["Twist Map"], "role": "item", "attrs": {"id": "twistmap"}, "extent": [7460, 7471], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7601, 7690], "text": ["Specifies how much the ", {"text": ["Twist Map"], "type": "ui"}, " can modulate the twist of each guide\n    hair."]}], "indent": 0, "text": ["Twist Map Blend"], "role": "item", "attrs": {"id": "twistmapblend"}, "extent": [7561, 7578], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7723, 7802], "text": ["Specifies how much additive noise to apply when twisting each guide hair."]}], "indent": 0, "text": ["Twist Noise"], "role": "item", "attrs": {"id": "twistnoise"}, "extent": [7690, 7703], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7842, 7915], "text": ["Specifies a texture map used to modulate the amount of twist noise."]}], "indent": 0, "text": ["Twist Noise Map"], "role": "item", "attrs": {"id": "twistnoisemap"}, "extent": [7802, 7819], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7966, 8058], "text": ["Specifies how much the ", {"text": ["Twist Noise Map"], "type": "ui"}, " can modulate the amount of twist\n    noise."]}], "indent": 0, "text": ["Twist Noise Map Blend"], "role": "item", "attrs": {"id": "twistnoisemapblend"}, "extent": [7915, 7938], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Twist"], "extent": [7350, 7364], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Guides"], "extent": [3381, 3394], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [8129, 8178], "text": ["Seed value for the random number generator."]}], "indent": 0, "text": ["Distribution Seed"], "role": "item", "attrs": {"id": "whiteseed"}, "extent": [8090, 8110], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8205, 8267], "text": ["Specifies a fraction of the hairs to become white hairs."]}], "indent": 0, "text": ["Ratio"], "role": "item", "attrs": {"id": "whiteratio"}, "extent": [8178, 8185], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8296, 8372], "text": ["Specifies a texture map used to modulate the ratio of white\n    hairs."]}], "indent": 0, "text": ["White Map"], "role": "item", "attrs": {"id": "whitemap"}, "extent": [8267, 8278], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8412, 8498], "text": ["Specifies how much the ", {"text": ["White Map"], "type": "ui"}, " will modulate the ratio of\n    white hairs."]}], "indent": 0, "text": ["White Map Blend"], "role": "item", "attrs": {"id": "whitemapblend"}, "extent": [8372, 8389], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["White"], "extent": [8075, 8090], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [8519, 8645], "text": ["Animals have a layer of longer coarse hairs which protect the softer fur underneath. These hairs are called guard hairs."]}], "indent": 0, "role": "item", "extent": [8512, 8519], "container": true, "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [8683, 8732], "text": ["Seed value for the random number generator."]}], "indent": 0, "text": ["Distribution Seed"], "role": "item", "attrs": {"id": "guardseed"}, "extent": [8645, 8664], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8759, 8821], "text": ["Specifies a fraction of the hairs to become guard hairs."]}], "indent": 0, "text": ["Ratio"], "role": "item", "attrs": {"id": "guardratio"}, "extent": [8732, 8739], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8850, 8926], "text": ["Specifies a texture map used to modulate the ratio of guard\n    hairs."]}], "indent": 0, "text": ["Guard Map"], "role": "item", "attrs": {"id": "guardmap"}, "extent": [8821, 8832], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8966, 9052], "text": ["Specifies how much the ", {"text": ["Guard Map"], "type": "ui"}, " will modulate the ratio of\n    guard hairs."]}], "indent": 0, "text": ["Guard Map Blend"], "role": "item", "attrs": {"id": "guardmapblend"}, "extent": [8926, 8943], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9096, 9154], "text": ["Multiplier applied to the length of all guard hairs."]}], "indent": 0, "text": ["Length Scale"], "role": "item", "attrs": {"id": "guardhairlengthscale"}, "extent": [9052, 9066], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9196, 9253], "text": ["Multiplier applied to the width of all guard hairs."]}], "indent": 0, "text": ["Width Scale"], "role": "item", "attrs": {"id": "guardhairwidthscale"}, "extent": [9154, 9167], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9295, 9352], "text": ["Multiplier applied to the frizz of all guard hairs."]}], "indent": 0, "text": ["Frizz Scale"], "role": "item", "attrs": {"id": "guardhairfrizzscale"}, "extent": [9253, 9266], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Guard"], "extent": [8498, 8512], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Hair Types"], "extent": [8058, 8075], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [9427, 9494], "text": ["Specifies a texture map used to modulate the length of hairs."]}], "indent": 0, "text": ["Length Map"], "role": "item", "attrs": {"id": "lengthmap"}, "extent": [9395, 9408], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9536, 9621], "text": ["Specifies how much the ", {"text": ["Length Map"], "type": "ui"}, " can modulate the length of\n    each hair."]}], "indent": 0, "text": ["Length Map Blend"], "role": "item", "attrs": {"id": "lengthmapblend"}, "extent": [9494, 9512], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9664, 9740], "text": ["Specifies the amount each hair\u2019s length should be randomly\n    scaled."]}], "indent": 0, "text": ["Randomize Length"], "role": "item", "attrs": {"id": "randomizelength"}, "extent": [9621, 9639], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9773, 9851], "text": ["Specifies a texture map used to modulate the ", {"text": ["furdensity"], "type": "code"}, "\n    attribute."]}], "indent": 0, "text": ["Density Map"], "role": "item", "attrs": {"id": "densitymap"}, "extent": [9740, 9753], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9895, 9985], "text": ["Specifies how much the ", {"text": ["Density Map"], "type": "ui"}, " will modulate the\n    ", {"text": ["furdensity"], "type": "code"}, " attribute."]}], "indent": 0, "text": ["Density Map Blend"], "role": "item", "attrs": {"id": "densitymapblend"}, "extent": [9851, 9870], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10010, 10167], "text": ["Specifies a texture map used to cut the length of each hair.\n    This is similar to the ", {"text": ["Length Map"], "type": "ui"}, " but will adjust the frizz to\n    match cut hair."]}], "indent": 0, "text": ["Cut Map"], "role": "item", "attrs": {"id": "cutmap"}, "extent": [9985, 9994], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10203, 10265], "text": ["Specifies how much the ", {"text": ["Cut Map"], "type": "ui"}, " can affect each hair."]}], "indent": 0, "text": ["Cut Map Blend"], "role": "item", "attrs": {"id": "cutmapblend"}, "extent": [10167, 10182], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10308, 10385], "text": ["Specifies a texture map used to displace the position of each\n    hair."]}], "indent": 0, "text": ["Displacement Map"], "role": "item", "attrs": {"id": "displacementmap"}, "extent": [10265, 10283], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10421, 10491], "text": ["Specifies how to interpret values from the ", {"text": ["Displacement Map"], "type": "ui"}, "."]}], "indent": 0, "text": ["Displace Direction"], "role": "item", "attrs": {"id": "offset"}, "extent": [10385, 10405], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10538, 10617], "text": ["Scales the amount each hair is displaced by the ", {"text": ["Displacement\n    Map"], "type": "ui"}, "."]}], "indent": 0, "text": ["Displacement Scale"], "role": "item", "attrs": {"id": "displacementscale"}, "extent": [10491, 10511], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Length & Density"], "extent": [9369, 9395], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [10675, 10754], "text": ["Specifies how the width of each hair varies from the root to\n    the tip."]}], "indent": 0, "text": ["Thickness"], "role": "item", "attrs": {"id": "furstyle_thickness"}, "extent": [10635, 10647], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10795, 10842], "text": ["Specifies the minimum width of each hair."]}], "indent": 0, "text": ["Minimum Thickness"], "role": "item", "attrs": {"id": "thicknessmin"}, "extent": [10754, 10773], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10883, 10930], "text": ["Specifies the maximum width of each hair."]}], "indent": 0, "text": ["Maximum Thickness"], "role": "item", "attrs": {"id": "thicknessmax"}, "extent": [10842, 10861], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10967, 11036], "text": ["Specifies a texture map used to modulate the ", {"text": ["width"], "type": "code"}, " attribute."]}], "indent": 0, "text": ["Thickness Map"], "role": "item", "attrs": {"id": "thicknessmap"}, "extent": [10930, 10945], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11084, 11171], "text": ["Specifies how much the ", {"text": ["Thickness Map"], "type": "ui"}, " will modulate the ", {"text": ["width"], "type": "code"}, "\n    attribute."]}], "indent": 0, "text": ["Thickness Map Blend"], "role": "item", "attrs": {"id": "thicknessmapblend"}, "extent": [11036, 11057], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Thickness"], "extent": [10617, 10635], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [11217, 11314], "text": ["Specifies how the amount of frizz applied to each hair varies\n    from the root to the tip."]}], "indent": 0, "text": ["Frizz"], "role": "item", "attrs": {"id": "furstyle_frizz"}, "extent": [11185, 11193], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11347, 11412], "text": ["Specifies the minimum amount of frizz applied to each hair."]}], "indent": 0, "text": ["Minimum Frizz"], "role": "item", "attrs": {"id": "frizzmin"}, "extent": [11314, 11329], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11445, 11510], "text": ["Specifies the maximum amount of frizz applied to each hair."]}], "indent": 0, "text": ["Maximum Frizz"], "role": "item", "attrs": {"id": "frizzmax"}, "extent": [11412, 11427], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11543, 11610], "text": ["Specifies a texture map used to modulate the frizz amplitude."]}], "indent": 0, "text": ["Amplitude Map"], "role": "item", "attrs": {"id": "frizzmap"}, "extent": [11510, 11525], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11654, 11724], "text": ["Specifies how much the ", {"text": ["Amplitude Map"], "type": "ui"}, " can modulate the frizz."]}], "indent": 0, "text": ["Amplitude Map Blend"], "role": "item", "attrs": {"id": "frizzmapblend"}, "extent": [11610, 11631], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11754, 12082], "text": ["Specifies the frequency of the frizz noise. Frequency and roughness are two properties of the frizz noise.  Frequency controls the number of oscillations of noise along a hair.  Higher frequency values result in more oscillations. The effect of this tool is easier to see when the number of segments per hair is increased."]}], "indent": 0, "text": ["Frequency"], "role": "item", "attrs": {"id": "frizzfreq"}, "extent": [11724, 11735], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [12119, 12186], "text": ["Specifies a texture map used to modulate the frizz frequency."]}], "indent": 0, "text": ["Frequency Map"], "role": "item", "attrs": {"id": "frizzfreqmap"}, "extent": [12082, 12097], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [12234, 12304], "text": ["Specifies how much the ", {"text": ["Frequency Map"], "type": "ui"}, " can modulate the frizz."]}], "indent": 0, "text": ["Frequency Map Blend"], "role": "item", "attrs": {"id": "frizzfreqmapblend"}, "extent": [12186, 12207], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [12335, 12607], "text": ["Specifies the roughness of the frizz noise. Frequency and roughness are two properties of the frizz noise. Roughness can be thought of as a non-smooth component of the noise. The effect of this tool is easier to see when the number of segments per hair is increased."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [12616, 12907], "text": ["Use the ", {"text": ["Paint Frizz Frequency"], "fullpath": "/shelf/paintfurfrizzfrequency", "scheme": null, "type": "link", "value": "/shelf/paintfurfrizzfrequency"}, " tool if you want to change the number of noise oscillations along the length of hairs and use the ", {"text": ["Paint Frizz Roughness"], "fullpath": "/shelf/paintfurfrizzroughness", "scheme": null, "type": "link", "value": "/shelf/paintfurfrizzroughness"}, " if you want to change how smooth or rough each oscillation appears."]}], "indent": 4, "role": "item", "extent": [12607, 12616], "container": true, "type": "tip"}], "container": true, "role": "item_group", "type": "tip_group"}], "indent": 0, "text": ["Roughness"], "role": "item", "attrs": {"id": "frizzrough"}, "extent": [12304, 12315], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [12945, 13012], "text": ["Specifies a texture map used to modulate the frizz roughness."]}], "indent": 0, "text": ["Roughness Map"], "role": "item", "attrs": {"id": "frizzroughmap"}, "extent": [12907, 12922], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13061, 13131], "text": ["Specifies how much the ", {"text": ["Roughness Map"], "type": "ui"}, " can modulate the frizz."]}], "indent": 0, "text": ["Roughness Map Blend"], "role": "item", "attrs": {"id": "frizzroughmapblend"}, "extent": [13012, 13033], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13162, 13209], "text": ["Specifies the octaves of the frizz noise."]}], "indent": 0, "text": ["Octaves"], "role": "item", "attrs": {"id": "frizzoctaves"}, "extent": [13131, 13140], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Frizz"], "extent": [11171, 11185], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [13251, 13328], "text": ["When enabled, all hairs are associated with the nearest clump\n    hair."]}], "indent": 0, "text": ["Clump Fur"], "role": "item", "attrs": {"id": "clumps"}, "extent": [13223, 13235], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13360, 13410], "text": ["Whether or not the clump hairs are displayed"]}], "indent": 0, "text": ["Display"], "role": "item", "attrs": {"id": "displayclumps"}, "extent": [13328, 13337], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13443, 13479], "text": ["Color used to draw clump hairs"]}], "indent": 0, "text": ["Color"], "role": "item", "attrs": {"id": "clumpscolor{rgb}"}, "extent": [13410, 13417], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13497, 13543], "text": ["Controls how clump guides are generated."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [13556, 13607], "text": ["Scatter clump guides on the skin geometry."]}], "indent": 4, "text": ["Scatter"], "extent": [13543, 13556], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [13629, 13674], "text": ["Reuse the guide curves for clumping."]}], "indent": 4, "text": ["Use Guide Curves"], "extent": [13607, 13629], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [13692, 13722], "text": ["Use An External SOP."]}], "indent": 4, "text": ["Use External"], "extent": [13674, 13692], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Clump Geo Source"], "role": "item", "extent": [13479, 13497], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13750, 13800], "text": ["Path to an object containing clump geometry."]}], "indent": 0, "text": ["Geometry"], "role": "item", "attrs": {"id": "clumpgeo"}, "extent": [13722, 13732], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13838, 13887], "text": ["Seed value for the random number generator."]}], "indent": 0, "text": ["Distribution Seed"], "role": "item", "attrs": {"id": "clumpseed"}, "extent": [13800, 13819], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13918, 14161], "text": ["The number of clump hairs is a result of the density\n    multiplied by the area of the skin polygons.  The value of this\n    parameter acts as a scalar multiplier to the optional\n    ", {"text": ["furdensity"], "type": "code"}, " attribute to determine the curve density."]}], "indent": 0, "text": ["Density"], "role": "item", "attrs": {"id": "clumpdensity"}, "extent": [13887, 13896], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [14190, 14279], "text": ["Maximum distance a hair can be from a clump and still be a\n    member of the clump."]}], "indent": 0, "text": ["Radius"], "role": "item", "attrs": {"id": "clumpradius"}, "extent": [14161, 14169], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [14314, 14380], "text": ["The amount each hair is pulled towards its associated clump."]}], "indent": 0, "text": ["Tightness"], "role": "item", "attrs": {"id": "clumptightness"}, "extent": [14279, 14290], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [14428, 14467], "text": ["The profile shape for each clump."]}], "indent": 0, "text": ["Clump Profile"], "role": "item", "attrs": {"id": "clumpstyle_clumpprofile"}, "extent": [14380, 14395], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [14496, 14546], "text": ["Specifies a texture map used to clump hairs."]}], "indent": 0, "text": ["Clump Map"], "role": "item", "attrs": {"id": "clumpmap"}, "extent": [14467, 14478], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [14586, 14650], "text": ["Specifies how much the ", {"text": ["Clump Map"], "type": "ui"}, " can affect each hair."]}], "indent": 0, "text": ["Clump Map Blend"], "role": "item", "attrs": {"id": "clumpmapblend"}, "extent": [14546, 14563], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [14694, 14744], "text": ["Associates each hair with its closest clump."]}], "indent": 0, "text": ["Use Closest Clump"], "role": "item", "attrs": {"id": "useclosestclump"}, "extent": [14650, 14669], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [14798, 14849], "text": ["Remove all hairs not associated with a clump."]}], "indent": 0, "text": ["Remove Unclumped Hairs"], "role": "item", "attrs": {"id": "removeunclumpedhairs"}, "extent": [14744, 14768], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Clump"], "extent": [13209, 13223], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [14898, 15011], "text": ["When enabled, only guide hairs on the same side of parting\n    lines are used influence the shape of hairs."]}], "indent": 0, "text": ["Part Fur"], "role": "item", "attrs": {"id": "partinglines"}, "extent": [14865, 14876], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [15049, 15114], "text": ["Whether or not parting lines are displayed in the viewport."]}], "indent": 0, "text": ["Display"], "role": "item", "attrs": {"id": "displaypartinglines"}, "extent": [15011, 15020], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [15148, 15191], "text": ["The color used to draw parting lines."]}], "indent": 0, "text": ["Color"], "role": "item", "attrs": {"id": "partinglinescolor"}, "extent": [15114, 15121], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [15222, 15308], "text": ["Maximum distance rest skin can be from a parting line and\n    still be affected."]}], "indent": 0, "text": ["Radius"], "role": "item", "attrs": {"id": "partingradius"}, "extent": [15191, 15199], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Parting"], "extent": [14849, 14865], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Appearance"], "extent": [9352, 9369], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [15382, 15415], "text": ["Enables stiffness controls."]}], "indent": 0, "text": ["Use Ramps To Control Stiffness"], "role": "item", "attrs": {"id": "usestiffnessramp"}, "extent": [15323, 15356], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [15472, 15555], "text": ["Specifies how the stiffness of each hair varies from the root\n    to the tip."]}], "indent": 0, "text": ["Stiffness"], "role": "item", "attrs": {"id": "physical_bendstiffness"}, "extent": [15428, 15440], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [15600, 15651], "text": ["Specifies the minimum stiffness of each hair."]}], "indent": 0, "text": ["Minimum Stiffness"], "role": "item", "attrs": {"id": "bendstiffnessmin"}, "extent": [15555, 15574], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [15696, 15747], "text": ["Specifies the maximum stiffness of each hair."]}], "indent": 0, "text": ["Maximum Stiffness"], "role": "item", "attrs": {"id": "bendstiffnessmax"}, "extent": [15651, 15670], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Bend"], "extent": [15415, 15428], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [15810, 15893], "text": ["Specifies how the stiffness of each hair varies from the root\n    to the tip."]}], "indent": 0, "text": ["Stiffness"], "role": "item", "attrs": {"id": "physical_stretchstiffness"}, "extent": [15763, 15775], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [15941, 15992], "text": ["Specifies the minimum stiffness of each hair."]}], "indent": 0, "text": ["Minimum Stiffness"], "role": "item", "attrs": {"id": "stretchstiffnessmin"}, "extent": [15893, 15912], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [16040, 16091], "text": ["Specifies the maximum stiffness of each hair."]}], "indent": 0, "text": ["Maximum Stiffness"], "role": "item", "attrs": {"id": "stretchstiffnessmax"}, "extent": [15992, 16011], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Stretch"], "extent": [15747, 15763], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Dynamics"], "extent": [15308, 15323], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [16142, 16203], "text": ["Displacement offset used when displaying skin geometry."]}], "indent": 0, "text": ["Display Offset"], "role": "item", "attrs": {"id": "displayoffset"}, "extent": [16102, 16119], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [16239, 16277], "text": ["Class for transferred attribute."]}], "indent": 0, "text": ["New Class"], "role": "item", "attrs": {"id": "skinattribclass"}, "extent": [16203, 16214], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [16326, 16528], "text": ["Specifies a list of attributes from the skin geometry that will be\n    transferred to the generated curves.  The resulting attribute\n    values will contain any modifications made by CVEX shaders."]}], "indent": 0, "text": ["Transfer Attributes"], "role": "item", "attrs": {"id": "skintextureattribs"}, "extent": [16277, 16298], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [16556, 16646], "text": ["Creates a ", {"text": ["hairid"], "type": "code"}, " attribute containing a unique value for each\n    generated curve."]}], "indent": 0, "text": ["Set Hair ID"], "role": "item", "attrs": {"id": "setid"}, "extent": [16528, 16541], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [16679, 16746], "text": ["Specifies the frame used to compute the skin\u2019s rest position."]}], "indent": 0, "text": ["Groom Frame"], "role": "item", "attrs": {"id": "groomframe"}, "extent": [16646, 16659], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [16766, 16815], "text": ["Path to an object containing skin geometry."]}], "indent": 0, "text": ["Skin"], "role": "item", "attrs": {"id": "skin"}, "extent": [16746, 16752], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [16846, 16909], "text": ["Primitives in the skin geometry from which to groom hair."]}], "indent": 0, "text": ["Complete Group"], "role": "item", "attrs": {"id": "group"}, "extent": [16815, 16831], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [16946, 17008], "text": ["Primitives in the skin geometry from which to grow hair."]}], "indent": 0, "text": ["Visible Group"], "role": "item", "attrs": {"id": "visiblegroup"}, "extent": [16909, 16924], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [], "indent": 0, "text": ["Hair transfer"], "role": "item", "attrs": {"title": "116797623"}, "extent": [17043, 17065], "container": true, "type": "vimeo"}], "container": true, "role": "item_group", "type": "vimeo_group"}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [17096, 17212], "text": ["The method to use for updating to a new skin. Use the ", {"text": ["Update From SOP"], "type": "ui"}, " button below to initiate the update."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [17222, 17377], "text": ["The Recache Strokes method below does not leave any record of the original skin, and it\u2019ll appear like the groom was started on the current skin."]}], "indent": 4, "role": "item", "extent": [17212, 17222], "container": true, "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [17441, 17681], "text": ["Performs the update by re-applying all recorded grooming strokes to guides generated on the new skin. This is the simplest method, and should be used if there have only been topology changes and the skin is otherwise very similar."]}], "indent": 4, "text": ["Recache Strokes (Changed Topology, Small Position Changes)"], "extent": [17377, 17441], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [17691, 17806], "text": ["The methods below will leave a clear history of updates in the guides subnet, where all grooming happens."]}], "indent": 4, "role": "item", "extent": [17681, 17691], "container": true, "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [17846, 17962], "text": ["Use this if there has been a change in position/scale/sculpting while the topology has remained unchanged."]}, {"indent": 8, "type": "para", "extent": [17962, 18122], "text": ["Uses the Transfer Guides SOP to transfer an existing groom to a new skin. Existing grooming nodes are collapsed into a subnet and can still be edited."]}], "indent": 4, "text": ["Transfer Direct (Changed Position)"], "extent": [17806, 17846], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [18174, 18328], "text": ["Use this if their has been a change in position/scale/sculpting and topology. This relies on a matching UV set between the current and new skin."]}, {"indent": 8, "type": "para", "extent": [18328, 18577], "text": ["This is the same as ", {"text": ["Transfer Direct"], "type": "ui"}, ", except it does the transfer using a UV set that exists on both the old and new model. This means that in addition to position changes, the topology can also be dramatically different between models."]}], "indent": 4, "text": ["Transfer By UV (Changed Position and Topology)"], "extent": [18122, 18174], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Method"], "role": "item", "extent": [17088, 17096], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [18591, 18664], "text": ["The UV Attribute to use when ", {"text": ["Method"], "type": "ui"}, " is set to ", {"text": ["Transfer By UV"], "type": "code"}, "."]}], "indent": 0, "text": ["UV Attribute"], "role": "item", "extent": [18577, 18591], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [18681, 18800], "text": ["Update to a new skin geometry, using the options set above. This let\u2019s you pick a SOP to use as the new geometry."]}], "indent": 0, "text": ["Update From SOP"], "role": "item", "extent": [18664, 18681], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Transfer Groom To New Skin"], "extent": [17008, 17043], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Skin"], "extent": [16091, 16102], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [18828, 18877], "text": ["Controls how the fur is rendered in mantra."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [18893, 18958], "text": ["Generate curves at render time using the fur procedural."]}], "indent": 4, "text": ["Procedural"], "extent": [18877, 18893], "container": true, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [18970, 19072], "text": ["Generate curves in Houdini before rendering and send the generated\n        curves to mantra."]}], "indent": 4, "text": ["Direct"], "extent": [18958, 18970], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Render Style"], "role": "item", "extent": [18813, 18828], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [19101, 19170], "text": ["If enabled, this object will only cast shadows and reflections."]}], "indent": 0, "text": ["Phantom"], "role": "item", "attrs": {"id": "vm_phantom"}, "extent": [19072, 19081], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [19225, 19674], "text": ["The bounding box controls let you specify a bounding box for\n    the referenced geometry. Only when this bounding box is \"on\n    screen\" will mantra load the referenced geometry. You can set\n    ", {"text": ["Bounding box"], "type": "ui"}, " to ", {"text": ["No bounding box required"], "type": "ui"}, ", in which\n    case mantra will always load the references geometry\n    regardless. You can also specify the bounding box by\n    referencing the SOP\u2019s bounding box in the ", {"text": ["SOP Bounds"], "type": "ui"}, "\n    parameter."]}], "indent": 0, "text": ["Bounding Box"], "role": "item", "attrs": {"id": "vmproc_boxstyle"}, "extent": [19185, 19200], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [19710, 19770], "text": ["The geometry whose bounding box you want to reference."]}], "indent": 0, "text": ["SOP Bounds"], "role": "item", "attrs": {"id": "vmproc_soppath"}, "extent": [19674, 19686], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [19807, 19883], "text": ["The minimum bounding box dimensions, when setting explicit\n    bounds."]}], "indent": 0, "text": ["Min Bounds"], "role": "item", "attrs": {"id": "vmproc_minbound"}, "extent": [19770, 19782], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [19920, 19996], "text": ["The maximum bounding box dimensions, when setting explicit\n    bounds."]}], "indent": 0, "text": ["Max Bounds"], "role": "item", "attrs": {"id": "vmproc_maxbound"}, "extent": [19883, 19895], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [20033, 20193], "text": ["Allows you to adjust the bounds of the bounding box to\n    compensate for any fur that may have been moved outside of\n    the original bounds by a shader."]}], "indent": 0, "text": ["Expand Bounds"], "role": "item", "attrs": {"id": "expandbounds"}, "extent": [19996, 20011], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Mantra"], "extent": [19170, 19185], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [20242, 20306], "text": ["The categories defining the set membership of this object."]}], "indent": 0, "text": ["Categories"], "role": "item", "attrs": {"id": "categories"}, "extent": [20209, 20222], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [20344, 20537], "text": ["Space-separated list of objects to appear in reflections on this\n    object. You can use wildcards (for example, ", {"text": ["prop_*"], "type": "code"}, ") and\n    ", {"text": ["bundle references"], "fullpath": "/basics/bundles", "scheme": null, "type": "link", "value": "/basics/bundles"}, "  to specify objects."]}, {"indent": 4, "type": "para", "extent": [20537, 20682], "text": ["You can also use the  ", {"text": ["link editor\n    pane"], "fullpath": "/ref/panes/linker", "scheme": null, "type": "link", "value": "/ref/panes/linker"}, "  to edit the\n    relationships between objects using a graphical interface."]}], "indent": 0, "text": ["Reflection Mask"], "role": "item", "attrs": {"id": "reflectmask"}, "extent": [20306, 20323], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [20720, 20772], "text": ["Objects that will be refracted on this object."]}], "indent": 0, "text": ["Refraction Mask"], "role": "item", "attrs": {"id": "refractmask"}, "extent": [20682, 20699], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [20803, 20991], "text": ["Space-separated list of names of lights that illuminate this\n    object. You can use wildcards (for example, ", {"text": ["key_*"], "type": "code"}, ") and\n    ", {"text": ["bundle references"], "fullpath": "/basics/bundles", "scheme": null, "type": "link", "value": "/basics/bundles"}, "  to specify objects."]}, {"indent": 4, "type": "para", "extent": [20991, 21150], "text": ["You can also use the  ", {"text": ["link editor\n    pane"], "fullpath": "/ref/panes/linker", "scheme": null, "type": "link", "value": "/ref/panes/linker"}, "  to edit the\n    relationships between lights and objects using a graphical\n    interface."]}], "indent": 0, "text": ["Light Mask"], "role": "item", "attrs": {"id": "lightmask"}, "extent": [20772, 20784], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [21183, 21226], "text": ["Render the object as a cut-out matte."]}], "indent": 0, "text": ["Matte shading"], "role": "item", "attrs": {"id": "vm_matte"}, "extent": [21150, 21165], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [21265, 21414], "text": ["Shade every sample rather than shading micropolygon vertices.\n    This setting enables the raytrace rendering engine on a\n    per-object basis."]}], "indent": 0, "text": ["Raytrace Shading"], "role": "item", "attrs": {"id": "vm_rayshade"}, "extent": [21226, 21244], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Shading"], "extent": [20193, 20209], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [21482, 21657], "text": ["If enabled, this object\u2019s rendered motion blur will be based\n    upon the vector attribute named ", {"text": ["v"], "type": "code"}, " in the geometry. The units\n    of the attribute are in (1 unit/sec)."]}, {"indent": 4, "type": "para", "extent": [21657, 21900], "text": ["Velocity motion blur should be used if it contains changing\n    point counts since it cannot be rendered correctly with\n    deformation motion blur. For example, a particle system with\n    changing particle counts should use this option."]}, {"indent": 4, "type": "para", "extent": [21900, 22124], "text": ["You can use Velocity blur on these types of objects as long as\n    they have valid ", {"text": ["v"], "type": "code"}, " attributes. Particles automatically have\n    the ", {"text": ["v"], "type": "code"}, " attribute so if you are rendering particles, simply\n    enable this parameter."]}], "indent": 0, "text": ["Geometry Velocity Blur"], "role": "item", "attrs": {"id": "geo_velocityblur"}, "extent": [21431, 21456], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Sampling"], "extent": [21414, 21431], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [22184, 22496], "text": ["Shading Quality is used by micropolygon rendering to control\n    the shading resolution. A value of 1 means that approximately\n    1 micropolygon will be used per pixel. A higher value will\n    generate smaller micropolygons meaning more shading and\n    sampling will occur, but the quality will be higher."]}], "indent": 0, "text": ["Shading Quality"], "role": "item", "attrs": {"id": "vm_shadingquality"}, "extent": [22139, 22157], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [22547, 22846], "text": ["Ray Shading Quality is used by raytracing when rendering. When\n    raytracing subdivision surfaces or patch surfaces (eg. NURBS),\n    geometry dicing will occur similar to micropolygon rendering.\n    This value functions similar to ", {"text": ["Shading Quality"], "type": "ui"}, " for these\n    primitives when raytracing."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [22856, 22979], "text": ["Only when rendering subdivision surfaces and patch surfaces\n        (eg. NURBS) will this setting have an effect."]}], "indent": 4, "role": "item", "extent": [22846, 22856], "container": true, "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 0, "text": ["Ray Shading Quality"], "role": "item", "attrs": {"id": "vm_rayshadingquality"}, "extent": [22496, 22517], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [23029, 23406], "text": ["Geometry Filter Width sets a minimum rendering width in raster\n    space for curves.  Any curve segment smaller than this value at\n    the projected point will instead have its opacity scaled down as\n    a ratio of the minimum width and the actual width.  This helps\n    rendering very thin curves without having to adversely increase\n    the pixel samples to compensate."]}], "indent": 0, "text": ["Geometry Filter Width"], "role": "item", "attrs": {"id": "vm_geofilterwidth"}, "extent": [22979, 23002], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [23444, 23627], "text": ["This property controls the tessellation levels for nearly flat\n    primitives. By increasing the value, more primitives will be\n    considered flat and will be sub-divided less."]}], "indent": 0, "text": ["Dicing Flatness"], "role": "item", "attrs": {"id": "vm_flatness"}, "extent": [23406, 23423], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [23665, 23873], "text": ["This property will cause this object to generate all the\n    micro-polygons before the render begins. Ray tracing can be\n    significantly faster at the cost of potentially huge memory\n    requirements."]}], "indent": 0, "text": ["Ray Predicing"], "role": "item", "attrs": {"id": "vm_raypredice"}, "extent": [23627, 23642], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [23924, 24304], "text": ["When rendering a curve, turns the curve into a surface and dices\n    the surface, running the surface shader on multiple points across\n    the surface. This may be useful when the curves become curved\n    surfaces, but is less efficient. The default is to simply run the\n    shader on the points of the curve and duplicate those shaded\n    points across the created surface."]}], "indent": 0, "text": ["Shade Curves As Surfaces"], "role": "item", "attrs": {"id": "vm_curvesurface"}, "extent": [23873, 23899], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Dicing"], "extent": [22124, 22139], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [24363, 24448], "text": ["If enabled, geometry that are facing away from the camera are\n    not rendered."]}], "indent": 0, "text": ["Backface Removal"], "role": "item", "attrs": {"id": "vm_rmbackface"}, "extent": [24321, 24340], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [24496, 24604], "text": ["If enabled, polygon geometry rendered from this object will be\n    rendered as a subdivision surface. "]}], "indent": 0, "text": ["Polygons As Subdivision"], "role": "item", "attrs": {"id": "vm_rendersubd"}, "extent": [24448, 24473], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [24647, 25040], "text": ["By default, points within particle system primitives are\n    rendered as sphere primitives. If a point is not\n    part of a particle system primitive, then it is not rendered.\n    If this parameter is enabled, then all points (regardless if\n    they are part of a particle system) from this object\u2019s geometry\n    will be rendered as point (circle) primitives facing the camera\n    plane."]}], "indent": 0, "text": ["Render As Points"], "role": "item", "attrs": {"id": "vm_renderpoints"}, "extent": [24604, 24622], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [25067, 25228], "text": ["Coving is the process of filling cracks in diced geometry\n    at render time, where different levels of dicing side-by-side\n    create gaps at T-junctions."]}, {"indent": 4, "type": "para", "extent": [25228, 25654], "text": ["The default setting, ", {"text": ["Coving for displacement/sub-d"], "type": "ui"}, ", only\n    does coving for surfaces with a displacement shader and\n    subdivision surfaces, where the displacement of points can\n    potentially create large cracks. This is sufficient for more\n    rendering, however you may want to use ", {"text": ["Coving for all\n    primitives"], "type": "ui"}, " if you are using a very low shading rate or see\n    cracks in the alpha of the rendered image."]}, {"indent": 4, "type": "para", "extent": [25654, 25831], "text": ["Do not use ", {"text": ["Disable coving"], "type": "ui"}, ". It has no performance\n    benefit, and may actually harm performance since Houdini has to\n    render any geometry visible through the crack."]}, {"indent": 4, "type": "para", "extent": [25831, 25889], "text": ["This setting only applies to micropolygon rendering."]}], "indent": 0, "text": ["Coving"], "role": "item", "attrs": {"id": "vm_coving"}, "extent": [25040, 25048], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [25941, 26062], "text": ["If enabled, smooth normals will we computed at render time if\n    the normal (", {"text": ["N"], "type": "code"}, ") vector attribute does not exist."]}], "indent": 0, "text": ["Automatically Compute Normals"], "role": "item", "attrs": {"id": "vm_computeN"}, "extent": [25889, 25920], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Geometry"], "extent": [24304, 24321], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Render"], "extent": [18800, 18813], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [1560, 1572], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [26071, 26089], "text": [{"text": "", "fullpath": "/nodes/sop/fur", "scheme": "Node", "type": "link", "value": "/nodes/sop/fur"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [26089, 26114], "text": [{"text": "", "fullpath": "/nodes/shop/vm_geo_fur", "scheme": "Node", "type": "link", "value": "/nodes/shop/vm_geo_fur"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [26062, 26071], "container": true, "type": "related_section", "id": "related"}], "summary": ["Creates fur geometry for rendering with a Mantra Fur Procedural."], "type": "root", "attrs": {"version": "2.0", "tags": "fur, curves", "since": "14.0", "namespace": null, "internal": "fur", "context": "obj", "type": "node", "icon": "SOP/fur"}, "title": ["Fur"]}