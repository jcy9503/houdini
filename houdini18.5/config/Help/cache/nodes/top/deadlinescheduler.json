{"body": [{"indent": 0, "text": ["Deadline Scheduler"], "type": "title", "extent": [107, 130], "level": 0}, {"indent": 0, "type": "summary", "extent": [130, 190], "text": ["The PDG scheduler for Thinkbox\u2019s Deadline software."]}, {"body": [{"indent": 0, "type": "para", "extent": [205, 315], "text": ["This scheduler node utilizes Thinkbox\u2019s Deadline to schedule and execute PDG work items on a Deadline farm."]}, {"indent": 0, "type": "para", "extent": [315, 522], "text": ["To use this scheduler, you need to have the Deadline client installed and working on your local machine. Additionally, you must also have Deadline set-up on your farm machines to receive and execute jobs. "]}, {"indent": 0, "type": "para", "extent": [522, 587], "text": [{"text": ["Deadline 10.0.16.6"], "type": "code"}, " is the most recent version we have tested."]}], "indent": 0, "level": 2, "text": ["Overview"], "extent": [190, 205], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [604, 670], "text": ["This node can do two types of scheduling using a Deadline farm:"]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [937, 1264], "text": ["With this scheduling type, the node also schedules one main job with a task for each work item generated, and if necessary, schedules a second Message Queue (MQ) job to run the MQ server that receives the work item results over the network. For more information on MQ, see the ", {"fragment": "#messagequeue", "text": ["Message Queue"], "value": "#messagequeue", "fullpath": "/nodes/top/deadlinescheduler#messagequeue", "scheme": null, "type": "link"}, " section below."]}], "indent": 0, "text": ["The first type of scheduling runs an instance of Houdini on a local submission machine that coordinates the PDG cook on the farm and waits until the cook has completed. This allows you to cook the entire TOP graph, only part of the TOP graph, or a specific node. "], "extent": [670, 937], "container": true, "blevel": 2, "type": "bullet"}, {"body": [{"indent": 4, "type": "para", "extent": [1339, 1655], "text": ["With this scheduling type, the node schedules a hython session that opens up the current ", {"text": [".hip"], "type": "code"}, " file and cooks the entire TOP network. If the TOP network uses the Deadline scheduler node(s), then another job might also be scheduled on the farm, and that job will follow the scheduling behavior mentioned above."]}], "indent": 0, "text": ["The second type of scheduling uses ", {"fragment": "#submitgraph", "text": ["Submit Graph As Job"], "value": "#submitgraph", "fullpath": "/nodes/top/deadlinescheduler#submitgraph", "scheme": null, "type": "link"}, ". "], "extent": [1264, 1339], "container": true, "blevel": 2, "type": "bullet"}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 2, "text": ["Scheduling"], "extent": [587, 604], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [1680, 2037], "text": ["By default, this Deadline scheduler requires and uses the custom ", {"text": ["PDGDeadline"], "type": "code"}, " plugin (located in ", {"text": ["$HFS/houdini/pdg/plugins/PDGDeadline"], "type": "code"}, ") that ships with Houdini. You do ", {"text": ["not"], "type": "em"}, " have to set-up the plugin to enable it as it should work out-of-the-box. Please note that the rest of this documentation page assumes that you are using the ", {"text": ["PDGDeadline"], "type": "code"}, " plugin."]}, {"indent": 0, "type": "para", "extent": [2037, 2186], "text": ["On Windows, Deadline processes require executables to have the ", {"text": [".exe"], "type": "code"}, " suffix. To meet this requirement, you can append ", {"text": ["\\$PDG_EXE"], "type": "code"}, " to executables. "]}, {"indent": 0, "type": "para", "extent": [2186, 2284], "text": ["The ", {"text": ["PDGDeadline"], "type": "code"}, " plugin evaluates the ", {"text": ["\\$PDG_EXE"], "type": "code"}, " specified in work item executables as follows:"]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [2302, 2341], "text": [{"text": ["$PDG_EXE"], "type": "code"}, " is replaced by ", {"text": [".exe"], "type": "code"}, "."]}, {"indent": 4, "type": "para", "extent": [2341, 2443], "text": ["For example, ", {"text": ["hython"], "type": "code"}, " will be framed between ", {"text": ["$HFS"], "type": "code"}, " and ", {"text": ["\\$PDG_EXE"], "type": "code"}, " and evaluated on Windows as:"]}, {"indent": 4, "type": "para", "extent": [2443, 2552], "text": [{"text": ["\\$HFS/bin/hython\\$PDG_EXE"], "type": "code"}, "  \u2192 ", {"text": ["C:/Program Files/Side Effects Software/Houdini 17.5.173/bin/hython.exe"], "type": "code"}]}], "indent": 0, "text": ["Windows"], "role": "item", "extent": [2284, 2302], "container": true, "type": "platform"}, {"body": [{"indent": 4, "type": "para", "extent": [2566, 2594], "text": [{"text": ["$PDG_EXE"], "type": "code"}, " is removed."]}], "indent": 0, "text": ["Mac"], "role": "item", "extent": [2552, 2566], "container": true, "type": "platform"}, {"body": [{"indent": 4, "type": "para", "extent": [2610, 2638], "text": [{"text": ["$PDG_EXE"], "type": "code"}, " is removed."]}], "indent": 0, "text": ["Linux"], "role": "item", "extent": [2594, 2610], "container": true, "type": "platform"}], "container": true, "role": "item_group", "type": "platform_group"}, {"indent": 0, "type": "para", "extent": [2638, 3055], "text": ["If you set the ", {"text": ["PATH"], "type": "code"}, " environment in a work item, then the path separators in the task\u2019s specification file are replaced with ", {"text": ["__PDG_PATHSEP__"], "type": "code"}, " to support cross-platform farms. And when you run that task on the farm, the ", {"text": ["PDGDeadline"], "type": "code"}, " plugin converts ", {"text": ["__PDG_PATHSEP__"], "type": "code"}, " to the local OS path separator. Please note though, if the work item\u2019s ", {"text": ["PATH"], "type": "code"}, "is set, then it will override the local machine\u2019s ", {"text": ["PATH"], "type": "code"}, " environment."]}], "indent": 0, "level": 2, "text": ["PDGDeadline plugin"], "extent": [1655, 1680], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "ord", "extent": [3074, 3242], "text": ["Install the Deadline client on the machine from which you will cook the TOP network. Refer to Thinkbox\u2019s instructions for how to install Deadline on each platform."]}, {"body": [{"body": [{"indent": 4, "blevel": 6, "type": "bullet", "extent": [3273, 3362], "text": ["The ", {"text": ["deadlinecommand"], "type": "code"}, " executable is working. See the ", {"text": ["$DEADLINE_PATH"], "type": "code"}, " note below."]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [3362, 3546], "text": ["The Deadline repository is accessible on the machine where the TOPs network will cook (either the repository is local, or the network mount/share it\u2019s on is available locally)."]}, {"body": [{"body": [{"indent": 8, "blevel": 10, "type": "bullet", "extent": [3721, 3804], "text": ["Navigate to Deadline\u2019s ", {"text": ["Configure Repository Options"], "type": "code"}, " > ", {"text": ["Mapped Paths"], "type": "code"}, "."]}, {"body": [{"body": [{"indent": 12, "blevel": 14, "type": "bullet", "extent": [3828, 3936], "text": ["Set up path mapping for ", {"text": ["$HFS"], "type": "code"}, " to the Houdini install directory on Deadline Worker machines."]}, {"indent": 12, "blevel": 14, "type": "bullet", "extent": [3936, 4060], "text": ["Set up path mapping for ", {"text": ["$PYTHON"], "type": "code"}, " to ", {"text": ["<expanded HFS path>/bin/python.exe"], "type": "code"}, " or your local Python installation."]}], "container": true, "type": "bullet_group"}], "indent": 8, "text": ["On ", {"text": ["Windows"], "type": "strong"}, ":"], "extent": [3804, 3828], "container": true, "blevel": 10, "type": "bullet"}, {"body": [{"body": [{"body": [{"indent": 16, "type": "para", "extent": [4260, 4332], "text": [{"text": "", "fullpath": "/images/nodes/top/deadline_hfs_config_repo.png", "scheme": "Image", "type": "link", "value": "/images/nodes/top/deadline_hfs_config_repo.png"}]}, {"indent": 16, "type": "para", "extent": [4332, 4513], "text": ["Use ", {"text": ["\\"], "type": "code"}, " in front of ", {"text": ["$HFS"], "type": "code"}, " to escape Houdini\u2019s local evaluation. Using ", {"text": ["\\$HFS"], "type": "code"}, " makes sure that the node evaluates the variable on the farm machine running the job."]}, {"indent": 16, "type": "para", "extent": [4513, 4583], "text": [{"text": "", "fullpath": "/images/nodes/top/deadline_hfs_mapping_h.png", "scheme": "Image", "type": "link", "value": "/images/nodes/top/deadline_hfs_mapping_h.png"}]}], "indent": 12, "text": ["Set up path mapping for ", {"text": ["$HFS"], "type": "code"}, " to the Houdini install director, or override the default parm values for Hython and Python in the Job Parms interface."], "extent": [4095, 4260], "container": true, "blevel": 14, "type": "bullet"}, {"indent": 12, "blevel": 14, "type": "bullet", "extent": [4583, 4676], "text": ["Repeat for any other variable that needs to be evaluated on the farm machine."]}], "container": true, "type": "bullet_group"}], "indent": 8, "text": ["On ", {"text": ["macOS"], "type": "strong"}, " and ", {"text": ["Linux"], "type": "strong"}, ":"], "extent": [4060, 4095], "container": true, "blevel": 10, "type": "bullet"}], "container": true, "type": "bullet_group"}], "indent": 4, "text": ["If you are using a mixed farm set-up (for example, a farm with any combination of Linux, macOS, and Windows machines), then set the following path mapping for each OS:"], "extent": [3546, 3721], "container": true, "blevel": 6, "type": "bullet"}], "container": true, "type": "bullet_group"}], "indent": 0, "text": ["Make sure of the following:"], "extent": [3242, 3273], "container": true, "blevel": 2, "type": "ord"}, {"body": [{"body": [{"body": [{"body": [{"indent": 8, "blevel": 10, "type": "bullet", "extent": [4800, 4879], "text": ["You can add the Deadline installation directory to the system path."]}, {"indent": 8, "blevel": 10, "type": "bullet", "extent": [4879, 4976], "text": ["On ", {"text": ["macOS"], "type": "strong"}, ", the node falls back to checking the standard Deadline install directory."]}], "container": true, "type": "bullet_group"}], "indent": 4, "text": ["If ", {"text": ["DEADLINE_PATH"], "type": "code"}, " is not set:"], "extent": [4762, 4800], "container": true, "blevel": 6, "type": "bullet"}], "container": true, "type": "bullet_group"}], "indent": 0, "text": ["Set the ", {"text": ["$DEADLINE_PATH"], "type": "code"}, " variable to point to the Deadline installation directory."], "extent": [4676, 4762], "container": true, "blevel": 2, "type": "ord"}], "container": true, "type": "ord_group"}], "indent": 0, "level": 2, "text": ["Installation"], "extent": [3055, 3074], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [5038, 5188], "text": ["When the schedule submits a work item to Deadline, it adds this\n    attribute to the work item in order to track the Deadline job and task IDs."]}], "indent": 0, "text": [{"text": ["deadline_job_task_id"], "type": "code"}], "role": "item", "attrs": {"type": "string"}, "extent": [4992, 5019], "container": true, "type": "top_attributes_item"}], "container": true, "role": "item_group", "type": "top_attributes_item_group"}], "indent": 0, "level": 1, "text": "Top_attributes", "role": "section", "extent": [4976, 4992], "container": true, "type": "top_attributes_section", "id": "top_attributes"}, {"body": [{"body": [{"indent": 0, "type": "para", "extent": [5217, 5257], "text": ["Global parameters for all work items."]}, {"body": [{"indent": 4, "type": "para", "extent": [5303, 5460], "text": ["Allows you to schedule a standalone job (a job that does ", {"text": ["not"], "type": "em"}, " require Houdini to be running) on your Deadline farm that cooks the current TOP network."]}, {"indent": 4, "type": "para", "extent": [5460, 5522], "text": ["The parameters below determine the behavior of this job."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [5573, 5621], "text": ["Specifies the name to use for the job."]}], "indent": 4, "text": ["Job Name"], "role": "item", "attrs": {"id": "deadline_submitjobname"}, "extent": [5522, 5536], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [5688, 5797], "text": ["When on, the node uses the job settings specified by the ", {"fragment": "#mqjoboptions", "text": ["MQ Job Options"], "value": "#mqjoboptions", "fullpath": "/nodes/top/deadlinescheduler#mqjoboptions", "scheme": null, "type": "link"}, " parameters."]}], "indent": 4, "text": ["Use MQ Job Options"], "role": "item", "attrs": {"id": "deadline_submitjobusemqspecs"}, "extent": [5621, 5645], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [5846, 5950], "text": ["Cooks the current TOP network as a standalone job in a ", {"text": ["hython"], "type": "code"}, " session on your Deadline farm."]}], "indent": 4, "text": ["Submit Graph As Job"], "role": "item", "attrs": {"id": "submitjob"}, "extent": [5797, 5822], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"indent": 8, "type": "para", "extent": [5982, 6206], "text": [{"body": [{"type": "para", "indent": 4, "extent": [3330, 3532], "text": ["When on, turns on the data layer server for the TOP job that will cook on the farm. This allows PilotPDG or other WebSocket clients to connect to the cooking job remotely to view the state of PDG."]}], "container": true, "text": ["Enable Server"], "attrs": {"id": "enabledatalayerserver"}, "extent": [3283, 3298], "indent": 0, "type": "dt"}, "\n        ", {"body": [{"indent": 4, "type": "para", "extent": [3572, 3640], "text": ["Determines which server port to use for the data layer server."]}, {"indent": 4, "type": "para", "extent": [3640, 3710], "text": ["This parameter is only available when ", {"text": ["Enable Server"], "type": "ui"}, " is ", {"text": ["on"], "type": "em"}, "."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [3725, 3803], "text": ["A free TCP port to use for the data layer server chosen by the node."]}], "container": true, "text": ["Automatic"], "extent": [3710, 3725], "indent": 4, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3815, 3898], "text": ["A custom TCP port to use for the data layer server specified by the user."]}, {"indent": 8, "type": "para", "extent": [3898, 4000], "text": ["This is useful when there is a firewall between the farm machine and the monitoring machine."]}], "container": true, "text": ["Custom"], "extent": [3803, 3815], "indent": 4, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Server Port"], "attrs": {"id": "usedatalayerport"}, "extent": [3532, 3545], "container": true, "type": "dt"}, "\n        ", {"body": [{"indent": 4, "type": "para", "extent": [4042, 4247], "text": ["When on, the node will try to send a command to create a remote visualizer when the job starts. If successful, a remote graph is created and it automatically connects to the server executing the job."]}, {"indent": 4, "type": "para", "extent": [4247, 4359], "text": ["The client submitting the job ", {"text": ["must"], "type": "em"}, " be visible to the server running the job or the connection will fail."]}, {"indent": 4, "type": "para", "extent": [4359, 4429], "text": ["This parameter is only available when ", {"text": ["Enable Server"], "type": "ui"}, " is ", {"text": ["on"], "type": "em"}, "."]}], "indent": 0, "text": ["Auto Connect"], "attrs": {"id": "createremotegraph"}, "extent": [4000, 4014], "container": true, "type": "dt"}, "\n        ", {"fragment": "#submitjobwhenfinished", "text": "", "value": "_scheduler_submit#submitjobwhenfinished", "fullpath": "/nodes/top/_scheduler_submit#submitjobwhenfinished", "scheme": "Include", "type": "link"}]}], "indent": 4, "level": 4, "text": [" Data Layer Server "], "extent": [5950, 5982], "container": true, "type": "sep"}], "indent": 0, "level": 4, "text": [" Submit Graph "], "attrs": {"id": "submitgraph"}, "extent": [5257, 5280], "container": true, "type": "sep"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [6287, 6480], "text": ["Specifies the root path on your local machine that points to the directory where the job generates intermediate files and output. The intermediate files are placed in a subdirectory. "]}, {"indent": 8, "type": "para", "extent": [6480, 6578], "text": ["Use this parameter if your local and farm machines have the same path configuration."]}], "indent": 4, "text": ["Local Shared Path"], "role": "item", "attrs": {"id": "pdg_workingdir"}, "extent": [6234, 6258], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [6633, 6807], "text": ["When on, overrides the path to the mounted directory on the Deadline Worker machines that the working directory is rooted at and lets you specify a different path. "]}, {"indent": 8, "type": "para", "extent": [6807, 7203], "text": ["This path can include variables that allow the node to resolve to platform-specific paths (if using a multi-platform farm). If using the default value of ", {"text": ["$PDG_DIR"], "type": "code"}, ", then ", {"text": ["$PDG_DIR"], "type": "code"}, " should be mapped to the actual mounted value for each operating system used by Workers in Deadline\u2019s path mapping. You can also set this path to a value that Workers are already using in an existing farm."]}, {"indent": 8, "type": "para", "extent": [7203, 7418], "text": ["Use this parameter if your farm machines have different path configurations than your local submission machine. This is required for mixed farms where the mounted paths are different due to OS differences."]}], "indent": 4, "text": ["Remote Shared Path"], "role": "item", "attrs": {"id": "remotesharedroot"}, "extent": [6578, 6602], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [893, 1096], "text": ["When enabled, PDG will check the output files of work items when the graph recooks, to see if the files still exist on disk. Work items that are missing output files will be dirtied and cook again."]}], "indent": 0, "text": ["Validate Outputs When Recooking"], "role": "item", "attrs": {"id": "pdg_validateoutputs"}, "extent": [830, 863], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1163, 1501], "text": ["When enabled, PDG will look on disk for any expected work items outputs that were not explicitly reported when the work item cooked. Expected outputs for a work item are checkd immediately after the scheduler marks the work item as cooked. Output files that were reported by the work item normally while cooking will not be checked."]}], "indent": 0, "text": ["Check Expected Outputs on Disk"], "role": "item", "attrs": {"id": "pdg_checkexpectedoutputs"}, "extent": [1096, 1128], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 4, "text": [" Working Directory "], "extent": [6206, 6234], "container": true, "type": "sep"}, {"body": [{"indent": 4, "type": "para", "extent": [7555, 7633], "text": ["Job description properties that will be written to a Deadline job file."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [7685, 7760], "text": ["(Optional) Specifies the batch name under which to group the job."]}], "indent": 4, "text": ["Batch Name"], "role": "item", "attrs": {"id": "deadline_jobbatchname"}, "extent": [7633, 7649], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [7805, 7856], "text": ["(Required) Specifies the name of the job."]}], "indent": 4, "text": ["Job Name"], "role": "item", "attrs": {"id": "deadline_jobname"}, "extent": [7760, 7774], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [7903, 7965], "text": ["(Optional) Specifies the comment to add to all jobs."]}], "indent": 4, "text": ["Comment"], "role": "item", "attrs": {"id": "deadline_jobcomment"}, "extent": [7856, 7869], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [8016, 8192], "text": ["(Optional) Specifies the default department (for example, Lighting) for all jobs. This allows you to group jobs together and provide information to the farm operator."]}], "indent": 4, "text": ["Job Department"], "role": "item", "attrs": {"id": "deadline_jobdept"}, "extent": [7965, 7985], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 4, "text": [" Job Description "], "extent": [7529, 7555], "container": true, "type": "sep"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [8256, 8316], "text": ["Specifies a named pool to use to execute the job. "]}, {"indent": 8, "type": "para", "extent": [8316, 8361], "text": ["By default, ", {"text": ["Pool"], "type": "ui"}, " is ", {"text": ["none"], "type": "code"}, "."]}], "indent": 4, "text": ["Pool"], "role": "item", "attrs": {"id": "deadline_jobpool"}, "extent": [8214, 8225], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [8404, 8465], "text": ["Specifies a named group to use to execute the job. "]}, {"indent": 8, "type": "para", "extent": [8465, 8511], "text": ["By default, ", {"text": ["Group"], "type": "ui"}, " is ", {"text": ["none"], "type": "code"}, "."]}], "indent": 4, "text": ["Group"], "role": "item", "attrs": {"id": "deadline_jobgroup"}, "extent": [8361, 8372], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [8560, 8722], "text": ["Specifies the priority for all new jobs. The minimum value is ", {"text": ["0"], "type": "code"}, " and the maximum value is a setting from Deadline\u2019s repository options (usually ", {"text": ["100"], "type": "code"}, ")."]}, {"indent": 8, "type": "para", "extent": [8722, 8765], "text": ["By default, ", {"text": ["Priority"], "type": "ui"}, " is ", {"text": ["50"], "type": "code"}, "."]}], "indent": 4, "text": ["Priority"], "role": "item", "attrs": {"id": "deadline_jobpriority"}, "extent": [8511, 8525], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [8826, 8914], "text": ["Specifies the number of tasks to run simultaneously for each Deadline Worker. "]}, {"indent": 8, "type": "para", "extent": [8914, 8985], "text": ["By default, ", {"text": ["Concurrent Tasks"], "type": "ui"}, " is ", {"text": ["1"], "type": "code"}, " (one task at a time)."]}], "indent": 4, "text": ["Concurrent Tasks"], "role": "item", "attrs": {"id": "deadline_concurrenttasks"}, "extent": [8765, 8787], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [9065, 9220], "text": ["When on, limits the number of concurrent tasks to the number of CPUs on the Deadline Worker or the current ", {"text": ["CPU Affinity"], "type": "ui"}, " settings in Deadline."]}], "indent": 4, "text": ["Limit Concurrent Tasks to CPUs"], "role": "item", "attrs": {"id": "deadline_limitconcurrenttasks"}, "extent": [8985, 9021], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [9276, 9357], "text": ["Specifies the path to the Python script to run when the job starts."]}], "indent": 4, "text": ["Pre Job Script"], "role": "item", "attrs": {"id": "deadline_prejobscript"}, "extent": [9220, 9240], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [9419, 9499], "text": ["Specifies the path to the Python script to run after the job finishes."]}], "indent": 4, "text": ["Post Job Script"], "role": "item", "attrs": {"id": "deadline_postjobscript"}, "extent": [9357, 9378], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [9558, 9652], "text": ["Specifies the maximum number of Deadline Worker machines that can execute this job. "]}, {"indent": 8, "type": "para", "extent": [9652, 9711], "text": ["By default, ", {"text": [" Machine Limit"], "type": "ui"}, " is ", {"text": ["0"], "type": "code"}, " (no limit)."]}], "indent": 4, "text": ["Machine Limit"], "role": "item", "attrs": {"id": "deadline_machinelimit"}, "extent": [9499, 9518], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [9768, 9959], "text": ["Specifies a restricted list of Deadline Workers that can execute this job. The kind of list that is written out is determined by the ", {"text": ["Machine List is A Blacklist"], "type": "ui"}, " parameter below."]}, {"indent": 8, "type": "para", "extent": [9959, 10166], "text": ["If the ", {"text": ["Machine List is A Blacklist"], "type": "ui"}, " parameter is ", {"text": ["off"], "type": "em"}, ", the list is written out as ", {"text": ["Whitelist"], "type": "code"}, " in the job info file. If ", {"text": ["Machine List is A Blacklist"], "type": "ui"}, " is ", {"text": ["on"], "type": "em"}, ", it is written out as ", {"text": ["Blacklist"], "type": "code"}, "."]}], "indent": 4, "text": ["Machine List"], "role": "item", "attrs": {"id": "deadline_machinelist"}, "extent": [9711, 9729], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [10239, 10457], "text": ["When on, the ", {"text": ["Machine List"], "type": "ui"}, " is written out as ", {"text": ["Blacklist"], "type": "code"}, ". This means that the listed machines are ", {"text": ["not"], "type": "em"}, " allowed to execute this job. When off, only the machines in the list are allowed to execute this job."]}], "indent": 4, "text": ["Machine List is a Blacklist"], "role": "item", "attrs": {"id": "deadline_machinelistblack"}, "extent": [10166, 10199], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [10499, 10678], "text": ["Specifies the Deadline Limits (Resource or License type) required for the scheduled job. The limits are created and managed through the ", {"text": ["Deadline Monitor"], "type": "ui"}, " in Deadline."]}], "indent": 4, "text": ["Limits"], "role": "item", "attrs": {"id": "deadline_limits"}, "extent": [10457, 10469], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [10736, 10818], "text": ["Determines what happens to with the job\u2019s information when it finishes. "]}, {"indent": 8, "type": "para", "extent": [10818, 10876], "text": ["By default, ", {"text": ["On Job Complete"], "type": "ui"}, " is ", {"text": ["Nothing"], "type": "ui"}, ". "]}, {"indent": 8, "type": "para", "extent": [10876, 10937], "text": ["For more information, see Deadline\u2019s documentation."]}], "indent": 4, "text": ["On Job Complete"], "role": "item", "attrs": {"id": "deadline_onjobcomplete"}, "extent": [10678, 10699], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 4, "text": [" Job Options "], "extent": [8192, 8214], "container": true, "type": "sep"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [11025, 11157], "text": ["Lets you add custom key-value options for this job. These are written out to the job file required by the Deadline plugin."]}], "indent": 4, "text": ["Job Key-Values"], "role": "item", "attrs": {"id": "deadline_jobfilekvpair"}, "extent": [10967, 10988], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 4, "text": [" Job File Key-Values "], "extent": [10937, 10967], "container": true, "type": "sep"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [11259, 11397], "text": ["Lets you add custom key-value options for the plug-in. These are written out to the plugin file required by the Deadline plugin."]}], "indent": 4, "text": ["Plugin File Key-Values"], "role": "item", "attrs": {"id": "deadline_pluginfilekvpair"}, "extent": [11190, 11219], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 4, "text": [" Plugin File Key-Values "], "extent": [11157, 11190], "container": true, "type": "sep"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [11472, 11592], "text": ["When on, information is printed out to the console that could be useful for debugging problems during cooking."]}], "indent": 4, "text": ["Verbose Logging"], "role": "item", "attrs": {"id": "deadline_verboselog"}, "extent": [11416, 11438], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4962, 5388], "text": ["When this option is enabled the scheduler will block the cook from completing if there are any failed work items in that scheduler. This makes it possible to manually retry those work items, by preventing the PDG graph cook from ending before failed items can be retried. A cook that is blocked on failed work items can still be canceled using the ESC key, the cancel button in the TOP task bar, or the cancel API method."]}], "indent": 0, "text": ["Block on Failed Work Items"], "role": "item", "attrs": {"id": "pdg_waitforfailures"}, "extent": [4904, 4932], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [11716, 11869], "text": ["When on, Deadline ignores the exit codes of tasks so that they always succeed, even if the tasks return non-zero exit codes (like error codes)."]}], "indent": 4, "text": ["Ignore Command Exit Code"], "role": "item", "attrs": {"id": "deadline_ignorecmdexitcode"}, "extent": [11645, 11675], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [11935, 12110], "text": ["When on, Deadline reloads the plugin between frames of a job. This can help you deal with memory leaks or applications that do ", {"text": ["not"], "type": "em"}, " unload all job aspects properly."]}, {"indent": 8, "type": "para", "extent": [12110, 12165], "text": ["By default, ", {"text": ["Force Reload Plugin"], "type": "ui"}, " is ", {"text": ["off"], "type": "em"}, "."]}], "indent": 4, "text": ["Force Reload Plugin"], "role": "item", "attrs": {"id": "deadline_forcereloadplugin"}, "extent": [11869, 11894], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [12233, 12335], "text": ["Specifies the name of the machine to launch the Deadline Monitor on when jobs are scheduled."]}], "indent": 4, "text": ["Monitor Machine Name"], "role": "item", "attrs": {"id": "deadline_monitormachinename"}, "extent": [12165, 12191], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"indent": 12, "type": "para", "extent": [12433, 12654], "text": ["Sets the maximum number of tasks that can be submitted at a time to Deadline. Increase this value to submit more tasks, or decrease this value if your number of tasks are affecting UI performance in Houdini."]}], "indent": 8, "text": ["Task Submit Batch Max"], "role": "item", "attrs": {"id": "deadline_tasksubbatchmix"}, "extent": [12358, 12390], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [12730, 12951], "text": ["Sets the maximum number of tasks that can be checked in at a time in Deadline. Increase this value to check more tasks, or decrease this value if your number of tasks are affecting UI performance in Houdini."]}], "indent": 8, "text": ["Tasks Check Batch Max"], "role": "item", "attrs": {"id": "deadline_taskcheckbatchmax"}, "extent": [12654, 12685], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"indent": 16, "type": "para", "extent": [13052, 13153], "text": ["When on, overrides the system default Deadline repository with the one you specify."]}, {"indent": 16, "type": "para", "extent": [13153, 13412], "text": ["If you have a single Deadline repository or you want to use your system\u2019s default Deadline Repository, you should leave this field empty. Otherwise, you can specify another Deadline repository to use, along with SSL credentials if required. "]}], "indent": 12, "text": ["Repository Path"], "role": "item", "attrs": {"id": "deadline_repository"}, "extent": [12980, 13010], "container": true, "type": "parameters_item"}, {"body": [{"indent": 16, "type": "para", "extent": [13487, 13546], "text": ["The type of connection to the repository."]}, {"body": [{"body": [{"indent": 20, "type": "para", "extent": [13570, 13696], "text": ["Lets you specify the path to the mounted directory. For example: ", {"text": ["//testserver.com/DeadlineRepository"], "type": "code"}, ". "]}], "indent": 16, "text": ["Direct"], "extent": [13546, 13570], "container": true, "type": "dt"}, {"body": [{"indent": 20, "type": "para", "extent": [13719, 13826], "text": ["Lets you specify the URL to the repository along with the port and login information."]}], "indent": 16, "text": ["Proxy"], "extent": [13696, 13719], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 12, "text": ["Connection Type"], "role": "item", "attrs": {"id": "deadline_connectiontype"}, "extent": [13412, 13441], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 8, "level": 4, "text": [" Repository "], "extent": [12951, 12980], "container": true, "type": "sep"}, {"body": [{"body": [{"body": [{"indent": 16, "type": "para", "extent": [13923, 14093], "text": ["When on, allows you to specify a custom Deadline plugin to execute each PDG work item. When off, the PDGDeadline plugin that ships with Houdini is used."]}, {"indent": 16, "type": "para", "extent": [14093, 14302], "text": ["Do ", {"text": ["not"], "type": "em"}, " turn on this parameter unless you have written a custom Deadline plugin that supports the PDG cooking process. The other plugins shipped with Deadline will ", {"text": ["not"], "type": "em"}, " work out-of-the-box."]}, {"indent": 16, "type": "para", "extent": [14302, 14683], "text": ["If you want to control the execution of the PDG work items' processes, then you can write a custom Deadline plugin and specify it here along with the ", {"text": ["Plugin Directory"], "type": "ui"}, " below. The custom plugin must utilize the task files written out for each work item, and set the evaluated environment variables in the process. For reference, please see the ", {"text": ["PDGDeadline.py"], "type": "code"}, "."]}], "indent": 12, "text": ["Plugin"], "role": "item", "attrs": {"id": "deadline_plugin"}, "extent": [13864, 13885], "container": true, "type": "parameters_item"}, {"body": [{"indent": 16, "type": "para", "extent": [14760, 14868], "text": ["Specifies the path to the custom Deadline plugin listed in the ", {"text": ["Plugin"], "type": "ui"}, " parameter field."]}, {"indent": 16, "type": "para", "extent": [14868, 14950], "text": ["This parameter is only available when ", {"text": ["Plugin"], "type": "ui"}, " is turned ", {"text": ["on"], "type": "em"}, "."]}], "indent": 12, "text": ["Plugin Directory"], "role": "item", "attrs": {"id": "deadline_plugindirectory"}, "extent": [14683, 14713], "container": true, "type": "parameters_item"}, {"body": [{"indent": 16, "type": "para", "extent": [15038, 15227], "text": ["When on, copies the Deadline plugin files from the local Houdini installation or specified custom path to the PDG working directory so that farm machines can access them. "]}, {"indent": 16, "type": "para", "extent": [15227, 15359], "text": ["Do ", {"text": ["not"], "type": "em"}, " turn on this parameter if you are using an override path and the plugin is already available on the farm."]}], "indent": 12, "text": ["Copy Plugin to Working Directory"], "role": "item", "attrs": {"id": "deadline_copyplugin"}, "extent": [14950, 14996], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 8, "level": 4, "text": [" PDG Deadline Plugin "], "extent": [13826, 13864], "container": true, "type": "sep"}], "indent": 4, "level": 4, "text": [" Advanced "], "extent": [12335, 12358], "container": true, "type": "sep"}], "indent": 0, "level": 4, "text": [" Deadline "], "extent": [11397, 11416], "container": true, "type": "sep"}, {"body": [{"indent": 4, "type": "para", "extent": [15406, 15598], "text": ["The Message Queue (MQ) server is required to get work item results from the jobs running on the farm. Several types of MQ are provided to work around networking issues such as firewalls."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [15630, 15685], "text": ["The type of Message Queue (MQ) server to use."]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [15700, 15767], "text": ["Starts or shares the MQ server on your local machine."]}, {"indent": 12, "type": "para", "extent": [15767, 15946], "text": ["If another Deadline scheduler node (in the current Houdini session) already started a MQ server locally, then this scheduler node uses that MQ server automatically. "]}, {"indent": 12, "type": "para", "extent": [15946, 16084], "text": ["If there are ", {"text": ["not"], "type": "em"}, " any firewalls between your local machine and the farm machines, then we recommend you use this parameter."]}], "indent": 8, "text": ["Local"], "extent": [15685, 15700], "container": true, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [16098, 16174], "text": ["Starts or shares the MQ server on the farm as a separate job. "]}, {"indent": 12, "type": "para", "extent": [16174, 16261], "text": ["The ", {"text": ["MQ Job Options"], "fullpath": "/nodes/top/mqjoboptions", "scheme": null, "type": "link", "value": "mqjoboptions"}, " allow you to specify the job settings. "]}, {"indent": 12, "type": "para", "extent": [16261, 16445], "text": ["If another Deadline scheduler node (in the current Houdini session)  already started a MQ server on the farm, then this scheduler node uses that MQ server automatically. "]}, {"indent": 12, "type": "para", "extent": [16445, 16573], "text": ["If there are firewalls between your local machine and the farm machines, then we recommend you use this parameter."]}], "indent": 8, "text": ["Farm"], "extent": [16084, 16098], "container": true, "type": "dt"}, {"body": [{"indent": 12, "type": "para", "extent": [16590, 16646], "text": ["Connects to an already running MQ server. "]}, {"indent": 12, "type": "para", "extent": [16646, 16869], "text": ["The ", {"text": ["MQ server"], "fullpath": "/ref/utils/mqserver", "scheme": null, "type": "link", "value": "/ref/utils/mqserver"}, " needs to have been started manually. This is the manual option for managing the MQ and useful for running MQ as a service on a single machine to serve all PDG Deadline jobs."]}], "indent": 8, "text": ["Connect"], "extent": [16573, 16590], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 4, "text": ["Type"], "role": "item", "attrs": {"id": "mqusage"}, "extent": [15598, 15608], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [16903, 16978], "text": ["Specifies the IP address to use when connecting to the MQ server."]}, {"indent": 8, "type": "para", "extent": [16978, 17057], "text": ["This parameter is only available when ", {"text": ["Type"], "type": "ui"}, " is set to ", {"text": ["Connect"], "type": "ui"}, "."]}], "indent": 4, "text": ["Address"], "role": "item", "attrs": {"id": "mqaddr"}, "extent": [16869, 16882], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [17112, 17251], "text": ["Sets the TCP Port used by the Message Queue Server for the XMLRPC callback API. This port must be accessible between farm blades."]}, {"indent": 8, "type": "para", "extent": [17251, 17330], "text": ["This parameter is only available when ", {"text": ["Type"], "type": "ui"}, " is set to ", {"text": ["Connect"], "type": "ui"}, "."]}], "indent": 4, "text": ["Task Callback Port"], "role": "item", "attrs": {"id": "taskcallbackport"}, "extent": [17057, 17081], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [17372, 17580], "text": ["Sets the TCP Port used by the Message Queue Server connection between PDG and the blade that is running the Message Queue Command. This port must be reachable on farm blades by the PDG/user machine."]}, {"indent": 8, "type": "para", "extent": [17580, 17663], "text": ["This parameter is only available when ", {"text": ["Type"], "type": "ui"}, " is set to ", {"text": ["Connect"], "type": "ui"}, "."]}], "indent": 4, "text": ["Relay Port"], "role": "item", "attrs": {"id": "mqrelayport"}, "extent": [17330, 17346], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"indent": 8, "type": "para", "extent": [17719, 17798], "text": ["These parameters are only available when ", {"text": ["Type"], "type": "ui"}, " is set to ", {"text": ["Farm"], "type": "ui"}, "."]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [17860, 17983], "text": ["When on, specifies a custom Deadline batch name for the MQ job. When off, the MQ job uses the job batch name."]}], "indent": 8, "text": ["Batch Name"], "role": "item", "attrs": {"id": "deadline_mqjobbatchname"}, "extent": [17798, 17818], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [18038, 18097], "text": ["(Required) Specifies the name for the MQ job."]}], "indent": 8, "text": ["Job Name"], "role": "item", "attrs": {"id": "deadline_mqjobname"}, "extent": [17983, 18001], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [18154, 18220], "text": ["(Optional) Specifies a comment to add to the MQ job."]}], "indent": 8, "text": ["Comment"], "role": "item", "attrs": {"id": "deadline_mqjobcomment"}, "extent": [18097, 18114], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [18277, 18459], "text": ["(Optional) Specifies the default department (for example, Lighting) for the MQ job. This allows you to group jobs together and provide information to the farm operator."]}], "indent": 8, "text": ["Department"], "role": "item", "attrs": {"id": "deadline_mqjobdept"}, "extent": [18220, 18240], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [18510, 18572], "text": ["Specifies the pool to use to execute the MQ job."]}, {"indent": 12, "type": "para", "extent": [18572, 18621], "text": ["By default, ", {"text": ["Pool"], "type": "ui"}, " is ", {"text": ["none"], "type": "code"}, "."]}], "indent": 8, "text": ["Pool"], "role": "item", "attrs": {"id": "deadline_mqjobpool"}, "extent": [18459, 18473], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [18674, 18737], "text": ["Specifies the group to use to execute the MQ job."]}, {"indent": 12, "type": "para", "extent": [18737, 18787], "text": ["By default, ", {"text": ["Group"], "type": "ui"}, " is ", {"text": ["none"], "type": "code"}, "."]}], "indent": 8, "text": ["Group"], "role": "item", "attrs": {"id": "deadline_mqjobgroup"}, "extent": [18621, 18636], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [18846, 19035], "text": ["Sets the priority for the MQ job. The minimum priority is ", {"text": ["0"], "type": "code"}, ". The maximum priority comes from a setting in Deadline\u2019s repository options (for example, this is usually ", {"text": ["100"], "type": "code"}, ")."]}, {"indent": 12, "type": "para", "extent": [19035, 19082], "text": ["By default, ", {"text": ["Priority"], "type": "ui"}, " is ", {"text": ["50"], "type": "code"}, "."]}], "indent": 8, "text": ["Priority"], "role": "item", "attrs": {"id": "deadline_mqjobpriority"}, "extent": [18787, 18805], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [19151, 19251], "text": ["Specifies the maximum number of Deadline Worker machines that can execute this MQ job."]}, {"indent": 12, "type": "para", "extent": [19251, 19313], "text": ["By default, ", {"text": ["Machine Limit"], "type": "ui"}, " is ", {"text": ["0"], "type": "code"}, " (no limit)."]}], "indent": 8, "text": ["Machine Limit"], "role": "item", "attrs": {"id": "deadline_mqmachinelimit"}, "extent": [19082, 19105], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [19380, 19578], "text": ["Specifies a restricted list of Deadline Workers that can execute this MQ job. The kind of list that is written out is determined by the ", {"text": ["Machine List is A Blacklist"], "type": "ui"}, " parameter below."]}, {"indent": 12, "type": "para", "extent": [19578, 19789], "text": ["If the ", {"text": ["Machine List is A Blacklist"], "type": "ui"}, " parameter is ", {"text": ["off"], "type": "em"}, ", the list is written out as ", {"text": ["Whitelist"], "type": "code"}, " in the job info file. If ", {"text": ["Machine List is A Blacklist"], "type": "ui"}, " is ", {"text": ["on"], "type": "em"}, ", it is written out as ", {"text": ["Blacklist"], "type": "code"}, "."]}], "indent": 8, "text": ["Machine List"], "role": "item", "attrs": {"id": "deadline_mqmachinelist"}, "extent": [19313, 19335], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [19872, 20100], "text": ["When on, the ", {"text": ["Machine List"], "type": "ui"}, " is written out as ", {"text": ["Blacklist"], "type": "code"}, ". This means that the listed machines are ", {"text": ["not"], "type": "em"}, " allowed to execute this MQ job. When off, only the machines in the list are allowed to execute this MQ job."]}], "indent": 8, "text": ["Machine List is a Blacklist"], "role": "item", "attrs": {"id": "deadline_mqmachinelistblack"}, "extent": [19789, 19826], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [20152, 20338], "text": ["Specifies the Deadline Limits (Resource or License type) required for the scheduled MQ job. The limits are created and managed through the ", {"text": ["Deadline Monitor"], "type": "ui"}, " in Deadline."]}], "indent": 8, "text": ["Limits"], "role": "item", "attrs": {"id": "deadline_mqlimits"}, "extent": [20100, 20116], "container": true, "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [20406, 20495], "text": ["Determines what happens to with the MQ job\u2019s information when it finishes. "]}, {"indent": 12, "type": "para", "extent": [20495, 20557], "text": ["By default, ", {"text": ["On Job Complete"], "type": "ui"}, " is ", {"text": ["Nothing"], "type": "ui"}, ". "]}, {"indent": 12, "type": "para", "extent": [20557, 20623], "text": ["For more information, see Deadline\u2019s documentation."]}], "indent": 8, "text": ["On Job Complete"], "role": "item", "attrs": {"id": "deadline_mqonjobcomplete"}, "extent": [20338, 20363], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 4, "level": 4, "text": [" MQ Job Options "], "attrs": {"id": "mqjoboptions"}, "extent": [17663, 17692], "container": true, "type": "sep"}], "indent": 0, "level": 4, "text": [" Message Queue "], "attrs": {"id": "messagequeue"}, "extent": [15359, 15383], "container": true, "type": "sep"}, {"body": [{"body": [{"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [481, 576], "text": ["If the ", {"text": ["PDG Path Map"], "fullpath": "/ref/panes/pdgpathmap", "scheme": null, "type": "link", "value": "/ref/panes/pdgpathmap"}, " exists, then it is applied to file paths."]}], "container": true, "text": ["Global"], "extent": [469, 481], "indent": 4, "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [586, 640], "text": ["Delocalizes paths using the ", {"text": ["PDG_DIR"], "type": "code"}, " token."]}], "container": true, "text": ["None"], "extent": [576, 586], "indent": 4, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Path Mapping"], "role": "item", "attrs": {"id": "pdg_mapmode"}, "extent": [433, 447], "container": true, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [677, 830], "text": ["When on, specifies a custom mapping zone to apply to all jobs executed by this scheduler. Otherwise, the local platform is ", {"text": ["LINUX"], "type": "code"}, ", ", {"text": ["MAC"], "type": "code"}, " or ", {"text": ["WIN"], "type": "code"}, "."]}], "indent": 0, "text": ["Path Map Zone"], "role": "item", "attrs": {"id": "pdg_mapzone"}, "extent": [640, 655], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 4, "text": [" Path Mapping "], "extent": [20623, 20646], "container": true, "type": "sep"}], "indent": 0, "level": 2, "text": ["Scheduler"], "extent": [5200, 5217], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [20753, 20860], "text": ["Job-specific parameters that affect all submitted jobs, but can be overridden on a node-by-node basis.  "]}, {"indent": 0, "type": "para", "extent": [20860, 20949], "text": ["For more information, see ", {"fragment": "#jobparms", "text": ["Scheduler Job Parms / Properties"], "value": "/tops/schedulers#jobparms", "fullpath": "/tops/schedulers#jobparms", "scheme": null, "type": "link"}, "."]}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [21002, 21098], "text": ["Specifies the rooted path to the Houdini installation on all Deadline Worker machines."]}, {"indent": 8, "type": "para", "extent": [21098, 21302], "text": ["If you are using variables, they are evaluated locally unless escaped with ", {"text": ["\\"], "type": "code"}, ". For example, ", {"text": ["$HFS"], "type": "code"}, " would be evaluated on the local machine, and then the result value would be sent to the farm. "]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [21470, 21551], "text": [{"text": ["$HFS"], "type": "code"}, " = ", {"text": ["C:/Program Files/Side Effects Software/Houdini 17.5.173"], "type": "code"}, "."]}], "indent": 8, "text": ["To force evaluation on the Worker instead (like for a mixed farm set-up), use ", {"text": ["\\$HFS"], "type": "code"}, " and then set the following (for example) in Deadline\u2019s Path Mapping"], "extent": [21302, 21470], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 4, "text": ["HFS"], "role": "item", "attrs": {"id": "deadline_hfs"}, "extent": [20965, 20975], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [21593, 21754], "text": ["Specifies the rooted path to Python that should point to the required Python version installed on all Worker machines (for example, ", {"text": ["$HFS/bin/python"], "type": "code"}, ")."]}, {"indent": 8, "type": "para", "extent": [21754, 22175], "text": ["If you are using variables, then you should map them in Deadline\u2019s Path Mapping. For example, if you are using default values, then you would path map ", {"text": ["$HFS"], "type": "code"}, ". And if on Windows, you would also add ", {"text": [".exe"], "type": "code"}, " or ", {"text": ["\\$PDG_EXE"], "type": "code"}, " (for a mixed farm setup) to the path mapping. So that mapping would look something like: ", {"text": ["$HFS/bin/python\\$PDG_EXE"], "type": "code"}, "  \u2192 ", {"text": ["C:/Program Files/Side Effects Software/Houdini 17.5.173/bin/python.exe"], "type": "code"}, "."]}], "indent": 4, "text": ["Python"], "role": "item", "attrs": {"id": "deadline_python"}, "extent": [21551, 21563], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 4, "text": [" Paths "], "extent": [20949, 20965], "container": true, "type": "sep"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [22252, 22323], "text": ["Specifies the Python script to run before executing the task."]}], "indent": 4, "text": ["Pre Task Script"], "role": "item", "attrs": {"id": "deadline_pretaskscript"}, "extent": [22193, 22215], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [22383, 22453], "text": ["Specifies the Python script to run after executing the task."]}], "indent": 4, "text": ["Post Task Script"], "role": "item", "attrs": {"id": "deadline_posttaskscript"}, "extent": [22323, 22345], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 4, "text": [" Scripts "], "extent": [22175, 22193], "container": true, "type": "sep"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [22551, 22665], "text": ["When on, the environment variables in the current session of PDG are copied into the task\u2019s environment."]}], "indent": 4, "text": ["Inherit Local Environment"], "role": "item", "attrs": {"id": "deadline_inheritlocalenv"}, "extent": [22480, 22512], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [22734, 22896], "text": ["When on, sets the ", {"text": ["HOUDINI_MAXTHREADS"], "type": "code"}, " environment to the specified value. By default, ", {"text": ["Houdini Max Threads"], "type": "ui"}, " is set to ", {"text": ["0"], "type": "code"}, " (all available processors)."]}, {"indent": 8, "type": "para", "extent": [22896, 23131], "text": ["Positive values limit the number of threads that can be used, and those values are clamped to the number of available CPU cores. A value of ", {"text": ["1"], "type": "code"}, " disables multi-threading entirely, as it limits the scheduler to only one thread."]}, {"indent": 8, "type": "para", "extent": [23131, 23318], "text": ["For negative values, the value is added to the maximum number of processors to determine the threading limit. For example, a value of ", {"text": ["-1"], "type": "code"}, " would use all CPU cores except ", {"text": ["1"], "type": "code"}, ".   "]}], "indent": 4, "text": ["Houdini Max Threads"], "role": "item", "attrs": {"id": "deadline_usehoudinimaxthreads"}, "extent": [22665, 22690], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [23371, 23476], "text": ["Space-separated list of environment variables that should be unset in the task environment."]}], "indent": 4, "text": ["Unset Variables"], "role": "item", "attrs": {"id": "deadline_envunset"}, "extent": [23318, 23339], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [23536, 23606], "text": ["Allows you to add custom environment variables to each task."]}], "indent": 4, "text": ["Environment Key-Values"], "role": "item", "attrs": {"id": "deadline_envmulti"}, "extent": [23476, 23504], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 4, "text": [" Task Environment "], "extent": [22453, 22480], "container": true, "type": "sep"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [23710, 23831], "text": ["For OpenCL nodes only. Sets the GPU affinity based on the current Worker\u2019s GPU setting and user specified GPUs."]}], "indent": 4, "text": ["OpenCL Force GPU Rendering"], "role": "item", "attrs": {"id": "deadline_openclforcegpu"}, "extent": [23639, 23672], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [23885, 24050], "text": ["For Redshift and OpenCL nodes. Specifies the number of GPUs to use per task. This value must be a subset of the Worker\u2019s GPU affinity settings in Deadline."]}], "indent": 4, "text": ["GPUs Per Task"], "role": "item", "attrs": {"id": "deadline_gpuspertask"}, "extent": [23831, 23850], "container": true, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [24115, 24306], "text": ["For Redshift and OpenCL nodes. Specifies a comma-separated list of GPU IDs to use. The GPU IDs specified here must be a subset of the Worker\u2019s ", {"text": ["GPU affinity"], "type": "ui"}, " settings in Deadline."]}], "indent": 4, "text": ["Select GPU Devices"], "role": "item", "attrs": {"id": "deadline_gpusselectdevices"}, "extent": [24050, 24074], "container": true, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 4, "text": [" GPU Affinity Overrides "], "extent": [23606, 23639], "container": true, "type": "sep"}], "indent": 0, "level": 2, "text": ["Job Parms"], "extent": [20737, 20753], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [5188, 5200], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [24315, 24344], "text": [{"text": "", "fullpath": "/nodes/top/localscheduler", "scheme": "Node", "type": "link", "value": "/nodes/top/localscheduler"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [24344, 24373], "text": [{"text": "", "fullpath": "/nodes/top/hqueuescheduler", "scheme": "Node", "type": "link", "value": "/nodes/top/hqueuescheduler"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [24373, 24403], "text": [{"text": "", "fullpath": "/nodes/top/tractorscheduler", "scheme": "Node", "type": "link", "value": "/nodes/top/tractorscheduler"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [24403, 24432], "text": [{"text": "", "fullpath": "/nodes/top/pythonscheduler", "scheme": "Node", "type": "link", "value": "/nodes/top/pythonscheduler"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [24432, 24466], "text": [{"text": ["MQ Server"], "fullpath": "/ref/utils/mqserver", "scheme": null, "type": "link", "value": "/ref/utils/mqserver"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [24306, 24315], "container": true, "type": "related_section", "id": "related"}], "title": ["Deadline Scheduler"], "summary": ["The PDG scheduler for Thinkbox\u2019s Deadline software."], "attrs": {"since": "17.5", "namespace": null, "version": null, "context": "top", "type": "node", "internal": "deadlinescheduler", "icon": "TOP/deadlinescheduler"}, "included": ["/nodes/top/_scheduler_common"], "type": "root"}