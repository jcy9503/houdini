{"body": [{"indent": 0, "text": ["opparm"], "type": "title", "extent": [16, 27], "level": 0}, {"indent": 0, "type": "summary", "extent": [27, 79], "text": ["Gets/sets/manipulates parameters on a node."]}, {"indent": 0, "type": "para", "extent": [79, 238], "text": ["Different usages let you list the parameters on a node, print the values of\nparameters, set parameters, and trigger any callbacks associated with\nparameters."]}, {"body": [{"indent": 0, "role": "item", "type": "usage", "extent": [238, 297], "text": [" ", {"text": ["opparm [-q] -l ", {"text": ["operator_pattern"], "type": "var"}, " ", {"text": ["wildcard"], "type": "var"}], "type": "code"}]}, {"body": [{"indent": 4, "type": "para", "extent": [357, 464], "text": ["The ", {"text": ["-l"], "type": "code"}, " and ", {"text": ["-L"], "type": "code"}, " forms print a list of parameters. You can use wild\n    cards in the parameter name."]}, {"indent": 4, "type": "para", "extent": [464, 564], "text": [{"text": ["-l"], "type": "code"}, " lists internal (channel) names, ", {"text": ["-L"], "type": "code"}, " lists the human-readable\n    labels (where present)."]}], "indent": 0, "text": [" ", {"text": ["opparm [-q] -L ", {"text": ["operator_pattern"], "type": "var"}, " ", {"text": ["wildcard"], "type": "var"}], "type": "code"}], "role": "item", "extent": [297, 357], "container": true, "type": "usage"}, {"body": [{"indent": 4, "type": "para", "extent": [636, 738], "text": ["The ", {"text": ["-d"], "type": "code"}, " form prints the values of parameters. You can use wild\n    cards in the parameter name."]}, {"indent": 4, "type": "para", "extent": [738, 938], "text": ["By default, the command prints values of the parameters even if\n    channels with different values exist. Use -v to evaluate the\n    channels at the current time and then print parameter values."]}], "indent": 0, "text": [" ", {"text": ["opparm [-q] -d [-x] ", {"text": ["operator_pattern"], "type": "var"}, " [-v] [", {"text": ["wildcard"], "type": "var"}, "]"], "type": "code"}], "role": "item", "extent": [564, 636], "container": true, "type": "usage"}, {"body": [{"indent": 4, "type": "para", "extent": [1051, 1168], "text": ["This form sets parameter values. If you specify\n    a value, opparm sets the given parameter to that value."]}, {"indent": 4, "type": "para", "extent": [1168, 1335], "text": ["You can specify a particular component when setting a parameter. You\n    can do this with an index, such as ", {"text": ["t[0]"], "type": "code"}, ", or with the channel name,\n    such as ", {"text": ["tx"], "type": "code"}, "."]}], "indent": 0, "text": [" ", {"text": ["opparm [-q] [-r] [-C] [-V ", {"text": ["version"], "type": "var"}, "] ", {"text": ["operator_pattern"], "type": "var"}, " [-v [-p | -i]] ", {"text": ["parameters"], "type": "var"}, " ", {"text": ["value"], "type": "var"}], "type": "code"}], "role": "item", "extent": [938, 1051], "container": true, "type": "usage"}, {"body": [{"indent": 4, "type": "para", "extent": [1400, 1669], "text": ["The ", {"text": ["-c"], "type": "code"}, " form executes any callbacks associated with a parameter. If\n    the parameter is a button which executes a callback, use the fourth\n    form to invoke the function. Examples of these types of buttons are\n    in render output drivers (the render buttons)."]}, {"indent": 4, "type": "para", "extent": [1669, 2058], "text": ["If the parameter is a menu with a callback function (such as\n    ", {"text": ["Initialize"], "type": "ui"}, " in the Creep SOP), and you wish to execute the\n    callback as if a specific menu item had been chosen, use the ", {"text": ["opparm\n    -C ", {"text": ["operator_pattern"], "type": "var"}, " ", {"text": ["parameters"], "type": "var"}, " ", {"text": ["value"], "type": "var"}], "type": "code"}, " form of the\n    command with the -C option. Use the ", {"text": ["opmenu"], "value": "/commands/opmenu", "fallback_text": "opmenu", "fullpath": "/commands/opmenu", "scheme": "Cmd", "type": "link"}, " command to\n    determine what are valid menu item values."]}], "indent": 0, "text": [" ", {"text": ["opparm [-q] -c ", {"text": ["operator_name"], "type": "var"}, " ", {"text": ["parameter_names"], "type": "var"}, " "], "type": "code"}], "role": "item", "extent": [1335, 1400], "container": true, "type": "usage"}], "container": true, "role": "item_group", "type": "usage_group"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [2074, 2194], "text": ["(List) prints a list of parameters. The parameter names printed\n    with -l can be used in channel references."]}], "indent": 0, "text": [{"text": ["-l"], "type": "code"}], "extent": [2067, 2074], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [2200, 2307], "text": ["(List descriptions) prints a list of parameter descriptions, as\n    they appear in the interface."]}], "indent": 0, "text": [{"text": ["-L"], "type": "code"}], "extent": [2194, 2200], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [2313, 2363], "text": ["(Quiet) do not print warnings or errors."]}], "indent": 0, "text": [{"text": ["-q"], "type": "code"}], "extent": [2307, 2313], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [2369, 2448], "text": ["Prints parameter values. You can use wildcards in the parameter\n    name."]}, {"indent": 4, "type": "para", "extent": [2448, 2606], "text": ["When you print parameter values, the command prints the\n    animation channels by default. Use ", {"text": ["-v"], "type": "code"}, " to print the values at\n    the current time instead."]}], "indent": 0, "text": [{"text": ["-d"], "type": "code"}], "extent": [2363, 2369], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [2612, 2787], "text": ["Only available when you specify -d. Generates a script which can\n    be used to re-create the parameter values (including commands\n    for reproducing the channels)."]}], "indent": 0, "text": [{"text": ["-x"], "type": "code"}], "extent": [2606, 2612], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [2793, 3095], "text": ["Normally animation channels of the parameters are deleted when\n    they are changed. Specifying -v when the parameter value is a\n    number prevents the channels from being deleted. Instead the\n    command will behave as if the values were entered into a\n    parameter editor at the current time."]}], "indent": 0, "text": [{"text": ["-v"], "type": "code"}], "extent": [2787, 2793], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [3113, 3428], "text": ["Specifies the version of the node for parameters to be upgraded from.\n    After parameters are set, Houdini will perform an additional step to\n    upgrade all parameters, assuming that they were created from the specified\n    version. On HDAs, it is passed to the SyncNodeVersion event handler\n    script."]}], "indent": 0, "text": [{"text": ["-V ", {"text": ["version"], "type": "var"}], "type": "code"}], "extent": [3095, 3113], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [3434, 3542], "text": ["In addition to setting parameter values, trigger any\n    callbacks associated with the parameters."]}], "indent": 0, "text": [{"text": ["-C"], "type": "code"}], "extent": [3428, 3434], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [3548, 3864], "text": ["The opparm command will follow simple channel references and set\n    the referenced parameter instead of deleting the channel\n    reference expression and setting the value in the specified\n    parameter. This is useful when writing scripts to modify\n    parameters of nodes inside custom subnet operators."]}], "indent": 0, "text": [{"text": ["-r"], "type": "code"}], "extent": [3542, 3548], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [3870, 3992], "text": ["If -p is specified with -v, and the value is set at a key, the\n    new parameter is forced into a pending state."]}], "indent": 0, "text": [{"text": ["-p"], "type": "code"}], "extent": [3864, 3870], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [3998, 4114], "text": ["If -i is specified with -v, and the value is set at a key, the\n    new parameter is committed immediately."]}], "indent": 0, "text": [{"text": ["-i"], "type": "code"}], "extent": [3992, 3998], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [4120, 4217], "text": ["Execute any callbacks associated with the given parameter(s).\n    See also the ", {"text": ["-C"], "type": "code"}, " option."]}], "indent": 0, "text": [{"text": ["-c"], "type": "code"}], "extent": [4114, 4120], "container": true, "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [4223, 4468], "text": ["Will bypass spare parameters. This is equivalent to deleting the spare parameter for rendering purposes. That is, the spare parameter will not appear to exist to SOHO. The parameter may be re-enabled without loss of channel animation data."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [4478, 4554], "text": ["The bypass only works for spare parameters (including properties)."]}], "indent": 4, "role": "item", "extent": [4468, 4478], "container": true, "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [4567, 4624], "text": ["To disable the shop_geometrypath on the object: "]}, {"lang": null, "indent": 8, "type": "pre", "extent": [4624, 4691], "text": ["\n        opparm -b on obj shop_geometrypath\n        "]}, {"indent": 8, "type": "para", "extent": [4691, 4733], "text": ["To enable the parameter:"]}, {"lang": null, "indent": 8, "type": "pre", "extent": [4733, 4802], "text": ["\n        opparm -b off obj shop_geometrypath \n        "]}], "indent": 4, "text": ["Example"], "extent": [4554, 4567], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "text": [{"text": ["-b"], "type": "code"}], "extent": [4217, 4223], "container": true, "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "level": 1, "text": "Options", "role": "section", "extent": [2058, 2067], "container": true, "type": "options_section", "id": "options"}, {"body": [{"lang": "hscript", "indent": 0, "type": "pre", "extent": [4813, 4854], "text": ["\nopparm -l /obj/geo1 *\n"]}, {"lang": "hscript", "indent": 0, "type": "pre", "extent": [4854, 4897], "text": ["\nopparm geo1 t ( 1 2 3 )\n"]}, {"lang": "hscript", "indent": 0, "type": "pre", "extent": [4897, 4939], "text": ["\nopparm geo1 t[2] ( 3 )\n"]}, {"lang": "hscript", "indent": 0, "type": "pre", "extent": [4939, 4979], "text": ["\nopparm geo1 tz ( 3 )\n"]}, {"lang": "hscript", "indent": 0, "type": "pre", "extent": [4979, 5045], "text": ["\nopparm -C /obj/geo1/creep1 Initialize initfill\n"]}, {"lang": "hscript", "indent": 0, "type": "pre", "extent": [5045, 5095], "text": ["\nopparm -c /out/mantra1 execute\n"]}, {"lang": "hscript", "indent": 0, "type": "pre", "extent": [5095, 5131], "text": ["\nopparm -d geo1 t\n"]}, {"lang": "hscript", "indent": 0, "type": "pre", "extent": [5131, 5167], "text": ["\nopparm -l geo1 *\n"]}, {"lang": "hscript", "indent": 0, "type": "pre", "extent": [5167, 5216], "text": ["\nopparm model -v -p rz ( 4.5 )\n"]}, {"lang": "hscript", "indent": 0, "type": "pre", "extent": [5216, 5265], "text": ["\nopparm model -v -i rz ( 4.5 )\n"]}], "indent": 0, "level": 1, "text": "Examples", "role": "section", "extent": [4802, 4813], "container": true, "type": "examples_section", "id": "examples"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [5275, 5296], "text": [{"text": ["opadd"], "value": "/commands/opadd", "fallback_text": "opadd", "fullpath": "/commands/opadd", "scheme": "Cmd", "type": "link"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [5296, 5330], "text": [{"text": ["opchangetype"], "value": "/commands/opchangetype", "fallback_text": "opchangetype", "fullpath": "/commands/opchangetype", "scheme": "Cmd", "type": "link"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [5330, 5350], "text": [{"text": ["opget"], "value": "/commands/opget", "fallback_text": "opget", "fullpath": "/commands/opget", "scheme": "Cmd", "type": "link"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [5350, 5372], "text": [{"text": ["opmenu"], "value": "/commands/opmenu", "fallback_text": "opmenu", "fullpath": "/commands/opmenu", "scheme": "Cmd", "type": "link"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [5372, 5398], "text": [{"text": ["opscript"], "value": "/commands/opscript", "fallback_text": "opscript", "fullpath": "/commands/opscript", "scheme": "Cmd", "type": "link"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [5398, 5419], "text": [{"text": ["opset"], "value": "/commands/opset", "fallback_text": "opset", "fullpath": "/commands/opset", "scheme": "Cmd", "type": "link"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [5265, 5275], "container": true, "type": "related_section", "id": "related"}], "summary": ["Gets/sets/manipulates parameters on a node."], "type": "root", "attrs": {"type": "hscript"}, "title": ["opparm"]}